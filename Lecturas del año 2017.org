#+TITLE: Lecturas del Grupo de Lógica Computacional durante el año 2017
#+OPTIONS: ^:nil

Este repositorio es una recopilación de lecturas compartidas en la lista de
correo del [[http://www.glc.us.es][grupo de lógica computacional]] durante el año 2017. La recopilación
está ordenada por la fecha de su publicación en la lista. Al final de cada
artículo se encuentra etiquetas relativas a los sistemas que usa o a su
contenido.

* Contenido                                                             :TOC:
- [[#enero-2017][Enero 2017]]
- [[#febrero-2017][Febrero 2017]]
- [[#marzo-2017][Marzo 2017]]
- [[#abril-2017][Abril 2017]]
- [[#mayo-2017][Mayo 2017]]
- [[#julio-2017][Julio 2017]]
- [[#agosto-2017][Agosto 2017]]
- [[#septiembre-2017][Septiembre 2017]]
- [[#octubre-2017][Octubre 2017]]
- [[#noviembre-2017][Noviembre 2017]]
- [[#diciembre-de-2017][Diciembre de 2017]]

* Enero 2017

+ [[https://www.researchgate.net/profile/Wolfgang_Bibel/publication/311509743_Advances_in_Connection-Based_Automated_Theorem_Proving/links/584d67f308aed95c25011f8c.pdf][Advances in connection-based automated theorem proving]]. ~ J. Otten & W. Bibel
  #Logic #ATP #Prolog 
+ [[http://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.1001745][Best practices for scientific computing]]. ~ G. Wilson et als.
  #Programming
+ [[https://www.researchgate.net/profile/Andreas_Prlic/publication/233870994_Ten_Simple_Rules_for_the_Open_Development_of_Scientific_Software/links/00b7d51daf837601a1000000.pdf][Ten simple rules for the open development of scientific software]]. ~ A. Prlić
  & J.B. Procter #Programming
+ [[http://weijr-note.blogspot.com/2017/01/2017-is-not-just-another-prime-number.html][2017 is not just another prime number]]. ~ T.J. Wei #Matemáticas
+ [[https://github.com/jaalonso/Lecturas_GLC][Lecturas sobre lógica computacional, programación funcional y razonamiento
  automático del 2016]]. ~ J.A. Alonso #GLC
+ [[https://www.isa-afp.org/entries/Twelvefold_Way.shtml][The Twelvefold Way]]. ~ Lukas Bulwahn #IsabelleHOL #Math #AFP
+ [[http://kseo.github.io/posts/2016-12-28-lazy-vs-strict-state-monad.html][Lazy vs strict state monad]]. ~ Kwang Yul Seo. #Haskell 
+ [[http://kseo.github.io/posts/2016-12-30-write-you-an-interpreter.html][Write you an interpreter]]. ~ Kwang Yul Seo. #Haskell 
+ [[https://arxiv.org/pdf/1612.09375v1][Basic category theory]]. ~ Tom Leinster #Math #eBook
+ [[https://within-parens.blogspot.com.es/2016/12/rcreational-common-lisp.html][(R)creational Common Lisp]]. ~ Marco Antoniotti #Lisp #Rstats
+ [[http://kseo.github.io//posts/2016-12-21-foldl-vs-foldl'.html][foldl vs foldl']]. ~ Kwang Yul Seo. #Haskell 
+ [[http://www.dc.fi.udc.es/~cabalar/igpl16.pdf][Verification for ASP denotational semantics: a case study using the PVS
  theorem prover]]. ~ F. Aguado et als. #PVS #ASP
+ [[http://www.snoyman.com/blog/2017/01/functors-applicatives-and-monads][Functors, applicatives, and monads]]. ~ M. Snoyman. #Haskell
+ [[https://github.com/Gabriel439/haskell-nix][Nix and Haskell in production]]. ~ G. Gonzalez. #Haskell #Nix
+ [[https://www.gitbook.com/book/wizardforcel/sicp-in-python/details][SICP (Structure and Interpretation of Computer Programs) in Python]]. ~ GitBook
  #eBook #Python
+ [[http://raganwald.com/2016/12/27/recursive-data-structures.html][Why recursive data structures?]]. ~ Reginald Braithwaite #Algorithms
  #JavaScript
+ [[http://www.cs.princeton.edu/~appel/papers/certicoq-coqpl.pdf][CertiCoq: A verified compiler for Coq]]. ~ A.W. Appel et als. #Coq
+ [[https://wiki.haskell.org/Typeclassopedia][Typeclassopedia]]. ~ Brent Yorgey #Haskell
+ [[http://www.math.upenn.edu/~wilf/website/CombinatorialAlgorithms.pdf][Combinatorial algorithms (for computers and calculators)]]. ~ A. Nijenhuis &
  H.S. Wilf #eBook #Math
+ [[https://github.com/unisonweb/unison/tree/cac3ab3a6bddd8b91bf17cd9e1b45950ab1a6c71/yaks/easytest][EasyTest: a Haskell simple testing toolkit]]. ~ Paul Chiusano.  #Haskell
+ [[https://www.isa-afp.org/entries/FOL_Harrison.shtml][First-order logic according to Harrison]]. ~ A.B. Jensen, A. Schlichtkrull & J. Villadsen #IsabelleHOL #Logic #AFP
+ [[https://www.stackbuilders.com/tutorials/haskell/ghc-optimization-and-fusion][GHC optimization and fusion]]. ~ Mark Karpov #Haskell
+ [[https://www.technologyreview.com/s/603216/5-big-predictions-for-artificial-intelligence-in-2017][5 big predictions for Artificial Intelligence in 2017]]. ~ Will Knight #AI
+ [[http://kseo.github.io//posts/2017-01-03-writing-an-interpreter-using-fold.html][Writing an interpreter using fold]]. ~ Kwang Yul Seo. #Haskell
+ [[http://ren.zone/articles/opaleye-sot][Opaleye’s sugar on top]]. ~ Renzo Carbonara #Haskell
+ [[https://github.com/takenobu-hs/haskell-ghc-illustrated][GHC (STG,Cmm,asm) illustrated for hardware persons (exploring some mental
  models and implementations)]]. ~ Takenobu Tani #Haskell
+ [[http://www.corecursion.net/post/2017-01-01-Formalizing_Eventsourcing][Formalizing eventsourcing]]. ~ @yoeight #Haskell
+ [[https://www.isa-afp.org/entries/Concurrent_Ref_Alg.shtml][Concurrent refinement algebra and rely quotients in Isabelle/HOL]]. ~ J. Fell,
  I. Hayes, A. Velykis #IsabelleHOL
+ [[https://github.com/jaalonso/Pensamientos][Recopilación de pensamientos]]. 
+ [[https://www.isa-afp.org/entries/Password_Authentication_Protocol.shtml][Verification of a Diffie-Hellman password-based authentication protocol]]. ~
  P. Noce #IsabelleHOL
+ [[http://jakewheat.github.io/intro_to_parsing][Intro to Parsing with Parsec in Haskell]]. ~ Jake Wheat #Haskell
+ [[http://approximateinference.org/accepted/ScibiorGhahramani2016.pdf][Modular construction of Bayesian inference algorithms]]. ~ A Scibior, Z
  Ghahramani #Haskell
+ [[https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53#.4tm9wspww][Goodbye, Object Oriented Programming]]. ~ Charles Scalfani.  #Programming
+ [[https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-6-db502830403#.rrilnbd5l][So you want to be a functional programmer]]. ~ Charles Scalfani. #Programming
  #FP
+ [[http://kseo.github.io/posts/2017-01-04-type-defaulting-in-haskell.html][Type defaulting in Haskell]]. ~ Kwang Yul Seo. #Haskell
+ [[http://kseo.github.io/posts/2017-01-05-implementing-a-call-by-value-interpreter-in-haskell.html][Implementing a call-by-value interpreter in Haskell]]. ~ Kwang Yul Seo.
  #Haskell
+ [[http://lorepub.com/post/2016-12-17-Haskell-Pitfalls][Haskell pitfalls]]. ~ Chris Allen, Mark Wotton #Haskell
+ [[http://www.scottaaronson.com/papers/pnp.pdf][P =? NP: A survey]]. ~ Scott Aaronson #Math #CompSci #History
+ [[http://www.elconfidencial.com/tecnologia/2016-12-04/software-libre-informatica-open-source-linux-github_1298849/][3.000 millones de archivos: así es la mayor biblioteca de código abierto del
  mundo]]. ~ José Manuel Blanco. #Programación
+ [[https://www.softwareheritage.org/archive][The Software Heritage archive]]. 
+ [[https://kseo.github.io//posts/2017-01-08-visible-type-application-ghc8.html][Visible type application in GHC 8]]. ~ Kwang Yul Seo. #Haskell
+ [[http://www.haskellforall.com/2015/10/polymorphism-for-dummies.html][Polymorphism for dummies]]. ~ G. Gonzalez. #Haskell
+ [[http://kseo.github.io/posts/2017-01-09-continuation-passing-style-interpreter.html][Continuation passing style interpreter]]. ~ Kwang Yul Seo. #Haskell
+ [[https://gist.github.com/mikehaertl/3258427][Learn you a Haskell - In a nutshell]]. ~ Michael Härtl #Haskell 
+ [[http://blogs.ams.org/matheducation/2017/01/09/integrating-computer-science-in-math-the-potential-is-great-but-so-are-the-risks/][Integrating Computer Science in Math: The potential is great, but so are the
  risks]]. ~ E.  Schanzer #Math #CompSci
+ [[https://mail.haskell.org/pipermail/haskell-cafe/2017-January/125907.html][Call for interest: Haskell in middle school math education]]. ~ Chris Smith
  #Haskell #Math 
+ [[https://www.isa-afp.org/entries/UPF_Firewall.shtml][Formal network models and their application to firewall policies]]. ~
  A.D. Brucker, L. Brügger & B. Wolff #IsabelleHOL
+ [[http://michaeljflynn.net/2017/01/09/simple-rna-folding-in-130-lines-of-haskell][Simple RNA folding in 130 lines of Haskell]]. ~ Michael J. Flynn #Haskell 
+ [[http://m.bib.oxfordjournals.org/content/early/2016/12/31/bib.bbw130.full][How the strengths of Lisp-family languages facilitate building complex and
  flexible bioinformatics applications]]. ~ B.B. Khomtchouk et als. #Lisp 
+ [[https://blog.grakn.ai/grakn-ai-and-haskell-c166c7cc1d23#.j4zri5fzw][GRAKN.AI and Haskell: Data processing using Haskell and the Grakn knowledge
  graph]]. ~ Felix Chapman #Haskell  
+ [[https://www.codementor.io/codementorteam/tutorials/cheat-sheet-python-for-data-science-xe3m6wy4q][Cheat sheet: Python for Data Science]]. ~ Martijn #Python #DataScience 
+ [[https://github.com/rgleichman/glance/blob/master/README.md][Glance, a visual Haskell]]. ~ Robbie Gleichman #Haskell 
+ [[http://edsko.net/2017/01/08/linearity-in-haskell][Linearity, uniqueness, and Haskell]]. ~ Edsko de Vries. #Haskell  
+ [[http://eta-lang.org][Eta: a pure, lazy, strongly typed functional programming language on the
  JVM]]. #Haskell #Eta
+ [[http://www.cs.ox.ac.uk/jeremy.gibbons/publications/iterator.pdf][The essence of the iterator pattern]]. ~ J Gibbons, BCS Oliveira #Haskell
+ [[http://www.corecursion.net/post/2017-01-12-Why_Traversable_is_the_real_deal][Why Traversable is the real deal]]. ~ @yoeight #Haskell 
+ [[http://chrisdone.com/posts/fast-haskell-c-parsing-xml][Fast Haskell: Competing with C at parsing XML]]. ~ Chris Done.
  #Haskell
+ [[https://arxiv.org/pdf/1701.03320v1][An introduction to Liquid Haskell]]. ~ Ricardo Peña #Haskell
+ [[http://www.bbenson.co/post/refactoring-with-applicatives-in-haskell][Refactoring with Applicatives in Haskell]]. ~ Brendan Benson #Haskell 
+ [[https://medium.freecodecamp.com/programming-mental-models-47ccc65eb334#.5ugikcqnp][The Great Programming Jargon Bake-off (Imperative vs. Declarative. Pure
  vs. Impure. Static vs. Dynamic)]]. ~ Preethi Kasireddy #Programming
+ [[https://hackhands.com/lazy-evaluation-works-haskell][How lazy evaluation works in Haskell]]. ~ Heinrich Apfelmus #Haskell 
+ [[http://math-blog.com/should-you-get-started-in-data-science/][Should you get started in Data Science?]] ~ John F. McGowan #DataScience 
+ [[https://aeon.co/essays/the-rise-and-fall-and-rise-of-logic][The rise and fall and rise of logic]]. ~ C. Dutilh Novaes. #Logic 
+ [[http://www.johndcook.com/blog/2017/01/12/safe-primes-sylow-theorems-and-cryptography/][Safe primes, Sylow theorems, and Cryptography]]. ~ J.D. Cook. #Math
  #CompSci  
+ [[https://www.isa-afp.org/entries/E_Transcendental.shtml][The transcendence of e in Isabelle/HOL]]. ~ Manuel Eberl #IsabelleHOL #Math 
+ [[http://www.johndcook.com/blog/2017/01/11/automated-theorem-proving][Automated theorem proving]]. ~ J.D. Cook. #Math #CompSci 
+ [[https://openlibra.com/en/book/practicas-de-matematicas-con-maxima-matematicas-usando-software-libre][Prácticas de Matemáticas con Maxima: Matemáticas usando Software Libre]]. ~
  A.J. Arriaza et als. #Libro #Matemáticas #Maxima
+ [[http://www2.tcs.ifi.lmu.de/~abel/jlamp17.pdf][Equational reasoning about formal languages in coalgebraic style]]. ~ Andreas
  Abel #Agda 
+ [[http://www.stephendiehl.com/posts/monads.html][Monads made difficult: A short, fast and analogy-free introduction to Haskell
  monads derived from a categorical perspective]]. ~ S. Diehl. #Haskell
+ [[https://www.researchgate.net/profile/Bruno_Woltzenlogel_Paleo/publication/311456139_Leibniz%27s_Characteristica_Universalis_and_Calculus_Ratiocinator_Today/links/5847ded008ae2d21757350ea.pdf][Leibniz’s characteristica universalis and calculus ratiocinator today]]. ~
  Bruno Woltzenlogel Paleo #Logic
+ [[https://github.com/FormalTheology/GoedelGod][Computer-assisted theoretical philosophy (computer-assisted formalizations of
  ontological proofs)]]. #Coq #IsabelleHOL
+ [[https://t.co/LK9Wdh6ooD][The essence of functional structures]]. ~ Adil Akhter. #Scala
+ [[http://www.staff.city.ac.uk/~ross/papers/Applicative.html][Applicative programming with effects]]. ~ Conor McBride & Ross
  Paterson. #Haskell
+ [[http://ozark.hendrix.edu/~yorgey/360/f16/][Course: Programming languages (Fall 2016)]]. ~ Brent Yorgey #Haskell 
+ [[https://begriffs.com/posts/2017-01-14-design-use-quickcheck.html][The design and use of QuickCheck]]. ~ Joe Nelson #Haskell #QuickCheck
+ [[http://hvg.ece.concordia.ca/Publications/TECH_REP/BDIID_TR16.pdf][Formalization of Birth-Death and IID Processes in Higher-order Logic]]. ~
  L. Liu, O. Hasan & S. Tahar #HOL4
+ [[https://kseo.github.io//posts/2017-01-14-memoization-in-hasekll.html][Memoization in Haskell]]. ~ Kwang Yul Seo. #Haskell
+ [[https://ucsd-progsys.github.io/liquidhaskell-blog/][LiquidHaskell: a static verifier for Haskell, based on Liquid Types]]. #Haskell 
+ [[https://arxiv.org/abs/1701.03602][Automatic verification and interactive theorem proving]]. ~ Andrea Asperti #ATP
  #ITP
+ [[https://jfr.unibo.it/article/download/5595/6224][Formalization of the pumping lemma for context-free languages]]. ~ M.V M. Ramos
  et als. #ITP #Coq
+ [[http://www.win.tue.nl/%7Eberry/papers/crypto99.pdf][A simple Publicly Verifiable Secret Sharing Scheme and its application to
  electronic voting]]. ~ Berry Schoenmakers
+ [[https://github.com/input-output-hk/pvss-haskell][Haskell implementation of the Public Verifiable Secret Scheme based on Berry
  Schoenmakers's paper]]. ~ Carlos D'Agostino #Haskell
+ [[https://jaspervdj.be/posts/2017-01-17-lazy-io-graphs.html][Lazy I/O and graphs (Finding the shortest path in a lazily loaded infinite
  graph)]]. ~ Jasper Van der Jeugt. #Haskell
+ [[http://rextester.com][Rextester]]: A nice online IDE that supports multiple prog lang #Fsharp
  #Haskell #erlang #Scala #OCaml #Swift #elixirlang #Go ...
+ [[http://arxiv.org/abs/1701.04481][A tutorial on using Dafny to construct verified software]]. ~ Paqui Lucio
  #Dafny
+ [[https://josejuan.github.io/posts/2017-01-05-zipped-finger-tree.html][Zipped finger tree (o porqué los `ArrayList` son ineficientes)]]. ~
  @__josejuan__ #Haskell
+ [[https://www.isa-afp.org/entries/Bertrands_Postulate.shtml][Bertrand's postulate in Isabelle/HOL]]. ~ J. Biendarra & M. Eberl #IsabelleHOL
  #Math
+ [[http://www.fpcomplete.com/blog/2017/01/speeding-up-distributed-computation][Speeding up a distributed computation in Haskell]]. ~ Francesco Mazzoli
  #Haskell
+ [[http://haskellpad.org][Haskell Pad: Run your Haskell on the browser]]. ~ Kwang Yul Seo.
  #Haskell 
+ [[http://go-talks.appspot.com/github.com/kseo/haskell-talks/2016/intro.slide#1][Introduction to Haskell]]. ~ Kwang Yul Seo. #Haskell 
+ [[https://www.math.nagoya-u.ac.jp/~garrigue/papers/rs_isita2016.pdf][Formalization of Reed-Solomon codes and progress report on formalization of
  LDPC codes]]. ~ R. Affeldt, J. Garrigue, T. Saikawa #Coq
+ [[http://mlg.eng.cam.ac.uk/adam/pps2017.pdf][Building inference algorithms from monad transformers]]. ~ Adam Ścibior et
  als. #Haskell
+ [[http://go-talks.appspot.com/github.com/kseo/haskell-talks/2016/monad.slide#1][What is monad?]] ~ Kwang Yul Seo. #Haskell  
+ [[http://hojaynumeros.blogspot.com/2017/01/numero-de-descomposiciones-en.html][Número de descomposiciones en diferencia de cuadrados]]. ~ Antonio Roldán.
  #Matemáticas #Programación
+ [[http://mutanatum.com/posts/2017-01-12-Browser-FP-Head-to-Head.html][Selecting a platform (JavaScript vs Elm vs PureScript vs GHCjs vs Scalajs)]]. ~
  Isaac Shapira
+ [[https://codesachin.wordpress.com/2016/04/03/a-practical-introduction-to-functional-programming-for-python-coders/][A practical introduction to Functional Programming for Python coders]]. ~
  Sachin Joglekar #FP #Python
+ [[https://www.oreilly.com/ideas/putting-the-science-back-in-data-science][Putting the science back in data science (Best practices and scalable workflows for reproducible data science)]]. ~ D. Whitenack #DataScience
+ [[http://math-blog.com/invasion-of-the-physicists/][Invasion of the physicists]]. ~ John F. McGowan 
+ [[http://www.microsiervos.com/archivo/ordenadores/10-algoritmos-frecuentes-entrevistas-trabajos-programacion.html][Los 10 algoritmos más frecuentes que surgen en entrevistas de trabajo de
  programación]]. ~ @Alvy #Programación
+ [[http://kseo.github.io//posts/2017-01-19-fun-with-hint.html][Fun with hint]]. ~ Kwang Yul Seo. #Haskell 
+ [[http://tooslowexception.com/characterology-of-programmers][Characterology of programmers]]. ~ Konrad Kokosa #Programming 
+ [[https://kseo.github.io/posts/2017-01-21-writer-monad.html][Writer monad]]. ~ Kwang Yul Seo. #Haskell
+ [[http://ceur-ws.org/Vol-1782/paper_8.pdf][A verified decision procedure for pseudo-boolean formulas]]. ~ T Philipp, A
  Tigunova #Coq #Haskell #Logic
+ [[https://dzone.com/articles/functional-programming-is-not-what-you-probably-th][Functional programming is not what you (probably) think]]. ~ Sean Toner
  #FunctionalProgramming
+ [[http://www.snoyman.com/blog/2017/01/stackage-design-choices][Stackage design choices: making Haskell curated package sets]]. ~ Michael
  Snoyman. #Haskell
+ [[http://www.cs.us.es/~fsancho/?e=146][¿Se puede liberar la programación del estilo de von Neumann?]] ~ F. Sancho
  #Programación
+ [[http://elpais.com/elpais/2017/01/17/ciencia/1484670954_785850.html][La otra cara del Big Data]]. ~ David Gómez-Ullate #BigData
+ [[https://blogs.scientificamerican.com/roots-of-unity/review-weapons-of-math-destruction][Review: Weapons of Math Destruction]]. ~ Evelyn Lamb #BigData 
+ [[https://webtap.princeton.edu/][Princeton Web Transparency & Accountability Project]]. 
+ [[https://www.reddit.com/r/haskell/comments/5pan74/looking_for_haskell_companies_outside_usa][Looking for Haskell companies outside USA]]. #Haskell 
+ [[http://www.asjp.cerist.dz/downPassifArticle/3789][Formal specification by Coq of Date and Darwen's object/relational model]]. ~
  A. Benabbou, S.N. Bahloul #Coq
+ [[http://www.microsiervos.com/archivo/ordenadores/software-inteligente-x2.html][Software inteligente que aprende a escribir software inteligente]]. ~ @Alvy
  #Programación #IA
+ [[https://www.technologyreview.com/s/603381/ai-software-learns-to-make-ai-software/][AI software learns to make AI software]]. ~ Tom Simonite #Programming #IA  
+ [[https://www.fpcomplete.com/blog/2017/01/quickcheck][QuickCheck and magic of testing]]. ~ A. Kuleshevich #Haskell 
+ [[https://www.isa-afp.org/entries/Bernoulli.shtml][Bernoulli numbers in Isabelle/HOL]]. ~ L. Bulwahn #IsabelleHOL #Math 
+ [[http://cmsc-22311.cs.uchicago.edu/2015/lectures.php][Course: Functional systems in Haskell]]. ~ S. Kurtz #Haskell  
+ [[http://perugini.cps.udayton.edu/teaching/courses/Spring2016/cps499/projects/korenewychs1/korenewychs1-paper.pdf][An alpha-beta heuristic implementation of tic-tac-toe in Haskell]]. ~
  S.G. Korenewych #Haskell
+ [[http://perugini.cps.udayton.edu/teaching/courses/Spring2016/cps499/projects/volka1/volka1-paper.pdf][Graph algorithms in Prolog]]. ~ A.C. Volk #Prolog #Math 
+ [[http://arxiv.org/abs/1701.07127][Interactive proof presentations with Cobra]]. ~ M. Ring, C. Lüth #Cobra
  #IsabelleHOL #Haskell #Scala
+ [[https://haskellweekly.news/issues/39.html][Haskell Weekly 39: News from the Haskell community (January 26 2017)]]. 
  #Haskell
+ [[http://www.studiainformatica.polsl.pl/index.php/SI/article/viewFile/790/759][Enumeration of words in context-free languages using Haskell]]. ~ W. Wieczorek
  #Haskell
+ [[http://www.dcc.fc.up.pt/dcc/Pubs/TReports/TR13/dcc-2013-06.pdf][Verifying a simple compiler using property-based random testing]]. ~ Pedro
  Vasconcelos #Haskell
+ [[https://e.xtendo.org/monad#1][The Monad Fear]]. ~ @xtendo_org #Haskell
+ [[http://www.infoworld.com/article/3155704/java/new-functional-language-for-jvm-builds-on-haskell-clojure-ml.html][Lux: New functional language for JVM builds on Haskell, Clojure, ML]]. ~
  @syegulalp #Lux 
+ [[https://www.gitbook.com/book/luxlang/the-lux-programming-language/details][The Lux Programming Language]]. #eBook #Lux 
+ [[http://cacm.acm.org/news/212583-how-ai-is-changing-software-development/fulltext][How AI is changing software development]]. ~ Esther Shein #Programming #AI 
+ [[http://ceur-ws.org/Vol-1785/W38.pdf][Formalization of polynomially bounded and negligible functions using the
  computer-aided proof-checking system Mizar]]. ~ H. Okazaki, Y. Futa #Mizar
+ [[https://byorgey.wordpress.com/2017/01/27/advent-of-code-16-solution-an-algebra-of-bitstrings][Advent of code #16 solution: an algebra of bitstrings]]. ~ Brent Yorgey
  #Haskell
+ [[http://homepages.inf.ed.ac.uk/wadler/papers/marktoberdorf/baastad.pdf][Monads for functional programming]]. ~ Philip Wadler #Haskell 
+ [[https://kseo.github.io/posts/2017-01-27-how-i-learned-haskell.html][How I learned Haskell]]. ~ Kwang Yul Seo. #Haskell 
+ [[https://ocharles.org.uk/blog/pages/2014-12-01-24-days-of-ghc-extensions.html][24 days of GHC extensions]]. #Haskell 
+ [[https://arxiv.org/abs/1701.07769][Ethical considerations in Artificial Intelligence courses]]. ~ E. Burton et
  als.#AI
+ [[http://ceur-ws.org/Vol-1785/F2.pdf][Tarski’s geometry and the euclidean plane in Mizar]]. ~ A. Grabowski,
  R. Coghetto. #Mizar
+ [[http://www.cs.nott.ac.uk/~pszgmh/fold.pdf][A tutorial on the universality and expressiveness of fold]]. ~ Graham Hutton
  #Haskell
+ [[https://kseo.github.io/posts/2017-01-28-build-your-haskell-project-continuously.html][Build your Haskell project continuously]]. ~ Kwang Yul Seo. #Haskell
+ [[https://www.johndcook.com/blog/2011/02/07/twin-prime-conjecture-pentium-bug/][Twin prime conjecture and the Pentium division bug]]. ~ J.D. Cook. #Math
  #CompSci
+ [[http://ceur-ws.org/Vol-1785/T2-ThEdu.pdf][Rigor of TP (computer theorem proving) in educational engineering software]]. ~
  W. Neuper #ATP
+ [[http://www.cs.nott.ac.uk/~pszgmh/pearl.pdf][Monadic parsing in Haskell]]. ~ G. Hutton, E. Meijer #Haskell 
+ [[http://www.cs.toronto.edu/~hehner/aPToP][A practical theory of programming]]. ~ E.C.R. Hehner #eBook #Programming 
+ [[http://www.slideshare.net/GiancarloValente/functional-programming-per-tutti][Functional programming per tutti]]. ~ Giancarlo Valente #FuncionalProgramming 
+ [[https://github.com/cem3394/hr-haskell][Solutions to various Haskell problems on HackerRank For Work]]. ~ Chris
  Mckinlay. #Haskell
+ [[https://denibertovic.com/posts/haskell-and-docker-down-the-rabbit-hole-and-back][Haskell and Docker: Down the rabbit hole and back]]. ~ Deni Bertovic. #Haskell 
+ [[http://ceur-ws.org/Vol-1785/W23.pdf][Initial experiments with statistical conjecturing over large formal
  corpora]]. ~ T. Gauthier, C. Kaliszyk, J. Urban #ML #ATP
+ [[http://haskell.cs.yale.edu/wp-content/uploads/2011/02/POPL96-Modular-interpreters.pdf][Monad transformers and modular interpreters]]. ~ S. Liang, P. Hudak, M. Jones
  #Haskell

* Febrero 2017

+ [[https://hal.inria.fr/hal-01414753/document][Formal foundations of 3d geometry to model robot manipulators]]. ~ R. Affeldt,
  C. Cohen #Coq
+ [[http://www.cs.ru.nl/~W.Swierstra/Publications/DataTypesALaCarte.pdf][Data types à la carte]]. ~ W. Swierstra #Haskell
+ [[http://www.practice.geeksforgeeks.org/recent.php][GeeksforGeeks Practice]]: Platform to practice programming problems.
  #Programming
+ [[https://www.reddit.com/r/haskell/comments/5rcfyd/haskell_maxims_and_arrows][Haskell maxims and arrows]]. #Haskell
+ [[http://two-wrongs.com/intuition-for-time-complexity-of-algorithms][Intuition for time complexity of algorithms]]. #Algorithms
+ [[http://www.slideshare.net/mendezfe/an-introduction-into-philosophy-of-science-for-software-engineers][An introduction into philosophy of science for software engineers]]. ~ Daniel
  Méndez.
+ [[http://philsci-archive.pitt.edu/id/eprint/12782][Meaning, truth, and physics]]. ~ László E. Szabó 
+ [[http://ceur-ws.org/Vol-1785/F2.pdf][Tarski’s geometry and the euclidean plane in Mizar]]. ~ A. Grabowski,
  R. Coghetto #ITP #Mizar #Math
+ [[https://www.st.cs.uni-saarland.de/edu/seminare/2005/advanced-fp/docs/huet-zipper.pdf][The Zipper]]. ~ G. Huet #OCaml 
+ [[http://www.lihaoyi.com/post/WhatsFunctionalProgrammingAllAbout.html][What's functional programming all about?]] ~ Li Haoyi. #FuncionalProgramming
+ [[https://kseo.github.io/posts/2017-01-30-type-level-insertion-sort.html][Type-level insertion sort]]. ~ Kwang Yul Seo. #Haskell 
+ [[http://arxiv.org/abs/1701.02401][A linear algebra formulation for boolean satisfiability testing]]. ~ C. Fang,
  J. Liu #Logic  
+ [[http://www.atamo.com/articles/how-to-read-pearls-by-richard-bird][How to read "Pearls of functional algorithm design"]]. ~ Kim-Ee Yeoh
  #FunctionalProgramming #Haskell
+ [[http://www.math3ma.com/mathema/2017/1/17/what-is-category-theory-anyway][What is category theory anyway?]] ~ Tai-Danae Bradley. #Math 
+ [[http://www.math3ma.com/mathema/2017/1/23/what-is-a-category][What is a category? Definition and examples]]. ~ Tai-Danae Bradley #Math 
+ [[http://www.math3ma.com/mathema/2017/1/31/what-is-a-functor-part-1][What is a functor? Definitions and examples, part 1]]. ~ Tai-Danae Bradley.
  #Math
+ [[http://www.math3ma.com/mathema/2017/2/1/what-is-a-functor-part-2][What is a functor? Definitions and examples, part 2]]. ~ Tai-Danae Bradley.
  #Math
+ [[https://haskellweekly.news/issues/40.html][Haskell Weekly 40: News from the Haskell community (February 2 2017)]].
  #Haskell 
+ [[https://hackernoon.com/easing-haskells-intimidating-glare-2341095e88aa#.9pl8imo29][Easing Haskell’s intimidating glare]]. ~ James Bowen #Haskell 
+ [[https://mmhaskell.com/blog/2017/1/30/the-easiest-haskell-idiom][The easiest Haskell idiom]]. ~ James Bowen #Haskell 
+ [[http://www.kovach.me/posts/2017-01-30-haskell-bits-randomness.html][Haskell Bits #1: Randomness]]. ~ Ben Kovach. #Haskell 
+ [[http://www.microsiervos.com/archivo/ciencia/mapa-matematicas.html][El mapa de las matemáticas]]. ~ @Alvy #Matemáticas
+ [[https://www.flickr.com/photos/95869671@N08/32264483720/][Map of Mathematics poster (All of mathematics summarised in one poster)]]. ~
  Dominic Walliman #Math
+ [[https://kseo.github.io/posts/2017-02-02-context-reduction.html][Context reduction]]. ~ Kwang Yul Seo. #Haskell 
+ [[https://www.isa-afp.org/entries/Key_Agreement_Strong_Adversaries.shtml][Refining authenticated key agreement with strong adversaries]]. ~ J. Lallemand
  & C. Sprenger #IsabelleHOL
+ [[http://www.csl.sri.com/users/rushby/slides/gm04.pdf][Software verification/validation methods and tools ... or practical formal
  methods]]. ~ John Rushby
+ [[http://www.kovach.me/posts/2017-02-03-haskell-bits-application-beginnings.html][Haskell bits #2: Application beginnings]]. ~ Ben Kovach. #Haskell 
+ [[https://medium.com/ai-roadmap-institute/unsolved-problems-in-ai-38f4ce18921d#.kpjy6nmud][Unsolved problems in AI]]. ~ Simon Andersson #AI 
+ [[http://binaire.blog.lemonde.fr/2017/02/03/demontrer-sans-donner-la-preuve][Démontrer sans donner la preuve!]] ~ Fabrice Benhamouda #Math #CompSci 
+ [[https://github.com/mrkkrp/req][Req: Easy-to-use, type-safe, expandable, high-level HTTP library]]. ~ Mark
  Karpov #Haskell
+ [[http://fun.cs.tufts.edu/stream-fusion.pdf][Stream fusion: From lists to streams to nothing at all]]. ~ D. Coutts,
  R. Leshchinskiy, D. Stewart #Haskell
+ [[http://tomasp.net/academic/drafts/failures/failures-v2.pdf][Miscomputation in software: Learning to live with errors]]. ~ Tomas Petricek
  #Programming
+ [[http://www.kovach.me/posts/2016-06-01-categories.html][Categories in theory and in Haskell]]. ~ Ben Kovach. #Haskell 
+ [[http://www.kovach.me/posts/2016-06-08-monoids.html][Monoids in theory and in Haskell]]. ~ Ben Kovach. #Haskell 
+ [[http://kovach.me/posts/2014-08-09-twitter.html][Posting to Twitter via HTTP in Haskell]]. ~ Ben Kovach. #Haskell  
+ [[https://bartoszmilewski.com/2017/02/06/applicative-functors][Applicative functors]]. ~ Bartosz Milewski. #Haskell 
+ [[https://mmhaskell.com/blog/2017/2/6/applicatives-one-step-further][Applicatives: One step further]]. ~ James Bowen #Haskell
+ [[https://deque.blog/2017/02/03/code-your-own-quickcheck][Code your own QuickCheck]]. #Haskell 
+ [[https://github.com/alexanderlhicks/IsabelleGuide][A practical guide to formalised mathematics in Isabelle]]. ~ A. Hicks,
  J. Siqueira #IsabelleHOL #Math
+ [[http://www.joachim-breitner.de/blog/717-Why_prove_programs_equivalent_when_your_compiler_can_do_that_for_you_][Why prove programs equivalent when your compiler can do that for you?]] ~
  Joachim Breitner. #Haskell
+ [[http://mathforum.org/isaac/mathhist.html][Famous problems in the history of Mathematics]]. ~ Isaac Reed #Math 
+ [[https://kseo.github.io/posts/2017-02-06-reified-dictionaries.html][Reified dictionaries]]. ~ Kwang Yul Seo. #Haskell
+ [[http://arxiv.org/abs/1702.01135][Reluplex: An efficient SMT solver for verifying deep neural networks]]. ~
  G. Kat et als. #SMT
+ [[http://kovach.me/posts/2014-08-04-markov-chains.html][Modeling and simulating Markov chain evolution]]. ~ Ben Kovach. #Haskell
+ [[https://www.schoolofhaskell.com/school/starting-with-haskell/basics-of-haskell/the-tao-of-monad][The TAO of monad]]. ~ Bartosz Milewski. #Haskell
+ [[https://www.math.ias.edu/vladimir/sites/math.ias.edu.vladimir/files/2014_08_27_NUS.pdf][Computer proof assistants (the future of mathematics)]]. ~ Vladimir Voevodsky
  #ITP #Math
+ [[https://www.isa-afp.org/browser_info/current/AFP/Berlekamp_Zassenhaus/document.pdf][The factorization algorithm of Berlekamp and Zassenhaus]]. ~ J. Divasón et
  als. #IsabelleHOL #Math
+ [[https://www.johndcook.com/blog/2017/02/07/tidying-up-trivial-details/][Tidying up trivial details (the value of abstract mathematics)]]. ~ J.D. Cook.
  #Math
+ [[http://www.cs.nott.ac.uk/~pszgmh/fifty.pdf][Functional pearl: Compiling a fifty year journey]]. ~ G. Hutton, P. Bahr
  #Haskell
+ [[https://haskellweekly.news/issues/41.html][Haskell Weekly 41: News from the Haskell community (February 9 2017)]].
  #Haskell 
+ [[https://andyshiue.github.io/functional/programming/2017/02/06/monad.html][Monads in category theory for laymen]]. ~ AndyShiue #Haskell 
+ [[https://blogs.msdn.microsoft.com/commandline/2017/02/09/haskell-on-bashwsl/][Haskell on Bash/WSL]]. ~ Rich Turner #Haskell 
+ [[https://www.isa-afp.org/entries/Stone_Relation_Algebras.shtml][Stone relation algebras in Isabelle/HOL]]. ~ W. Guttmann #ITP #IsabelleHOL
  #Math
+ [[https://deque.blog/2017/02/06/code-your-own-quickcheck-hof/][Code your own QuickCheck (HOF)]]. Part 2 #Haskell
+ [[http://cacm.acm.org/careers/213247-supercomputers-for-quantum-computers][Supercomputers for quantum computers]]. 
+ [[https://stackbuilders.com/tutorials/haskell/generics][GHC generics explained]]. ~ M. Karpov #Haskell
+ [[https://github.com/thorlucas/Sandpiles][Haskell implementation of the Abelian sandpile model using Gloss]]. #Haskell
  #Gloss
+ [[https://code.world/haskell#PUA5SiqJxCnMvFgl9eua8Ew][Haskell implementation of the Abelian sandpile model using CodeWorld]]. ~
  C. Smith #Haskell #CodeWorld
+ [[http://www.mat.unb.br/ayala/EVENTS/11SemInf2013Mauricio.pdf][Computational logic for computer science]]. ~ M. Ayala-Rincón & F.L.C. de Moura
  #Logic
+ [[http://www.di.unito.it/~padovani/Didattica/ProgrammazioneFunzionale/lnhp.pdf][Lecture notes on Haskell programming]]. ~ L. Padovani #Haskell
+ [[http://www.cs.ox.ac.uk/people/jeremy.gibbons/publications/spigot.pdf][Unbounded spigot algorithms for the digits of pi]]. ~ J. Gibbons #Haskell #Math
  #Pi
+ [[http://www.cs.umb.edu/~offner/files/pi.pdf][Computing the digits in π]]. ~ C.D. Offner #Math #Algorithms #Pi 
+ [[ftp://ftp.irit.fr/IRIT/ACADIE/IRIT-RR-2017-01-FR.pdf][A formal study of boolean games with random formulas as pay functions]]. ~
  E. Martin-Dorel & S. Soloviev #ITP #Coq
+ [[https://arunraghavan.net/2017/02/stricter-json-parsing-with-haskell-and-aeson][Stricter JSON parsing with Haskell and Aeson]]. ~ A. Raghavan #Haskell  
+ [[http://shhaumb.github.io/arithmetical-theorems-with-lambda-calculus][Arithmetical theorems with Lambda Calculus]]. ~ Shubham Jain #Haskell 
+ [[https://elephly.net/posts/2017-01-09-bootstrapping-haskell-part-1.html][Bootstrapping Haskell]]. ~ rekado #Haskell
+ [[https://deque.blog/2017/02/10/code-your-own-quickcheck-shrink][Code your own QuickCheck (Shrink)]]. ~ DeQue #Haskell
+ [[http://elpaissemanal.elpais.com/documentos/la-inteligencia-artificial][El cerebro artificial que piensa por ti]]. ~ Joseba Elola #IA
+ [[http://elpais.com/elpais/2017/02/10/ciencia/1486759726_219935.html][Cuando políticos de EE UU decidieron que el número pi era 3,2]]. ~ M. Ansede
  #Matemáticas
+ [[http://nbviewer.jupyter.org/github/akittas/presentations/blob/master/pythess/func_py/func_py.ipynb][Using functional programming in Python like a boss: generators, iterators and decorators]].  #Python
+ [[https://github.com/danielSanchezQ/FP-Programming-Python-Madrid][Programación funcional en Python]]. ~ D. Sánchez #Python
+ [[https://people.mpi-inf.mpg.de/~jblanche/compl2.pdf][Soundness and completeness proofs by coinductive methods]]. ~ J. C. Blanchette,
  A. Popescu, D. Traytel #IsabelleHOL #Logic
+ [[https://www.isa-afp.org/entries/Abstract_Soundness.shtml][Abstract soundness in Isabelle/HOL]].~ J. C. Blanchette, A. Popescu, D. Traytel
  #IsabelleHOL #Logic
+ [[http://stefan-klinger.de/files/monadGuide.pdf][The Haskell programmer’s guide to the IO Monad (don’t panic)]]. ~ S. Klinger
  #Haskell #Math 
+ [[https://www.isa-afp.org/entries/Differential_Dynamic_Logic.shtml][Differential dynamic logic]]. ~ B. Bohrer #IsabelleHOL #Logic
+ [[http://kovach.me/posts/2017-02-08-connecting-to-databases.html][Haskell bits #3: Connecting to databases]]. ~ Ben Kovach. #Haskell
+ [[https://www.fpcomplete.com/blog/2016/11/mastering-time-to-market-haskell][Mastering time-to-market with Haskell]]. ~ Chris Done. #Haskell
+ [[https://deque.blog/2017/02/14/quickcheck-in-action][Playing with QuickCheck on an arithmetic DSL]]. ~ DeQue  #Haskell
+ [[http://arxiv.org/abs/1702.04478][VMDV: A 3D visualization tool for modeling, demonstration, and
  verification]]. ~ Jian Liu et als. #ATP #ITP
+ [[https://docs.google.com/presentation/d/1a4GvI0dbL8sfAlnTUwVxhq4_j-QiDlz02_t0XZJXnzY/preview#slide=id.p][How to sell excellence]]. ~ Michael O. Church #Haskell
+ [[http://philsci-archive.pitt.edu/12823/1/THOUGHT%20EXPERIMENTS%20IN%20MATHEMATICS.pdf][Thought experiments in mathematics]]. ~ I. Starikova & M. Giaquinto #Math
+ [[http://teh.id.au/posts/2017/02/13/interactive-print/index.html][Replacing GHCi's pretty-printer]]. ~ Tim Humphries #Haskell
+ [[https://functor.tokyo/blog/2017-02-17-xml-html-qq][Quasiquoters for XML and HTML documents in Haskell]]. ~ Dennis Gosnell.
  #Haskell 
+ [[https://www.microsoft.com/en-us/research/wp-content/uploads/2016/11/trees-that-grow-2.pdf][Trees that grow]]. ~ S. Najd & Simon Peyton Jones #Haskell 
+ [[http://www.snoyman.com/blog/2017/02/better-exception-messages][Better exception messages]]. ~ Michael Snoyman. #Haskell
+ [[https://deque.blog/2017/02/17/quickcheck-is-fun-deal-with-it][QuickCheck is fun, deal with it]]. ~ DeQue #Haskell 
+ [[https://arxiv.org/pdf/1702.03277][Local lexing]]. ~ S. Obua, P. Scott & J. Fleuriot #IsabelleHOL 
+ [[http://osl.ugr.es/CTAN/info/spanish/guia-atx/guia-atx.pdf][Creación de ficheros LaTeX con GNU Emacs]]. ~ Joaquín Ataz López #LaTeX #Emacs
+ [[http://www.numberworld.org/y-cruncher/][y-cruncher: A multi-threaded pi-program]]. ~ Alexander J. Yee #Math #Programming #Pi 
+ [[http://arxiv.org/abs/1702.05383][Theorem proving based on semantics of DNA strand graph]]. ~ K.S. Ray & M. Mondal #ATP
+ [[http://www.euterpea.com][Euterpea: A Haskell library for music creation]]. #Haskell #Music
+ [[http://haskellexists.blogspot.com.es/2017/02/ten-example-uses-of-monads.html][Ten example uses of Monads]]. ~ Philipp Schuster #Haskell
+ [[http://www.cs.us.es/~fsancho/?e=165][Entrenamiento de redes neuronales: mejorando el gradiente descendiente]]. ~
  F. Sancho #IA
+ [[http://www.haskellforall.com/2017/02/the-curry-howard-correspondence-between.html][The Curry-Howard correspondence between programs and proofs]]. ~ G. Gonzalez
  #Haskell #Logic
+ [[https://briansteffens.github.io/2017/02/20/from-math-to-machine.html][From math to machine: translating a function to machine code]]. ~ Brian
  Steffens. #Haskell #Math
+ [[https://github.com/libreim/curryHoward/blob/master/CurryHoward.pdf][El isomorfismo de Curry-Howard y una introducción a Coq]]. ~ M. Román #Lógica
  #Coq
+ [[http://www.cs.us.es/~fsancho/?e=166][La tiranía de las publicaciones]]. ~ F. Sancho. #Investigación
+ [[https://mmhaskell.com/blog/2017/2/20/how-to-read-and-write-with-monads][How to read and write (with monads!)]] ~ James Bowen._OWA #Haskell 
+ [[http://production.datastore.cvt.dk/oafilestore?oid=57de73be1f4bfa107d000031&targetid=57de73bf1f4bfa107d000033][Development and verification of a proof assistant]]. ~ A.B. Jensen. #Thesis
  #Logic #IsabelleHOL
+ [[http://ims.nus.edu.sg/preprints/2017-05.pdf][To be or not to be constructive (that is not the question)]]. ~ Sam Sanders
  #Math #Logic
+ [[http://arxiv.org/abs/1702.06334][Synthesizing imperative programs for introductory programming assignments]]. ~
  Sunbeom So, Hakjoo Oh #Programming
+ [[http://fgiasson.com/blog/index.php/2016/06/21/optimal-emacs-settings-for-org-mode-for-literate-programming][Optimal Emacs settings for org-mode for literate programming]]. ~ F. Giasson
  #Emacs #Programming
+ [[https://github.com/zk-phi/magic-latex-buffer][Emacs magical syntax highlighting for LaTeX-mode buffers]]. #LaTeX #Emacs 
+ [[https://ekaschalk.github.io/post/prettify-mode/][Mathematical notation in Emacs]]. ~ Eric Kaschalk #Emacs 
+ [[https://medium.com/the-theam-journey/effective-array-computation-in-haskell-11e5c334c68a#.af55e6ry7][Effective array computation in Haskell (Because we all want highly performant
  and beautiful code)]]. ~ Samuel Schlesinger #Haskell #Math
+ [[http://crypto.stanford.edu/~blynn/haskell/ga.html][All hail geometric algebra!]] ~ Ben Lynn #Haskell #Math 
+ [[http://crypto.stanford.edu/~blynn/haskell/enigma.html][From Atbash to Enigma: 2500 years of cryptography in a few lines of
  Haskell]]. ~ Ben Lynn #Haskell #Cryptography
+ [[http://markbucciarelli.com/2017-02-21_hello_elm_and_haskell.html][Hello Elm and Haskell!]] ~ Mark Bucciarelli. #Elm #Haskell
+ [[https://sourceforge.net/blog/february-2017-community-choice-project-of-the-month-maxima][Maxima was elected as the Sourceforge February 2017 Community Project of the
  Month]]. #Maxima #Math
+ [[http://crypto.stanford.edu/~blynn/haskell][Haskell sorcery]]. ~ Ben Lynn #Haskell 
+ [[http://queue.acm.org/detail.cfm?id=3055303][Making money using math: Modern applications are increasingly using probabilistic machine-learned models]]. ~ E. Meijer  
+ [[http://www.microsiervos.com/archivo/ia/inteligencia-artificial-programa-robando-codigo-otros-programas.html][Inteligencia artificial que programa robando código de otros programas]]. ~
  Nacho Palou. #IA
+ [[https://www.newscientist.com/article/mg23331144-500-ai-learns-to-write-its-own-code-by-stealing-from-other-programs][AI learns to write its own code by stealing from other programs]]. ~ Matt
  Reynolds #AI
+ [[http://softlang.uni-koblenz.de/book/languages.pdf][The notion of software language]]. ~ Ralf Lämmel 
+ [[http://kovach.me/posts/2017-02-22-environment-variables.html][Haskell Bits #4: Environment variables]]. ~ Ben Kovach. #Haskell 
+ [[https://arxiv.org/pdf/1702.04603][Relational convolution, generalised modalities and incidence algebras]]. ~
  B. Dongol, I.J. Hayes, G. Struth #IsabelleHOL
+ [[https://byorgey.wordpress.com/2017/02/24/signed-sets-and-ballots-part-2/][Signed sets and ballots, part 2]]. ~ Brent Yorgey #Haskell 
+ [[http://crypto.stanford.edu/~blynn/haskell/brute.html][Brute force for beginners]]. ~ Ben Lynn #Haskell 
+ [[http://crypto.stanford.edu/~blynn/play][Browser games in Haskell]]. ~ Ben Lynn #Haskell #Games 
+ [[http://crypto.stanford.edu/~blynn/haskell/io.html][A problem with I/O]]. ~ Ben Lynn #Haskell 
+ [[http://www.stat.umn.edu/geyer/3701/notes/basic.pdf][Basics of R]]. ~ Charles J. Geyer #Rstats 
+ [[http://www.hansdieterhiep.nl/tutorials/model-checking-an-introduction-to-bisimulation/][Model checking: an introduction to bisimulation]]. ~ Hans-Dieter Hiep
  #Haskell
+ [[https://youtu.be/8d1vqd9_YqA][Introducción a generar sitios web estáticos con Hakyll]]. ~ Anler Hernández
  Peral #Haskell [[https://github.com/anler/talks/tree/master/hakyll-intro][Código]]
+ [[http://www.masteringemacs.org/article/fun-games-in-emacs][Fun and games in Emacs]]. ~ Mickey Petersen #Emacs 
+ [[https://openreview.net/pdf?id=ByldLrqlx][DeepCoder: learning to write programs]]. ~ M. Balog et als. #DeepLearning 
+ [[https://www.isa-afp.org/entries/Menger.shtml][Menger's theorem in Isabelle/HOL]]. ~ C. Dittmann #IsabelleHOL 
+ [[http://crypto.stanford.edu/~blynn/haskell/curry-howard.html][Bug-free code]]. ~ Ben Lynn #Haskell #Math 
+ [[http://www.cs.ox.ac.uk/people/jeremy.gibbons/publications/apl-extabs.pdf][Aplicative programming with naperian functors]]. ~ J. Gibbons #Haskell
+ [[https://github.com/bjornbm/dimensional][Dimensional: a library providing data types for performing arithmetic with
  physical quantities and units]]. #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/dao7/talks/haskell-type-constraints-10-fun.pdf][Haskell type constraints unleashed]]. ~ D. Orchard, T. Schrijvers #Haskell
+ [[https://www.isa-afp.org/entries/Key_Agreement_Strong_Adversaries.shtml][Refining authenticated key agreement with strong adversaries]]. ~ J. Lallemand,
  C. Sprenge #IsabelleHOL
+ [[http://crypto.stanford.edu/~blynn/haskell/parse.html][Parser combinators]]. ~ Ben Lynn #Haskell

* Marzo 2017

+ [[http://www.dominik-peters.de/publications/sat-chapter.pdf][Computer-aided methods for social choice theory]]. ~ C. Geist, D. Peters #ATP 
+ [[https://repl.it/site/blog/haskell][GHCi in the browser]]. ~ @replit #Haskell
+ [[http://crypto.stanford.edu/~blynn/haskell/count.html][Code that counts: Combinatorial calculations with combinator calculus]]. ~ Ben
  Lynn #Haskell #Math
+ [[https://arxiv.org/pdf/1702.06556][Computability theory, nonstandard analysis, and their connections]]. ~
  D. Normann, S. Sanders #Math #CompSci
+ [[https://haskell.libhunt.com][Awesome Haskell: some of the most popular and actively developed packages]].  
  #Haskell
+ [[https://www.reddit.com/r/haskell/comments/5wvd56/how_we_secretly_introduced_haskell_and_got_away/][How we secretly introduced Haskell and got away with it]]. ~ Arian van Putten &
  Ruud van Asseldonk #Haskell
+ [[https://www.ps.uni-saarland.de/autosubst][Autosubst: Automation for de Bruijn syntax and substitution in Coq]]. #Coq
+ [[https://mmhaskell.com/blog/2017/2/27/the-monadic-state-of-mind][The monadic state of mind]]. ~ James Bowen. #Haskell 
+ [[http://crypto.stanford.edu/~blynn/haskell/lazy.html][Laziness in action]]. ~ Ben Lynn #Haskell 
+ [[http://eckyputrady.com/2017/02/18/Haskell-Heroku-Mailgun-Redis/index.html][Haskell, Redis, Mailgun and Heroku Scheduler]]. ~ Ecky Putrady. #Haskel
+ [[http://ssomayyajula.github.io/posts/2015-11-07-proofs-of-functor-laws-with-Haskell.html][Proofs of functor laws in Haskell]]. ~ Siva Somayyajula #Haskell 
+ [[https://github.com/dredozubov/fby16/blob/master/fby16.pdf][How to sell FP?]] ~ Denis Redozubov. #FuncionalProgramming #Haskell 
+ [[http://crypto.stanford.edu/~blynn/haskell/hga.html][Homogeneous geometric algebra]]. ~ Ben Lynn #Haskell #Math 
+ [[https://www.isa-afp.org/entries/Elliptic_Curves_Group_Law.shtml][The group law for elliptic curves in Isabelle/HOL]]. ~ S. Berghofer
  #IsabelleHOL #Math #CompSci
+ [[http://crypto.stanford.edu/~blynn/haskell/cga.html][Conformal geometric algebra]]. ~ Ben Lynn #Haskell #Math 
+ [[http://languagengine.co/blog/proof-refinement-basics][Proof refinement basics]]. ~ Darryl #Haskell #Logic  
+ [[https://alpacaaa.net/blog/post/elm-purescript-in-depth-overview/][In depth overview of Elm and Purescript. Lessons learned porting a game from Purescript to Elm]]. ~ Marco Sampellegrini. #Haskell #Elm #Purescript
+ [[https://www.fpcomplete.com/blog/2017/02/typed-process][The typed-process library]]. ~ Michael Snoyman. #Haskell 
+ [[https://medium.com/ai-society/the-lisp-approach-to-ai-part-1-a48c7385a913#.7zrd5oezq][The Lisp approach to AI (Part 1)]]. ~ S. Valencia #Lisp #IA
+ [[https://kunigami.blog/2017/02/28/notes-on-courseras-functional-programming-principles-in-scala][Notes on Coursera’s functional programming principles in Scala]].  ~
  G. Kunigami. #FunctionalProgramming #Scala
+ [[http://students.brown.edu/seeing-theory][Seeing theory: a visual introduction to probability and statistics]]. ~ Daniel
  Kunin #Math #Statistics.
+ [[https://interstices.info/jcms/p_93098/au-pays-des-illumines-du-nombre-pi][Au pays des illuminés du nombre Pi]]. ~Jean-Paul Delahaye #Math 
+ [[https://interstices.info/jcms/p_93101/le-nombre-pi-est-partout][Le nombre Pi est partout]]. ~ Jean-Paul Delahaye #Math 
+ [[https://jeremykun.com/2017/02/27/the-reasonable-effectiveness-of-the-multiplicative-weights-update-algorithm/amp/][The reasonable effectiveness of the Multiplicative Weights Update Algorithm]]. ~
  Jeremy Kun | Math ∩ Programming #Algorithms
+ [[https://www.depositonce.tu-berlin.de/bitstream/11303/6135/3/dittmann_christoph.pdf][Parity games, separations, and the modal μ-calculus]]. ~ C. Dittmann
  #PhD_Thesis #IsabelleHOL
+ [[http://crypto.stanford.edu/~blynn/haskell/brain.html][Get a brain (neural network in Haskell)]]. ~ Ben Lynn #Haskell #Math 
+ [[https://github.com/snowleopard/alga-paper][A minimalistic, elegant and powerful approach to working with graphs in a
  functional programming language]]. #Haskell
+ [[https://github.com/snowleopard/alg][A library for algebraic construction and manipulation of graphs in Haskell]]. #Haskell
+ [[https://existentialtype.wordpress.com/2017/03/04/a-proof-by-contradiction-is-not-a-proof-that-derives-a-contradiction/][A "proof by contradiction" is not a proof that ends with a contradiction]]. ~
  R. Harper #Logic
+ [[http://www.microsiervos.com/archivo/ciencia/introduccion-pensamiento-critico-32-comodos-videos-y-mooc.html][Una introducción al pensamiento crítico en 32 cómodos vídeos y un MOOC]]. ~
  @Wicho
+ [[https://www.newscientist.com/article/2123322-first-hint-of-how-dna-calculators-could-supercharge-computing/][First hint of how DNA calculators could supercharge computing]]. ~ M. Reynolds
  #Computing #DNA
+ [[http://cacm.acm.org/news/214260-microsofts-ai-is-learning-to-write-code-by-itself-not-steal-it/fulltext][Microsoft's AI is learning to write code by itself, not steal it]].
  #Programming #AI
+ [[http://openlogicproject.org/2017/02/27/proof-checker-for-forall-x-cambridge-and-calgary/][Proof checker for forall x: Cambridge and Calgary]]. ~ R. Zach. #Logic
+ [[http://informatica.blogs.uoc.edu/2017/02/27/el-boom-de-la-inteligencia-artificial][El boom de la Inteligencia Artificial]]. #IA
+ [[http://www.principiamarsupia.com/2017/03/03/codifican-una-pelicula-en-adn-y-la-vuelven-a-recuperar/][Codifican una película en ADN y la vuelven a recuperar]]. | Principia Marsupia
  #Computación
+ [[http://science.sciencemag.org/content/355/6328/950][DNA Fountain enables a robust and efficient storage architecture]]. ~
  Y. Erlich, D. Zielinski #CompSci
+ [[https://www.newton.ac.uk/event/bprw01][Computer-aided mathematical proof]], Cambridge (England), 10-14 July 2017. #ITP
  #Logic #Math #CompSci
+ [[https://www.researchgate.net/profile/Bruno_Woltzenlogel_Paleo/publication/311456135_Analysis_of_an_Ontological_Proof_Proposed_by_Leibniz/links/5847ddee08ae8e63e6338e6f/Analysis-of-an-Ontological-Proof-Proposed-by-Leibniz.pdf][Analysis of an ontological proof proposed by Leibniz]]. ~ M. Bentert et
  als. #IsabelleHOL
+ [[http://www.nada.kth.se/~gkreitz/kattis-fie11/kattis-fie11.pdf][Five years with Kattis: using an automated assessment system in teaching]]. ~
  E. Enström et als. #Teaching #Programming
+ [[http://ltrc.iiit.ac.in/icon2016/proceedings/icon2016/pdf/W16-6310.pdf][Dependency grammars as Haskell programs]]. ~ T. Obrebski #Haskell 
+ [[http://orbit.dtu.dk/ws/files/128492094/document.pdf][First-order logic according to Harrison]]. ~ AB Jensen, A Schlichtkrull, J
  Villadsen #IsabelleHOL #Logic
+ [[http://d-nb.info/112663039X/34][Highly automated formal verification of arithmetic circuits]]. ~ A Sayed-Ahmed
  #PhD_thesis
+ [[https://technology.nasa.gov/NASA_Software_Catalog_2017-18.pdf][NASA Software Catalog 2017-2018]]. 
+ [[https://rjlipton.wordpress.com/2017/03/08/is-computer-security-possible/][Is computer security possible?]] ~ RJ Lipton, KW Regan #CompSci
+ [[http://www.cs.uu.nl/research/techreps/repo/CS-2017/2017-002.pdf][Structure-aware version control (A generic approach using Agda)]]. ~
  V. Cacciari, W. Swierstra #Agda #Haskell
+ [[https://www.media.mit.edu/posts/disobedience-award][Rewarding Disobedience]]. ~ MIT Media Lab 
+ [[http://www.fpcomplete.com/blog/2017/03/partial-patterns-do-blocks][Partial patterns in do blocks: let vs return]]. ~ M. Snoyman. #Haskell
+ [[https://www.inkandben.com/org-mode-resources][Emacs and Org mode resources]]. ~ Ben Elijah. #Emacs #OrgMode 
+ [[http://abstract.ups.edu/download/aata-20160809-sage-7.3.pdf][Abstract algebra: theory and applications]]. ~ T.W. Judson & R.A. Beezer #Math
  #Sage #eBook
+ [[http://elvishjerricco.github.io/2017/03/10/profunctors-arrows-and-static-analysis.html][Profunctors, arrows, & static analysis]]. ~ Will Fancher #Haskell 
+ [[http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2017-03.html#e2017-03-10T14_51_56.htm][Reading is a profoundly creative act]]. ~ E. Wallingford #Teaching #Learning 
+ [[http://informatica.blogs.uoc.edu/2017/03/09/inteligencia-artificial-algoritmos-geneticos/][Inteligencia artificial: algoritmos genéticos]]. ~ Daniel Riera #IA 
+ [[http://www.imn.htwk-leipzig.de/~waldmann/etc/untutorial/list-or-not-list][When you should use lists in Haskell (mostly, you should not)]]. ~ J. Waldmann
  #Haskell
+ [[http://duplode.github.io/posts/whats-in-a-fold.html][What's in a fold: The basic catamorphism in recursion-schemes]]. ~ Duplode
  #Haskell
+ [[https://arxiv.org/pdf/1703.00055][A monadic framework for relational verification (Functional pearl)]]. ~
  N. Grimm et als. #Fstar  
+ [[https://github.com/Michaelt293/isotope][Isotope: a chemistry library for calculating masses of elements and molecules]]. 
  ~ M. Thomas #Haskell 
+ [[https://www.johndcook.com/blog/2017/03/08/mathematical-balance-of-trade/][Mathematical balance of trade]]. ~ J.D. Cook. #Math
+ [[https://www.johndcook.com/blog/2017/03/09/how-areas-of-math-are-connected/][How areas of math are connected]]. ~ J.D. Cook. #Math 
+ [[https://www.scientificamerican.com/article/will-democracy-survive-big-data-and-artificial-intelligence/][Will democracy survive big data and artificial intelligence?]] ~ Dirk Helbing
  et als. #AI
+ [[http://arxiv.org/abs/1703.02819][Introduction to formal concept analysis and its applications in information
  retrieval and related fields]]. ~ D.I. Ignatov #AFC
+ [[https://gist.github.com/Sam-Serpoosh/f955fc5b5c670298160bbdc5b2d937da][Making a simple parametric Parser which is both a Functor and Applicative in
  Haskell!]]. ~ @sam2code #Haskell
+ [[https://jfr.unibo.it/article/download/6237/6566][Formalizing restriction categories]]. ~ J. Chapman, T. Uustalu & N. Veltri #ITP
  #Agda
+ [[https://wiki.haskell.org/Haskell_programming_tips][Haskell programming tips]]. ~ HaskellWiki #Haskell
+ [[https://github.com/skaslev/why-types/blob/master/why-types.pdf][Why types matter]]. ~ Slavomir Kaslev. #Haskell #Logic #CompSci
+ [[http://andrew.gibiansky.com/blog/haskell/haskell-syntax][Intro to Haskell syntax]]. ~ Andrew Gibiansky #Haskell 
+ [[http://andrew.gibiansky.com/blog/haskell/haskell-gloss/][Your first Haskell application (with Gloss)]]. ~ Andrew Gibiansky #Haskell 
+ [[http://andrew.gibiansky.com/blog/haskell/haskell-typeclasses/][Typeclasses: Polymorphism in Haskell]]. ~ Andrew Gibiansky #Haskell 
+ [[http://andrew.gibiansky.com/blog/haskell/haskell-abstractions/][Abstraction in Haskell (Monoids, Functors, Monads)]]. ~ Andrew Gibiansky
  #Haskell
+ [[https://bartoszmilewski.com/2017/03/14/algebras-for-monads/][Algebras for Monads]]. ~ Bartosz Milewski. #Haskell
+ [[https://wiki.haskell.org/Performance][The Haskell Performance Resource: the collected wisdom on how to make your Haskell programs go faster]]. ~ HaskellWiki #Haskell 
+ [[https://www.isa-afp.org/entries/Euler_MacLaurin.shtml][The Euler–MacLaurin formula in Isabelle/HOL]]. ~ Manuel Eberl #ITP #IsabelleHOL
  #Math
+ [[http://www.cs.us.es/~fsancho/?e=169][Fundamentos matemáticos del aprendizaje (I)]]. ~ F. Sancho. #IA  
+ [[https://jpvillaisaza.github.io/2017/03/14/minimal-cabal-files][Minimal Cabal files]]. ~ J.P. Villa. #Haskell 
+ [[https://www.fpcomplete.com/blog/2013/06/haskell-from-c][Haskell from C: Where are the for Loops? ~ C]]. Scherrer #Haskell 
+ [[http://kaygun.tumblr.com/post/158387923879][My first Idris proof]]. ~ A. Kaygun. #Idris 
+ [[http://wadler.blogspot.com/2017/03/papers-we-love-john-reynolds.html][Papers We Love: John Reynolds, Definitional interpreters for Higher-Order Languages, now in Haskell]]. #Haskell
+ [[http://matryoshka.gforge.inria.fr/pubs/processing_report.pdf][An efficient proof-producing framework for formula processing]]. ~ H. Barbosa,
  J.C. Blanchette, P. Fontaine #IsabelleHOL
+ [[http://hbtvl.banquise.net/series/Gamebook%20solver.html][Solving a game book, as blog post series about modelling and optimization]]. ~ @bartavelle #Haskell
+ [[https://vanemden.wordpress.com/2017/03/18/children-of-the-miracle-from-algol-to-prolog/][Children of the miracle: from Algol to Prolog]]. ~ Maarten van Emden
  #Programming #History
+ [[https://kunigami.blog/2017/03/18/amortization-and-persistence-via-lazy-evaluation/][Amortization and persistence via lazy evaluation]]. ~ G. Kunigami.
  #DataStructures #OCaml
+ [[https://arxiv.org/pdf/1703.06133][Fully mechanized proofs of Dilworths theorem and Mirskys theorem]]. ~ Abhishek
  Kr Singh #ITP #Coq #Math
+ [[http://www.tcs.tifr.res.in/~abhishek/itp_slides.pdf][Interactive theorem proving in Coq and the Curry-Howard isomorphism]]. ~
  Abhishek Kr Singh #ITP #Coq #Math
+ [[https://slawekk.wordpress.com/2017/03/20/isarmathlib-updated-to-isabelle2016-1][IsarMathLib (a library of formalized mathematics) updated to Isabelle2016-1]].
  #ITP #Isabelle #Math
+ [[http://www.seas.upenn.edu/~sweirich/papers/systemd-submission.pdf][A specification for dependently-typed Haskell]]. ~ S. Weirich et als. #Haskell
  #Coq
+ [[https://hal.inria.fr/hal-01483457/document][Formalization of the arithmetization of euclidean plane geometry and
  applications]]. ~ P Boutry, G Braun, J Narboux #ITP #Coq #Math
+ [[https://hal.inria.fr/hal-01178236v2/document][Parallel postulates and continuity axioms: a mechanized study in
  intuitionistic logic using Coq]]. ~ P. Boutry et als, #Coq
+ [[https://mpickering.github.io/posts/2017-03-20-inlining-and-specialisation.html][Inlining and specialisation]]. ~ Matthew Pickering #Haskell  
+ [[https://elvishjerricco.github.io/2017/03/23/applicative-sorting.html][Applicative sorting]]. ~ Will Fancher. #Haskell 
+ [[https://hackernoon.com/obey-the-type-laws-ffb2fa4e5fe2#.gydph3pa1][Obey the (type) laws!]] ~ James Bowen #Haskell 
+ [[https://github.com/noschinl/cyp][CYP (short for "Check Your Proof") verifies proofs about Haskell-like
  programs]]. ~ L. Noschinski #Haskell #Logic
+ [[http://www.open.ou.nl/hjo/papers/itasec17.pdf][Analysing privacy analyses]]. ~ G Bella, D Butin, H Jonker #IsabelleHOL 
+ [[http://kseo.github.io/posts/2017-01-30-type-level-insertion-sort.html][Type-level insertion sort]]. ~ Kwang Yul Seo. #Haskell 
+ [[https://torchhound.github.io/posts/haskellOneSentence.html][Haskell concepts in one sentence]]. ~ Joseph Cieslik #Haskell 
+ [[https://www.theatlantic.com/technology/archive/2017/03/aristotle-computer/518697/][How Aristotle created the computer]]. ~ Chris Dixon #History #CompSci #Logic 
+ [[http://computers-are-fast.github.io/][Do you know how much your computer can do in a second?]] ~ @kamalmarhubi @b0rk
  #Programming
+ [[https://openlibra.com/book/category-theory-for-the-sciences][Category theory for the sciences]]. ~ David I. Spivak #eBook #Math #CompSci 
+ [[https://www.slideshare.net/JR0cket/thinking-functionally-with-clojure][Thinking functionally with Clojure]]. ~ J. Stevenson. #FP #Clojure 
+ [[http://lambda-the-ultimate.org/node/5419][Logic Production Systems (LPS)]]: A new mixed logic/imperative programming
  language. ~ Bob Kowalski and Fariba Sadri. #Logic #Programming
+ [[http://cj-xu.github.io/notes/dst_implementation.pdf][Towards an implementation of a functional interpretation for nonstandard
  arithmetic]]. ~ C. Xu #ITP #Agda #Math
+ [[https://mmhaskell.com/blog/2017/3/27/learning-to-learn-haskell][Learning to learn Haskell]]. ~ James Bowen. #Haskell  
+ [[https://www.slideshare.net/cover_drive/category-theory-made-easy-with-ugly-pictures-73745930][Category theory made easy with (ugly) pictures]]. ~ Ashwin Rao #Haskell #Math 
+ [[https://m.genbeta.com/a-fondo/22-trucos-para-ser-un-ninja-de-ubuntu][22 trucos para ser un ninja de Ubuntu]]. 
+ [[http://www2.mmu.ac.uk/media/mmuacuk/content/documents/computing/tmt17/CircularFunctions.pdf][An axiomatic formalisation of trigonometric functions in Isabelle]]. ~
  I.I. Morris #ITP #IsabelleHOL #Math  
+ [[http://dl.acm.org/ft_gateway.cfm?id=3051092&ftid=1861711&dwn=1&CFID=918158185&CFTOKEN=56807169][Certifying a file system using Crash Hoare Logic: correctness in the presence
  of crashes]]. ~ T. Chajed et als. #Coq
+ [[https://openlibra.com/book/mathematical-reasoning-writing-and-proof][Mathematical reasoning. Writing and proof]]. ~ T. Sundstrom #eBook #Math 

* Abril 2017

+ [[http://www.proofpeer.net/papers/proofscript/proofscript.pdf][ProofScript: Proof scripting for the masses]]. ~ S. Obua, P. Scott, J. Fleuriot
  #ProofScript
+ [[https://arxiv.org/pdf/1404.6186][ProofPeer: Collaborative theorem proving]]. ~ S. Obua, J. Fleuriot, P. Scott,
  D. Aspinall #ITP #ProofPeer
+ [[https://github.com/proofpeer/proofpeer-proofscript/wiki][ProofScript: the language component of ProofPeer]]. 
+ [[https://arxiv.org/pdf/1703.09620][Universal reasoning, rational argumentation and human-machine interaction]]. ~
  C. Benzmüller #ITP
+ [[https://www.irif.fr/_media/seminaires/irif/sem_irif_20170303_katoen.pdf][Principles of probabilistic programming]]. ~ J.P. Katoen
+ [[https://www.cas.mcmaster.ca/~lawford/papers/Formalise17MooreLawford.pdf][Correct safety critical hardware descriptions via static analysis and theorem
  proving]]. ~ N. Moore, M. Lawford #ITP #PVS
+ [[https://blog.jle.im/entry/verified-instances-in-haskell.html][Verify your typeclass instances in Haskell today!]] ~ Justin Le #Haskell 
+ [[http://arxiv.org/abs/1703.10977][Formalization of some central theorems in combinatorics of finite sets]]. ~
  A.K. Singh #ITP #Coq #Math
+ [[https://josejuan.github.io/posts/2017-04-02-lazy-priority-heap.html][Lazy priority heap]]. @__josejuan__ #Haskell 
+ [[https://opensource.com/article/17/4/introduction-functional-programming][Introduction to functional programming]]. ~ Fraser Tweedale. #Haskell #OCaml
  #Scala
+ [[http://kenta.blogspot.com.es/2017/04/cpsjxejd-implementing-goodstein.html][Implementing Goodstein]]. ~ Ken T Takusagawa #Haskell 
+ [[https://www.isa-afp.org/entries/Random_BSTs.shtml][Expected shape of random binary search trees in Isabelle/HOL]]. ~ M. Eberl
  #IsabelleHOL #Algorithms
+ [[http://www.jotdown.es/2017/04/la-carrera-ordenador-cuantico/][La carrera por el ordenador cuántico]]. ~ D. Manzano #Computación 
+ [[https://gilkalai.wordpress.com/2017/04/03/the-race-to-quantum-technologies-and-quantum-computers-useful-links/][The race to quantum technologies and quantum computers (useful links)]]. ~ Gil
  Kalai #CompSci
+ [[https://www.metalevel.at/prolog][The power of Prolog]]. ~ Markus Triska #eBook #Prolog 
+ [[https://functor.tokyo/blog/2017-04-07-undecidable-instances][When is UndecidableInstances safe?]] ~ Dennis Gosnell. #Haskell
+ [[https://medium.com/position-development-blog/2-2-5-and-why-compiler-warnings-are-good-e50bc5cfab22][2 + 2 = 5... !? and why compiler warnings are good]]. ~ @jezenthomas #Haskell 
+ [[https://github.com/hansroland/reflex-dom-inbits/blob/84189eb93f87060a1bfa9128ffea43447a2d5c8f/tutorial.md][A beginner-friendly step by step tutorial for Reflex-Dom]]. #Haskell
+ [[http://www.acceleratehs.org][Accelerate: High-performance parallel arrays for Haskell]]. #Haskell
+ [[https://colah.github.io/posts/2015-09-NN-Types-FP][Neural networks, types, and functional programming]]. ~ C. Olah. #Haskell
+ [[https://www.isa-afp.org/entries/Subresultants.shtml][The theory of subresultants and the subresultant polynomial remainder
  sequence in Isabelle/HOL]]. ~ S. Joosten et als. #IsabelleHOL
+ [[http://fm.csl.sri.com/SSFT16/speaklogicV6.pdf][Speaking Logic]] (propositional, modal, equational, first-order, and
  higher-order logic). ~ N. Shankar #Logic
+ [[http://fm.csl.sri.com/SSFT16/Main.pdf][Type theory]] (in "Sixth Summer School on Formal Techniques"). ~ Stéphane
  Graham-Lengrand #Logic #CompSci
+ [[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.296.8782&rep=rep1&type=pdf][Automated deduction for verification]]. ~ N. Shankar #ATP #ITP #Logic #CompSci
+ [[http://fm.csl.sri.com/SSFT16/slides.pdf][Satisfiability Modulo Theories]]. ~ Clark Barrett #Logic #CompSci
+ [[http://blog.sigfpe.com/2006/01/eleven-reasons-to-use-haskell-as.html][Eleven reasons to use Haskell as a mathematician]]. ~ Dan Piponi.
  #Haskell #Math
+ [[http://ijmcs.info/current_issue/IJMCS170233.pdf][Evolution and adoption of programming languages]]. ~ A. Jain, M. Gupta
  #Programming
+ [[https://www.metalevel.at/ediprolog/][ediprolog: Emacs does interactive Prolog]]. ~ Markus Triska #Emacs #Prolog 
+ [[http://cs.ioc.ee/~niccolo/msfp16.pdf][Variations on noetherianness]]. ~ D. Firsov, T. Uustalu, N. Veltri #ITP #Agda
  #Math
+ [[https://theorylunch.wordpress.com/2013/12/03/natural-numbers-with-addition-form-a-monoid][Natural numbers with addition form a monoid]]. ~ James Chapman #Tutorial #Agda 
+ [[https://jeltsch.wordpress.com/2013/04/18/miu-in-haskell][MIU (puzzle from Douglas Hofstadter’s book "Gödel, Escher, Bach") in
  Haskell]]. ~ Wolfgang Jeltsch #Haskell #Logic
+ [[https://jeltsch.wordpress.com/2016/02/22/generic-programming-in-haskell][Generic programming in Haskell]]. ~ Wolfgang Jeltsch #Haskell 
+ [[http://cs.ioc.ee/~tarmo/tsem11/jeltsch1904-slides.pdf][An introduction to category theory and categorical logic]]. ~ Wolfgang Jeltsch
  #Logic
+ [[https://jeltsch.wordpress.com/2012/04/30/dependently-typed-programming-and-theorem-proving-in-haskell/][Dependently typed programming and theorem proving in Haskell]].~ Wolfgang
  Jeltsch #Logic #Haskell #Agda
+ [[https://mmhaskell.com/blog/2017/4/4/bayhac-summary][BayHac (the Bay Area Haskell Hackathon) 2017 summary!]] ~ James Bowen
  #Haskell
+ [[https://cdsmith.wordpress.com/2017/04/11/codeworld-and-summer-of-haskell-2017][CodeWorld and Summer of Haskell 2017]]. ~ Chris Smith #Haskell 
+ [[https://summer.haskell.org][Summer of Haskell 2017]]. #Haskell 
+ [[https://arxiv.org/pdf/1703.10857][Profunctor optics (modular data accessors)]]. ~ M Pickering, J Gibbons, N Wu
  #Haskell
+ [[https://www.autodraw.com][AutoDraw: Fast drawing for everyone]]. #AI #ML
+ [[https://www.cnet.com/es/noticias/autodraw-de-google-como-se-usa][Cómo convertirte en un artista con Autodraw de Google]]. ~ M. Marcaletti
  #IA #AutoDraw
+ [[http://www.cs.ru.nl/~herman/PUBS/IntroTT.pdf][Introduction to type theory]]. ~ Herman Geuvers #Math #Logic 
+ [[http://eli.thegreenplace.net/2017/on-recursion-continuations-and-trampolines/][On recursion, continuations and trampolines]]. ~ Eli Bendersky. #Python
  #Clojure
+ [[http://www.i-programmer.info/programming/other-languages/1706-a-programmers-guide-to-r.html][A programmer's guide To R: The vector, vector expressions & attributes]]. ~
  Mike James #RStats
+ [[https://speakerdeck.com/holgerpeters/data-science-python-and-the-functional-programming-revolution][Data science, Python and the functional programming revolution]]. ~ Holger
  Peters #DataScience #Python #FuncionalProgramming
+ [[https://www.safaribooksonline.com/library/view/functional-programming-in/9781484227466/?utm_source=twitter.com&utm_medium=social&utm_campaign=newsafaribooks][Functional programming in R: Advanced statistical programming for data
  science, analysis and finance]]. ~ Thomas Mailund #RStats
+ [[https://github.com/adelbertc/bayhac17][All about Applicative]]. ~ Adelbert Chang #Haskell 
+ [[http://jelv.is/blog/Lazy-Dynamic-Programming][Lazy dynamic programming]]. ~ Tikhon Jelvis #Haskell 
+ [[https://github.com/nstack/nstack][NStack: Composable, typed streams and microservices for data
  analytics]]. #Haskell #DataScience
+ [[https://github.com/jyp/dante][Dante: Emacs mode for Interactive Haskell]]. ~ Jean-Philippe Bernardy #Haskell
  #Emacs
+ [[http://cs.brynmawr.edu/~rae/courses/17spring380/index.html][Modern functional programming]]. ~ R. Eisenberg #Haskell #Course 
+ [[http://cs.brynmawr.edu/~rae/papers/2016/thesis/eisenberg-thesis.pdf][Dependent types in Haskell: theory and practice]]. ~ R.A. Eisenberg #PhD_Thesis
  #Haskell
+ [[https://docs.google.com/presentation/d/1Zc2A7nkpuxnCRlILPeKRJCWIqv-gtsMJIizDQ9a3vPo/view#slide=id.g1d46100280_0_0][CodeWorld: The why, what, and how of teaching Haskell to children]]. ~ Chris
  Smith #Haskell
+ [[http://cid.uni-trier.de/index.php/about][CID project: Computing with Infinite Data]]. #CompSci #Logic #Math 
+ [[https://github.com/halfaya/BayHac/raw/master/slides/bayhac.pdf][Dependent types in GHC]]. ~ J. Leo #Haskell 
+ [[https://docs.google.com/presentation/d/1tLCWCx-5vNmAmBf1AiYg-VJoTR3W-6rcmRHhQnPTq-g/edit#slide=id.p][TensorFlow Haskell API]]. ~ J. Jacobson, F. Mayle, G. Steuck #Haskell 
+ [[https://www.dropbox.com/s/lasx6zxkoe07jyq/AdjunctionsHaskell.pdf?dl=0][Adjunctions in everyday life (Or: what we talk about when we talk about
  monads)]]. ~ Rúnar Bjarnason #Haskell
+ [[http://reasonablypolymorphic.com/dont-eff-it-up][Don't eff it up: freer monads in action]]. ~ Sandy Maguire #Haskell 
+ [[https://github.com/ucsd-progsys/elsa][Elsa: a lambda calculus evaluator]]. ~ R. Jhala #Haskell #Logic 
+ [[https://arxiv.org/pdf/1704.03391][Testing a saturation-based theorem prover: Experiences and challenges]]. ~
  G. Reger, M. Suda, A. Voronkov #ATP #Logic
+ [[https://arxiv.org/pdf/1704.03202][Symbolic computation and automated reasoning for program analysis]]. ~
  L. Kovacs #ATP
+ [[https://github.com/jpvillaisaza/cain/raw/master/docs/cain.pdf][Category theory applied to functional programming]] [PDF]. ~ J.P. Villa
  #Haskell #Agda #Math #eBook
+ [[https://github.com/jpvillaisaza/abel][Category theory applied to functional programming]] [Code]. ~ J.P. Villa
  #Haskell #Agda #Math #eBook
+ [[http://www.fpcomplete.com/blog/2017/04/pure-functional-programming][What pure functional programming is all about: Part 1]]. ~ Chris Done #Haskell
  #FP
+ [[https://cses.fi/book.pdf][Competitive programmer's Handbook]]. ~ A. Laaksonen #Programming 
+ [[https://eiriktsarpalis.wordpress.com/2017/04/02/programming-in-the-point-free-style][Programming in the point-free style]]. ~ Eirik Tsarpalis #PF #Fsharp 
+ [[http://teh.id.au/posts/2017/03/29/these-align-crosswalk/index.html][These, Align, and Crosswalk]]. ~ Tim Humphries #Haskell 
+ [[https://github.com/hedgehogqa/haskell-hedgehog][Hedgehog: a modern property-based testing system, in the spirit of QuickCheck]]. #Haskell
+ [[http://www.cs.nott.ac.uk/~psztxa/g53cfr/][Computer aided formal reasoning]]. ~ T. Altenkirch #ITP #Agda 
+ [[https://arxiv.org/pdf/1704.02253][Formalizing mathematical knowledge as a biform theory graph: a case study]]. ~
  J. Carette, W.M. Farmer #ITP #Agda
+ [[http://ucsd-pl.github.io/veridrone/papers/ricketts-dissertation.pdf][Verification of sampled-data systems using Coq]]. ~ D. Ricketts #PhD_Thesis
  #Coq
+ [[https://mmhaskell.com/blog/2017/4/17/haskell-and-deliberate-practice][Haskell and deliberate practice]]. ~ James Bowen #Haskell
+ [[https://ro-che.info/articles/2016-04-02-descending-sort-haskell][Descending sort in Haskell]]. ~ R. Cheplyaka #Haskell
+ [[http://semantic.org/post/there-is-no-haskell-topology][There is no Haskell topology]]. ~ Semantic Dreams #Haskell #Math
+ [[https://hal.archives-ouvertes.fr/hal-01505598/document][A Coq tactic for equality learning in linear arithmetic]]. ~ S. Boulmé,
  A. Maréchal #ITP #Coq #Math
+ [[http://newartisans.com/2017/04/haskell-and-z3][Submitting Haskell functions to Z3]]. ~ John Wiegley #Haskell  
+ [[https://youtu.be/E2vE0RQ5eLk][SAS para aprendizaje automático y Haskell para ciencia de datos]]. #Haskell
  #DataScience  
+ [[https://idontgetoutmuch.wordpress.com/2017/04/18/trouble-with-tribbles][Trouble with Tribbles]]. ~ Dominic Steinitz #Haskell 
+ [[http://informatica.blogs.uoc.edu/2017/04/20/computacion-cuantica-i-el-fin-de-los-ordenadores-clasicos][Computación cuántica (I): el fin de los ordenadores clásicos]]. ~ Robert
  Clarisó #Computación
+ [[https://youtu.be/IKm-YYPaohQ][Modern software development with Haskell]]. ~ Runar Bjarnason #Haskell
+ [[http://jvns.ca/blog/2017/04/17/statistics-for-programmers/][Some good "Statistics for programmers" resources]]. ~ Julia Evans
  #Statistics #Programming
+ [[https://youtu.be/zYg-Uywz9YM][Introducción a Elm a través de sistemas de tipos]]. ~ @anler #Elm
  #FunctionalProgramming
+ [[https://arxiv.org/pdf/1704.05320][EPTL: A temporal logic for weakly consistent systems]]. ~ M Weber, A Bieniusa,
  A Poetzsch-Heffter #IsabelleHOL #Logic
+ [[http://akc.is/hops][HOPS: a DSL for power series and integer sequences]]. ~ Anders Claesson
  #Haskell #Math
+ [[https://hackage.haskell.org/package/codeworld-api-0.2.1.0][CodeWorld-API: Graphics library for CodeWorld]]. ~ Chris Smith #Haskell
  #CodeWorld
+ [[http://ucsd-progsys.github.io/liquidhaskell-blog/2016/10/06/structural-induction.lhs/][Refinement reflection on ADTs: Lists are Monoids]]. ~ Niki Vazou
  #Haskell #LiquidHaskell
+ [[https://youtu.be/GgD0KUxMaQs][The influence of dependent types]]. ~ Stephanie Weirich #Haskell 
+ [[https://queertypes.com/posts/59-applicatives-alternatives.html][Applicatives and Alternatives]]. ~ @queertypes #Haskell 
+ [[http://kar.kent.ac.uk/61349/1/158thesis.pdf][Solvers for type recovery and decompilation of binaries]]. ~ Ed Robbins
  #PhD_Thesis #SMT #CHR
+ [[http://stackoverflow.com/questions/43525193/how-can-i-re-assign-a-variable-in-a-function-in-haskell/43526565#43526565][Haskell is a great imperative language]]. ~ Chris Martin #Haskell
+ [[http://dev.stephendiehl.com/fun/lambda_calculus.html][Lambda calculus in Haskell]]. ~ S. Diehl #Haskell #Logic 
+ [[http://matt.might.net/articles/implementing-a-programming-language][7 lines of code, 3 minutes: Implement a programming language from scratch]]. ~
  Matthew Might #Racket
+ [[https://techiedelight.quora.com/500-Data-structures-and-algorithms-interview-questions-and-their-solutions][500 Data structures and algorithms interview questions and their solutions]]. ~
  Vivek Srivastava #Programming
+ [[https://youtu.be/7CGuI9HcfqQ][CodeWorld: Teaching Haskell to childre (Video)]]. ~ Chris Smith #Haskell
+ [[https://youtu.be/ZJvHOpMnvpE][How to create a new Haskell project (Video)]] ~ G. Gonzalez #Haskell
+ [[https://github.com/Gabriel439/slides/tree/master/bayhac2017][How to create a new Haskell project (Slides)]] ~ G. Gonzalez #Haskell
+ [[https://arxiv.org/pdf/1704.04558][Verifying safety of functional programs with Rosette/Unbound]]. ~ D Mordvinov,
  G Fedyukovich #Verification #FuncionalProgramming
+ [[http://www.staff.science.uu.nl/~swier004/talks/2017-utrecht.pdf][QuickCheck: a lightweight tool for random testing Haskell programs]]. ~
  W. Swierstra #Haskell #QuickCheck
+ [[http://informatica.blogs.uoc.edu/2017/04/24/computacion-cuantica-ii-un-nuevo-paradigma/][Computación cuántica (II): un nuevo paradigma]]. ~ Robert Clarisó
  #Computación
+ [[https://arxiv.org/pdf/1704.05124][The pebbling comonad in finite model theory]]. ~ S Abramsky, A Dawar, P Wang
  #Logic #FunctionalProgramming
+ [[https://purelyfunctional.tv/article/why-functional-programming][Why functional programming? (11 reasons to learn functional
  programming)]]. #FunctionalProgramming
+ [[https://tonyday567.github.io/naperian][Naperian tensors]]. #Haskell
+ [[http://www.staff.science.uu.nl/~swier004/Publications/XmonadInCoq.pdf][xmonad in Coq (experience report): Programming a window manager with a proof assistant]]. ~ W. Swierstra #Coq #Haskell
+ [[http://clrnd.com.ar/posts/2017-04-21-the-water-jug-problem-in-hedgehog.html][The water jug problem in Hedgehog]]. ~ E.A. Alvarez #Haskell
+ [[https://jaxenter.com/eta-pirates-of-the-jvm-133518.html][Functional programming made easy: Here comes Eta]]. #FunctionalProgramming
+ [[https://t.co/0NP0kLGwCe][Improving Haskell types with SMT]]. I.S. Diatchki #Haskell #SMT
+ [[http://www.staff.science.uu.nl/~swier004/publications/2017-scp.pdf][Embedding the refinement calculus in Coq]]. ~ J. Alpuim, W. Swierstra #Coq
+ [[http://doisinkidney.com/posts/2017-04-23-verifying-data-structures-in-haskell-lhs.html][Verifying data structures in Haskell]]. ~ D.O. Kidney #Haskell 
+ [[http://www.parsonsmatt.org/2017/04/26/basic_type_level_programming_in_haskell.html][Basic type level programming in Haskell]]. ~ @mattoflambda #Haskell 
+ [[http://www.staff.science.uu.nl/~swier004/publications/2016-ifl-draft.pdf][Structure-aware version control: A generic approach using Agda]]. ~
  V. Cacciari, W. Swierstra #Agda #Haskell
+ [[https://github.com/antalsz/hs-to-coq][hs-to-coq: Convert Haskell source code to Coq source code]]. ~ Antal
  Spector-Zabusky #Haskell #Coq
+ [[https://terrytao.wordpress.com/2017/04/13/counting-objects-up-to-isomorphism-groupoid-cardinality/][Counting objects up to isomorphism: groupoid cardinality]]. ~ T. Tao #Math 
+ [[https://blogs.scientificamerican.com/guest-blog/programming-as-a-way-of-thinking][Programming as a way of thinking]]. ~ A. Downey #Programming #Python
+ [[http://aitp-conference.org/2017/aitp17-proceedings.pdf][AITP 2017: The Second Conference on Artificial Intelligence and Theorem
  Proving. (Abstracts of the talks)]]. #AI #ATP #ITP
+ [[http://www-formal.stanford.edu/jmc/basis1.pdf][A basis for a mathematical theory of computation]]. ~ J. McCarthy #Math
  #CompSci  
+ [[http://aitp-conference.org/2017/slides/JH.pdf][What has Artificial Intelligence ever done for us? (formalizers)]]. ~
  J. Harrison #AI #ATP #ITP
+ [[http://aitp-conference.org/2017/slides/StSDeep.pdf][Deep reasoning: a vision for automated deduction]]. ~ S. Schulz #AI #ATP
+ [[http://aitp-conference.org/2017/slides/Tim_aitp.pdf][Deep Prolog: End-to-end differentiable proving in knowledge bases]]. ~
  T. Rocktäschel #DeepLearning #Prolog
+ [[https://specfun.inria.fr/seminar/20170306-DamienRouhling.pdf][Refinement: a reflection on proofs and computations]]. ~ C. Cohen & D. Rouhling
  #Coq
+ [[https://specfun.inria.fr/seminar/20160314-PierreBoutry.pdf][On the formalization of foundations of Tarski's system of geometry]]. ~ P
  Boutry #Math #Coq
+ [[https://lexi-lambda.github.io/blog/2017/04/28/lifts-for-free-making-mtl-typeclasses-derivable/][Lifts for free: making mtl typeclasses derivable]]. ~ Alexis King #Haskell
+ [[https://github.com/dylanmc/CryptoBook][Learning Cryptography, math and programming with Cryptol]]. ~ Dylan McNamee
  #Math #Haskell #Cryptol
+ [[http://www.findstat.org][FindStat: The Combinatorial Statistic Finder]]. ~ M. Rubey, C. Stump, et
  als. #Programming #Math  
+ [[http://www.lmfdb.org][LMFDB: an extensive database of mathematical objects arising in Number Theory]].
  #Math 
+ [[http://aitp-conference.org/2017/slides/MK_aitp17.pdf][Tapping sources of Mathematical (Big) Data]]. ~ M. Kohlhase #MKM
+ [[http://wiki.c2.com/?LazinessImpatienceHubris][Laziness, impatience, hubris]] Larry Wall (Programming Perl) #Quote
  #Programming  
+ [[https://arxiv.org/pdf/1606.04422][Logic tensor networks: Deep learning and logical reasoning from data and
  knowledge]]. ~ L. Serafini & A. d'Avila #Logic #DeepLearning
+ [[http://aitp-conference.org/2017/slides/David_AITP.pdf][What can logic do for AI?]] ~ David McAllester #Logic #AI 
+ [[http://matryoshka.gforge.inria.fr/pubs/bentkamp_msc_thesis.pdf][An Isabelle formalization of the expressiveness of deep learning]]. ~
  A. Bentkamp #MsC_Thesis #IsabelleHOL #DeepLearning
+ [[http://metameso.org/~joe/docs/aitp-math-wiki-2pp.pdf][math.wikipedia.org: A vision for a collaborative semi-formal, language
  independent math(s) encyclopedia]]. ~ J. Corneli & M. Schubotz
+ [[https://www.sci.unich.it/gncs2017/slides/urban.pdf][Learning-assisted theorem proving and formalization]]. ~ J. Urban #AI #ATP #ITP
+ [[http://aitp-conference.org/2017/slides/BVJJ.pdf][Towards AI methods for clause selection]]. ~ J. Jakubův, J. Urban & B. Veroff
  #AI #ATP #Logic

* Mayo 2017

+ [[http://matryoshka.gforge.inria.fr/pubs/deep_learning_paper.pdf][A formal proof of the expressiveness of deep learning]]. ~ A. Bentkamp,
  J.C. Blanchette & D. Klakow #IsabelleHOL #DeepLearning
+ [[https://github.com/cydparser/demo-emacs-haskell][A tutorial for using Emacs with Haskell projects]]. #Haskell #Emacs 
+ [[https://crunchytype.wordpress.com/2017/04/27/quotient-inductive-types-their-dual/][Quotient inductive types & their dual]]. #Haskell 
+ [[https://speakerdeck.com/proger/the-programming-language-of-mathematics][The programming language of mathematics]]. ~ Vladimir Kirillov #Math 
+ [[https://arxiv.org/pdf/1610.01044][DeepAlgebra: an outline of a program]]. ~ P. Chojecki #ITP #Coq #Math  
+ [[http://logicaltypes.blogspot.com.es/2017/05/april-2017-1haskelladay-problems-and.html][April 2017 1HaskellADay problems and solutions]]. ~ @geophf | Typed Logic
  #Haskell #1HaskellADay
+ [[https://wit.ai/blog/2017/05/01/new-duckling][Open Sourcing our new Duckling (more Haskell at Facebook)]]. ~ Team Wit
  #Haskell
+ [[https://github.com/alexprengere/FormalSystems][A Python implementation of Douglas Hofstadter formal systems, from his book
  "Gödel, Escher, Bach"]]. #Logic #Python
+ [[https://mmhaskell.com/blog/2017/4/10/putting-your-haskell-to-the-test][Putting your Haskell to the test!]] ~ James Bowen #Haskell 
+ [[https://github.com/filopodia/open][Filopodia: open source projects, mostly related to data science, machine
  learning and statistics in Haskell]]. #Haskell #DataScience
+ [[https://www.isa-afp.org/entries/Types_Tableaus_and_Goedels_God.shtml][Types, tableaus and Gödel’s God in Isabelle/HOL]]. ~ D. Fuenmayor &
  C. Benzmüller #IsabelleHOL #Logic
+ [[https://metarabbit.wordpress.com/2017/05/02/i-tried-haskell-for-5-years-and-heres-how-it-was][I tried Haskell for 5 years and here’s how it was]]. ~ L.P. Coelho #Haskell
+ [[https://arxiv.org/pdf/1703.09620 ][Universal reasoning, rational argumentation and human-machine interaction]]. ~
  C. Benzmüller #ITP #Logic 
+ [[https://youtu.be/cIX3WVO48RY][Functional programming and proving in Isabelle/HOL]]. ~ A. Lochbihler
  #FunctionalProgramming #IsabelleHOL
+ [[http://ftp.cs.wisc.edu/pub/techreports/1986/TR660.pdf][Using mathematical induction to design computer algorithms]]. ~ U. Manber
  #Algorithms
+ [[https://github.com/facebookincubator/duckling][Duckling: Language, engine, and tooling for expressing, testing, and
  evaluating composable language rules on input strings]]. #Haskell
+ [[http://projects.haskell.org/graphviz][The graphviz library: Bindings Haskell to Graphviz for graph visualisation]]. ~
  M. Sackman & I.L. Miljenovic #Haskell #Graphviz
+ [[https://github.com/NorfairKing/haphviz][Haphviz: Graphviz code generation with Haskell]]. #Haskell #Graphviz 
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ACL2Workshop2017.2.pdf ][The Cayley-Dickson construction in ACL2]]. ~ J. Cowles & R. Gamboa #ACL2 #ITP
  #Math
+ [[https://openlibra.com/book/tecnicas-de-diseno-de-algoritmos][Técnicas de diseño de algoritmos]]. ~ R. Guerequeta y A. Vallecillo #Libro
  #Algorítmica
+ [[https://www.cs.cornell.edu/courses/cs3110/2017sp/lecture_notes.php][Course "Data structures and functional programming": Lecture notes]]. ~
  R.L. Constable #FunctionalProgramming #OCaml
+ [[https://arxiv.org/pdf/1704.06781][Homotopy Type Theory in Lean]]. ~ U. Buchholtz, F. van Doorn & J. von Raumer
  #ITP #Lean #HoTT  
+ [[http://newartisans.com/2017/05/monads-are-monoids][Monads are monoid objects]]. ~ J. Wiegley #ITP #Coq 
+ [[https://twdkz.wordpress.com/2013/05/31/data-analysis-with-monoids][Data analysis with Monoids]]. ~ Tim Docker #Haskell 
+ [[http://bitemyapp.com/posts/2017-05-03-what-a-haskell-study-group-is-not.html][What a Haskell study group is not]]. ~ Steven Syrek #Haskell 
+ [[https://medium.com/@sjsyrek/some-notes-on-haskell-pedagogy-de43281b1a5c][Some notes on Haskell pedagogy]]. ~ Steven Syrek #Haskell 
+ [[https://www.isa-afp.org/entries/MonoidalCategory.shtml][Monoidal categories in Isabelle/HOL]]. ~ E.W. Stark #ITP #IsabelleHOL #Math
+ [[http://slepnev.blogspot.com.es/2017/05/a-puzzle-about-game-review-scoring-in.html][A puzzle about game review scoring in Haskell]]. ~ Vladimir Slepnev #Haskell 
+ [[https://hal.archives-ouvertes.fr/hal-01512417/document][Formal verification of a floating-point expansion renormalization algorithm]]. ~
  S. Boldo et als. #ITP #Coq #Math
+ [[http://neilmitchell.blogspot.com.es/2017/05/proving-stuff-with-idris.html][Proving stuff with Idris]]. ~ Neil Mitchell #Idris #Haskell 
+ [[https://hal.inria.fr/hal-01512286/document][A formally verified compiler for Lustre]]. ~ T. Bourke et als. #Coq 
+ [[https://crunchytype.wordpress.com/2017/05/07/let-idris-take-care-of-you-variable-binding/][Let Idris take care of you: variable binding]]. | Crunchy Type #Idris #Haskell 
+ [[https://mail.haskell.org/pipermail/haskell-cafe/2017-May/127032.html][New release of SBV (a library for seamlessly integrating SMT solvers with
  Haskell), now with optimization]]. ~ L. Erkok #Haskell #SMT
+ [[https://www.isa-afp.org/entries/Floyd_Warshall.shtml][The Floyd-Warshall algorithm for shortest paths in Isabelle/HOL]]. ~ S. Wimmer
  & P. Lammich #IsabelleHOL
+ [[https://people.mpi-inf.mpg.de/~jblanche/nested_multisets.pdf][Nested multisets, hereditary multisets, and syntactic ordinals in Isabelle/HOL]].
  ~ J.C. Blanchette et als. #IsabelleHOL
+ [[http://conal.net/talks/teaching-new-tricks-to-old-programs.pdf][Teaching new tricks to old programs]]. ~ Conal Elliott #Haskell 
+ [[https://two-wrongs.com/dynamic-dispatch-in-haskell-how-to-make-code-extendable][Dynamic dispatch in Haskell, or: how can I make my code extendable?]] #Haskell
+ [[https://arxiv.org/pdf/1704.07503][Learning of human-like algebraic reasoning using deep feedforward neural
  networks]]. ~ C.H. Cai et als. #ATP #ML
+ [[http://www.math.ucsd.edu/~fan/ron/papers/85_07_minimum_spanning_tree.pdf][On the history of the minimum spanning tree problem]]. ~ R.L. Graham & P. Hell
  #Algorithms
+ [[http://www.ams.org/samplings/feature-column/fcarc-trees][Trees: a mathematical tool for all seasons]]. ~ Joe Malkevitch #Algorithms 
+ [[https://www.isa-afp.org/entries/CryptHOL.shtml][CryptHOL: a framework for formalising cryptographic arguments in Isabelle/HOL]].
  ~ A. Lochbihler #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Game_Based_Crypto.shtml][Game-based cryptography in HOL]]. ~ A. Lochbihler, S. Reza & B. Bhatt
  #IsabelleHOL
+ [[http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.32.4249][The most unreliable technique in the world to compute pi]]. ~ J. Karczmarczuk
  #Haskell #Math
+ [[http://henning-thielemann.de/Research/icfp2007mathematics.pdf][Experience report: Haskell and mathematics]]. ~ H. Thielemann #Haskell #Math
+ [[https://karczmarczuk.users.greyc.fr/arpap/laseq.pdf][Lazy processing and optimization of discrete sequences]]. ~ J. Karczmarczuk
  #Haskell #Math
+ [[https://monad.cat/posts/2016-05-10-barbed-wire.html][Programming with bananas and barbed wire. Part 1]]. ~ Michał Kawalec #Haskell
+ [[https://www.lri.fr/~filliatr/ftp/publis/puf-wml07.pdf][A persistent union-find data structure]]. ~ S. Conchon & J.C. Filliâtre #Coq
+ [[https://github.com/myegorov/disjoint-sets][Tarjan's Union-Find algorithm using Conchon & Filliâtre's persistent arrays]]. 
  #Haskell
+ [[https://github.com/devonhollowood/search-algorithms][Haskell library containing common graph search algorithms]] (depth-first,
  breadth-first, Dijkstra, and A*). #Haskell
+ [[https://arxiv.org/pdf/1705.01226][A computationally surveyable proof of the group properties of an elliptic
  curve]]. ~ D.M. Russinoff #ACL2 #Math
+ [[http://www.abc.es/ciencia/abci-pitagoras-conjetura-millon-dolares-201705082037_noticia.html][De Pitágoras a la conjetura del millón de dólares]]. ~ Pedro Alegría
  #Matemáticas
+ [[http://norvig.com/beal.html][Beal's conjecture revisited]]. ~ Peter Norvig #Math #Python 
+ [[https://culturacientifica.com/2017/04/26/teorema-los-cuatro-colores-1-una-historia-comienza-1852][El teorema de los cuatro colores (1): una historia que comienza en 1852]]. ~
  Marta Macho Stadler #Matemáticas
+ [[https://culturacientifica.com/2017/05/10/teorema-los-cuatro-colores-2-error-kempe-la-clave-la-prueba][El teorema de los cuatro colores (2): el error de Kempe y la clave de la
  prueba]]. ~ Marta Macho Stadler #Matemáticas
+ [[http://elpais.com/elpais/2017/05/10/el_aleph/1494430518_964969.html][El mayor número primo conocido]]. ~ Miguel Ángel Morales #Matemáticas
  #Computación
+ [[https://youtu.be/V3MllYWLE1g][¿Es posible usar Haskell más allá del mundo académico?]] ~ Ramiro Pastor
  #Haskell
+ [[http://www.ist.tugraz.at/projects/isac/publ/ded-for-sys-explain.pdf][Technology of deduction for "Systems that explain themselves"]]. ~ W. Neuper
  #ATP #ITP
+ [[http://www.ist.tugraz.at/projects/isac/publ/proto-sys-explain.pdf][Prototyping "Systems that explain themselves" for education]]. ~ W. Neuper #ITP
  #IsabelleHOL
+ [[https://mmhaskell.com/blog/2017/5/15/untangling-haskells-strings][Untangling Haskell's strings]]. ~ James Bowen #Haskell 
+ [[http://bit.ly/2q3cOHN][Summer school on satisfiability checking and symbolic computation]]. 
+ [[http://foswiki.cs.uu.nl/foswiki/pub/Swierstra/ResearchTalks/tree-oriented-programming-slides.pdf][Tree oriented programming in Haskell]]. ~ J.D. Fokker #Haskell
+ [[https://briansmith.org/addition-chain-intro-01][An introduction & supplement to Knuth’s introduction to addition chains]]. ~
  B. Smith #Haskell
+ [[http://neilmitchell.blogspot.com.es/2017/05/proving-fib-equivalence.html][Proving fib equivalence]]. ~ Neil Mitchell #Haskell #Idris  
+ [[http://link.springer.com/article/10.1007/s11023-017-9432-7][AI and the origins of the functional programming language style]]. ~
  M. Priestley #AI #FunctionalProgramming
+ [[https://arxiv.org/pdf/1705.07313][A formalization of the process algebra CCS in HOL4]]. ~ Chun Tian #ITP #HOL4
+ [[http://two-wrongs.com/extendable-data-in-haskell-pt-2][Extendable data in Haskell (part 2)]]. #Haskell
+ [[http://tecnologia.elpais.com/tecnologia/2017/05/19/actualidad/1495202801_698394.html][¿P=NP?: El problema que los informáticos no han podido resolver en 45 años]]. 
  ~ R. Peña 
+ [[https://kunigami.blog/2017/05/21/largest-sets-of-subsequences-in-ocaml/][Largest sets of subsequences in OCaml]]. ~ G. Kunigami #OCaml 
+ [[http://gitcommit.co.uk/2017/05/20/haskell-vectors-and-simple-mechanics-part-2/][Haskell, vectors and simple mechanics (part 2)]]. ~ GitCommit #Haskell 
+ [[http://www.alfredodinapoli.com/posts/2017-04-07-the-simplest-possible-haskell-heap-implementation.html][The simplest Haskell priority queue implementation I know of]]. ~ Alfredo di
  Napoli #Haskell
+ [[https://arxiv.org/pdf/1705.04680][Proof mining with dependent types]]. ~ E. Komendantskaya & J. Heras #Coq 
+ [[https://github.com/fmthoma/functional-data-structures-talk][Purely functional data structures]]. ~ Franz Thoma #Haskell 
+ [[https://github.com/ryanorendorff/lc-2017-fusion][Deforestation and program fusion: applying equational transforms to
  automatically simplify programs]]. ~ R. Orendorff #Haskell
+ [[https://github.com/HuwCampbell/grenade][Grenade: Practical Deep Learning in Haskell]]. ~ Huw Campbell #Haskell
  #DeepLearning
+ [[https://www.isa-afp.org/entries/Security_Protocol_Refinement.shtml][Developing security protocols by refinement in Isabelle/HOL]]. ~ C. Sprenger &
  I. Somaini #ITP #IsabelleHOL
+ [[http://elpais.com/elpais/2017/05/24/el_aleph/1495641252_510247.html][Curvas que separan: fácil de entender, difícil de demostrar]]. ~ Miguel Ángel
  Morales #Matemáticas
+ [[https://bookofbadarguments.com/][An illustrated book of bad arguments]]. ~ Ali Almossawi #Logic 
+ [[https://culturacientifica.com/2017/05/24/teorema-los-cuatro-colores-3-tras-mas-siglo-aventura-ordenador-resuelve-problema/][El teorema de los cuatro colores (3): ¿un ordenador resuelve el problema?]] ~
  Marta Macho #Matemáticas #Computación  
+ [[https://arxiv.org/pdf/1705.09025][Automating the proofs of strengthening Lemmas in the Abella proof assistant]]. 
  ~ D. Michaelson #ITP #Abella
+ [[https://blunt.herokuapp.com][Blunt converts Haskell expressions between the pointfree and pointful styles]]. 
  #Haskell 
+ [[http://taylor.fausak.me/2015/04/09/write-more-understandable-haskell-with-flow][Write more understandable Haskell with Flow]]. ~ Taylor Fausak #Haskell
+ [[https://lexi-lambda.github.io/blog/2017/05/27/realizing-hackett-a-metaprogrammable-haskell/][Realizing Hackett, a metaprogrammable Haskell]]. ~ Alexis King #Haskell #Racket
  #Hackett
+ [[https://dev.yorhel.nl/doc/funcweb][An opinionated survey of functional Web development]]. ~ Yoran Heling #Haskell
  #OCaml
+ [[https://arxiv.org/pdf/1705.07318][Formalized Lambek calculus in Higher Order Logic (HOL4)]]. ~ Chun Tian #ITP
  #HOL4
+ [[https://arxiv.org/pdf/1705.09704][Lock-step simulation is child's play]]. ~ J. Breitner & C. Smith #Haskell
  #CodeWorld
+ [[https://plato.stanford.edu/entries/lambda-calculus/][The lambda calculus]]. (Stanford Encyclopedia of Philosophy) #Logic
+ [[https://github.com/mstksg/hamilton][Simulate physics on generalized coordinate systems using Hamiltonian
  Mechanics and automatic differentiation]]. #Haskell #Physics
+ [[https://www.isa-afp.org/entries/Optics.shtml][Optics in Isabelle]]. ~ S. Foster & F. Zeyda #ITP #IsabelleHOL 
+ [[http://vaibhavsagar.com/blog/2017/05/29/imperative-haskell][Imperative Haskell]]. ~ Vaibhav Sagar #Haskell 
+ [[https://arxiv.org/pdf/1705.11040v1][End-to-end differentiable proving]]. ~ T. Rocktäschel & S. Riedel 
+ [[https://oleksandrmanzyuk.wordpress.com/2012/10/25/grobner-bases-in-haskell-part-i][Gröbner bases in Haskell: Part I]]. ~ Oleksandr Manzyuk #Haskell 
+ [[https://oleksandrmanzyuk.wordpress.com/2012/10/25/grobner-bases-in-haskell-part-ii][Gröbner bases in Haskell: Part II]]. ~ Oleksandr Manzyuk #Haskell 
+ [[https://www.isa-afp.org/entries/Flow_Networks.shtml][Flow networks and the min-cut-max-flow theorem in Isabelle/HOL]]. ~ P. Lammich
  & S. Reza Sefidgar #IsabelleHOL
+ [[https://idontgetoutmuch.wordpress.com/2017/06/02/1090/][Haskell for numerics?]] ~ Dominic Steinitz #Haskell 
+ [[http://www.gigamonkeys.com/trees][Can’t see the four-est for the trees]]. ~ Peter Seibel #Haskell #Math
+ [[https://github.com/hrldcpr/Bezier.hs/][Bézier curves in Haskell]]. ~ Harold Cooper #Haskell #Gloss #Math
+ [[https://arxiv.org/pdf/1706.00231][Automatic differentiation using constraint handling rules in Prolog]]. ~
  S. Abdallah #Prolog #CHR #Math
+ [[http://conal.net/papers/compiling-to-categories/compiling-to-categories.pdf][Compiling to categories (extended version)]]. ~ Conal Elliott #Haskell
+ [[https://github.com/micahhahn/functionalgeometry][A simple Haskell implementation of the algebra of pictures outlined in Peter
  Henderson's "Functional Geometry"]]. ~ Micah Hahn #Haskell
+ [[http://cosette.cs.washington.edu][Cosette: an automated prover for checking equivalences of SQL queries]]. #Coq
+ [[https://arxiv.org/pdf/1705.10050][Formalization of transform methods using HOL Light]]. ~ A. Rashid & O. Hasan
  #ITP #HOL_Light
+ [[https://shemesh.larc.nasa.gov/fm/MINERVA/MINERVA.pdf][The MINERVA software development process]]. ~ A. Narkawicz, C.A. Muñoz &
  A.M. Dutle #PVS #Formal_verification
+ [[http://bit.ly/2qNx1BB][Constraint Handling Rules]]. ~ T. Frühwirth #Book #CHR 
+ [[http://www.kestrel.edu/home/people/coglio/abnf.pdf][Augmented Backus-Naur Form (ABNF) in ACL2]]. ~ A. Coglio #ITP #ACL2 
+ [[http://adam.chlipala.net/frap/][Formal reasoning about programs]]. ~ A. Chlipala #Coq
+ [[http://people.ucalgary.ca/~rzach/static/open-logic/courses/phil479/phil479-screen.pdf][Incompleteness and computability (an open logic text)]]. ~ R. Zach #Logic 
+ [[https://www.isa-afp.org/entries/Buffons_Needle.shtml][Buffon's needle problem in Isabelle/HOL]]. ~ M. Eberl #IsabelleHOL 
+ [[https://ro-che.info/articles/2017-06-05-word-vs-int][Word vs Int]]. ~ R. Cheplyaka #Haskell 
+ [[https://github.com/Russell91/pyfi][Pyfi : PYthon Function Interface for Haskell]]. ~ Russell Stewart #Python
  #Haskell
+ [[https://m.genbeta.com/web/descarga-los-ebooks-gratuitos-de-la-nasa-sobre-historia-ciencia-aeronautica-e-investigacion][eBooks gratuitos de la NASA sobre historia, ciencia, aeronáutica e
  investigación]].  #Libros #Ciencia
+ [[http://oucsace.cs.ohiou.edu/~gstewart/papers/mapl2017/mapl2017perceptron.pdf][Verified perceptron convergence theorem]]. ~ C. Murphy, P. Gray & G. Stewart
  #ITP #Coq
+ [[http://blog.sigfpe.com/2017/06/a-relaxation-technique.html][A relaxation technique]]. ~ Dan Piponi #Haskell 
+ [[http://www.microsiervos.com/archivo/ordenadores/arte-escher-programacion-geometria.html][El arte de Escher recreado matemáticamente mediante programación y
  geometría]]. ~ @Alvy #Programación
+ [[https://mapio.github.io/programming-with-escher][Programming with Escher]]. ~ Massimo Santini #Python 
+ [[http://www.ben-sherman.net/aux/curry-howard.pdf][Haskell and the Curry-Howard isomorphism (Part 1)]]. ~ Ben Sherman #Haskell
  #Logic
+ [[https://www.cs.uni-potsdam.de/~torsten/hybris.pdf][A tutorial on hybrid Answer Set Solving with clingo]]. ~ R. Kaminski, T. Schaub
  & P. Wanko #ASP #clingo #Python
+ [[http://perugini.cps.udayton.edu/teaching/courses/Spring2017/cps499/Languages/papers/PROLOG.pdf][An introduction to the Prolog programming language]]. ~ J.L. Watkin #Prolog 
+ [[http://perugini.cps.udayton.edu/teaching/courses/Spring2017/cps499/Languages/papers/CLIPS.pdf][An introduction to the CLIPS programming language]]. ~ J.L. Watkin #CLIPS  
+ [[https://arxiv.org/pdf/1705.05897][Automated cryptographic analysis of the Pedersen commitment scheme]]. ~
  R. Metere & C. Dong #ITP #Coq
+ [[https://byorgey.wordpress.com/2017/06/07/the-typeclassopedia-is-now-up-to-date][The Typeclassopedia is now up-to-date]]. ~ Brent Yorgey #Haskell 
+ [[https://github.com/lunky/IntroToFunctionalProgramming][Intro to functional programming with Haskell]]. ~ Quinn Wilson #Haskell 
+ [[https://www.degruyter.com/downloadpdf/j/forma.2017.25.issue-1/forma-2017-0004/forma-2017-0004.xml][All Liouville numbers are transcendental in Mizar]]. ~ A. Korniłowicz,
  A. Naumowicz & A. Grabowski #ITP #Mizar #Math
+ [[https://arxiv.org/pdf/1705.07228][A verified algorithm enumerating event structures in Isabelle/HOL]]. ~
  J. Bowles & M.B. Caminati #ITP #IsabelleHOL
+ [[https://www.cs.cmu.edu/~kqy/resources/Verified-HMAC-DRBG.pdf][Verified correctness and security of mbedTLS HMAC-DRBG]]. K.Q. Ye et als. #ITP
  #Coq
+ [[https://docs.google.com/presentation/d/1_I5mYXivG5NbOHnICld_Xo41uOyAT57Yade5qfz2toQ/edit#slide=id.p][Teaching Haskell for understanding]]. ~ J. Moronuki #Haskell 
+ [[http://www.haskellforall.com/2017/06/translating-c-parser-to-haskell.html][Translating a C++ parser to Haskell]]. ~ G. Gonzalez #Haskell 
+ [[http://bit.ly/2r7uO4j][Lazy interactions – back to the future]]. ~ Simon Thompson #Haskell
+ [[https://github.com/sdiehl/zurihac-crypto][Small minimal examples of modern cryptographic techniques in Haskell]]. ~
  Stephen Diehl #Haskell
+ [[http://degoes.net/articles/kill-data][Data structures are antithetical to functional programming]]. ~ John A De Goes
  #Haskell
+ [[http://www.huffingtonpost.com/entry/problem-solving-might-attract-women-to-computer-science_us_593b2f58e4b094fa859f186a][Problem solving might attract women to computer science]]. #CompSci
+ [[https://www.johndcook.com/blog/2017/06/09/one-practical-advantage-of-functional-programming][One practical application of functional programming]]. ~ J.D. Cook
  #FuncionalProgramming
+ [[http://spw17.langsec.org/papers/tse-validating-session-protocols.pdf][A framework for validating session protocols]]. ~ K.S. Tse & P.C. Johnson
  #Haskell
+ [[http://www.ps.uni-saarland.de/Publications/documents/KirstSmolka_2017_Categoricity.pdf][Categoricity results for second-order ZF in dependent type theory]]. ~ D. Kirst
  & G. Smolka #ITP #Coq
+ [[https://arxiv.org/pdf/1405.7012][A formally verified proof of the Central Limit Theorem in Isabelle/HOL]]. ~
  J. Avigad, J, Hölzl & L. Serafin #ITP #IsabelleHOL #Math
+ [[https://github.com/aisamanra/haddock-cheatsheet][A single-page quick reference for the markup used in GHC's Haddock
  documentation format]]. ~ G.D. Ritter #Haskell
+ [[https://github.com/haskell-servant/servant][servant: a type-level web DSL]]. #Haskell 
+ [[https://www.isa-afp.org/entries/PSemigroupsConvolution.shtml][Partial semigroups and convolution algebras]]. ~ B. Dongol et als. #IsabelleHOL
+ [[https://github.com/hedgehogqa/haskell-hedgehog][Hedgehog: a modern property-based testing system, in the spirit of
  QuickCheck]]. ~ Jacob Stanley #Haskell
+ [[https://deque.blog/2017/06/14/10-things-idris-improved-over-haskell][10 things Idris improved over Haskell]]. ~ DeQue #Haskell #Idris
+ [[http://elpais.com/elpais/2017/06/14/el_aleph/1497455086_088226.html][Un problema que vale un millón de dólares]]. ~ Miguel Ángel Morales
  #Matemáticas
+ [[http://www.cs.utexas.edu/~marijn/publications/itp17.pdf][Efficient, verified checking of propositional proofs]]. ~ M Heule, W Hunt Jr,
  M Kaufmann, N Wetzler #ITP #ACL2 #SAT
+ [[https://www.slideshare.net/GroupeT2i/deep-learning-the-future-of-ai][Deep learning: The future of AI]]. ~ Damian Borth #AI
+ [[https://codearsonist.com/reading-for-programmers][Reading for programmers]]. ~ Piotr Limanowski #Emacs #OrgMode
+ [[http://irreal.org/blog/?p=6276][How to read papers efficiently]]. ~ Irreal #Emacs #OrgMode
+ [[http://www.madrimasd.org/blogs/matematicas/2017/06/15/143923][La gran novela de las matemáticas]].
+ [[https://prateekvjoshi.com/2014/10/25/a-beginners-look-at-lambda-calculus][A beginner’s look at lambda calculus]]. ~ Prateek Joshi #Logic #CompSci  
+ [[http://www.cs.ox.ac.uk/people/samuel.staton/papers/jfp17.pdf][Backtracking with cut via a distributive law and left-zero monoids]]. ~
  M. Piróg & S. Staton #Haskell
+ [[https://github.com/rudymatela/speculate][Speculate: discovering conditional equations and inequalities about Haskell
  functions]]. ~ R. Braquehais & C. Runciman #Haskell
+ [[https://github.com/rudymatela/leancheck/blob/master/doc/tutorial.md][Introduction to property-based testing (with LeanCheck)]]. ~ Rudy Matela
  #Haskell
+ [[https://github.com/mstksg/backprop][BackProp: Heterogeneous, type-safe automatic backpropagation in Haskell]]. ~
  Justin Le #Haskell
+ [[http://talks.jle.im/lambdaconf-2017/dependent-types/dependent-types.html][Practical dependent types: type-safe neural networks]]. ~ Justin Le
  #Haskell
+ [[http://r6.ca/blog/20170616T114546Z.html][Some random thoughts of an advanced haskeller]]. ~ Russell O’Connor #Haskell 
+ [[https://cdsmith.wordpress.com/2012/04/18/why-do-monads-matter][Why do monads matter?]] ~ C. Smith #Haskell
+ [[https://m.genbetadev.com/metodologias-de-programacion/test-automaticos-con-quickcheck-como-analizar-nuestro-codigo-en-busca-de-bugs][Test automáticos con QuickCheck ¿Cómo analizar nuestro código en busca de
  bugs?]] ~ Jose Juan #Programación #QuickCheck
+ [[http://ndmitchell.com/downloads/slides-drive-by_haskell_contributions-09_jun_2017.pdf][Drive-by Haskell contributions]]. ~ Neil Mitchell #Haskell
+ [[http://www.lama.univ-savoie.fr/~david/ftp/amphis.pdf][Peut-on faire des Mathématiques avec un ordinateur?]] ~ René David #Math #Logic
  #CompSci
+ [[http://www.lama.univ-savoie.fr/~david/ftp/amphi07.pdf][Peut-on avoir confiance en l’informatique?]] ~ René David et Christophe
  Raffalli #CompSci
+ [[https://repository.eafit.edu.co/bitstream/handle/10784/11464/Alejandro_CalleSaldiarriaga_2017.pdf][A set theory formalization in Agda]]. ~ A. Calle #ITP #Agda #Math #Logic 
+ [[http://jin.crypt.sg/files/subtyping.pdf][Subtyping: overview and implementation]]. ~ C. Jingwen #Haskell 
+ [[http://www.haskellforall.com/2017/06/dhall-is-now-template-engine.html][Dhall is now a template engine]]. ~ G. Gonzalez #Haskell 
+ [[http://kaygun.tumblr.com/post/161836727094/estimating-the-maximum-element-of-a-large-list][Estimating the maximum element of a large list]]. ~ A. Kaygun #Algorithm #Lisp
+ [[https://ro-che.info/articles/2017-06-17-generic-unification][Generic unification]]. ~ R. Cheplyaka #Haskell 
+ [[https://arxiv.org/pdf/1706.05271v1][A Coq-based synthesis of Scala programs which are correct-by-construction]]. ~
  Y. El Bakouny, T. Crolard, D. Mezher #Coq #Scala
+ [[https://github.com/rampion/kinder-functor][kinder-functor: An alternate definition of Haskell's Functor
  typeclass]]. #Haskell
+ [[https://mmhaskell.com/blog/2017/6/19/profiling-in-haskell][How well does it work? Profiling in Haskell]]. ~ James Bowen #Haskell
+ [[http://elpais.com/elpais/2017/06/16/opinion/1497602599_425102.html][El futuro de la inteligencia artificial]]. ~ Geoffrey Hinton  #IA
+ [[https://www.fpcomplete.com/blog/2017/06/understanding-resourcet][Understanding ResourceT]]. ~ M. Snoyman #Haskell
+ [[http://blog.ch3m4.org/2012/03/09/programacion-ciencia-o-ingenieria-2/][Programación. ¿Ciencia o Ingeniería?]] ~ Chema Cortés #Programación
+ [[https://two-wrongs.com/on-competing-with-c-using-haskell][On competing with C using Haskell]]. ~ Two Wrongs #Haskell 
+ [[https://wiki.haskell.org/Humor/LearningCurve][The Haskell learning curve]]. #Haskell #Humor
+ [[http://kaygun.tumblr.com/post/162022456134][Generating random regular graphs]]. ~ Atabey Kaygun #Common_Lisp #Math
+ [[http://kaygun.tumblr.com/post/162102634464/calculating-the-diameter-and-the-radius-of-a-graph][Calculating the diameter and the radius of a graph using tropic linear algebra]]. 
  ~ Atabey Kaygun #Common_Lisp #Math
+ [[http://www.cl.cam.ac.uk/~lp15/Grants/Alexandria/Part-B2.pdf][Large-scale formal proof for the working mathematician (ALEXANDRIA)]]. ~
  L.C. Paulson #ITP #Math
+ [[http://www21.in.tum.de/teaching/FDS/SS17][Course: Functional data structures]]. ~ P. Lammich & T. Nipkow
  #FunctionalProgramming #IsabelleHOL #Algorithms
+ [[https://github.com/jtdaugherty/brick/blob/master/README.md][brick: A declarative terminal UI programming library written in Haskell]]. ~
  Jonathan Daugherty #Haskell
+ [[http://argumatronic.com/posts/2017-06-21-sapir-whorf.html][Love, monoids, and linguistic determinism]]. ~ J. Moronuki #Haskell
+ [[https://www.isa-afp.org/entries/Propositional_Proof_Systems.shtml][Propositional proof systems in Isabelle/HOL]]. ~ J. Michaelis & T. Nipkow
  #IsabelleHOL #Logic
+ [[https://mzabani.wordpress.com/2017/06/22/interfaces-and-typeclasses-number-apis-in-c-and-haskell][Interfaces and typeclasses: Number APIs in C# and Haskell]]. ~ Marcelo Zabani
  #Haskell
+ [[https://haskellweekly.news/issues/60.html][Haskell Weekly 60: News from the Haskell community (June 22 2017)]]. #Haskell 
+ [[http://mazzo.li/posts/customizable-data-types.html][Configurable data types]]. ~ Francesco Mazzoli #Haskell 
+ [[https://www.cis.upenn.edu/~jpaykin/papers/pz_linearity_monad_2017.pdf][The linearity monad]]. ~ J. Paykin & S. Zdancewic #Haskell
+ [[https://github.com/samtay/tetris][A terminal interface for Tetris]]. #Haskell
+ [[https://www.isa-afp.org/entries/Prpu_Maxflow.shtml][Formalizing push-relabel algorithms for computing the maximum flow in a network]].
  ~ P. Lammich & S.R. Sefidgar #IsabelleHOL 
+ [[https://openlibra.com/book/just-enough-r-learn-data-analysis-with-r-in-a-day][Just enough R: Learn data analysis with R in a day]]. ~ S. Raman #eBook #RStats
+ [[https://www.cambridge.org/core/services/aop-cambridge-core/content/view/78FBD5E1A3D1BCCB8E0D5B0C463C9FBC/S2050508617000014a.pdf/formal_proof_of_the_kepler_conjecture.pdf][A formal proof of the Kepler conjecture]]. Thomas Hales et als. #ITP
  #IsabelleHOL #HOL_Light #Math
+ [[http://events.techcast.com/bigtechday10/Garmisch-1345/?q=Garmisch-1345][Haxl: Making concurrency unreasonably easy]]. ~ Simon Marlow  #Haskell #Haxl 
+ [[http://www.strub.nu/biblio/pdf/conf-cpp-BernardBRS16.pdf][Formal proofs of transcendence for e and pi as an application of multivariate
  and symmetric polynomials]]. ~ S. Bernard et als.  #Coq
+ [[https://github.com/mrkgnao/noether][Noether: Highly polymorphic algebraic structures with custom deriving
  strategies]]. ~ Soham Chowdhury #Haskell #Math
+ [[https://ingenieriadesoftware.es/historia-de-la-programacion][Hay que empezar a enseñar historia de la programación]]. ~ Jordi Cabot 
+ [[http://math.bu.edu/people/aki/16.pdf][Set theory: from Cantor to Cohen]]. ~ A. Kanamori #Logic
+ [[https://www.engadget.com/2017/06/23/the-air-force-and-ibm-are-building-an-ai-supercomputer/][The Air Force and IBM are building an AI supercomputer]]. ~ A. Tarantola
+ [[http://www.michaelnielsen.org/ddi/lisp-as-the-maxwells-equations-of-software][Lisp as the Maxwell’s equations of software]]. ~ M. Nielsen #Lisp #CompSci 
+ [[https://www.johndcook.com/blog/applied-category-theory/][Applied category theory]]. ~ J.D. Cook
+ [[https://www.cs.ox.ac.uk/jeremy.gibbons/publications/delivery.pdf][Free delivery (functional pearl)]]. ~ J. Gibbons #Haskell
+ [[http://ozark.hendrix.edu/~yorgey/pub/twisted.pdf][How to twist pointers without breaking them]]. ~ S. Chauhan, P.P. Kurur &
  B.A. Yorgey #Haskell
+ [[https://www.cs.princeton.edu/~appel/vfa][Verified functional algorithms]]. ~ A.W. Appel #Coq #Algorithms 
+ [[http://www.ams.org/journals/bull/2017-54-03/S0273-0979-2016-01556-4/S0273-0979-2016-01556-4.pdf][Five stages of accepting constructive mathematics]]. ~ A. Bauer #Math #Logic
+ [[https://m42.github.io/blog/2016/09/26/matematicas-en-emacs][Matemáticas en Emacs]]. ~ M. Román #Emacs
+ [[http://www.microsiervos.com/archivo/ciencia/matematicas-vs-fisica.html][Matemáticas vs. física o viceversa (y quizá no tan «versus»)]]. ~@Alvy
+ [[http://www.scottaaronson.com/blog/?p=304][Ten signs a claimed mathematical breakthrough is wrong]]. ~ Scott Aaronson
  #Math 
+ [[http://elpais.com/elpais/2017/06/20/ciencia/1497952010_970191.html][(Dicen que) han demostrado la conjetura de Goldbach. Otra vez]]. ~ A. Córdoba
  #Matemáticas 
+ [[http://stringworld.ru/files/Nakahara_M._Geometry_topology_and_physics_2nd_ed..pdf][Geometry, topology and physics]]. ~ M. Nakahara #Math
+ [[https://github.com/snowleopard/alga-paper/releases/download/hs-submission/alga.pdf][Algebraic graphs with class (Functional pearl)]]. ~ A. Mokhov #Haskell
+ [[https://github.com/snowleopard/alga-paper][A minimalistic, elegant and powerful approach to working with graphs in
  Haskell]]. ~ A. Mokhov #Haskell
+ [[https://github.com/snowleopard/alga-theory][The theory of algebraic graphs formalised in Agda]]. ~ A. Mokhov #Agda
+ [[https://lispcookbook.github.io/cl-cookbook][The Common Lisp cookbook]] #eBook #CommonLisp
+ [[https://academic.oup.com/comjnl/article-pdf/7/4/278/1013051/7-4-278.pdf][Lists and why they are useful]] - M. V. Wilkes #Lisp

* Julio 2017

+ [[http://arxiv.org/abs/1706.08605][Developing bug-free machine learning systems with formal mathematics]]. ~
  D. Selsam, P. Liang, D.L. Dill #LeanTP
+ [[https://medium.com/towards-data-science/functional-programming-for-deep-learning-bc7b80e347e9][Functional programming for deep learning]]. ~ Joyce Xu #FuncionalProgramming
  #DeepLearning
+ [[http://keera.co.uk/blog/2017/06/01/haskell-android-ios][Haskell on Android and iOS]]. ~ Keera Studios #Haskell 
+ [[http://revue.sesamath.net/IMG/pdf/index.pdf][Maxima & GnuPlot (Logiciel de calcul formel & logiciel de tracé de courbes)]]. ~
  T. Castanet #Maxima #GnuPlot #Math
+ [[http://revue.sesamath.net/spip.php?article1014][Utiliser Maxima pour préparer le travail en classe]]. ~ T. Castanet #Maxima
  #GnuPlot #Math
+ [[https://speakerdeck.com/paf31/an-overview-of-the-purescript-type-system][An overview of the PureScript type system]]. ~ Phil Freeman #PureScript
  #Haskell
+ [[https://deque.blog/2017/07/01/idris-bowling-kata/amp/][Idris dependent typing challenge: Bowling Kata]]. ~ Quentin Duval #Haskell
  #Idris
+ [[http://irreal.org/blog/?p=6396][Tutorial on Ivy, Counsel, and Swiper]]. ~ Irreal #Emacs
+ [[http://teh.id.au/posts/2017/06/30/notes-on-fusion/index.html][Notes on fusion]]. ~ Tim Humphries #Haskell
+ [[http://teh.id.au/posts/2017/05/10/lambdajam-slides/slides.pdf][Continuations, all the way down]]. ~ Tim Humphries #Haskell
+ [[http://jelv.is/blog/Generating-Mazes-with-Inductive-Graphs][Generating mazes with inductive graphs]]. ~ T. Jelvis #Haskell
+ [[http://jelv.is/talks/probability-monad/slides.html][Probability monad]]. ~ T. Jelvis #Haskell
+ [[https://rkrishnan.org/posts/2017-06-20-typesafe-modulus-in-haskell.html][Typesafe modular arithmetic in Haskell]]. ~ R. Muthukrishnan #Haskell
+ [[http://www21.in.tum.de/~nipkow/pubs/itp16.pdf][Automatic functional correctness proofs for functional search trees]]. ~
  T. Nipkow #IsabelleHOL #Algorithms
+ [[https://hal.inria.fr/inria-00202831/document][SAT-MICRO: petit mais costaud!]] ~ S. Conchon, J. Kanig, S. Lescuyer #Logic
  #OCaml
+ [[https://hackage.haskell.org/package/sat-micro-hs][Haskell implementation of the minimal OCaml solver described in the paper
  "SAT-MICRO: petit mais costaud!"]] ~ D. Bueno #Logic #Haskell
+ [[https://tech.io/playgrounds/500/advanced-python-features][Advanced Python features]]. #Python
+ [[https://www.youtube.com/channel/UCDe6N9R7U-RYWA57wzJQ2SQ][OPLSS2017: The Oregon Programming Languages Summer School]]. [Videos]
  #Programming
+ [[https://github.com/JeffreyBenjaminBrown/play/blob/master/_not_music/jbrownson_tictactoe/ai%2Cminimax.hs][A minimax AI for deterministic games, in 47 lines of Haskell]]. #Haskell #AI
  #Games
+ [[https://github.com/meiersi/HaskellerZ][Notes and files from HaskellerZ meetups]]. #Haskell 
+ [[http://www.doc.ic.ac.uk/~shm/Papers/watlarge.pdf][Can ILP be applied to large dataset?]] ~ H. Watanabe, S. Muggleton #ILP
  #BigData
+ [[https://www.youtube.com/watch?v=cIX3WVO48RY][Functional programming and proving in Isabelle/HOL]]. ~ Andreas Lochbihler
  [Video] #IsabelleHOL
+ [[https://mmhaskell.com/blog/2017/6/21/graphing-it-out][Graphing it Out]]. ~ James Bowen #Haskell #FGL
+ [[http://blog.koalite.com/2017/07/de-monos-melanesios-y-desarrollo-de-software/][De monos, melanesios y desarrollo de software]]. ~ Juan María Hernández
+ [[https://www.microsoft.com/en-us/research/wp-content/uploads/1987/01/slpj-book-1987-small.pdf][The implementation of functional programming languages]]. ~ Simon Peyton Jones
  #eBook 
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_5.pdf][Functional baby talk: Analysis of code fragments from novice Haskell  programmers]]. ~ J. Singer, B. Archibald #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_1.pdf][Vector programming using structural recursion (an introduction to vectors for beginners)]]. ~ M.T. Morazán #Racket
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_2.pdf][Using Elm to introduce algebraic thinking to K-8 students]]. ~ C. d’Alves et
  als. #Elm
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_7.pdf][Overcoming non distributivity: A case study in functional programming]]. ~
  J.C. Saenz, M. Stannett #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Slides/JoSpresentation.pdf][Teaching Functional Programming should start earlier!]] ~ J. Sharrad #Teaching
  #Haskell
+ [[http://adam.chlipala.net/theses/andreser.pdf][Crafting certified elliptic curve cryptography implementations in Coq]]. ~
  A. Erbsen #MsC_Thesis #Coq #Math
+ [[http://kaygun.tumblr.com/post/162561203929 ][Kaprekar sequence]]. ~ Atabey Kaygun #Common_Lisp #Math 
+ [[http://kaygun.tumblr.com/post/162485266314][Lattice of Dyck Words]]. ~ Atabey Kaygun #Common_Lisp #Math 
+ [[https://arxiv.org/pdf/1706.09248][Logic programming for an introductory computer science course for high school students]]. ~ T. Yuen, M. Reyes, Y. Zhang #Teaching #Logic_Programming
+ [[https://medium.com/@akshay2000/haskell-whatsapp-and-romance-b5a9d0ccbebc][Haskell, WhatsApp and romance]]. ~ Akshay Zade #Haskell
+ [[http://www.mpi-inf.mpg.de/fileadmin/inf/rg1/Documents/fleury_master_thesis.pdf][Formalisation of ground inference systems in a proof assistant]]. ~ M. Fleury
  #Msc_Thesis #IsabelleHOL #Logic
+ [[http://www.newton.ac.uk/files/seminar/20170706110012002-1003188.pdf][Industrial use of a mechanical theorem prover]]. ~ JS. Moore #ATP #ITP #ACL2
+ [[http://www.newton.ac.uk/files/seminar/20170626110012002-1003182.pdf][The Big Proof agenda for mechanizing mathematical discourse]]. ~ N. Shankar
  #Logic #Math #ITP
+ [[https://arxiv.org/pdf/1706.05851][Generic approach to certified static checking of module-like constructs]]. ~
  J. Belyakova #Coq
+ [[https://wesharethis.com/2017/07/05/resurgence-functional-programming/][The resurgence of functional programming]]. ~ Wesharethis #Haskell #Erlang
  #Elixir #Scala #Clojure #Fsharp
+ [[http://www.dcc.fc.up.pt/~pbv/compcheck/compcheck.pdf][Verifying a simple compiler using property-based random testing]]. ~
  P. Vasconcelos [[http://www.dcc.fc.up.pt/~pbv/compcheck][Code]] #Haskell
+ [[https://arxiv.org/pdf/1707.00024][A formalized general theory of syntax with bindings]]. ~ L. Gheri, A. Popescu
  #IsabelleHOL
+ [[http://www.newton.ac.uk/files/seminar/20170629110012002-1003186.pdf][The Lean theorem prover]]. ~ Jeremy Avigad #ITP #LeanTP #Math #Logic
+ [[http://momigliano.di.unimi.it/papers/sefm.pdf][Validating the meta-theory of programming languages]]. ~ G. Fachini,
  A. Momigliano #Haskell
+ [[https://tech.channable.com/posts/2017-07-06-introducing-vaultenv-keeping-your-secrets-safe-with-vault-and-haskell.html][Introducing Vaultenv: Keeping your secrets secure with Vault and Haskell]]. ~
  L. Duijvesteijn #Haskell
+ [[http://informatica.blogs.uoc.edu/2017/07/06/el-perfil-de-un-data-scientist][El perfil de un data scientist]]. ~ Jordi Casas #DataScience
+ [[http://icidasset.com/writings/minimize-flaws][How do we use (typed) functional programming to minimize our flaws]]. ~ Steven
  Vandevelde #Haskell #Elm
+ [[http://blog.ielliott.io/continuations-from-the-ground-up/][Continuations from the ground up]]. ~ Isaac Elliott #Haskell
+ [[https://www.isa-afp.org/entries/CRDT.shtml][A framework for establishing Strong Eventual Consistency for Conflict-free
  Replicated Datatypes]]. ~ V.B.F. Gomes et als. #IsabelleHOL #AFP
+ [[http://kaygun.tumblr.com/post/162692854744][Some Hasse diagrams]]. ~ @Atabey_Kaygun #CommonLisp #Math
+ [[http://www21.in.tum.de/~lammich/pub/cade2017.pdf][Efficient verified (UN)SAT certificate checking]]. ~ P. Lammich #IsabelleHOL
  #Logic #SAT
+ [[http://www.businessinsider.com/oxford-university-ai-startup-diffblue-has-raised-17-million-in-series-a-funding-2017-6][An Oxford University artificial intelligence startup has raised £17 million to check code for errors]]. ~ Shona Ghosh
+ [[http://www.diffblue.com/about][DiffBlue: a world leader in AI that understands code]]. 
+ [[http://irreal.org/blog/?p=6415][An Emacs tutorial series]]. ~ Irreal  #Emacs
+ [[http://wesscholar.wesleyan.edu/cgi/viewcontent.cgi?article=2825&context=etd_hon_theses][Towards a formal verification of Courcelle’s theorem]]. ~ E. Black #ITP #Agda
+ [[https://github.com/mgmacias95/criptografia_y_computacion][Prácticas de la asignatura "Criptografía y computación"]] ~ Marta Gómez
  #Haskell
+ [[https://www.mpi-sws.org/~dreyer/papers/rustbelt/paper.pdf][RustBelt: Securing the foundations of the Rust programming language]]. ~
  R. Jung et als. #Rust #Coq
+ [[https://www.fpcomplete.com/blog/2017/07/iterators-streams-rust-haskell][Iterators and streams in Rust and Haskell]]. ~ M. Snoyman #Rust #Haskell
+ [[https://nikivazou.github.io/static/Haskell17/a-tale.pdf][A tale of two provers (Verifying monoidal string matching in Liquid Haskell
  and Coq)]]. ~ Niki Vazou #Haskell #Coq
+ [[http://www.cs.swan.ac.uk/~csetzer/articles/coalp2017SetzerIgriedTraceStableFailuresSemantics.pdf][Trace and stable failures semantics for CSP-Agda]]. ~ B. Igried & A: Setzer
  #Agda
+ [[https://www.rayskell.com/curso-haskell][Curso básico de Haskell en español]].  #Haskell
+ [[https://www.rayskell.com/instalar-haskell-platform][Instalación de  Haskell-Platform]]. ~ Rayskell [[https://youtu.be/GP0DUyj6oA4][Vídeo]] #Haskell 
+ [[https://youtu.be/NPTOgeuKMMs][Introducción y primeros pasos con Haskell]]. ~ Rayskell #Haskell  
+ [[https://www.rayskell.com/lambda-calculo][El cálculo lambda]]. ~ Rayskell #Haskell  
+ [[https://www.rayskell.com/tipos-clases][Tipos y clases de tipos]]. ~ Rayskell #Haskell  
+ [[https://www.rayskell.com/tutorial-regresion-lineal][Regresión lineal con Haskell]]. ~ Rayskell [[https://youtu.be/CiFlummqF8w][Vídeo]]  #Haskell
+ [[https://terrytao.wordpress.com/2017/07/07/what-are-some-useful-but-little-known-features-of-the-tools-used-in-professional-mathematics/amp][What are some useful, but little-known, features of the tools used in
  professional mathematics?]] ~ Terence Tao #Math
+ [[http://consequently.org/news/2017/typesetting-flow-graphs][Typesetting flow graphs with Tikz]]. ~ Greg Restall #LaTeX
+ [[http://momigliano.di.unimi.it/papers/bhowe.pdf][A case-study in programming coinductive proofs: Howe's method]]. ~
  D. Thibodeau, A. Momigliano & B. Pientka #ITP #Beluga
+ [[https://mmhaskell.com/blog/2017/7/10/playing-match-maker][Playing match maker]]. ~ James Bowen #Haskell
+ [[http://socialmediaeninvestigacion.com/sci-hub-repositorio-pirata-ciencia/?platform=hootsuite][¿Por qué triunfa Sci-hub si es el mayor repositorio pirata de ciencia a nivel mundial?]] ~ Lydia Gil
+ [[https://www21.in.tum.de/teaching/proof21/SS17/5-final.pdf][Isabelle/HOL demo]]. ~ Sebastian Neubauer #IsabelleHOL
+ [[https://arxiv.org/pdf/1706.08007][Local refinement typing]]. ~ B. Cosman, R. Jhala #Haskell #Verification #SMT
  #LiquidHaskell
+ [[http://lamiradadelreplicante.com/2017/07/06/aims-desktop-distro-gnulinux-para-matematicos][AIMS Desktop: distro GNU/Linux para matemáticos]]. ~ MiradaDelReplicante
  #Linux #Matemáticas
+ [[http://www.cs.jhu.edu/~roe/memocode17.pdf][Using the Coq theorem prover to verify complex data structure invariants]]. ~
  K. Roe & S. Smith #ITP #Coq
+ [[https://www.schoolofhaskell.com/user/fumieval/encoding-objects][Encoding objects]]. ~ F. Kinoshita #Haskell
+ [[http://metameso.org/ar/farm-2017.pdf][Modelling the way mathematics is actually done]]. ~ J. Corneli & R. Puzio #AI
  #Math #MKM
+ [[https://github.com/ocramz/sparse-linear-algebra][sparse-linear-algebra: Numerical computation in native Haskell]]. ~ Marco Zocca
  #Haskell #Math
+ [[https://e.xtendo.org/haskell/hpack][Use Hpack - e.xtendo.org]] #Haskell
+ [[https://interstices.info/jcms/p_93575/ordonner-les-ordres-un-treillis-sur-les-ordres-partiels][Ordonner les ordres : un treillis sur les ordres partiels]]. ~ V. Pons
+ [[https://www.reddit.com/r/haskell/comments/6mr8bi/cheatsheet_rank_2_types_with_typeclasses/][Cheatsheet: Rank 2 types with typeclasses]]. ~ Jeremy Mikkola #Haskell
+ [[http://web.cecs.pdx.edu/~sheard/course/LogicAndProgLang][Course: Mathematical logic and programming languages]]. ~ T. Sheard #Logic #Haskell
+ [[http://web.cecs.pdx.edu/~hook/logicw11/pdf/outline.pdf][Logic via foundational algorithms]]. ~ J. Hook & T. Sheard #eBook #Logic
  #Haskell
+ [[http://web.cecs.pdx.edu/~hook/logicw11/lectures/FiniteSets.pdf][Notes on the Finite Set module]]. ~ J. Hook & T. Sheard #Haskell #Logic 
+ [[http://web.cecs.pdx.edu/~hook/logicw11][Course: Mathematical logic via foundational algorithms]]. ~ J. Hook & T. Sheard
  #Logic #Haskell
+ [[http://math.mit.edu/~bzhan/fol.pdf][Formalization of the fundamental group in untyped set theory using auto2]]. ~
   B. Zhan #ITP #IsabelleHOL #Logic #Math
+ [[https://codewords.recurse.com/issues/three/algebra-and-calculus-of-algebraic-data-types][The algebra (and calculus!) of algebraic data types]]. ~ J. Burget #Haskell
+ [[http://yannesposito.com/Scratch/en/blog/Haskell-Tutorials--a-tutorial][Haskell tutorials, a tutorial]]. ~  Yann Esposito #Haskell
+ [[http://blog.rcook.org/blog/2016/doctest-discover-stack][Using doctest-discover with Stack]]. ~ Richard Cook #Haskell
+ [[https://www.isa-afp.org/entries/HOLCF-Prelude.shtml][Formalization of a large part of Haskell's standard prelude in
  Isabelle/HOLCF]]. ~ J. Breitner et als. #IsabelleHOL #Haskell
+ [[http://www.cse.chalmers.se/~patrikj/papers/Algehed_Jansson_VisPar_preprint_2017-06-09.pdf][VisPar: Visualising dataflow graphs from the Par monad]]. ~ M. Algehed &
  P. Jansson #Haskell
+ [[https://www.isa-afp.org/entries/Name_Carrying_Type_Inference.shtml][Verified metatheory and type inference for a name-carrying simply-typed lambda
  calculus]]. ~ M. Rawson #ITP #IsabelleHOL
+ [[http://www.haskellforall.com/2017/07/demistifying-haskell-assignment.html][Demystifying Haskell assignment]]. ~ G. Gonzalez #Haskell 
+ [[http://www.logicmatters.net/2017/07/15/the-languages-of-first-order-logic-1/][The language(s) of first-order logic #1]]. ~ Peter Smith #Logic
+ [[http://blog.sigfpe.com/2017/07/self-referential-logic-via-self.html][Self-referential logic via self-referential circuits]]. ~ Dan Piponi
+ [[https://github.com/nasa/pvslib][NASA PVS Library of Formal Developments]]. #PVS
+ [[http://page.mi.fu-berlin.de/scravy/realworldhaskell/materialien/monad-transformers-step-by-step.pdf][Monad transformers step by step]]. ~ M. Grabmüller #Haskell
+ [[https://www.isa-afp.org/entries/Minkowskis_Theorem.shtml][Minkowski's theorem in Isabelle/HOL]]. ~ M. Eberl #ITP #IsabelleHOL #Math
+ [[https://mmhaskell.com/blog/2017/7/17/cleaning-up-our-projects-with-hpack][Cleaning up our projects with Hpack!]] ~ James Bowen #Haskell
+ [[https://www.technologyreview.com/s/608248/biased-algorithms-are-everywhere-and-no-one-seems-to-care][Biased algorithms are everywhere, and no one seems to care]]. ~ Will Knight
+ [[https://arxiv.org/pdf/1707.04894][Further formalization of the process algebra CCS in HOL4]]. ~ Chun Tian #ITP
  #HOL4
+ [[http://www.tweag.io/posts/2017-07-10-haskell-r-best-both-worlds.html][R and Haskell: best of both worlds with HaskellR]]. ~ Sigrid Keydana #Haskell
  #RStats #HaskellIR
+ [[https://tamarin-prover.github.io][Tamarin prover: a powerful tool for the symbolic modeling and analysis of
  security protocols]]. #Haskell #Tamarin
+ [[https://www.wireguard.com/papers/wireguard-formal-verification.pdf][Formal verification of the WireGuard protocol]]. ~ J.A. Donenfeld & K. Milner
  #Haskell #Tamarin #Formal_verification
+ [[https://www.cs.purdue.edu/homes/bendy/Fiat/FiatByteString.pdf][Using Coq to write fast and correct Haskell]]. ~ J. Wiegley & B. Delaware
  #Haskell #Coq
+ [[https://medium.com/ventre-tech/haskells-triangle-or-more-fun-with-recursion-9350155689ac][Pascal's triangle in Haskell and JavaScript: or, more fun with recursion!]] ~
  T. Cothran #Haskell #JavaScript
+ [[https://arxiv.org/pdf/1707.01747][Verifying strong eventual consistency in distributed systems]]. ~ V.B.F. Gomes
  et als. #ITP #IsabelleHOL
+ [[https://github.com/jwbuurlage/category-theory-programmers/raw/master/doc/categories_for_programmers.pdf][Categories and Haskell (An introduction to the mathematics behind modern
  functional programming)]]. ~ Jan-Willem Buurlage #Haskell #Math
+ [[http://www.math.kit.edu/iag3/~wellen/media/diss.pdf][Formalizing Cartan geometry in modal homotopy type theory]]. ~ F. Wellen #ITP
  #Agda #Math #HoTT
+ [[https://arxiv.org/pdf/1706.10269][A formalization of convex polyhedra based on the simplex method]]. ~
  X. Allamigeon & R.D. Katz #ITP #Coq #Math
+ [[https://www.twilio.com/blog/2017/07/setting-up-your-haskell-developer-environment-with-twilio.html][Get started with sending SMS in Haskell]]. ~ Lizzie Siegle #Haskell
+ [[http://teh.id.au/posts/2017/07/15/state-machine-testing/index.html][State machine testing with Hedgehog]]. ~ Tim Humphries #Haskell
+ [[https://github.com/adomokos/haskell_katas][Simple exercises in Haskell, using HSpec]]. ~ Attila Domokos #Haskell
+ [[https://vincenthz.github.io/posts/haskell/2017-07-20-ghc-stack.html][Compiling GHC with Stack for Stack]]. ~ Vincent Hanquez #Haskell 
+ [[https://hakonrossebo.github.io/functional-programming-babelfish/][Functional programming Babelfish]]. ~ Håkon Rossebø #Purescript #Haskell #Elm
  #Fsharp
+ [[http://www.cs.utexas.edu/~marijn/publications/ACL2-ARCADE.pdf][Industrial use of ACL2: applications, achievements, challenges, and directions]]. ~ J S. Moore & M.J.H. Heule #ACL2
+ [[https://github.com/M42/mikrokosmos][Mikrokosmos: an untyped lambda calculus interpreter]]. ~ Mario Román #Haskell
  #Logic
+ [[http://fastrelax.gforge.inria.fr/files/2017/rouhling.pdf][A formal proof in Coq of LaSalle's invariance principle]]. ~ C. Cohen &
  D. Rouhling ([[https://github.com/drouhling/LaSalle][Code]]) #ITP #Coq
+ [[https://pp.info.uni-karlsruhe.de/uploads/publikationen/ullrich16masterarbeit.pdf][Simple verification of Rust programs via functional purification]]. ~
  S. Ullrich #ITP #LeanTP #Rust  
+ [[http://www.inf.ed.ac.uk/teaching/courses/ar][Course: Automated reasoning (2016-17)]]. ~ J. Fleuriot #AR #Logic #ITP
  #IsabelleHOL
+ [[http://www.brics.dk/RS/97/18/BRICS-RS-97-18.pdf][How to believe a machine-checked proof]]. ~ R. Pollack (1997). #ATP #ITP
+ [[http://logitext.mit.edu/main][Logitext: an educational proof assistant for first-order classical logic using the sequent calculus]]. #Logic #Coq #Haskell
+ [[http://blog.ezyang.com/2012/05/what-happens-when-you-mix-three-research-programming-languages-together][What happens when you mix three research programming languages together]]. ~
  E.Z. Yang #Coq #Haskell
+ [[https://hal.inria.fr/hal-01559073/document][Equivalences for free! (Univalent parametricity for effective transport)]]. ~
  N. Tabareau et als. #ITP #Coq
+ [[https://infoscience.epfl.ch/record/229878/files/simplicitly_1.pdf][Simplicitly (Foundations and applications of implicit function types)]]. ~
  M. Odersky et als. #Scala
+ [[https://www.fpcomplete.com/blog/2017/07/the-rio-monad][The RIO monad]]. ~ M. Snoyman #Haskell
+ [[http://www.fast.ai/2017/07/17/num-lin-alg][New fast.ai course: Computational linear algebra]]. ~ Rachel Thomas #Python
  #Math
+ [[http://kaygun.tumblr.com/post/163235120739][Steenrod-Milnor and tournament sequences]]. ~ @Atabey_Kaygun #CommonLisp #Math
+ [[https://www.isa-afp.org/entries/Decl_Sem_Fun_PL.shtml][Declarative semantics for functional languages in Isabelle/HOL]]. ~ Jeremy Siek
  #IsabelleHOL
+ [[https://arxiv.org/pdf/1707.03762][Declarative semantics for functional languages: compositional, extensional,
  and elementary]]. ~ Jeremy G. Siek
+ [[http://gallium.inria.fr/~xleroy/courses/DSSS-2017][Course: The formal verification of compilers]]. ~ Xavier Leroy #Coq #DSSS17
+ [[https://jeremykun.com/2017/07/24/boolean-logic-in-quadratic-polynomials][Boolean logic in polynomials]]. ~ Jeremy Kun | Math ∩ Programming #Logic #Math
+ [[https://arxiv.org/pdf/1707.02115][A verified certificate checker for floating-point error bounds]]. ~ H Becker, E
  Darulova, MO Myreen #ITP #Coq #HOL4
+ [[https://deepspec.org/event/dsss17/lecture_zdancewic.html][Vellvm: Verifying the LLVM]]. ~ Steve Zdancewic #Coq #DSSS17 
+ [[https://www.reddit.com/r/haskell/comments/6p2x0p/list_of_companies_that_use_haskell/][List of companies that use Haskell]]. #Haskell
+ [[https://cacm.acm.org/magazines/2017/8/219596-hacker-proof-coding/fulltext][Hacker-proof coding]]. ~ Esther Shein | Communications of the ACM   
+ [[https://cacm.acm.org/magazines/2017/8/219605-data-science/fulltext][Data science: challenges and directions]]. ~ Longbing Cao | Communications of
  the ACM #DataScience
+ [[https://observatoriosociallacaixa.org/es/-/la-ciencia-nunca-se-penso-para-el-mercado-pero-hoy-es-una-mercancia][«La ciencia nunca se pensó para el mercado, pero hoy es una mercancía»]] ~
  Andrea Saltelli
+ [[https://arxiv.org/pdf/1606.02941][A proof strategy language and proof script generation for Isabelle/HOL]]. ~
  Y. Nagashima, R. Kumar #IsabelleHOL
+ [[https://gist.github.com/CMCDragonkai/b203769c588caddf8cb051529339635c][Existential types in Haskell]]. ~ Roger Qiu #Haskell
+ [[https://homes.cs.washington.edu/~bodik/ucb/cs294fa12.html][Course: Program synthesis for everyone]]. ~ R. Bodik, E. Torlak 
+ [[https://elpais.com/elpais/2017/07/26/el_aleph/1501085305_943289.amp.html][Cantor, el Aleph y los distintos infinitos]]. ~ M.A. Morales | El Aleph
  #Matemáticas
+ [[https://www.youtube.com/channel/UC5yB0ZRgc4A99ttkwer-dDw/videos?shelf_id=0&view=0&sort=dd][DeepSpec Summer School videos]]. #DSSS17 #Coq
+ [[https://github.com/DeepSpec/dsss17][Lecture material for DeepSpec Summer School 2017]]. #DSSS17 #Coq
+ [[https://hal.archives-ouvertes.fr/hal-01558252/document][Toward certification for free!: correct-by-construction ML oracles with
  polymorphic LCF style]]. ~ S. Boulmé, A. Maréchal #Coq
+ [[https://ruor.uottawa.ca/bitstream/10393/36354/3/Vinogradova_Polina_2017_thesis.pdf][Formalizing abstract computability: Turing categories in Coq]]. ~
  P. Vinogradova #PhD_Thesis #Coq
+ [[http://www-sop.inria.fr/marelle/lindemann][Formal proof of the Lindemann-Weierstrass theorem]]. ~ S. Bernard. #Coq #Math 
+ [[https://web.math.unifi.it/~maggesi/papers/gabrielli-maggesi-quaternions-2017.pdf][Formalizing basic quaternionic analysis]]. ~ A. Gabrielli, M. Maggesi
  #HOL_Light #Math
+ [[http://www.tweag.io/posts/2017-07-27-streaming-programs.html][Streaming programs without lazyness: a short primer]]. ~ F. Domínguez &
  M. Boespflug #Haskell
+ [[https://github.com/benjaminselfridge/logix][Logic Explorer: interactive proof assistant for sequent calculi]]. ~ Ben
  Selfridge #Haskell #Logic
+ [[https://github.com/benjaminselfridge/propcheck][Proof checker for propositional logic]]. ~ Ben Selfridge #Haskell #Logic 
+ [[http://www.mchaver.com/posts/2017-07-12-lens-tutorial-1.html][Lens tutorial - SimpleLens]]. ~ mchaver #Haskell 
+ [[https://www.ethz.ch/content/dam/ethz/special-interest/infk/inst-infsec/information-security-group-dam/people/andreloc/lochbihler2017itp.pdf][Effect polymorphism in higher-order logic (proof pearl)]]. ~ A. Lochbihler
  #IsabelleHOL
+ [[https://functor.tokyo/blog/2017-07-28-ghc-warnings-you-should-enable][GHC warnings you should use in addition to -Wall]]. ~ Dennis Gosnell
  #Haskell
+ [[http://www.joachim-breitner.de/blog/727-How_is_coinduction_the_dual_of_induction][How is coinduction the dual of induction?]] ~ J. Breitner  #Haskell
+ [[https://github.com/wenkokke/sf][Port of Software Foundations to Agda]]. ~ Wen Kokke & Philip Wadler #Agda
+ [[http://www.joachim-breitner.de/blog/726-Coinduction_in_Coq_and_Isabelle][Coinduction in Coq and Isabelle]]. ~ J. Breitner #Coq #IsabelleHOL
+ [[https://github.com/wenkokke/EnumeratingTheRationals][Formalization of the functional pearl "Enumerating the rationals" by Gibbons,
  Lester and Bird in Coq]]. ~ Wen Kokke #Coq #Math
+ [[https://www.arrdem.com/2017/07/27/intermediate-abstraction][Intermediate abstraction]]. ~ Reid McKenzie #Programming #Clojure
+ [[http://www.mathematik.tu-darmstadt.de/~buchholtz/leanhott.pdf][Homotopy Type Theory in Lean]]. ~ U. Buchholtz, F. van Doorn, J. von Raumer
  #HoTT #LeanTP
+ [[https://www.seas.upenn.edu/~rrand/qwire_practice.pdf][Qwire practice: Formal verification of quantum circuits in Coq]]. ~ R. Rand,
  J. Paykin, S. Zdancewic #Coq
+ [[https://codygman.github.io/posts/2017-07-30-faster-command-line-tools-with-haskell.html][Faster command line tools with Haskell]]. ~ Cody Goodman #Haskell
+ [[http://francis.naukas.com/2017/07/29/la-demostracion-matematica-mas-larga][La demostración matemática más larga]]. ~ F.R. Villatoro #Matemáticas
  #Computación
+ [[https://www.fpcomplete.com/blog/2017/07/to-void-or-to-void][To Void or to void]]. ~ M. Snoyman #Haskell
+ [[http://gottwurfelt.com/2017/07/30/the-riddle-of-the-number-chain/][The riddle of the number chain]]. ~ Michael Lugo #Math
+ [[http://lambda.jstolarek.com/2017/07/deepspec-summer-school-2017-a-summary/][DeepSpec Summer School 2017: a summary]]. ~ Jan Stolarek #Formal_verification
  #DSSS17

* Agosto 2017

+ [[https://www.isa-afp.org/entries/DynamicArchitectures.shtml][Dynamic architectures in Isabelle/HOL]]. ~ Diego Marmsoler #IsabelleHOL #AFP
+ [[http://logicaltypes.blogspot.com.es/2017/07/1haskelladay-july-2017-problems-and.html][July 2017 1HaskellADay problems and solutions]]. ~ @geophf | Typed Logic
  #Haskell #Haskell #1HaskellADay
+ [[https://motherboard.vice.com/en_us/article/padnvm/200-terabyte-proof-demonstrates-the-potential-of-brute-force-math][200 terabyte proof demonstrates the potential of brute-force math]]. ~ M. Byrne
  #Math #CompSci
+ [[https://github.com/abingham/outline-toc.el][Table-of-contents sidebar for Emacs]]. ~ Austin Bingham #Emacs
+ [[https://www.isa-afp.org/entries/Stewart_Apollonius.shtml][Stewart's theorem and Apollonius' theorem in Isabelle/HOL]]. ~ Lukas Bulwahn
  #IsabelleHOL #Math #AFP
+ [[http://arxiv.org/abs/1707.09616][Owl: A general-purpose numerical library in OCaml]]. ~ L. Wang #OCaml #Math
+ [[https://deepspec.org/event/dsss17/schedule.html][The DeepSpec Summer School on Verified Systems (Schedule)]]. #DSSS17 #Coq
+ [[http://bit.ly/2f7n1SW][A vision for automated deduction rooted in the connection method]]. ~ Wolfgang
  Bibel #ATP
+ [[https://github.com/aimyskk/lib-competitive][A library for competitive programming in Haskell]]. #Haskell
+ [[http://kaygun.tumblr.com/post/163641158789][Transitive closure of a directed graph or a relation]]. ~ @Atabey_Kaygun #CommonLisp #Clojure #Math
+ [[https://pragprog.com/magazines/2012-08/thinking-functionally-with-haskell][Thinking functionally with Haskell: A deep dive into the functional pool]]. ~
  Paul Callaghan #Haskell
+ [[http://www.andrew.cmu.edu/user/avigad/Students/wu_thesis.pdf][A formally verified proof of Kruskal’s tree theorem in Lean]]. ~ M. Wu
  #MsC_Thesis #ITP #LeanTP
+ [[https://pragprog.com/magazines/2012-09/thinking-functionally-with-haskell][Thinking functionally with Haskell: Types? tests? We need a new word]]. ~ Paul
  Callaghan #Haskell
+ [[https://leanprover.github.io/logic_and_proof][Logic and proof]]. ~ J. Avigad, R.Y. Lewis, F. van Doorn #Logic #ITP #LeanTP  
+ [[https://en.wikipedia.org/wiki/Computer-assisted_proof][Computer-assisted proof]]. ~ Wikipedia #Math #CompSci
+ [[https://arxiv.org/pdf/1302.2898][Mathematics in the age of the Turing machine]]: a survey of mathematical proofs
  that rely on computer calculations and formal proofs. ~ T. Hales
+ [[http://www.andrew.cmu.edu/user/avigad/Talks/stanford_formal_methods.pdf][Formal methods in mathematics and the Lean theorem prover]]. ~ J. Avigad #Logic
  #Math #ITP #LeanTP
+ [[https://beckyleamorrisphilosophy.files.wordpress.com/2015/10/reviseddissertation.pdf][Appropriate steps (A theory of motivated proofs)]]. ~ R. Morris #PhD_Thesis
  #Math #Logic
+ [[http://www.cs.cmu.edu/~sicung/papers/MS_thesis.pdf][Counting zeros over finite fields using Gröbner bases]]. ~ S. Gao #MS_Thesis
  #Math
+ [[https://github.com/fniessen/refcard-org-mode][Org mode syntax reference card]]. ~ Fabrice Niessen #Emacs
+ [[https://github.com/chrisdone/wish][wish: A trivial web browser written in Haskell]]. ~ Chris Done #Haskell
+ [[http://oa.upm.es/47203/1/TFG_INES_BLAZQUEZ_BALLESTEROS.pdf][Implementación de un algoritmo de búsqueda aleatoria en programación lógica]]. ~
  I. Blázquez #TFG #Prolog
+ [[https://www.lix.polytechnique.fr/Labo/Dale.Miller/papers/pbt-draft.pdf][Property-based testing via proof reconstruction: work-in-progress]]. ~ R
  Blanco, D Miller, A Momigliano #Prolog
+ [[http://dl.acm.org/citation.cfm?id=3107239][The science of brute force (Mathematics solves problems by pen and paper. CS
  helps us to go far beyond that)]] ~ MJH Heule, O. Kullmann
+ [[https://idus.us.es/xmlui/bitstream/handle/11441/63139/Paluzo%2520Hidalgo%2520Eduardo%2520TFG.pdf][Lógica de primer orden en Haskell]]. ~ E. Paluzo #TFG #Haskell #Lógica
+ [[https://idus.us.es/xmlui/bitstream/handle/11441/63203/Valverde%20Rodr%c3%adguez%20Mar%c3%ada%20Dolores%20TFG.pdf?sequence=1&isAllowed=y][Matemática discreta en Haskell]]. ~ M.D. Valverde #TFG #Haskell #Matemáticas
+ [[https://idus.us.es/xmlui/bitstream/handle/11441/63232/Mateo%20Ceballos%20Mar%c3%ada%20Dolores%20TFG.pdf?sequence=1&isAllowed=y][Formalización de cáculos lógicos en Isabelle/HOL]]. ~ M.D. Mateo #TFM
  #IsabelleHOL #Lógica
+ [[https://dspace.library.uu.nl/bitstream/handle/1874/351879/thesis.pdf][Formalising monotone frameworks: a dependently typed implementation in Agda]]. ~
  J.J. van Wijk #MSc_Thesis #Agda
+ [[http://www.lambdadays.org/static/upload/media/1487605199766609adambarwellldays17.pdf][Finding functional pearls: Detecting recursion schemes in Haskell functions
  via anti-unification]]. ~ AD Barwell, C Brown, K Hammond #Haskell
+ [[https://kunigami.blog/2017/08/05/lazy-rebuilding][Lazy rebuilding]]. ~ G. Kunigami #OCaml
+ [[https://github.com/jozefg/higher-order-unification/blob/master/explanation.md][A simple, concise implementation of Huet's algorithm in Haskell]]. ~ Danny
  Gratzer #Haskell
+ [[http://www.openculture.com/2017/08/free-you-can-now-read-classic-books-by-mit-press-on-archive-org.html][Free: You can now read classic books by MIT Press on archive.org]].
+ [[https://pp.ipd.kit.edu/uploads/publikationen/ebner17meta.pdf][A metaprogramming framework for formal verification]]. ~ G. Ebner et
  als. #LeanTP
+ [[https://pragprog.com/magazines/2012-10/thinking-functionally-with-haskell][Thinking functionally with Haskell: Playing with Haskell]]. ~ Paul Callaghan
  #Haskell
+ [[http://bit.ly/2vIwczC][Formalising and monitoring traffic rules for autonomous vehicles in
  Isabelle/HOL]]. ~ A. Rizaldi et als. #IsabelleHOL
+ [[http://www.cis.upenn.edu/~llamp/pdf/urns.pdf][Ode on a random urn (Functional pearl)]]. ~ L Lampropoulos, A Spector-Zabusky,
  K Foner #Haskell
+ [[https://mmhaskell.com/blog/2017/8/7/the-future-is-functional-haskell-and-the-ai-native-world][The future is functional: Haskell and the AI-native]]. ~ James Bowen. #Haskell #AI
+ [[https://arxiv.org/pdf/1708.02553][Robust computer algebra, theorem proving, and oracle AI]]. ~ G.P. Sarma,
  N.J. Hay #ATP #CAS #AI
+ [[https://pragprog.com/magazines/2012-11/thinking-functionally-with-haskell][Thinking functionally with Haskell: Is there anything left to say about
  monads?]] ~ Paul Callaghan #Haskell #Haskell
+ [[https://sites.google.com/site/carlosolarte/home/pub/repository/lsfa-2017.pdf][Mechanizing linear logic in Coq]]. ~ B. Xavier et als. #ITP #Coq #Logic
+ [[https://arxiv.org/pdf/1708.01829][Declarative statistics]]. ~ R. Rossi et als. #Constraint_programming
  #Statistics
+ [[https://hal.archives-ouvertes.fr/hal-01571133/file/ArchipoffJanin.pdf][Unified media programming: an algebraic approach]]. ~ S. Archipoff & D. Janin
  #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_5.pdf][Functional baby talk: analysis of code fragments from novice Haskell
  programmers]]. ~ J Singer, B Archibald #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_7.pdf][Overcoming non distributivity: a case study in functional programming]]. ~
  J.C. Saenz, M. Stannett #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_1.pdf][Vector programming using structural recursion (an introduction to vectors for
  beginners)]]. ~ M.T. Morazán #Racket
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_2.pdf][Using Elm to introduce algebraic thinking to K-8 students]]. ~ C. d’Alves et
  als. #Elm
+ [[https://irods.org/uploads/2017/Xu-RENCI-QueryArrow-paper.pdf][QueryArrow: semantically unified query and update of heterogeneous data
  stores]]. ~ Hao Xu et als. #Haskell
+ [[https://github.com/xu-hao/QueryArrow][QueryArrow: A semantically unified SQL and NoSQL query and update system]]. ~
  Hao Xu #Haskell
+ [[https://gist.github.com/paf31/adfd15fbb1ac8b99fc68be2c9aca8427][Why you should use PureScript]]. ~ Phil Freeman #PureScript
+ [[https://github.com/gasi/gasi.ch/raw/e027e1c458f57d7d4778df2bba12ab91496b2db5/public/publications/functional-programming-fun-profit-daniel-gasienica-notes.pdf][Functional programming for & fun profit]] (or: how I learned to stop worrying
  and love shipping Haskell code). ~ D. Gasienica #Haskell
+ [[http://www4.di.uminho.pt/~jno/ps/pdbc_part.pdf][Program design by calculation (DRAFT / Last update: April 2017)]]. ~
  J.N. Oliveira #eBook #Haskell
+ [[http://www.tweag.io/posts/2017-08-09-array-programming-in-haskell.html][Array programming in Haskell]]. ~ Manuel Chakravarty | Tweag I/O #Haskell
+ [[https://jship.github.io/posts/2017-08-09-writing-performant-haskell-part-1.html][Writing performant Haskell (1 of 6): Intro]]. ~ Jason Shipman #Haskell
+ [[http://www.nationmultimedia.com/detail/opinion/30323136][How can humans keep control of AI?]] #AI #DeepLearning
+ [[http://software.imdea.org/Conferences/hcvs17/papers/paper_4.pdf][Using a set constraint solver for program verification]]. ~ M. Cristiá,
  G. Rossi & C. Frydman #ConstraintProgramming
+ [[https://jship.github.io/posts/2017-08-10-writing-performant-haskell-part-2.html][Writing performant Haskell (2 of 6): Strings]]. ~ Jason Shipman #Haskell
+ [[https://www.lvguowei.me/post/magit-rebase/][Magit tutorial - Rebase (Part I)]]. ~ Guowei Lv #Emacs
+ [[https://www.lvguowei.me/post/magit-rebase-2/][Magit tutorial - Rebase (Part II)]]. ~ Guowei Lv #Emacs
+ [[https://blog.qfpl.io/posts/fp-cheat-sheet/][Functional programming cheat sheet]]. ~ Tony Morris #Haskell
+ [[https://adelbertc.github.io/posts/2017-08-09-representable-functors.html][Reasoning with representable functors]]. ~ Adelbert Chang #Haskell
+ [[https://mindmodeling.org/cogsci2017/papers/0175/paper0175.pdf][A computational logic approach to human syllogistic reasoning]]. ~ A.O. da
  Costa et als. #Logic
+ [[https://jship.github.io/posts/2017-08-11-writing-performant-haskell-part-3.html][Writing performant Haskell (3 of 6): SPECIALIZE]]. ~ Jason Shipman #Haskell
+ [[https://pdfs.semanticscholar.org/6a15/a21dfdf5c7b0102fcb3c5e6988c8c5386299.pdf][Declarative algorithms for term generation, counting]]. ~ P. Tarau #Prolog
+ [[https://wildunix.es/posts/el-modelo-m4-de-la-maquina-enigma][El modelo M4 de la máquina Enigma]]. ~ M. García #Haskell
+ [[https://github.com/ringstellung/Enigma][Implementation of Enigma versions in Haskell]]. ~ M. García #Haskell
+ [[https://github.com/mortberg/cubicaltt][Experimental implementation of Cubical Type Theory]]. ~ Anders Mörtberg #Haskell
+ [[https://github.com/chrisdone/tdiff][tdiff: Simply print the time difference between lines from stdin]]. ~ Chris
  Done #Haskell
+ [[https://jship.github.io/posts/2017-08-12-writing-performant-haskell-part-4.html][Writing performant Haskell (4 of 6): builder revisited]]. ~ Jason Shipman
  #Haskell
+ [[https://github.com/frelindb/agsyHOL][agsyHOL: a theorem prover for higher-order logic]]. ~ Fredrik Lindblad #Haskell
  #Logic
+ [[http://www.teachthought.com/pedagogy/literacy/how-to-read-a-book-3-strategies-for-critical-reading][How to read a book: 3 strategies & questions for critical reading]]. ~ Terry
  Heick 
+ [[https://markkarpov.com/post/announcing-hasky-stack.html][Announcing Hasky Stack]]. ~ Mark Karpov #Haskell #Emacs
+ [[https://www.lvguowei.me/post/magit-tutorial-bisect][Magit tutorial: Bisect]]. ~ Guowei Lv #Emacs
+ [[https://link.springer.com/content/pdf/10.1007%2Fs10817-017-9424-6.pdf][Deciding univariate polynomial problems using untrusted certificates in
  Isabelle/HOL]]. ~ W Li, GO Passmore, LC Paulson #IsabelleHOL
+ [[https://arxiv.org/pdf/1708.02328][Deriving law-abiding instances]]. ~ R. Scott et als. #Haskell #LiquidHaskell
+ [[https://arxiv.org/pdf/1708.01745][On the quest for an acyclic graph]]. ~ M Janota, R Grigore, V Manquinho #SAT
  #Logic
+ [[http://www-history.mcs.st-andrews.ac.uk/Extras/Creative_art.html][Mathematics as a creative art]]. ~ Paul Halmos #Math
+ [[http://opus.bath.ac.uk/56621/1/North_L_dissertation_2016_17_1_.pdf][Static analysis of programs using semirings]]. ~ L. North #Haskell
+ [[https://jship.github.io/posts/2017-08-14-writing-performant-haskell-part-5.html][Writing performant Haskell (5 of 6): dive into text]]. ~ Jason Shipman
  #Haskell
+ [[https://mmhaskell.com/blog/2017/8/14/starting-out-with-haskell-tensor-flow][Starting out with Haskell Tensor Flow]]. ~ James Bowen. #Haskell
  #TensorFlow
+ [[https://arxiv.org/pdf/1708.03684][An introduction to quantum computing, without the physics]]. ~ G. Nannicini
  #QuantumComputing
+ [[https://github.com/jonascarpay/apecs][apecs: a fast, type driven, extensible ECS (Entity Component System) in pure Haskell]]. ~ Jonas Carpay #Haskell
+ [[https://www.ethz.ch/content/dam/ethz/special-interest/infk/inst-infsec/information-security-group-dam/people/andreloc/lochbihler2017itp.pdf][Effect polymorphism in higher-order logic (Proof Pearl)]]. ~ A. Lochbihler
  #IsabelleHOL
+ [[https://www.akalin.com/number-theory-haskell-foray][A foray into number theory with Haskell]]. ~ Fred Akalin #Haskell #Math
+ [[https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20170007190.pdf][Challenges in the verification of reinforcement learning algorithms]]. ~ P. van
  Wesel, A.E. Goodloe #FormalVerification #ML
+ [[https://gupea.ub.gu.se/bitstream/2077/53339/1/gupea_2077_53339_1.pdf][Proof editor for natural deduction in first-order logic]]. ~ E. Björnsson et
  als. #Logic #Teaching
+ [[https://repository.eafit.edu.co/bitstream/handle/10784/4554/LoboVesga-2013.Practica-investigativa-II.Hacia-la-formalizacion-del-razonamiento-ecuacional-sobre-monadas.pdf?sequence=2&isAllowed=y][Hacia la formalización del razonamiento ecuacional sobre mónadas]]. ~ E. Lobo
  #Agda
+ [[https://hal.archives-ouvertes.fr/hal-01251943/document][From sets to bits in Coq]]. ~ A. Blot, P.É. Dagand & J. Lawall #Coq
+ [[https://github.com/mit-frap/spring17][Problem sets for MIT 6.887 "Formal reasoning about programs", Spring
  2017]]. #Coq
+ [[https://coq-math-problems.github.io][Coq math problems (interesting, challenging, or fun math problems formalized
  in Coq)]]. #Coq #Math
+ [[https://homes.cs.washington.edu/~jrw12/InductionExercises.html][Exercises on generalizing the induction hypothesis]]. ~ James Wilcox #Coq
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_10.pdf][Making automatic theorem provers more versatile]]. ~ S. Cruanes #ATP
+ [[https://dpwright.com/posts/2015/07/17/writing-a-zx-spectrum-game-in-haskell][Writing a ZX Spectrum game in Haskell (introducing the z80 and zxspectrum
  packages)]]. ~ Daniel P. Wright #Haskell
+ [[https://elpais.com/elpais/2016/07/08/ciencia/1467991448_434804.amp.html][El lenguaje de la naturaleza]]. ~ A. Cordoba #Matemáticas
+ [[http://unibuc.ro/~conference/from2017/abstracts/absAndreiP.pdf][Proof assistants as smart programming languages]]. ~ A. Popescu #Programming
  #IsabelleHOL
+ [[https://arxiv.org/pdf/1708.02318][Adaptive lock-free data structures in Haskell: a general method for
  concurrent implementation swapping]]. ~ C.H. Chen et als. #Haskell
+ [[https://books.google.es/books?id=SyEsDwAAQBAJ&lpg=PA21&ots=-VfLwQIBk0&dq=%22Science%20fiction%20at%20the%20far%20side%20of%20technology%3A%20Vernor%20Vinge%E2%80%99s%20singularity%20thesis%20versus%20the%20limits%20of%20AI-research%22&pg=PA21#v=onepage&q&f=false][Science fiction at the far side of technology: Vernor Vinge’s singularity thesis versus the limits of AI-research]]. ~ M.W. Johansen #AI #ATP
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_1.pdf][24 challenges in deductive software verification]]. ~ R. Hähnle & M. Huisman
  #Verification
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_2.pdf][Towards strong higher-order automation for fast interactive verification]]. ~
  J.C. Blanchette #ATP
+ [[http://chrisdone.com/toys/duet-delta][Duet: an educational dialect of Haskell aimed at interactivity]]. ~ Chris Done
  #Haskell
+ [[http://www.microsiervos.com/archivo/ia/gato-inteligencia-artificial-explica.html][La IA que se explica: «Esto es un gato porque tiene pelo, bigotes, garras y
  orejas de gato como estas»]] ~ @Alvy #IA
+ [[https://mappingignorance.org/2017/08/14/dont-understand-artificial-intelligence-takes-decisions-statement-mean][What does the “we don’t understand how artificial intelligence takes decisions” statement mean?]] ~ Julián Estévez #AI #DeepLearning
  #CompSci
+ [[http://www.cetusnews.com/business/Inside-Darpa%E2%80%99s-Push-to-Make-Artificial-Intelligence-Explain-Itself.HJXCyEf5wW.html][Inside Darpa’s push to make artificial intelligence explain itself]]. ~
  S. Castellanos & S. Norton #AI
+ [[https://github.com/volhovM/orgstat][OrgStat: Statistics visualizer for org-mode]]. ~ Mikhail Volkhov #Haskell
  #Emacs #OrgMode
+ [[http://blog.ezyang.com/2017/08/backpack-for-deep-learning/][Backpack for deep learning]]. ~ Kaixi Ruan #Haskell #DeepLearning
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_3.pdf][Automated reasoning for explainable artificial intelligence]]. ~ M.P. Bonacina
  #ATP #AI
+ [[https://github.com/ivanperez-keera/Yampa][Yampa: Domain-specific language embedded in Haskell for programming hybrid
  (mixed discrete-time and continuous-time) systems]]. ~ Ivan Perez #Haskell
+ [[http://www.cs.nott.ac.uk/~psxip1/papers/2017-HaskellSymposium-Perez-BackToTheFuture-TimeTravelInFRP-latest.pdf][Back to the future: time travel in FRP]]. ~ Ivan Perez #Haskell #FRP
+ [[http://ictactjournals.in/paper/IJCT_Vol_8_Iss_2_Paper_7_1533_1539.pdf][Cryptographic protocols specification and verification tools: a survey]]. ~
  A.H. Shinde, A.J. Umbarkar & N.R. Pillai #Haskell #Isabelle #Coq
+ [[https://arxiv.org/pdf/1708.03734][Generalized graph pattern matching]]. ~ P. Almagro & F. Sancho 
+ [[http://dl.acm.org/ft_gateway.cfm?id=3106184&ftid=1899713&dwn=1&CFID=799584729&CFTOKEN=98810645][Theorem provers as a learning tool in theory of computation]]. ~ M. Knobelsdorf
  et als. #ITP #Coq #Learning
+ [[https://arxiv.org/pdf/cs/0609124][The three gap theorem (Steinhauss conjecture)]]. ~ M. Mayero #Coq #Math
+ [[http://www21.in.tum.de/~lammich/grat/][GRAT: Efficient formally verified SAT solver certification toolchain]]. ~
  P. Lammich #SAT #IsabelleHOL
+ [[http://www.cl.cam.ac.uk/teaching/1516/DiscMath/DiscMathProofsNumbersSetsSlides.pdf][Discrete mathematics]]. ~ M. Fiore #Math
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_6.pdf][SC2 challenges: when Satisfiability Checking and Symbolic Computation join
  forces]]. ~ E. Ábrahám et als. #ATP
+ [[https://ro-che.info/articles/2017-08-20-understanding-ans][Understanding asymmetric numeral systems]]. ~ Roman Cheplyaka #Haskell
  #Math
+ [[https://blog.plover.com/math/24-puzzle-2.html][Recognizing when two arithmetic expressions are essentially the same]]. ~ Mark
  Dominus #Math #Puzzle
+ [[https://github.com/melisgl/mgl][MGL: Common Lisp machine learning library]]. ~ Gábor Melis #CommonLisp #ML
+ [[https://www.lvguowei.me/post/the-most-beautiful-program-ever-written][The most beautiful program ever written: a Lisp interpreter written in
  Lisp]]. ~ Guowei Lv #Lisp
+ [[https://www.cs.indiana.edu/~sabry/papers/information-effects.pdf][Information effects]]. ~ R.P. James & A. Sabry #Haskell 
+ [[http://reasonablypolymorphic.com/blog/information-effects][Review: Information effects]]. #Haskell #ReversibleComputing
+ [[https://github.com/Gabriel439/haskell-nix][Nix and Haskell in production]]. ~ G. Gonzalez #Haskell #Nix
+ [[https://github.com/adjoint-io/merkle-tree][Haskell merkle trees]]. #Haskell
+ [[https://youtu.be/NILudp6hti8][Ser matemático es la profesión del futuro]]. ~ Cedric Villani #Matemáticas
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_11.pdf][The potential of interference-based proof systems]]. ~ M.J.H. Heule & B. Kiesl
  #ATP
+ [[https://mmhaskell.com/blog/2017/8/21/digging-in-deep-solving-a-real-problem-with-haskell-tensor-flow][Digging in deep: solving a real problem with Haskell Tensor Flow]]. ~ James
  Bowen. #Haskell #TensorFlow
+ [[http://www.microsiervos.com/archivo/ciencia/piramides-numeros-primos-palindromos.html][Pirámides de números primos capicúa]]. ~ @Wicho #Matemáticas
+ [[http://www.utm.edu/staff/caldwell/preprints/JRM_prime_pyramids.pdf][Palindromic prime pyramids]]. ~ G.L. Honaker & C.K. Caldwell #Math
+ [[http://www.utm.edu/staff/caldwell/supplements/][Supplement to "Palindromic prime pyramids"]]. ~ C.K. Caldwell #Math
+ [[http://jyp.github.io/pdf/Prettiest.pdf][Functional Pearl: a pretty but not greedy printer]]. ~ J.P. Bernardy #Haskell
+ [[https://matela.com.br/paper/speculate.pdf][Speculate: discovering conditional equations and inequalities about black-box
  functions by reasoning from test results]]. ~ R. Braquehais & C. Runciman
  #Haskell
+ [[https://arxiv.org/pdf/1406.4823][Notions of computation as monoids]]. ~ E. Rivas & M. Jaskelioff #Haskell
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_12.pdf][Industrial use of ACL2: applications, achievements, challenges, and
  directions]]. ~ JS. Moore & M.J.H. Heule #ACL2
+ [[http://conal.net/papers/generic-parallel-functional/generic-parallel-functional.pdf][Generic functional parallel algorithms: Scan and FFT]]. ~ Conal Elliott
  #Haskell
+ [[https://amp.theguardian.com/commentisfree/2017/aug/21/universities-broke-cut-pointless-admin-teaching][Universities are broke. So let’s cut the pointless admin and get back to
  teaching]]. ~ A. Spicer
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_19.pdf][Checkable proofs for first-order theorem proving]]. ~ G. Reger & M. Suda #ATP
+ [[http://www.danwc.com/s/adafuzz2017.pdf][A framework for adaptive differential privacy]]. ~ D. Winograd-Cort,
  A. Haeberlen, A. Roth & B.C. Pierce #OCaml
+ [[https://rubenpieters.github.io/induction/equationalreasoning/2017/08/23/induction-pointfree-1.html][Induction for point-free equational reasoning]]. ~ Ruben Pieters #Haskell #Math
+ [[http://queue.acm.org/detail.cfm?id=3132371][Vigorous public debates in academic computer science]]. ~ John Regehr #CompSci
+ [[https://tour.eta-lang.org][A tour of Eta (Learn functional programming the easy way)]]. #Eta #Haskell 
+ [[https://smartech.gatech.edu/bitstream/handle/1853/58734/CROCKETT-DISSERTATION-2017.pdf%3Fsequence%3D1%26isAllowed%3Dy][Simply safe lattice cryptography]]. ~ E. Crockett #PhD_Thesis #Haskell #Math
  #Cryptography
+ [[https://www.cs.cmu.edu/~rwh/papers/tail-bounds/paper.pdf][Verified tail bounds for randomized programs]]. ~ J. Tassarotti & R. Harper
  #Coq
+ [[http://spivey.oriel.ox.ac.uk/wiki2/images/a/a1/Copipes.pdf][Faster coroutine pipelines]]. ~ Mike Spivey #Haskell
+ [[https://medium.com/@zyxoas/abusing-haskell-dependent-types-to-make-redis-queues-safer-cc31db943b6c][Abusing Haskell dependent types to make Redis queues safer]]. ~ Tebello
  M. Thejane #Haskell
+ [[https://openlibra.com/book/a-concise-introduction-to-logic][A concise introduction to logic]]. ~ Craig DeLancey #eBook #Logic #OpenLibra
+ [[https://www.dreamsongs.com/Files/HOPL2-Uncut.pdf][The evolution of Lisp]]. ~ G.L. Steele & R.P. Gabriel #Lisp
+ [[http://www.ccs.neu.edu/home/matthias/HtDP2e/Draft/index.html][How to design programs (second edition)]]. ~ M. Felleisen et als. #eBook
  #Programming #Scheme
+ [[http://adam.chlipala.net/papers/KamiICFP17/KamiICFP17.pdf][Kami: a platform for high-level parametric hardware specification and its
  modular verification]]. ~ J. Choi et als. #Coq
+ [[http://www.michaelburge.us/2017/08/25/writing-a-formally-verified-porn-browser-in-coq.html][Writing a formally-verified porn browser in Coq and Haskell]]. ~ Michael Burge
  #Coq #Haskell
+ [[https://github.com/zjhmale/ntha][The Ntha programming language]]. ~ JHZheng #Haskell
+ [[http://www.cs.princeton.edu/~appel/papers/shrink-fast-correctly.pdf][Shrink fast correctly!]] ~ O. Savary Bélanger & A.W. Appel #Coq
+ [[http://chrispenner.ca/posts/type-tac-toe][Type Tac Toe: advanced type safety]]. ~ Chris Penner #Haskell #Game
+ [[https://jship.github.io/posts/2017-08-27-monad-transformer-commutativity.html][Monad transformer commutativity]]. ~ Jason Shipman #Haskell
+ [[https://www.cs.cmu.edu/~kqy/resources/Verified-HMAC-DRBG.pdf][Verified correctness and security of mbedTLS HMAC-DRBG]]. ~ K.Q. Ye et
  als. #Coq
+ [[http://chrispenner.ca/posts/conways-game-of-life][Conway's game of life using representable and comonads]]. ~ Chris Penner
  #Haskell
+ [[https://github.com/haskell/haskell-ide-engine][The engine for Haskell IDE-integration]]. #Haskell
+ [[http://www.comp.nus.edu.sg/~lxbach/publication/icfem17.pdf][A certified decision procedure for tree shares]]. ~ X.B. Le et als. #Coq
+ [[https://mmhaskell.com/blog/2017/8/28/putting-the-flow-in-tensor-flow][Putting the flow in Tensor Flow!]] ~ James Bowen #Haskell #TensorFlow
+ [[http://chrispenner.ca/posts/representable-discrimination][Radix sort, trie trees, and maps from representable functors]]. ~ Chris Penner
  #Haskell
+ [[https://arxiv.org/pdf/1705.03307][Formalisations using two-level type theory]]. ~ D. Annenkov, P. Capriotti &
  N. Kraus #ITP #LeanTP #HoTT
+ [[https://infoscience.epfl.ch/record/230242/files/EPFL_TH7636.pdf][Verification by reduction to functional programs]]. ~ R.W. Blanc #PhD_Thesis
  #ITP #Leon #Scala
+ [[http://www21.in.tum.de/~nipkow/pubs/aplas17.pdf][Verified root-balanced trees]]. ~ T. Nipkow #ITP #IsabelleHOL #AFP
+ [[http://people.compute.dtu.dk/jobla/esslli2017/certified-soundness-simplest.pdf][Certified soundness of simplest known formulation of first-order logic]]. ~
  John Bruntse Larsen #IsabelleHOL #Logic
+ [[http://chrispenner.ca/posts/free-forgetful-functors][Free and forgetful functors]]. ~ Chris Penner #Haskell
+ [[https://arxiv.org/pdf/1708.07829][Algoritmos para Big Data: Grafos y PageRank]]. ~ S. Garcı́a #TFG #BigData
  #Python
+ [[http://www21.in.tum.de/~lammich/pub/sat2017.pdf][The GRAT tool chain: efficient (UN)SAT certificate checking with formal
  correctness guarantees]]. ~ P. Lammich #IsabelleHOL #SAT
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110266&ftid=1902042&dwn=1&CFID=979044106&CFTOKEN=25644979][How to prove your calculus is decidable: practical applications of
  second-order algebraic theories and computation]]. ~ M. Hamana #Haskell
+ [[http://chrispenner.ca/posts/adjunction-battleship][Adjunctions and Battleship]]. ~ Chris Penner #Haskell
+ [[https://github.com/iostreamer-X/FuncShell][FuncShell: Improve your shell by making it functional through Haskell! (An
  update to Awkward)]]. ~ Rahul Ramteke #Haskell
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110245&ftid=1902035&dwn=1&CFID=979044106&CFTOKEN=25644979][Herbarium Racketensis: a stroll through the woods (functional pearl)]]. ~
  V. St-Amour et als. #FP #Racket
+ [[https://elpais.com/elpais/2017/08/30/el_aleph/1504111102_204003.amp.html][El gran salto entre creer y demostrar]]. ~ M.A. Morales | El Aleph
  #Matemáticas
+ [[https://cdsmith.wordpress.com/2007/06/02/learning-number-theory-and-haskell-the-division-algorithm/][Learning number theory and Haskell: the division algorithm]]. ~ Chris Smith
  #Haskell #Math

* Septiembre 2017

+ [[https://www.isa-afp.org/entries/Orbit_Stabiliser.html][Orbit-stabiliser theorem with application to rotational symmetries in
  Isabelle/HOL]]. ~ J. Rädle #ITP #IsabelleHOL #Math #AFP
+ [[https://proofwiki.org/wiki/Orbit-Stabilizer_Theorem][Orbit-stabilizer theorem]]. ~ Proofwiki #Math
+ [[https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/][Category theory for programmers]]. ~ Bartosz Milewski #Haskell #Math
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?VPT2017.9.pdf][From concurrent programs to simulating sequential programs: correctness of a
  transformation]]. ~ A. Blanchard et als. #Coq
+ [[http://chrispenner.ca/posts/representable-cofree-zippers][Zippers using Representable and Cofree]]. ~ Chris Penner #Haskell
+ [[http://www.cs.man.ac.uk/~david/categories/book/book.pdf][Computational category theory]]. ~ D.E. Rydeheard & R.M. Burstall #eBook #FP
  #SML #Math
+ [[http://www.tweag.io/posts/2017-08-31-hmatrix.html][Enter the matrix, Haskell style]]. ~ Manuel Chakravarty | Tweag I/O #FP #Haskell
  #Math
+ [[http://emanuelpeg.blogspot.com.es/2017/08/7-lenguajes-que-se-utilizan-en.html][7 lenguajes que se utilizan en inteligencia artificial]]. ~ E. Goette
  #Programación #IA
+ [[http://www.rankred.com/best-artificial-intelligence-programming-language][7 best Artificial Intelligence programming language in 2017]]. #AI #Programming
  #Haskell #JavaScript #Prolog #Java #Lisp #Cpp #Python
+ [[https://github.com/GaloisInc/regex-fsm][regex-fsm: Convert regular expressions into layered finite-state machines]]. ~
  David Johnson #Haskell
+ [[https://github.com/Crazycolorz5/AlgebraicPrelude][AlgebraicPrelude: Remaking a basis for Haskell that is well grounded in Group
  theory]]. #Haskell #Math
+ [[https://blog.jle.im/entry/fixed-length-vector-types-in-haskell.html][Fixed-length vector types in Haskell (an update for 2017)]] ~ Justin Le #Haskell
+ [[https://www.isa-afp.org/entries/LambdaMu.html][The λμ-calculus in Isabelle/HOL]]. ~ C. Matache, V.B.F. Gomes & D.P. Mulligan
  #ITP #IsabelleHOL #Logic #AFP
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110286&ftid=1902034&dwn=1&CFID=979044106&CFTOKEN=25644979][Constrained type families]]. ~ J. Garrett Morris & R.A. Eisenberg #Haskell
+ [[https://lettier.github.io/posts/2017-08-30-haskell-gtk-video-player.html][Let's make a GTK Video Player with Haskell]]. ~ David Lettier #Haskell
+ [[https://github.com/dmjio/HilbertRTree][Hilbert R-tree in Haskell]]. ~ David Johnson #Haskell
+ [[http://www.cl.cam.ac.uk/~vb358/articles/thesis.pdf][Algebraic principles for program correctness tools in Isabelle/HOL]]. ~
  V.B.F. Gomes #PhD_Thesis #IsabelleHOL
+ [[https://github.com/serokell/serokell-util/blob/master/serokell-style.md][Serokell Haskell style guide]]. #Haskell
+ [[http://logicaltypes.blogspot.com.es/2017/09/august-2017-1haskelladay-problems-and.html][August 2017 1HaskellADay problems and solutions]]. ~ Douglas M. #Haskell
  #Haskell #1HaskellADay 
+ [[https://www.athiemann.net/2017/07/02/superrecord.html][SuperRecord: anonymous records for Haskell]]. ~ Alexander Thiemann #Haskell
+ [[https://www.athiemann.net/2017/08/31/mergesort.html][Type level merge sort (Haskell)]]. ~ Alexander Thiemann #Haskell
+ [[https://github.com/mratsim/haskell-numbertheory][Exploration of primes, factorization and number theory through Haskell]]. ~
  Mamy Ratsimbazafy #Haskell #Math
+ [[https://www.darpa.mil/program/explainable-artificial-intelligence][Explainable Artificial Intelligence (XAI)]]. ~ David Gunning #AI #XAI
+ [[https://arxiv.org/pdf/1606.02941][A proof strategy language and proof script generation for Isabelle/HOL]]. ~
  Y. Nagashima, R. Kumar #IsabelleHOL
+ [[https://github.com/data61/PSL][PSL: Proof Strategy Language for Isabelle/HOL]]. ~ Yutaka Nagashima #IsabelleHOL
+ [[https://github.com/Crazycolorz5/Algebra][Study and implementations of F-Algebras and Bird-Meertens formalism in
  Haskell]]. #Haskell #Math
+ [[http://www.michaelburge.us/2017/09/01/how-to-use-graphviz-in-haskell.html][Visualizing graphs in Haskell]]. ~ Michael Burge #Haskell #Graphviz
+ [[https://github.com/keera-studios/IfElse][IfElse: Anaphoric and miscellaneous useful control-flow]]. ~ J.R. Heard &
  W. Thornton #Haskell
+ [[https://blogs.elconfidencial.com/amp/tecnologia/tribuna/2017-09-02/deep-learning-demonios-explicacion_1437007][¿Qué demonios es el Deep Learning y por qué debería aprenderlo en este
  artículo?]]  ~ A. Palomo #IA #DeepLearning
+ [[http://www.microsiervos.com/archivo/internet/deepl-traductor-superior.html][DeepL, un traductor superior]]. ~ @Alvy #IA
+ [[https://www.cs.us.es/~jalonso/cursos/i1m/temas/tema-0.html][Programas, funciones y dibujos con CodeWorld/Haskell]]. #CodeWorld #Haskell
+ [[http://www.michaelburge.us/2017/08/31/roll-your-own-bitcoin-exchange.html][Roll your own bitcoin exchange in Haskell]]. Michael Burge #Haskell
+ [[https://github.com/Crazycolorz5/Automata][Emulating finite state machines, non-deterministic finite state machines,
  push-down automata, and Turing machines in Haskell]]. #Haskell
+ [[https://www.cs.cmu.edu/~cmartens/lpnmr13-short.pdf][Linear logic programming for narrative generation]]. ~ C. Martens, A.G. Bosser,
  J.F. Ferreira & M. Cavazza
+ [[http://www.cs.nott.ac.uk/~psxip1/papers/2017-ICFP-Perez-Nilsson-TestingAndDebuggingFRP-latest.pdf][Testing and debugging functional reactive programming]]. ~ I. Perez &
  H. Nilsson #Haskell
+ [[http://dl.acm.org/citation.cfm?doid=3136534.3110247][Lock-step simulation is child's play (experience report)]]. ~ J. Breitner &
  C. Smith #Haskell #CodeWorld #ICFP2017
+ [[http://dl.acm.org/citation.cfm?doid=3136534.3110248][Scaling up functional programming education: under the hood of the OCaml
  MOOC]]. ~ B. Canou, R. Di Cosmo & G. Henry #OCaml #ICFP2017
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110262&ftid=1902044&dwn=1&CFID=805691510&CFTOKEN=61399968][Verifying efficient function calls in CakeML]]. ~ S. Owens et als. #ITP #HOL4
  #ICFP2017
+ [[https://mmhaskell.com/blog/2017/9/4/deeper-still-convolutional-neural-networks][Deeper still: convolutional neural networks]]. ~ James Bowen #Haskell
+ [[http://www.eldiario.es/cultura/tecnologia/algoritmo-convierte-artista-reemplazara-humano_0_683131806.html][Cuando el algoritmo se convierte en artista: ¿reemplazará al humano?]] ~ Jose
  A. Luna
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110266&ftid=1902042&dwn=1&CFID=979044106&CFTOKEN=25644979][How to prove your calculus is decidable: practical applications of
  second-order algebraic theories and computation]]. ~ M. Hamana #Haskell
+ [[http://adam.chlipala.net/papers/KamiICFP17/KamiICFP17.pdf][Kami: a platform for high-level parametric hardware specification and its modular verification]]. 
  ~ J. Choi et als. #Coq #ICFP2017
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110269&ftid=1902052&dwn=1&CFID=805691510&CFTOKEN=61399968][SpaceSearch: a library for building and verifying solver-aided tools]]. ~
  K. Weitz et als. #Coq #ICFP2017 
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110270&ftid=1902047&dwn=1&CFID=805691510&CFTOKEN=61399968][Local refinement typing]]. ~ B. Cosman & R. Jhala #Haskell #SMT #LiquidHaskell
  #ICFP2017
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110271&ftid=1902041&dwn=1&CFID=805691510&CFTOKEN=61399968][Compiling to categories]]. ~ C. Elliott #Haskell #ICFP2017
+ [[https://querycert.github.io][Q*cert: Q*cert: A query compiler and a platform for implementing and
  verifying query compilers]]. #ITP #Coq
+ [[https://math-comp.github.io/mcb/book.pdf][Mathematical components]]. ~ A. Mahboubi & E. Tassi #eBook #ITP #Coq #Math
+ [[http://matt.might.net/articles/i-love-you-in-racket][99 ways to say '(I love you)]]. ~  Matt Might #FP #Racket
+ [[https://www21.in.tum.de/teaching/proof21/SS17/12-final.pdf][A formal proof of the Kepler conjecture]]. ~ S. Kober #ITP #IsabelleHOL
  #HOL_Light #Math
+ [[http://www.cs.nott.ac.uk/~psxip1/papers/2017-Perez-gale-graphicadventure-farm2017-latest.pdf][GALE: A functional graphic adventure library and engine]]. ~ Ivan Perez
  #Haskell #Game
+ [[http://www.tweag.io/posts/2017-09-06-hyperion.html][Tracking performance over the entire software lifecyle]]. ~ Nicolas Mattia
  #Haskell
+ [[https://dorchard.wordpress.com/2017/09/06/icfp-fscd-day-3-rough-notes][ICFP / FSCD day 3 – rough notes]]. ~ Dominic Orchard #icfp2017 
+ [[http://www.cs.princeton.edu/~appel/papers/bringing-order.pdf][Bringing order to the separation logic jungle]]. ~ Q. Cao, S. Cuellar &
  A.W. Appel #Coq
+ [[http://reasonablypolymorphic.com/blog/modeling-music][Modeling music in Haskell]]. ~ Sandy Maguire #Haskell
+ [[https://github.com/tweag/hyperion][Hyperion: a DSL for writing benchmarks to measure and analyze software performance]]. 
  #Haskell
+ [[https://www.johndcook.com/blog/2017/09/07/highly-cited-theorems][Highly cited theorems]]. ~ J.D. Cook #Math
+ [[http://dragan.rocks/articles/17/Clojure-Numerics-2-General-Linear-Systems-and-LU-Factorization][Clojure numerics, part 2: General linear systems and LU factorization]]. ~
  Dragan Djuric #Clojure #Math
+ [[http://drops.dagstuhl.de/opus/volltexte/2017/7718/pdf/LIPIcs-FSCD-2017-10.pdf][Generalized refocusing: from hybrid strategies to abstract machines]]. ~
  M. Biernacka, W. Charatonik & K. Zielińska #Coq
+ [[https://rootmos.github.io/main/2017/08/31/combining-brick-and-haskeline.html][Combining Brick and Haskeline]]. ~ Gustav Behm #Haskell
+ [[https://deque.blog/2017/09/04/list-monad-and-np-complexity][How the List Monad helped me better understand Non-deterministic Polynomial time complexity]]. 
  ~ Quentin Duval #Haskell
+ [[https://github.com/sjsyrek/haskell-study-startup][Haskell Study Startup: Launch your own Haskell study group]]. ~ Steven Syrek
  #Haskell
+ [[https://arxiv.org/pdf/1709.01810][On dependent types and intuitionism in programming mathematics]]. ~
  S.D. Meshveliani #Haskell #Agda #Math
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?GANDALF2017.4.pdf][An existence theorem of Nash equilibrium in Coq and Isabelle]]. ~ S. Le Roux,
  É. Martin & J.G. Smaus #Coq #IsabelleHOL
+ [[https://github.com/NorfairKing/thesis/raw/master/pdfs/thesis-tom-sydney-kerckhove.pdf][Signature inference for functional property discovery]]. ~ Tom Sydney Kerckhove
  #MSc_Thesis #Haskell
+ [[https://github.com/NorfairKing/easyspec][EasySpec: Signature inference for functional property discovery in Haskell]]. ~
  Tom Sydney Kerckhove #Haskell
+ [[https://people.cs.kuleuven.be/~george.karachalias/papers/fundeps.pdf][Elaboration on functional dependencies]]. ~ G. Karachalias & T. Schrijvers
  #Haskell 
+ [[http://irreal.org/blog/?p=6552][Reading EPUBs in Emacs]]. ~ Irreal #Emacs #EPub 
+ [[https://arxiv.org/pdf/1709.01743][Distant decimals of pi]]. ~ Y. Bertot, L. Rideau & L. Théry #Coq #Math
+ [[http://www.qucosa.de/fileadmin/data/qucosa/documents/22741/E_thesis-slub_pdfa.pdf][From logic programming to human reasoning: how to be artificially human]]. ~
  EAD Saldanha #PhD_Thesis #LogicProgramming #AI #Logic
+ [[https://www.ijcai.org/proceedings/2017/0173.pdf][A reasoning system for a first-order logic of limited belief]]. ~ C. Schwering
  #Logic #AI #ATP
+ [[https://www.ijcai.org/proceedings/2017/0001.pdf][Swift logic for Big Data and knowledge graphs]]. ~ L. Bellomarini et
  als. #Logic #Big_Data #AI
+ [[https://medium.com/technology-nineleaps/prolog-loves-graphs-96e095028d77][Prolog loves graphs (How to use Prolog to implement graph traversal)]]. #Prolog
+ [[https://openlibra.com/book/practicas-de-calculo-numerico-con-maxima][Prácticas de cálculo numérico con Maxima]]. ~ A. Vigueras #Maxima #Matemáticas
  #OpenLibra
+ [[https://www.isa-afp.org/entries/AnselmGod.html][Anselm's God in Isabelle/HOL]]. ~ Ben Blumson #ITP #IsabelleHOL #AFP
+ [[https://mmhaskell.com/blog/2017/9/11/deep-learning-and-deep-types-tensor-flow-and-dependent-types][Deep Learning and Deep Types: Tensor Flow and Dependent Types]]. ~ James Bowen
  #Haskell #TensorFlow
+ [[http://www.aclweb.org/anthology/D17-1082][From textbooks to knowledge: a case study in harvesting axiomatic knowledge from textbooks to solve geometry problems]]. 
  ~ M. Sachan et als. 
+ [[https://www.fpcomplete.com/blog/2017/09/all-about-strictness][All about strictness]]. ~ M. Snoyman #Haskell 
+ [[http://geometry.allenai.org][GeoS: an end-to-end system that solves high school geometry questions]]. #Math  
+ [[https://arxiv.org/pdf/1709.02618][The shape of a benedictine monastery: the SaintGall ontology]]. ~ C. Cantale et
  als. #OWL2
+ [[https://people.csail.mit.edu/wangpeng/timl.pdf][TiML: a functional language for practical complexity analysis with invariants]]. 
  ~ P. Wang, D. Wang & A. Chlipala #FP #ML #SMT
+ [[https://leanpub.com/fpmortals/read][Functional programming for mortals with Scalaz]]. ~ Sam Halliday #eBook #FP
  #Scala
+ [[http://www.cs.nott.ac.uk/%7Epsztxa/ewscs-17/notes.pdf][Introduction to Homotopy Type Theory]]. ~ T. Altenkirch #HoTT
+ [[https://youtu.be/ybSBCVhVWs8][Functional programming and modern DevOps]]. ~ Aaron Contorer #FP #Haskell
+ [[http://www.cl.cam.ac.uk/~lp15/MLbook/pub-details.html][ML for the working programmer, 2nd Edition]]. ~ L. Paulson #eBook #FP #ML
+ [[http://retromaniacmagazine.blogspot.com.es/2017/09/puede-la-retroinformatica-darnos.html][¿Puede la retroinformática darnos mejores programadores en el futuro? Este estudio cree que sí]]. 
  #Programación
+ [[https://www.stackbuilders.com/es/news/obverse-versus-reverse-benchmarking-in-haskell-with-criterion][Obverse versus reverse: benchmarking in Haskell with criterion]]. ~ J.P. Villa
  #Haskell
+ [[https://blog.mozilla.org/security/2017/09/13/verified-cryptography-firefox-57/][Verified cryptography for Firefox 57]]. ~ B. Beurdouche, F. Kiefer, T. Taubert
+ [[https://deque.blog/2017/09/13/monoids-what-they-are-why-they-are-useful-and-what-they-teach-us-about-software][Monoids: what they are, why they are useful, and what they teach us about software]]. 
  ~ Quentin Duval #Haskell
+ [[https://john.cs.olemiss.edu/~hcc/csci450/notes/HaskellNotes/02BasicHaskell450.pdf][Basic Haskell functional programming]]. ~ H. Conrad Cunningham #Haskell
+ [[https://github.com/joom/WangsAlgorithm][A propositional theorem prover in Haskell, using Wang's algorithm]]. ~
  #Haskell #Logic
+ [[https://arxiv.org/pdf/1709.04714][Trace and stable failures semantics for CSP-Agda]]. ~ B. Igried & A. Setzer
  #Agda
+ [[https://github.com/8084/g4ip-prover][Theorem prover for intuitionistic propositional logic in Haskell]]. #Haskell
  #Logic
+ [[http://languagengine.co/blog/differentiating-functional-programs][Differentiating functional programs]]. ~ Darryl McAdams #Haskell
+ [[https://wiki.haskell.org/Prime_numbers][Prime numbers in Haskell]]. #Haskell #Math 
+ [[https://tees.openrepository.com/tees/bitstream/10149/621304/1/621304.pdf][Certified password quality: a case study using Coq and Linux pluggable
  authentication modules]]. ~ J.F. Ferreira et als. #Coq
+ [[http://www.tweag.io/posts/2017-09-15-inline-java-tutorial.html][Java from Haskell: a tutorial]]. ~ F. Domínguez | Tweag I/O #Haskell #Java
+ [[https://arxiv.org/pdf/1709.03652][A certified reference validation mechanism for the permission model of
  Android]]. ~ G. Betarte et als. #Coq #Haskell
+ [[http://book.simply-logical.space][Simply logical (intelligent reasoning by example) in Swish]]. ~ P. Flach
  #Prolog #Logic #AI 
+ [[http://www.tweag.io/posts/2017-08-03-linear-typestates.html][Encode state transitions in types using linear types]]. ~ A. Spiwack | Tweag
  I/O #Haskell
+ [[http://fun-discoveries.blogspot.com.es/2017/08/building-haskell-projects-with-ghc.html][Building Haskell projects with GHC]]. ~ Emil Axelsson #Haskell
+ [[https://medium.com/@fintan.halpenny/free-me-exploring-the-free-data-type-c863499a82f8][Free me: Exploring the Free data type]]. ~ Fintan Halpenny #Haskell
+ [[https://haskell.fun/2017/09/17/making-google-tasks-better-part-2][Making Google tasks better (Part 2)]]. ~ Martin Capodici #Haskell
+ [[https://en.wikipedia.org/wiki/Dots_and_Boxes][Dots and Boxes]]. ~ Wikipedia #Game 
+ [[https://github.com/mcapodici/dotsandboxes][Dots and Boxes game in Haskell]]. ~ Martin Capodici #Haskell
+ [[https://github.com/eugmes/imp][IMP compiler implemented in Haskell]]. ~ Eugeniy Meshcheryakov #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-introduccion-a-la-programacion-funcional/][Introducción a la programación funcional]]. #I1M2017 #Haskell #CodeWorld
+ [[https://haskell-lang.org/tutorial/stack-script][How to script with Stack]]. ~ M. Snoyman #Haskell
+ [[http://images.math.cnrs.fr/Langages-de-programmation.html][Langages de programmation]]. ~ Sylvie Boldo 
+ [[http://www.well-typed.com/blog/2017/09/visualize-cbn][Visualizing lazy evaluation]]. ~ Edsko de Vries #Haskell
+ [[https://www.fpcomplete.com/blog/2017/09/cryptographic-hashing-haskell][Cryptographic hashing in Haskell]]. ~ M. Snoyman #Haskell
+ [[https://mmhaskell.com/blog/2017/9/18/checking-its-all-in-place-placeholders-and-dependent-types][Checking it's all in place: placeholders and dependent types]]. ~ James Bowen
  #Haskell #TensorFlow
+ [[https://dlang.org/safed.html][SafeD]]. ~ Bartosz Milewski #Programming #SafeD #Cpp #Dlang
+ [[https://www.isa-afp.org/entries/PLM.html][Representation and partial automation of the Principia Logico-Metaphysica in
  Isabelle/HOL]]. ~ D. Kirchner #ITP #IsabelleHOL #AFP
+ [[https://www.cs.kent.ac.uk/people/staff/dao7/publ/reprinter2017.pdf][Scrap your reprinter (a datatype generic algorithm for layout-preserving refactoring)]]. 
  ~ H. Clarke & D. Orchard #Haskell
+ [[https://deque.blog/2017/09/20/data-structure-into-types/][Transforming data structures into types: an introduction to dependent typing and its benefits]]. 
  ~ Quentin Duval #Idris
+ [[https://arxiv.org/pdf/1709.06662][Verifying properties of binarized deep neural networks]]. ~ N. Narodytska et
  als. #DeepLearning #Logic #SAT
+ [[http://www.cs.stanford.edu/~barrett/pubs/KBD+17.pdf][Reluplex: an efficient SMT solver for verifying deep neural networks]]. ~
  G. Katz et als. #DeepLearning #SMT
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-introduccion-a-la-programacion-funcional-con-haskell/][Introducción a la programación funcional con Haskell]]. #I1M2017 #Haskell
+ [[http://bit.ly/2yvLcQj][Practical concurrent Haskell: with Big Data applications]]. ~ S.L. Nita &
  M. Mihailescu #Haskell #BigData
+ [[https://www21.in.tum.de/~nipkow/pubs/ifm17.pdf][Formalising and monitoring traffic rules for autonomous vehicles in
  Isabelle/HOL]]. ~ T. Nipkow et als. #IsabelleHOL
+ [[http://www.tweag.io/posts/2017-09-22-inline-java-ghc-plugin.html][GHC compiler plugins in the wild: typing Java]]. ~ F. Domínguez & M. Boespflug
  #Haskell #Java
+ [[https://blog.scalents.com/2017/09/22/basic-category-theory-for-scala-programmers-part-i/][Basic category theory for (Scala) programmers (part I)]]. ~ Gabriel Claramunt
  #Scala #Math
+ [[https://docs.google.com/presentation/d/1R5ODUBOtCxIbLBD_0xUG3prHQ6-OLyAEMwWVCIp5YxE/edit#slide=id.p][An introduction to functional programming]]. ~ Lucas Dicioccio #FP
+ [[https://matela.com.br/paper/extrapolate.pdf][Extrapolate: generalizing counter-examples of functional test properties]]. ~
  R. Braquehais & C. Runciman #Haskell
+ [[https://www.cs.indiana.edu/~lepike/pubs/ieee-auto-pike.pdf][Secure automotive software (the next steps)]]. ~ L. Pike, J. Sharp, M. Tullsen,
  P.C. Hickey & J. Bielman
+ [[https://www.researchgate.net/profile/Rodrigo_Ribeiro3/publication/319162172_Certified_bit-coded_regular_expression_parsing/links/5995d65f0f7e9b91cb095a66/Certified-bit-coded-regular-expression-parsing.pdf][Certified bit-coded regular expression parsing]]. ~ R. Ribeiro & A. Du Bois
  #ITP #Agda
+ [[http://bitemyapp.com//posts/2017-09-23-please-stop-using-typed-holes.html][Alternatives to typed holes for talking to your compiler]]. ~ Christopher Allen
  #Haskell
+ [[http://dr.library.brocku.ca/bitstream/handle/10464/12996/Brock_Durjay_Chowdhury_2017.pdf?sequence=1&isAllowed=y][Approximation algorithms using allegories and Coq]]. ~ D. Chowdhury #MSc_Thesis
  #Coq #Math
+ [[http://www.cs.us.es/~fsancho/?e=172][Representación del conocimiento]]. ~ F. Sancho #IA
+ [[http://groups.csail.mit.edu/medg/ftp/psz/k-rep.html][What is a knowledge representation?]] ~ R. Davis, H. Shrobe & P. Szolovits. #AI
+ [[http://tech.frontrowed.com/2017/09/22/aggregations][Beautiful aggregations with Haskell]]. ~ Evan Borden #Haskell
+ [[https://mmhaskell.com/blog/2017/9/25/grenade-dependently-typed-neural-networks][Grenade! Dependently typed neural networks]]. ~ James Bowen #Haskell
  #NeuralNetworks
+ [[http://www.tweag.io/posts/2017-09-27-array-package.html][Immutability and unboxing in array programming]]. ~ Manuel Chakravarty #Haskell
+ [[http://www.cs.us.es/~fsancho/?e=173][Introducción al razonamiento automático con Prover9 y Mace4]]. ~ F. Sancho
  #Prover9 #Mace4
+ [[https://mathwithbaddrawings.com/2017/09/20/the-state-of-being-stuck/amp][The state of being stuck]]. ~ Ben Orlin #Math
+ [[https://cacm.acm.org/magazines/2017/10/221330-the-real-risks-of-artificial-intelligence/fulltext][The real risks of Artificial Intelligence]]. ~ David Lorge Parnas #AI 
+ [[http://www.lsv.fr/~dowek/Publi/analyzing.pdf][Analyzing individual proofs as the basis of interoperability between proof
  systems]]. ~ G. Dowek #Logic #ITP
+ [[http://drops.dagstuhl.de/opus/volltexte/2017/7927/pdf/LIPIcs-TIME-2017-16.pdf][The time ontology of Allen's interval algebra]]. ~ M. Grüninger & Z. Li
  #Prover9
+ [[http://materials.dagstuhl.de/files/17/17361/17361.MartinGrohe.Slides1.pdf][Machine learning and algorithmic model theory]]. ~ M. Grohe #ML #Logic
+ [[https://github.com/hmemcpy/milewski-ctfp-pdf][Category theory for programmers]]. ~ Bartosz Milewski (unofficial PDF and LaTeX
  source) #Haskell #Math
+ [[https://github.com/pachopepe/Lambda/raw/master/lambda.pdf][Una Lambda aventura en Haskell]]. ~ Francisco José Cháves #Haskell #Lógica
  #Matemáticas
+ [[http://kaygun.tumblr.com/post/165797894404][Expected value of the diameter of a tree]]. ~ Atabey Kaygun #CommonLisp #Math
+ [[https://arxiv.org/pdf/1709.09994][Premise selection for theorem proving by deep graph embedding]]. ~ M. Wang er
  als. #ATP #DeepLearning

* Octubre 2017

+ [[https://www.avoltus.com/fi/blog/2017-9-29-profunctors-encoding-and-decoding][Profunctors for encoding and decoding]]. ~ Kari Pahula #Haskell
+ [[http://blogs.intevation.de/wilde/haskell/functions-as-functors][Making your brain tingle: Functions as functors]]. ~ Sascha Wilde
  #Haskell
+ [[https://github.com/pbv/codex][Codex: a web application for setting programming exercises in a learning
  environment]]. ~ Pedro Vasconcelos #Haskell
+ [[https://github.com/pbv/codex-quickcheck][Codex-QuickcCheck: QuickCheck customizations for the Codex learning
  environment]]. ~ Pedro Vasconcelos #Haskell
+ [[https://mmhaskell.com/blog/2017/10/2/trouble-with-databases-persevere-with-persistent][Trouble with databases? Persevere with Persistent]]! ~ James Bowen #Haskell
+ [[http://www.michaelbeeson.com/research/papers/ProofCheckingEuclid.pdf][Proof-checking Euclid]]. ~ M. Beeson, J. Narboux & F. Wiedijk #ITP #Coq
  #HOL_Light #Math
+ [[http://irreal.org/blog/?p=6641][Org mode as an Exocortex]]. ~ Irreal #Emacs
+ [[https://arxiv.org/pdf/1710.00794][What does explainable AI really mean? A new conceptualization of
  perspectives]]. ~ D. Doran, S. Schulz & T.R. Besold #XAI
+ [[http://cmsc-16100.cs.uchicago.edu/2017/Lectures/01/intro.php][CMSC-16100 Lecture 1: Introduction to Haskell]]. ~ R. Chugh & S.A. Kurtz
  #Haskell #I1M2017
+ [[https://www.gitbook.com/book/ravichugh/a-quarter-of-haskell/details][A Quarter of Haskell (Supplementary notes for UChicago CMSC 16100)]]. ~
  R. Chugh & S.A. Kurtz #Haskell #I1M2017
+ [[https://ravichugh.gitbooks.io/a-quarter-of-haskell/content/introduction][A Quarter of Haskell: Introduction to Haskell]]. ~ R. Chugh & S.A. Kurtz
  #Haskell #I1M2017
+ [[http://www.cs.princeton.edu/~wmansky/messaging.pdf][A verified messaging system]]. ~ W. Mansky, A.W. Appel & A. Nogin #Coq
+ [[https://github.com/DSLsofMath/DSLsofMath/raw/master/L/snapshots/DSLsofMathNotes_2017-09-28.pdf][Domain Specific Languages of Mathematics: Lecture Notes]]. ~ P. Jansson
  & C. Ionescu #Haskell #Math #I1M2017
+ [[https://patternsinfp.wordpress.com/2017/10/04/metamorphisms/][Metamorphisms]]. ~ Jeremy Gibbons #Haskell
+ [[https://interstices.info/jcms/p_95446/les-methodes-formelles-l-autre-arme-de-la-cybersecurite][Les méthodes formelles: l'autre arme de la cybersécurité]]. ~ Jean
  Goubault-Larrecq #Formal_verification
+ [[http://www.i-programmer.info/news/98-languages/11184-which-languages-are-bug-prone.html][Which languages are bug prone]]. ~ Janet Swift #Programming
+ [[https://www.fpcomplete.com/blog/2012/09/ten-things-you-should-know-about-haskell-syntax][Ten things you should know about Haskell syntax]]. ~ Bartosz Milewski
  #Haskell
+ [[http://profs.sci.univr.it/~bonacina/papers/DRLI2017DA.pdf][Deduzione automatica]]. ~ M.P. Bonacina #ATP #Logic
+ [[http://www.imm.dtu.dk/~samo/typing-soundness/TypingResult.pdf][Formalizing and proving a typing result for security protocols in
  Isabelle/HOL]]. ~ A.V. Hess & S. Mödersheim #ITP #IsabelleHOL
+ [[http://www.tweag.io/posts/2017-10-05-streaming2.html][How to compose streaming programs]]. ~F. Domínguez #Haskell
+ [[http://goto.ucsd.edu/~nvazou/popl18/_site/NaturalDeduction.html][Natural deduction on Liquid Haskell]]. ~ Niki Vazou #Haskell
  #LiquidHaskell #Logic
+ [[http://blog.ploeh.dk/2017/10/04/from-design-patterns-to-category-theory/][From design patterns to category theory]]. ~ Mark Seemann #Programming #Math
+ [[http://freecontent.manning.com/lists-as-context-a-deeper-look-at-the-applicative-type-class][Lists as context: A deeper look at the Applicative Type Class]]. ~ Will Kurt
  #Haskell
+ [[http://www.haskellforall.com/2017/10/why-do-our-programs-need-to-read-input.html][Why do our programs need to read input and write output?]] ~ G. Gonzalez
  #Haskell
+ [[https://www.johndcook.com/blog/2017/10/07/exponential-sums-make-pretty-pictures/][Exponential sums make pretty pictures]]. ~ J.D. Cook #Math #Programming
+ [[https://haskellweekly.news/issues/75.html][Haskell Weekly 75: News from the Haskell community (October 5 2017)]]. #Haskell 
+ [[https://www.stackbuilders.com/news/scalendar-time-management-in-haskell][scalendar: Haskell Library to deal with resource availability in a
  Calendar]]. ~ Sebastián Pulido #Haskell
+ [[https://cacm.acm.org/magazines/2017/10/221326-a-large-scale-study-of-programming-languages-and-code-quality-in-github/fulltext][A large-scale study of programming languages and code quality in GitHub]]. ~
  B. Ray et als. #Programming
+ [[https://www.informatik.uni-kiel.de/~mh/papers/ICLP17.pdf][Semantic versioning checking in a declarative package manager]]. ~ M. Hanus
  #Curry
+ [[http://bahr.io/pubs/files/hutton17jfp-paper.pdf][Functional Pearl: Compiling a fifty year journey]]. ~ G. Hutton & P. Bahr
  #Haskell
+ [[http://www.cl.cam.ac.uk/research/hvg/Isabelle/dist/Isabelle2017/doc/NEWS.html][News in Isabelle2017 (October 2017)]]. #IsabelleHOL
+ [[https://www21.in.tum.de/~hupel/pub/isabelle-cakeml.pdf][A verified compiler from Isabelle/HOL to CakeML]]. ~ L. Hupel & T. Nipkow
  #IsabelleHOL
+ [[http://www.buffalo.edu/~wlawvere/concep-3.pdf][Matemáticas conceptuales: Una primera introducción a categorı́as]]. ~ W. Lawvere
  & S. Schanuel #Matemáticas
+ [[https://wiki.haskell.org/User:Michiexile/MATH198][Category theory and functional programming]]. ~ Mikael Vejdemo Johansson #Math
  #CompSci #FunctionalProgramming
+ [[http://www.joachim-breitner.de/blog/732-Isabelle_functions__Always_total%2C_sometimes_undefined][Isabelle functions: Always total, sometimes undefined]]. ~ Joachim Breitner
  #IsabelleHOL
+ [[https://maxow.github.io/posts/computational-geometry-set-operations-on-polytopes.html][Computational geometry: set operations on polytopes]]. ~ Maksymilian Owsianny
  #Haskell #Math
+ [[https://docs.google.com/presentation/d/1_sD9a5-u3urGbJPuxebBQXrDtoqvKlEII3brnm0ZWb0/edit#slide=id.gc6f90357f_0_0][A Monoid for all seasons]]. ~ Julie Moronuki #Haskell #Logic
  #Math
+ [[https://idontgetoutmuch.files.wordpress.com/2017/10/test.pdf][Making Kalman filtering correct with types]]. ~ Dominic Steinitz
  #Haskell #DataScience
+ [[http://www.tweag.io/posts/2017-10-12-vector-package.html][Array fusion with vector]]. ~ Manuel M T Chakravarty #Haskell
+ [[https://github.com/Gabriel439/slides/blob/master/liquidhaskell/slides.md][Scrap your bounds checks with Liquid Haskell]]. ~ Gabriel Gonzalez
  #Haskell #LiquidHaskell
+ [[http://blog.sumtypeofway.com/recursion-schemes-part-iv-time-is-of-the-essence/][Recursion schemes, part IV: Time is of the essence]]. ~ Patrick Thomson
  #Haskell
+ [[http://cl-informatik.uibk.ac.at/users/griff/publications/Sternagel-Draft-2017.pdf][A mechanized proof of Higman’s lemma by open induction]]. ~ Christian Sternagel
  #IsabelleHOL #Math
+ [[https://www.quora.com/What-are-some-scientific-applications-of-Haskell/answer/Edward-Kmett][What are some scientific applications of Haskell?]] ~ Edward Kmett
  #Haskell
+ [[http://blog.sigfpe.com/2017/10/a-tail-we-dont-need-to-wag.html][A tail we don't need to wag]]. ~ Dan Piponi #Haskell
+ [[http://gelisam.blogspot.com.es/2017/10/composing-declarations-in-template.html][Composing declarations in Template Haskell]]. #Haskell
+ [[https://amp.businessinsider.com/github-ceo-wanstrath-says-automation-will-replace-software-coding-2017-10][The CEO of GitHub, which caters to coders, thinks automation will bring an
  end to traditional software programming]]. ~ Becky Peterson #Programming
+ [[https://github.com/antalsz/hs-to-coq][hs-to-coq: Convert Haskell source code to Coq source code]]. ~ Antal
  Spector-Zabusky #Haskell #Coq
+ [[https://www.reddit.com/r/haskell/comments/75zez1/magichaskeller_based_agent_makes_finalist_in_1st/][MagicHaskeller based agent makes finalist in 1st round of general AI
  challenge!]] #Haskell #AI
+ [[http://institucional.us.es/blogimus/2017/10/duelo-de-titanes-analisis-contra-combinatoria/][Contando números primos: Análisis contra Combinatoria]]. ~ Juan Arias de Reyna
  #Matemáticas #Computación
+ [[https://arxiv.org/pdf/1503.01839][The combinatorial algorithm for computing π(x)]]. ~ Douglas B. Staple #Math
  #CompSci
+ [[https://www.isa-afp.org/entries/Diophantine_Eqns_Lin_Hom.html][Homogeneous linear diophantine equations in Isabelle/HOL]]. ~ Florian Meßner et
  als. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Lowe_Ontological_Argument.html][Computer-assisted reconstruction and assessment of E. J. Lowe's modal
  ontological argument]]. ~ D. Fuenmayor & C. Benzmüller #IsabelleHOL
+ [[https://github.com/vrom911/hs-init][hs-init: Tool for creating completely configured production Haskell projects]]. 
  ~ Veronika Romashkina #Haskell
+ [[http://www.haskellforall.com/2017/10/advice-for-haskell-beginners.html][Advice for Haskell beginners]]. ~ G. Gonzalez #Haskell
+ [[https://www.isa-afp.org/entries/Zeta_Function.html][The Hurwitz and Riemann ζ functions in Isabelle/HOL]]. ~ M. Eberl #IsabelleHOL
  #ITP #Math
+ [[http://simonmar.github.io/posts/2017-10-17-hotswapping-haskell.html][Hotswapping Haskell]]. ~ Jon Coens #Haskell
+ [[https://www.isa-afp.org/entries/Linear_Recurrences.html][A verified solver for linear recurrences in Isabelle/HOL]]. ~ M. Eberl
  #IsabelleHOL #ITP #Math
+ [[https://www.isa-afp.org/entries/Dirichlet_Series.html][Dirichlet series in Isabelle/HOL]]. ~ M. Eberl #IsabelleHOL #ITP #Math
+ [[https://cacm.acm.org/news/222023-ai-algorithms-are-starting-to-teach-ai-algorithms/fulltext][AI algorithms are starting to teach AI algorithms]]. #AI #Programming
+ [[https://www.isa-afp.org/entries/Diophantine_Eqns_Lin_Hom.html][Homogeneous linear diophantine equations in Isabelle/HOL]]. ~ F. Messner et
  als. #IsabelleHOL #ITP #Math
+ [[http://www.cs.utexas.edu/users/ameliaj/pubs/ajh_thesis.pdf][Formal methods for Answer Set Programming]]. ~ Amelia J. Harrison #PhD_Thesis
  #ASP
+ [[https://arxiv.org/pdf/1511.01568][Formalization of quantum protocols using Coq]]. ~ J. Boender, F. Kammüller &
  R. Nagarajan #ITP #Coq
+ [[http://forallx.openlogicproject.org/forallxyyc.pdf][forall x: Calgary Remix (An introduction to formal logic)]]. ~ P.D. Magnus et
  als. #eBook #Logic  
+ [[https://www.isa-afp.org/entries/Count_Complex_Roots.html][Count the number of complex roots in Isabelle/HOL]]. ~ Wenda Li #IsabelleHOL
  #ITP #Math
+ [[https://www.johndcook.com/blog/2017/10/21/empirically-testing-chowla-conjecture][Empirically testing the Chowla conjecture]]. ~ J.D. Cook #Math
  #Programming
+ [[https://elfe-prover.org/downloads/thesis.pdf][ELFE: An interactive theorem prover for undergraduate students]]. ~ Maximilian
  Doré #ITP #Logic #Haskell
+ [[https://github.com/maxdore/elfe][ELFE: Interactive theorem proving for students (code)]]. ~ Maximilian Doré #ITP
  #Logic #Haskell
+ [[http://www.ega-math.narod.ru/Math/Manin.htm][Good proofs are proofs that make us wiser]]. ~ Yu.I.Manin #Math
+ [[http://bit.ly/2yFAkzP][Formal methods during the programming phase]]. ~ R.F. Paige et
  als. #Formal_methods
+ [[http://ani.sh/popl18.pdf][Towards complete specification and verification with SMT]]. ~ N. Vazou et
  als. #Haskell #LiquidHaskell #Logic #SMT 
+ [[https://works.bepress.com/yuliya_lierler/71/download][Handout on basics behind answer sets]]. ~ Yuliya Lierler #ASP #Logic
  #Programming
+ [[https://www.isa-afp.org/entries/Winding_Number_Eval.html][Evaluate winding numbers through Cauchy indices in Isabelle/HOL]]. ~ Wenda Li
  #IsabelleHOL #ITP #Math
+ [[https://annals-csis.org/proceedings/2017/drp/pdf/314.pdf][Formalization of Pell's equation in the Mizar system]]. ~ M. Acewicz & K. Pak
  #ITP #Mizar #Math
+ [[https://mmhaskell.com/blog/2017/10/23/tangled-webs-testing-an-integrated-system][Tangled Webs: Testing an integrated system]]. ~ James Bowen #Haskell
+ [[http://www2.caminos.upm.es/Departamentos/matematicas/revistapm/revista_impresa/vol_VII_num_1/exp_doc_didactica_con_r.pdf][Didáctica con R, menos cuentas y más pensamiento crítico]]. ~ A. Galindo
  #Matemáticas #Enseñanza
+ [[https://annals-csis.org/proceedings/2017/drp/pdf/289.pdf][Progress in the independent certification of Mizar Mathematical Library in
  Isabelle]]. ~ C. Kaliszyk & K. Pak #ITP #IsabelleHOL #Mizar #Math
+ [[https://arxiv.org/pdf/1710.06187][System Description: Russell (A logical framework for deductive systems)]]. ~
  Dmitry Vlasov #ITP #Logic
+ [[https://www.isa-afp.org/entries/Transition_Systems_and_Automata.html][Transition systems and automata in Isabelle/HOL]]. ~ J. Brunner #IsabelleHOL
+ [[https://wickstrom.tech/programming/2017/10/27/motor-finite-state-machines-haskell.html][Motor: Finite-state machines in Haskell]]. ~ Oskar Wickström #Haskell
+ [[https://arxiv.org/pdf/1710.09756][Linear Haskell: practical linearity in a higher-order polymorphic language]]. ~
  Jean-Philippe Bernardy et als. #Haskell
+ [[http://www.tweag.io/posts/2017-10-27-stackage-head.html][Using Stackage for GHC regression testing]]. ~ Manuel Chakravarty
  #Haskell
+ [[https://www.isa-afp.org/entries/Kuratowski_Closure_Complement.html][The Kuratowski closure-complement theorem in Isabelle/HOL]]. ~ P. Gammie &
  G. Gioiosa. #ITP #IsabelleHOL #Math
+ [[http://www.techrepublic.com/google-amp/article/whats-the-future-of-programming-the-answer-lies-in-functional-languages/][What's the future of programming? The answer lies in functional languages]]. ~
  Nick Heath #Programming #Haskell
+ [[https://arxiv.org/pdf/1710.08195][The refinement calculus of reactive systems toolset]]. ~ I. Dragomir,
  V. Preoteasa & S. Tripakis #IsabelleHOL
+ [[http://blog.functorial.com/posts/2017-10-28-Comonads-For-Optionality.html][Comonads for optionality]]. ~ Phil Freeman #Haskell #PureScript
+ [[http://blog.functorial.com/posts/2017-10-28-The-Game-Of-Pattern-Matching.html][The game of pattern matching]]. ~ Phil Freeman #Haskell #PureScript
+ [[http://argumatronic.com/posts/2017-10-28-a-new-hope.html][Constructive pedagogy]]. ~ Julie Moronuki #Haskell #Pedagogy
+ [[https://github.com/mrkkrp/modern-uri][Modern library for working with URIs]]. ~ Mark Karpov #Haskell 
+ [[http://www.emanueledosualdo.com/blog/2017/why-computer-science-is-a-science.html][Why Computer Science is a science]]. Emanuele D'Osualdo #CompSi
+ [[http://www.elmundo.es/f5/campus/2017/10/18/59e643dde2704ec9438b45fa.html][Cuatro décadas de Informática en España]]. ~ Ángel G. Perianes #Historia
+ [[https://openlibra.com/es/book/download/temporal-answer-set-programming][Temporal Answer Set Programming]]. ~ M. Diéguez #ASP
+ [[https://50ans.inria.fr/fr/gerard-huet-langages-et-logiciel/][Réminiscences d’un chercheur en informatique 1967-2000]]. ~ Gérard Huet #OCaml
  #Coq
+ [[https://jfr.unibo.it/article/download/6927/7043][Formal proof of Banach-Tarski paradox]]. ~ Daniel de Rauglaudre #ITP #Coq #Math 
+ [[https://speakerdeck.com/danielasfregola/lambda-world-2017-a-pragmatic-introduction-to-category-theory][A pragmatic introduction to category theory]]. ~ Daniela Sfregola
  #Scala #Category_theory
+ [[https://adamsmith.as/papers/answer-set-programming-in-proofdoku.pdf][Answer Set Programming in Proofdoku]]. ~ Adam M. Smith #ASP #Game
+ [[https://proofdoku.com][proofdoku: Game with ASP-backed mechanics]]. ~ By Nick Warren, Mason Reed &
  Adam Smith #ASP #Game
+ [[http://bit.ly/2xy1Bmj][Answer Set Programming tutorial (AIIDE2017)]]. ~ Adam M. Smith #ASP
  #AI #Game
+ [[http://bit.ly/2xy2jzV][Jean D’Alembert: cómo pasar de matemático a figura pública]]. ~ J. Ferreirós
  #Historia #Matemática
+ [[https://www.johndcook.com/blog/2017/10/27/poisson-distribution-and-prime-numbers][Poisson distribution and prime numbers]]. ~ J.D. Cook #Math #Programming
  #Python
+ [[http://pragmaticemacs.com/emacs/view-and-annotate-pdfs-in-emacs-with-pdf-tools/][View and annotate PDFs in Emacs with PDF-tools]]. #Emacs
+ [[https://www.math.ias.edu/files/mathandcomp.pdf][Mathematics and computation]]. ~ Avi Wigderson #eBook #Math #CompSci
+ [[https://www.isa-afp.org/browser_info/current/AFP/Buchi_Complementation/document.pdf][Büchi complementation in Isabelle/HOL]]. ~ J. Brunner #IsabelleHOL
+ [[http://axiom-wiki.newsynthesis.org/public/refs/Meijer-db-utwente-40501F46.pdf][Functional programming with bananas, lenses, envelopes and barbed wire]]. ~
  E. Meijer, M. Fokkinga & R. Paterson #FunctionalProgramming
+ [[https://github.com/ekmett/recursion-schemes][Generalized bananas, lenses and barbed wire]]. ~ Edward Kmett #Haskell
+ [[https://github.com/vmchale/recursion_schemes][An Idris library for recursion schemes, with liberal examples]]. ~ Vanessa
  McHale #Idris
+ [[http://slides.com/zainabali_/peeling_the_banana][Peeling the banana: Recursion schemes from first principles]]. ~ Zainab Ali
  #Scala
+ [[http://dev.stephendiehl.com/nearfuture.pdf][Near future of programming languages]]. ~ Stephen Diehl #Programming
+ [[https://adamsmith.as/papers/mechanizing_exploratory_game_design_book.pdf][Mechanizing exploratory game design]]. ~ Adam M. Smith #eBook #ASP
  #Game #AI
+ [[https://github.com/vmchale/command-line-tweeter][Command Line Interface Tweeter in Haskell]]. ~ Vanessa McHale #Haskell
+ [[https://arxiv.org/pdf/1710.10258][Temporal type theory (A topos-theoretic approach to systems and behavior)]]. ~
  P. Schultz, D.I. Spivak
+ [[http://alessandrobruni.name/software/2017/03/02/crossword-solving-in-asp.html][Solving a crossword in answer set programming]]. ~ Alessandro Bruni
  #ASP

* Noviembre 2017 

+ [[https://galois.com/blog/2017/10/formal-methods-krack-vulnerability][Formal methods and the KRACK vulnerability]]. ~ Joey Dodds #Cryptography
  #Formal_methods
+ [[http://pcgbook.com/wp-content/uploads/chapter08.pdf][ASP with applications to mazes and levels]]. ~ Mark J. Nelson & Adam M. Smith
  #ASP #Game
+ [[http://www.cs.cmu.edu/~cmartens/asp-notes.pdf][Notes on Answer Set Programming]]. ~ Chris Martens #ASP #Logic Programming
+ [[https://thelazydev.net/blog/post/the-basics-of-answer-set-programming][The basics of Answer Set Programming]]. ~ Olaf Aviss #ASP
+ [[http://www.hakank.org/constraint_programming_blog/2010/12/a_first_look_at_answer_set_programming.html][A first look at Answer Set Programming]]. ~ Hakan Kjellerstrand #ASP
+ [[http://picat-lang.org/picatbook2015.html][Constraint solving and planning with Picat]]. ~ N.F. Zhou, H. Kjellerstrand,
  J. Fruhman #eBook #Logic #Programming #Picat
+ [[https://bioasp.github.io][BioASP: Answer Set Programming for systems biology]]. #ASP
+ [[https://www.cs.us.es/~jalonso/apuntes/Categorias_y_programacion/Categorias_y_programacion.html][Lecturas de teorías de categorías y programación funcional]]. 
  #Matemáticas #Programación
+ [[https://arxiv.org/pdf/1710.11204][Improve SAT-solving with machine learning]]. ~ Haoze Wu #ATP #SAT #ML
+ [[https://github.com/GU-CLASP/TypedFlow][TypedFlow: a typed, higher-order frontend to TensorFlow and a high-level
  library for deep-learning]]. ~ Jean-Philippe Bernardy #Haskell #DeepLearning
+ [[http://online.liebertpub.com/doi/pdf/10.1089/ees.2016.0223][Academic research in the 21st century: maintaining scientific integrity in a climate of perverse incentives and hypercompetition]]. ~ M.A. Edwards, S. Roy
+ [[http://neilmitchell.blogspot.com/2017/11/understanding-hlint-rules.html][Understanding HLint rules]]. ~ Neil Mitchell #Haskell
+ [[http://gelisam.blogspot.com.es/2017/11/computing-with-impossible-types.html][Computing with impossible types]]. ~ @haskell_cat #Haskell
+ [[https://byorgey.wordpress.com/2017/11/03/sum-of-heights-in-a-binary-tree][Sum of heights in a binary tree]]. ~ Brent Yorgey #Algorithmic
+ [[http://aivikasoft.com/downloads/aivika/aivika.pdf][Aivika: computation-based modeling and simulation in Haskell]]. ~ David
  E. Sorokin et als. #eBook #Haskell #Simulation
+ [[https://github.com/rpeszek/notes-milewski-ctfp-hs][Notes and thoughts from reading Milewski "Category theory for programmers"
  written in Haskell]]. ~ Robert Peszek #Haskell #Category_theory
+ [[http://orca-mwe.cf.ac.uk/105921/2/main.pdf][Foundations of implementations for formal argumentation]]. ~ F. Cerutti et
  als. #Logic #AI #ASP
+ [[https://blockstream.com/simplicity.pdf][Simplicity: a new language for blockchains]]. ~ Russell O’Connor #Coq #Blockchain 
+ [[http://www.abc.es/ciencia/abci-matematicas-puede-esconder-donut-201711031107_noticia.html][Las matemáticas que puede esconder un dónut]]. ~ Alfonso J. Población
  #Matemáticas
+ [[https://medium.com/q-e-d/who-gets-to-be-called-a-mathematician-15f73f2d0e5d][Who gets to be called a mathematician?]] ~ Junaid Mubeen #Math
+ [[http://bit.ly/2zkfIPP][A set solver for finite relation algebra]]. ~ M. Cristiá, G. Rossi #CLP
+ [[https://github.com/BartoszMilewski/Publications/raw/master/ProfunctorOptics-LambdaWorld2017.pdf][Profunctor Optics]]. ~ Bartosz Milewski #Haskell
+ [[https://bitbucket.org/prl_tokyo/bigul][BiGUL: the bidirectional generic update language]]. #Haskell #Agda
+ [[https://bitbucket.org/prl_tokyo/bigul/raw/logic/POPL18/logic.pdf][An axiomatic basis for bidirectional programming]]. ~ H.S. Ko, Z. Hu #Agda
+ [[https://josh-hs-ko.github.io/Agda/POPL18/Everything.html][An axiomatic basis for bidirectional programming (Agda code)]]. ~ H.S. Ko,
  Z. Hu #Agda
+ [[http://iris-project.org/pdfs/2018-popl-runST-submission.pdf][A logical relation for monadic encapsulation of state (Proving contextual
  equivalences in the presence of runST)]]. ~ A. Timany #Haskell
+ [[http://www.eldiario.es/cultura/tecnologia/AutoML-maquina-crea-maquinas-inteligentes_0_705179666.html][AutoML, la máquina que crea otras máquinas inteligentes]]. ~ David Sarabia
  #IA #AA
+ [[https://research.googleblog.com/2017/11/automl-for-large-scale-image.html][AutoML for large scale image classification and object detection]]. ~ B. Zoph,
  V. Vasudevan, J. Shlens, Q. Le #AI #ML
+ [[https://medium.com/q-e-d/is-mathematics-a-fine-art-5feede2a8f5e][Is mathematics a fine art?]] ~ Adrian Hindes #Math
+ [[https://www.nytimes.com/2017/08/13/technology/artificial-intelligence-safety-training.html][Teaching A.I. systems to behave themselves]]. ~ Cade Metz #AI #ML
+ [[https://www.quantamagazine.org/mathematicians-measure-infinities-find-theyre-equal-20170912][Mathematicians measure infinities and find they’re equal]]. ~ Kevin Hartnett
  #Math
+ [[https://nikivazou.github.io/static/popl18/refinement-reflection.pdf][Refinement reflection: complete verification with SMT]]. ~ Niki Vazou
  #Haskell #LiquidHaskell #Logic #SMT
+ [[https://functional.works-hub.com/blog/Persistent-Red-Black-Trees-in-Haskell?utm_campaign=Edmund&utm_content=62649506][Persistent red black trees in Haskell]]. ~ Abhiroop Sarkar #Haskell
+ [[http://www.cs.nott.ac.uk/%7Epszgmh/improving.pdf][Improving Haskell]]. ~ Martin A.T. Handley & Graham Hutton #Haskell
+ [[https://github.com/mathandley/Unie][Unie: Inequational reasoning assistant for proofs relating to improvement
  theory]]. ~ Martin A.T. Handley #Haskell
+ [[https://www.cis.upenn.edu/%7Ellamp/pdf/GeneratingGoodGenerators.pdf][Generating good generators for inductive relations]]. ~ L. Lampropoulos,
  Z. Paraskevopoulou, B.C. Pierce #Coq #QuickCheck
+ [[http://www.cse.chalmers.se/~russo/publications_files/plas2017.pdf][Encoding DCC (Dependency Core Calculus) in Haskell]]. ~ M. Algehed & A. Russo
  #Haskell
+ [[https://elpais.com/elpais/2017/11/08/el_aleph/1510158827_253966.amp.html][Cómo calcular áreas contando puntitos]]. ~ M.A. Morales | El Aleph
  #Matemáticas
+ [[https://arxiv.org/pdf/1711.01477][An introduction to univalent foundations for mathematicians]]. ~ D.R. Grayson
  #Math #Logic #HoTT
+ [[https://arxiv.org/pdf/1711.01994][Proof theory]]. ~ J. Avigad #Math #Logic #ATP
+ [[https://arxiv.org/pdf/1711.02120][Small resolution proofs for QBF using dependency treewidth]]. ~ E. Eiben,
  R. Ganian & S. Ordyniak #Math #Logic #ATP
+ [[https://arxiv.org/pdf/1710.10385][Capturing the future by replaying the past (Functional Pearl)]]. ~ J. Koppel &
  A. Solar #SML
+ [[http://bit.ly/2zyZrGG][Finite state machines? (Your compiler wants in!)]] ~ Oskar Wickström
  #Haskell #Idris
+ [[http://tpetricek.github.io/Talks/2017/aliens-lambda-calculus/codemesh][Would aliens understand lambda calculus?]] ~ Tomas Petricek   #Math #Logic #CompSci
+ [[https://youtu.be/GMm_AGbgWv0][Verifiable computing in Haskell]]. ~ Anthony Sheldon #Haskell #Math
+ [[https://cgi.csc.liv.ac.uk/~slk/drafts/safety_isabelle_ifm2017.pdf][Spatial reasoning about motorway traffic safety with Isabelle/HOL]]. ~ Sven
  Linker #IsabelleHOL
+ [[https://www.isa-afp.org/browser_info/current/AFP/Hybrid_Multi_Lane_Spatial_Logic/document.pdf][Hybrid multi-lane spatial logic in Isabelle/HOL]]. ~ Sven Linker #IsabelleHOL
+ [[https://patternsinfp.wordpress.com/2017/11/09/the-digits-of-pi][The digits of pi]]. ~ Jeremy Gibbons #Haskell #Math
+ [[http://chriswarbo.net/blog/2017-11-09-haskell_theory_exploration_scripts.html][Haskell theory exploration scripts]]. ~ Chris Warburton #Haskell
+ [[https://hackernoon.com/the-has-type-class-pattern-ca12adab70ae][The Has type class pattern]]. ~ Jonathan Fischoff #Haskell
+ [[https://www.isa-afp.org/browser_info/current/AFP/IMAP-CRDT/document.pdf][Formalization of a Conflict-free Replicated Datatype for Internet Message
  Access Protocol commands in Isabelle/HOL]]. ~ T. Jungnickel, L. Oldenburg &
  M. Loibl #IsabelleHOL
+ [[http://publications.lib.chalmers.se/records/fulltext/252478/252478.pdf][Theory exploration on infinite structures]]. ~ S.H. Einarsdóttir #IsabelleHOL
+ [[http://blairarchibald.co.uk/resources/papers/jpdc-preprint-2017.pdf][Replicable parallel branch and bound search]]. ~ B. Archibald, P. Maier,
  C. McCreesh, R. Stewart & P. Trinder #Haskell
+ [[https://github.com/alpacaaa/elm-to-purescript-cheatsheet][Purescript for Elm developers]]. ~ Marco Sampellegrini #PureScript
  #Elm
+ [[http://www.dc.fi.udc.es/~cabalar/logicalASP.pdf][Answer Set Programming from a logical point of view]]. ~ P. Cabalar, D. Pearce
  & A. Valverde #ASP
+ [[http://www.glass-bead.org/article/glass-bead-conversation-catarina-dutch-novaes-reviel-netz][Formalisms and formalizations: Glass Bead in conversation with Catarina Dutilh
  Novaes and Reviel Netz]]. #Logic #Math
+ [[https://www.quantamagazine.org/to-settle-infinity-question-a-new-law-of-mathematics-20131126][To settle infinity question, a new law of Mathematics]]. ~ Natalie Wolchover
  #Math
+ [[https://arxiv.org/pdf/1711.00678][Scientists in silico?]] ~ Carl McBride #CompSci
+ [[http://argumentationcompetition.org/2017/argmat-clpb.pdf][argmat-clpb: Solve argumentation problems using Constraint Logic Programming
  over boolean variables]]. ~ F. Pu, G. Luo & Y. Chen #CLP
+ [[http://bit.ly/2hmhqG4][Vigila tus primos]]. ~ Juan Arias de Reyna #Matemáticas #Computación #RSA
+ [[https://arstechnica.com/information-technology/2017/10/crypto-failure-cripples-millions-of-high-security-keys-750k-estonian-ids/][Millions of high-security crypto keys crippled by newly discovered flaw
  (Factorization weakness lets attackers impersonate key holders and decrypt
  their data)]]. ~ Dan Goodin #RSA
+ [[https://acmccs.github.io/papers/p1631-nemecA.pdf][The return of Coppersmith’s attack: Practical factorization of widely used RSA moduli]]. ~ M. Nemec, M. Sys, P. Svenda, D. Klinec, V. Matyas #Math
  #CompSci #RSA
+ [[https://vrahli.github.io/articles/continuity-journal-mscs.pdf][Validating Brouwer's continuity principle for numbers using named
  exceptions]]. ~ V. Rahli & M. Bickford #ITP #Nuprl #Coq
+ [[https://github.com/robstewart57/dblp2bibtex][dblp2bibtex: Generates bibtex files for authors identified in the DBLP
  database]]. ~ Rob Stewart #Haskell #TeX
+ [[http://xion.io/post/programming/rust-into-haskell.html][Rust as a gateway drug to Haskell]]. ~ Karol Kuczmarski #Rust
  #Haskell
+ [[http://www.cse.chalmers.se/~vassena/publications_files/jlamp2018.pdf][MAC (A verified static information-flow control library)]]. ~ M. Vassena &
  A. Russo #Haskell #Agda
+ [[https://alpacaaa.net/blog/post/elm-purescript-in-depth-overview][In depth overview of Elm and PureScript. Lessons learned porting a game from
  PureScript to Elm]]. ~ Marco Sampellegrini #PureScript #Elm
+ [[http://mutanatum.com/posts/2017-01-12-Browser-FP-Head-to-Head.html][Selecting a platform: JavaScript vs Elm vs PureScript vs GHCjs vs Scalajs]]. ~
  Isaac Shapira #JavaScript #Elm #PureScript #GHCjs #Scalajs
+ [[http://scholarship.claremont.edu/cgi/viewcontent.cgi?article=1006&context=jhm][Is (some) mathematics poetry?]] ~ J. Henle #Math
+ [[https://arxiv.org/pdf/1711.03902][Neural-symbolic learning and reasoning: a survey and interpretation]]. ~
  T.R. Besold et als. #AI
+ [[https://www.haskell.org/communities/11-2017/html/report.html][Haskell communities and activities report (November 2017)]]. #Haskell
+ [[http://bit.ly/2zIjQcK][Por qué deberías aprender programación funcional ya mismo (con una breve
  introducción a Haskell)]]. ~ A. Marzal #PF #Haskell
+ [[http://ceur-ws.org/Vol-1145/tutorial1.pdf][Answer Set Programming and CLASP (A tutorial)]]. ~ S. Hölldobler, L. Schweizer
  #ASP 
+ [[http://www.tweag.io/posts/2017-11-16-repa.html][Parallelising your array code]]. ~ Manuel Chakravarty #Haskell
+ [[https://babel.hathitrust.org/cgi/pt?id=wu.89055052690;view=1up;seq=13][Portraits of famous philosophers who were also famous mathematicians]]. ~
  C.S. Keyser #eBook #Math #History
+ [[https://github.com/sergv/kievfprog-2017-november/raw/master/Talk.pdf][Recursion schemes (why, how and more)]]. ~ Sergey Vinokurov #Haskell
+ [[https://github.com/DSLsofMath/DSLsofMath/raw/master/L/snapshots/DSLsofMathNotes_2017-11-08.pdf][Domain Specific Languages of Mathematics: lecture notes (November 8, 2017)]]. ~
  Patrik Jansson  Cezar Ionescu. #Haskell #Math
+ [[https://infoscience.epfl.ch/record/232405/files/EPFL_TH7885.pdf][Algorithmic resource verification]]. ~ R Kandhadai Madhavan #PhD_Thesis #ITP
  #Leon
+ [[http://ratiolog.uni-koblenz.de/proceedings2017.pdf%23page%3D35][Proceedings of the Third Workshop on Bridging the gap between human and
  automated Reasoning (Is logic and automated reasoning a foundation for human
  reasoning?)]] #Logic #AR
+ [[http://dl.acm.org/ft_gateway.cfm%3Fid%3D3133929%26type%3Dpdf][How type errors were fixed and what students did?]] ~ B. Wu, S. Chen #Haskell
+ [[http://dl.acm.org/ft_gateway.cfm%3Fid%3D3133930%26type%3Dpdf][Learning user friendly type-error messages]]. ~ B. Wu, J.P. Campora III,
  S. Chen #Haskell 
+ [[https://github.com/sergv/kievfprog2015/raw/master/talk.pdf][Unifying parsing and prettyprinting]]. ~ Sergey Vinokurov #Haskell
+ [[http://blog.higher-order.com/assets/AdjunctionsSbtBExtended.pdf][Adjunctions in everyday life (What we talk about when we talk about monads)]]. 
  ~ Rúnar Bjarnason #Haskell
+ [[http://git.io/fp-jargons][Jargon from the functional programming world in simple terms!]]
  #FuncionalProgramming
+ [[https://github.com/ikhoon/functional-programming-jargon.scala/tree/master/tut][Scala code examples for functional programming jargon]]. ~ Ikhoon Eom
  #FuncionalProgramming #Scala
+ [[https://arxiv.org/pdf/1711.06542][Mechanizing Principia Logico-Metaphysica in functional type theory]]. ~
  D. Kirchner, C. Benzmüller, E.N. Zalta #IsabelleHOL #RA2017
+ [[https://www.isa-afp.org/browser_info/current/AFP/PLM/document.pdf][Representation and partial automation of the Principia Logico-Metaphysica in
  Isabelle/HOL]]. ~ D. Kirchner #Msc_Thesis #IsabelleHOL #RA2017
+ [[https://wickstrom.tech/finite-state-machines/2017/11/19/finite-state-machines-part-2.html][Finite-state machines, part 2: Explicit typed state transitions]]. ~ Oskar
  Wickström #Haskell
+ [[https://github.com/sergv/kievfprog2016/raw/master/Talk.pdf][Let’s play with Regular Expressions]]. ~ Sergey Vinokurov #Haskell
+ [[https://arxiv.org/pdf/1711.05814][Python implementation and construction of finite abelian groups]]. ~
  P. Bradley, J. Smethurst #Python #Math
+ [[http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2017-11.html#e2017-11-15T16_03_52.htm][A programming digression: Kaprekar numbers]]. ~ E. Wallingford #Programming
  #Math 
+ [[https://github.com/Juzley/elm-net][Net puzzle game in Elm]]. ~ Julian Priestley #Elm #Puzzle
+ [[https://arxiv.org/pdf/1711.07023][Verification of PCP-related computational reductions in Coq]]. ~ Y. Forster,
  E. Heiter, G. Smolka #Coq
+ [[https://ku-fpg.github.io/files/Grebe-17-Transformations.pdf][Rewriting a shallow DSL using a GHC Compiler extension]]. ~ M. Grebe, D. Young,
  A. Gill #Haskell
+ [[http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2010-10.html#e2010-10-25T16_50_29.htm][A programming digression: Farey sequences]]. ~ E. Wallingford   #Programming #Math
+ [[https://two-wrongs.com/emacs-for-humans-glossary][Emacs for humans: glossary]]. #Emacs
+ [[https://www.fpcomplete.com/blog/2017/01/quickcheck][QuickCheck and magic of testing]]. ~ A. Kuleshevich #Haskell #QuickCheck
+ [[http://www.newthinktank.com/2017/11/emacs-tutorial][Learn Emacs in one video]]. ~ Derek Banas #Emacs #I1M2017
+ [[http://reasonablypolymorphic.com/blog/type-directed-code-generation][Type-directed code generation]]. ~ Sandy Maguire #Haskell
+ [[https://tech-blog.capital-match.com/posts/3-anatomy-of-haskell-web-app.html][Anatomy of a Haskell-based application, revisited]]. ~ Zhouyu Qian   #Haskell
+ [[https://github.com/rudymatela/leancheck][LeanCheck: a simple enumerative property-based testing library]]. ~ Rudy Matela
  #Haskell
+ [[http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2015-12.html#e2015-12-08T15_55_44.htm][A programming digression: Generating excellent numbers]]. ~ E. Wallingford
  #Programming #Math
+ [[https://www.slideshare.net/saurabhnanda/joys-frustrations-of-putting-34000-lines-of-haskell-into-production-at-vacation-labs][Joys & frustrations of putting 34,000 lines of Haskell into production (at Vacation Labs)]]. ~ Saurabh Nanda #Haskell
+ [[https://arxiv.org/pdf/1711.08076][Schur number five]]. ~ Marijn J.H. Heule #SAT #Logic #AI
+ [[https://openlibra.com/es/book/category-theory-for-programmers][Category theory for programmers]]. ~ Bartosz Milewski #eBook #CategoryTheory
  #Haskell #OpenLibra
+ [[https://softwarefoundations.cis.upenn.edu/vfa-current/index.html][Verified functional algorithms]]. ~ Andrew W. Appel #FuncionalProgramming #ITP
  #Coq
+ [[https://rahulmutt.github.io/slides/fuconf17-eta-fibers/slides.html][Eta Fibers (Towards better concurrency on the JVM)]]. ~ Rahul Muttineni #Haskell
+ [[http://www.cs.us.es/~fsancho/?e=186][Resolviendo problemas de satisfacción de restricciones con hormigas]]. ~
  F. Sancho #PSR #IA
+ [[http://www.parsonsmatt.org/2017/11/21/monadbasecontrol_in_five_minutes.html][MonadBaseControl in five minutes]]. ~ Matt Parsons #Haskell
+ [[https://haskell-serbia.com/tutorial/4][Dependent types in Haskell]]. ~ Sasa Bogicevic #Haskell
+ [[https://jfr.unibo.it/article/download/6767/7213][A formally proved, complete algorithm for path resolution with symbolic links]]. 
  ~ R. Chen, M. Clochard, C. Marché #ITP #Coq
+ [[http://www.timphilipwilliams.com/posts/2017-04-12-nested-datacubes.html][Functional pearl: Nested Datacubes]]. ~ Tim Philip Williams   #Haskell
+ [[https://ipfs.io/ipfs/QmfN5DojVnEsf1Une3DFwfUiFpfWnQf31f61qgybiXVeQE/blog/spheres-and-points/][Spheres and points]]. ~ Bassel Mabsout #Haskell
+ [[https://modalduality.org/tzimtsum][tzimtsum: A Presburger arithmetic proposition decider Haskell library]]. 
  #Haskell #Logic #Math 
+ [[https://www.isa-afp.org/browser_info/current/AFP/Stochastic_Matrices/document.pdf][Stochastic matrices and the Perron-Frobenius theorem in Isabelle/HOL]]. ~
  R. Thiemann #IsabelleHOL #Math
+ [[http://www.timphilipwilliams.com/slides/AnEDSLForKDBQ.pdf][An EDSL for KDB/Q (rationale, techniques and lessons learned)]]. ~ Tim Williams
  #Haskell
+ [[https://github.com/k-bx/fcafe-lazy-evaluation/blob/master/Talk%20Notes%20-%20Lazy%20Evaluation%20in%20Haskell.md][Talk notes: Lazy evaluation in Haskell]]. ~ Kostiantyn Rybnikov   #Haskell
+ [[https://github.com/HeinrichApfelmus/hyper-haskell][HyperHaskell: a graphical interpreter for the programming language Haskell]]. ~
  Heinrich Apfelmus #Haskell
+ [[https://eccc.weizmann.ac.il/report/2017/179/download][IPS-like proof systems based on binary decision diagrams]]. ~ A. Knop #Logic
  #AR #IPS
+ [[http://www.cs.toronto.edu/~jgrochow/grochow,pitassi-circuitsProofsPIT.pdf][Circuit complexity, proof complexity, and polynomial identity testing]]. ~
  J.A. Grochow, T. Pitassi #AR #GröbnerBases
+ [[https://github.com/nikivazou/presentations/raw/master/type-theory-in-15-min/type-theory-in-15min.pdf][Type theory in 15min]]. ~ Niki Vazou #Programming
+ [[http://www1.eafit.edu.co/asr/pubs/others/AcevedoAcosta-EcheverriJurado-2017.Una-formalisacion-del-sistema-de-los-numeros-reales-impresora.pdf][Una formalización del sistema de los números reales]]. ~ J.O. Acevedo y
  J.L. Echeverri #ITP #Agda
+ [[https://github.com/lspitzner/exference][Exference: Haskell tool to generate expressions from types]]. ~ Lennart
  Spitzner #Haskell
+ [[https://github.com/lspitzner/exference-paper/raw/master/exference.pdf][Exference: Rubbing the Lamp once more]]. ~ Lennart Spitzner #Haskell
+ [[http://ldc.usb.ve/~emhn/cursos/ci4251/][Programación funcional avanzada (2017)]]. ~ Ernesto Hernández-Novich   #Curso #Haskell
+ [[https://www.nytimes.com/2017/11/21/magazine/can-ai-be-taught-to-explain-itself.html][Can A.I. be taught to explain itself?]] ~ C. Kuang #XAI 
+ [[https://elbauldelprogramador.com/teoria-categorias-scala-tipos-funciones][Teoría de categorías en Scala: Tipos y funciones]]. ~ A. Alcalde
  #TeoríaCategorías #Scala
+ [[https://github.com/carp-lang/carp][Carp: A statically typed Lisp, without a GC, for high performance
  applications]]. #Haskell #Lisp
+ [[http://www.mordonez.me/porque-usar-programacion-funcional][¿Porqué usar programación funcional?]] ~ Marco Ordoñez #ProgramacionFuncional
+ [[https://rjlipton.wordpress.com/2017/11/27/proving-peano-arithmetic-partially-consistent][Proving Peano arithmetic partially consistent?]] ~ R.J. Lipton & K.W. Regan
  #Logic
+ [[https://www.isa-afp.org/browser_info/current/AFP/Stochastic_Matrices/document.pdf][Stochastic matrices and the Perron–Frobenius theorem in Isabelle/HOL]]. ~ René
  Thiemann #ITP #IsabelleHOL #Math
+ [[https://dspace.library.uu.nl/bitstream/handle/1874/355676/sessiontypes-thesis.pdf][Session types in Cloud Haskell]]. ~ Ferdinand van Walree #PhD_Thesis #Haskell
+ [[https://blog.jle.im/entry/hamiltonian-dynamics-in-haskell.html][Hamiltonian dynamics in Haskell]]. ~ Justin Le #Haskell #Math #Physic
+ [[https://www.stephanboyer.com/post/134/my-unusual-hobby][My unusual hobby]]. ~ Stephan Boyer #ITP #Coq
+ [[https://github.com/ocramz/sparse-linear-algebra][sparse-linear-algebra: Numerical computation in native Haskell]]. ~ Marco Zocca
  #Haskell #Math
+ [[https://arxiv.org/pdf/1711.09286][Total Haskell is reasonable Coq]]. ~ A. Spector-Zabusky, J. Breitner,
  C. Rizkallah, S. Weirich #Haskell #Coq
+ [[https://eli.thegreenplace.net/2017/deciphering-haskells-applicative-and-monadic-parsers][Deciphering Haskell's applicative and monadic parsers]]. ~ Eli Bendersky
  #Haskell
+ [[http://francis.naukas.com/2017/11/25/resena-apologia-de-un-matematico-de-g-h-hardy/][Reseña: "Apología de un matemático" de G. H. Hardy]]. ~ F.R. Villatoro
  #Matemáticas
+ [[https://github.com/jaalonso/Categorias_y_programacion][Lecturas sobre teoría de categorías y programación funcional]]. 
  #TeoriaDeCategorias #ProgramacionFuncional #Haskell
+ [[https://arxiv.org/pdf/1606.08813][European Union regulations on algorithmic decision-making and a "right to explanation"]]. 
  ~ B. Goodman, S. Flaxman #MachineLearning
+ [[https://github.com/HaskellChamber/Haskell-University][Haskell-University: Portfolio-based approach to learning Haskell]]. #Haskell 
+ [[https://pursuit.purescript.org/packages/purescript-symmetric-groups/0.1.0/docs/Data.SymmetricGroup][Symmetric groups on finite sets in PureScript]]. #PureScript #Math

* Diciembre de 2017 
+ [[https://www.risc.jku.at/research/formal/software/RISCAL/papers/ThEdu17.pdf][Teaching the formalization of mathematical theories and algorithms via the
  automatic checking of finite models]]. ~ W. Schreiner, A. Brunhuemer, C. Fürst
  #ITP #Math #RISCAL
+ [[http://hojaynumeros.blogspot.com.es/2017/11/numeros-piramidales-de-cuatro.html][Números piramidales de cuatro dimensiones]]. ~ Antonio Roldán   #Matemáticas #Programación
+ [[http://userweb.fct.unl.pt/~lmp/publications/online-papers/lp_app_mach_ethics.pdf][From logic programming to machine ethics]]. ~ A. Saptawijaya, L.M. Pereira
  #LogicProgramming #KRR #AI
+ [[https://www.irif.fr/~gradanne/papers/phdthesis.pdf][Tierless Web programming in ML]]. ~ G. Radanne #PhD_Thesis
  #FunctionalProgramming #OCaml
+ [[http://bit.ly/2AmpaCD][A domain specific language for drum beat programming]]. ~ A.R. Du Bois,
  R. Ribeiro #Haskell #DSL #Music
+ [[https://hal.inria.fr/hal-01639819/document][A formal proof in Coq of a control function for the inverted pendulum]]. ~
  D. Rouhling #ITP #Coq #Math #Physics
+ [[https://hackernoon.com/writing-code-like-a-mathematical-proof-f5838fc27382][Writing code like a mathematical proof]]. ~ Spiro Sideris #Math #Programming
+ [[https://www.snoyman.com/blog/2016/11/haskell-for-dummies][Haskell for dummies]]. ~ M. Snoyman #Haskell
+ [[https://hal.inria.fr/hal-01643290/file/ERTS_2018_paper_59.pdf][CompCert: Practical experience on integrating and qualifying a formally
  verified optimizing compiler]]. ~ D. Kästner et als. #ITP #Coq #CompCert
+ [[http://www.stephendiehl.com/posts/haskell_2018.html][Reflecting on Haskell in 2017]]. ~ Stephen Diehl #Haskell
+ [[https://github.com/jagajaga/FP-Course-ITMO][Slides and other materials for functional programming lectures ITMO
  university]]. ~ D. Kovanikov, A. Seroka #Haskell
+ [[https://youtu.be/Cy7jBYr3Zvc][Point-free or die: tacit programming in Haskell and beyond]]. ~ Amar Shah
  #Haskell
+ [[http://dss.in.tum.de/files/brandt-research/stratset.pdf][Voting with ties: Strong impossibilities via SAT solving]]. ~ F. Brandt,
  C. Saile, C. Stricker #SAT_solving
+ [[https://hal.inria.fr/hal-01643919/document][A constructive formalisation of semi-algebraic sets and functions]]. ~
  B. Djalal #ITP #Coq #Math
+ [[https://patternsinfp.wordpress.com/2017/12/05/arithmetic-coding/][Arithmetic coding]]. ~ Jeremy Gibbons #Haskell #Math
+ [[http://www.joachim-breitner.de/blog/734-Finding_bugs_in_Haskell_code_by_proving_it][Finding bugs in Haskell code by proving it]]. ~ J. Breitner #Haskell
+ [[http://blog.vmchale.com/article/haskell-frontend][Using Haskell on the frontend]]. ~ Vanessa McHale #Haskell 
+ [[http://www.eldiario.es/cultura/tecnologia/noticias-Reuters-escritas-programa-informatico_0_715328666.html][La inteligencia artificial que caza noticias para Reuters en Twitter]]. ~ David
  Sarabia #IA
+ [[https://arxiv.org/pdf/1711.04068][Reuters Tracer: toward automated news production using large scale social
  media data]]. ~ X. Liu et als. #AI #BigData
+ [[https://github.com/dwyl/learn-elm][learn elm: discover why people are switching to Elm and how you can get
  started today!]] #elm
+ [[http://www.microsiervos.com/archivo/ciencia/bestiario-fractal-curvas.html][Un bestiario fractal de curvas para rellenar el espacio (y el cerebro)]]. ~
  @Alvy #Fractales
+ [[http://archive.org/stream/BrainfillingCurves-AFractalBestiary/BrainFilling#page/n0/mode/2up][Brainfilling curves: a fractal bestiary]]. ~ Jeffrey Ventrella
+ [[http://www.fractalcurves.com][A complete taxonomy of plane-filling curves]]. ~ Jeffrey Ventrella #Fractal
+ [[https://arxiv.org/pdf/1712.01485][Analyzing individual proofs as the basis of interoperability between proof
  systems]]. ~ G. Dowek #ITP #Coq #IsabelleHOL
+ [[http://blog.vmchale.com/article/integer-partitions][Functional pearl: integer partitions and QuickCheck]]. ~ Vanessa McHale
  #Haskell
+ [[https://www.quantamagazine.org/secret-link-uncovered-between-pure-math-and-physics-20171201][Secret link uncovered between pure math and physics]]. ~ Kevin Hartnett #Math
  #Physics
+ [[http://revistasuma.es/IMG/pdf/33-como_compartir.pdf][Cómo compartir un secreto usando sistemas de ecuaciones lineales]]. ~ A. Cano,
  J.M. LunA, A. Rojas #Matemáticas
+ [[https://arxiv.org/pdf/1712.01093][The mind as a computational system]]. ~ Christoph Adami #AI
+ [[https://openlibra.com/es/book/geometria-axiomatica][Geometría axiomática]]. ~ Gerard Romo Garrido #Matemáticas
+ [[http://blog.vmchale.com/article/sum][Variations on a theme: A set of curated examples meant to show Haskell's
  expressiveness]]. ~ Vanessa McHale #Haskell
+ [[https://rjlipton.wordpress.com/2017/12/08/pnp-perhaps-i-change-my-mind][P = NP: Perhaps I change my mind]]. (An old result put a new way). ~
  R.J. Lipton, K.W. Regan #Math #CompSci
+ [[https://www.quantamagazine.org/mathematicians-crack-the-cursed-curve-20171207][Mathematicians crack the cursed curve]]. ~ Kevin Hartnett #Math
+ [[http://www.maths.ed.ac.uk/~cbarwick/papers/style.pdf][Notes on mathematical writing]]. ~ Clark Barwick #Math
+ [[https://arxiv.org/pdf/1712.02329][Rings: an efficient Java/Scala library for polynomial rings]]. ~ S. Poslavsky
  #Scala #Math
+ [[https://arxiv.org/pdf/1611.00692v1][Towards automatic resource bound analysis for OCaml]]. ~ J. Hoffmann, A. Das,
  S.C. Weng #OCaml
+ [[https://machinethoughts.wordpress.com/2017/12/08/the-role-of-theory-in-deep-learning][The role of theory in Deep Learning]]. ~ David McAllester #AI #DeepLearning 
+ [[https://arxiv.org/pdf/1612.06526v1][Computation in Logic and Logic in Computation]]. ~ S. Salehi #Logic #CompSci
+ [[http://fixpt.de/blog/2017-12-04-strictness-analysis-part-1.html][All about strictness analysis (part 1)]]. ~ Sebastian Graf #Haskell
+ [[https://www.matchilling.com/introduction-to-logic-programming-with-prolog][Introduction to logic programming with Prolog]]. ~ Mathias Schilling
  #Prolog
+ [[http://blog.functorial.com/posts/2017-12-10-Co-Finds-A-Pairing.html][Co finds a pairing]]. ~ Phil Freeman #Haskell
+ [[https://patternsinfp.wordpress.com/2017/12/11/streaming-arithmetic-coding/][Streaming arithmetic coding]]. ~ Jeremy Gibbons #Haskell #Math
+ [[https://lmcs.episciences.org/4098/pdf][A framework for certified self-stabilization]]. ~ S. Devismes, P. Corbineau,
  K. Altisen #ITP #Coq
+ [[https://github.com/jaspervdj/talks/blob/master/2017-haskell-exchange-getting-things-done/slides.md][Getting things done in Haskell]]. ~ Jasper Van der Jeugt #Haskell 
+ [[https://arxiv.org/pdf/1107.1130][Dismal arithmetic]]. ~ D. Applegate, M. LeBrun, N.J.A. Sloane #Math
+ [[https://patrickmn.com/software/the-haskell-pyramid/][The Haskell pyramid]]. ~ Patrick Nielsen #Haskell 
+ [[https://github.com/jaspervdj/fugacious][fugacious: An example Haskell Web application]]. ~ Jasper Van der Jeugt
  #Haskell
+ [[http://www.swmath.org/about_contact][swMATH: An information service for mathematical software]]. #Math #CompSci
+ [[https://arxiv.org/abs/1712.04375][Computational Logic: its origins and applications]]. ~ L.C Paulson #Logic #ITP
  #IsabelleHOL
+ [[https://web.engr.oregonstate.edu/~erwig/papers/Monadify_SCP04.pdf][Monadification of functional programs]]. ~ M. Erwig, D. Ren #Haskell
+ [[http://davidbkemp.github.io/QuantumComputingArticle][An interactive introduction to quantum computing (or what do you mean they can be both zero and one at the same time!)]] ~ D. Kemp #CompSci
+ [[https://www.johndcook.com/blog/2017/12/12/efficiency-is-not-associative-for-matrix-multiplication][Efficiency is not associative for matrix multiplication]]. ~ J.D. Cook
  #Math #CompSci
+ [[http://wiki.di.uminho.pt/twiki/pub/Education/ACMSD/WebHome/acmsd1718-dh.pdf][A brief introduction to category theory]]. ~ D. Hofmann #CategoryTheory
+ [[http://www.cl.cam.ac.uk/~jrh13/slides/lyon-04feb14/slides.pdf][Applications of automated reasoning]]. ~ J. Harrison #AutomatedReasoning
+ [[http://www.variablenotfound.com/2011/10/el-tao-de-la-programacion.html][El Tao de la programación]]. #Programación
+ [[http://www.mit.edu/~xela/tao.html][The Tao of programming]]. #Programming
+ [[https://lars.hupel.info/pub/verified-iptables.pdf][Verified iptables firewall analysis & verification]]. ~ C. Diekmann, L. Hupel,
  J. Michaelis, M. Haslbeck, G. Carle #ITP #IsabelleHOL
+ [[https://a-tour-of-go-in-haskell.syocy.net/en_US/index.html][A tour of Go in Haskell]]. ~ Osanai Kazuyoshi #Haskell
+ [[https://soupi.github.io/rfc/reading_simple_haskell][Reading simple Haskell]]. ~ Gil Mizrahi #Haskell
+ [[https://deque.blog/2017/12/08/continuation-passing-style-free-monads-and-direct-style-free-monads/][Continuation passing style Free Monads and direct style Free Monads]]. ~
  Quentin Duval #Idris
+ [[http://www.artfulmaths.com/blog/folding-christmas-fractals][Folding Christmas fractals]]. ~ Clarissa Grandi #Math 
+ [[https://turingmachinesimulator.com/][Online Turing machine simulator]]. ~ Martín Ugarte #CompSci #Turing
+ [[http://iris-project.org/pdfs/2018-popl-runST-final.pdf][A logical relation for monadic encapsulation of state (proving contextual
  equivalences in the presence of runST)]]. ~ A. Timany et als. #ITP #Coq
  #Haskell
+ [[https://www.snoyman.com/blog/2017/12/what-makes-haskell-unique][What makes Haskell unique]]. ~ M. Snoyman #Haskell
+ [[https://ren.zone/articles/safe-money][safe-money: Money in the type system where it belongs]]. ~ Renzo Carbonara
  #Haskell
+ [[http://ergoemacs.org/emacs/emacs_org_babel_literate_programing.html][Emacs: Org mode, programing language code markup]]. ~ Xah Lee #Emacs
  #Programming #OrgMode
+ [[https://github.com/smallhadroncollider/taskell][taskell: A command line task manager written in Haskell]]. ~ Mark Wales
  #Haskell
+ [[http://www.logicmatters.net/2017/12/14/logic-books-of-the-year-2/][Logic books of the year?]] ~ Peter Smith #Logic
+ [[https://songbird-prover.github.io/lemma-synthesis][SLS: Songbird + Lemma Synthesis (a separation logic prover which can
  automatically synthesize inductive lemmas on-the-fly)]]. #ATP #OCaml
+ [[https://bitbucket.org/prl_tokyo/bigul/raw/logic/POPL18/logic.pdf][An axiomatic basis for bidirectional programming]]. ~ H.S. Ko, Z. Hu #ITP #Agda
+ [[https://arxiv.org/abs/1708.00551][Bonsai: synthesis-based reasoning for type systems]]. ~ K. Chandra, R. Bodik
  #Racket
+ [[http://cs.purdue.edu/%7Erompf/papers/amin-draft2017a.pdf][Collapsing towers of interpreters]]. ~ N. Amin, T. Rompf #Lisp #Scala
+ [[https://github.com/ndmitchell/debug][Debug: Haskell library for debugging]]. ~ Neil Mitchell #Haskell 
+ [[https://github.com/owickstrom/fast-and-fearless-evolution-of-server-side-webapps][Fast and fearless evolution of server-side Web applications]]. ~ Oskar
  Wickström #Haskell
+ [[https://sinews.siam.org/Details-Page/a-water-based-solution-of-polynomial-equations][A water-based solution of polynomial equations]]. ~ Mark Levi #Math
+ [[http://andreipopescu.uk/pdf/conserv_HOL_IsabelleHOL.pdf][Safety and conservativity of definitions in HOL and Isabelle/HOL]]. ~
  O. Kunčar, A. Popescu #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Knuth_Morris_Pratt.html][The string search algorithm by Knuth, Morris and Pratt in Isabelle/HOL]]. ~
  F. Hellauer, P. Lammich #IsabelleHOL
+ [[https://blog.ramdoot.in/monadic-do-block-yet-again-a98cf0237b25][Monadic "do" block, yet again (What should get into your "do" block?)]] ~
  Arvind Devarajan #Haskell
+ [[https://codurance.com/2017/12/14/lambda-calculus-in-clojure][Lambda calculus in Clojure (part 1)]]. ~ Sergio Rodrigo Royo #LambdaCalculus
  #Clojure
+ [[https://clementd-files.cellar-c2.services.clever-cloud.com/scala-io-haskell.html#1.0][Haskell in production in a startup in 2017? Yup]]. ~ Frédéric Menou
   Clément Delafargue #Haskell
+ [[https://futtetennismo.me/posts/algorithms-and-data-structures/2017-12-08-functional-graphs.html][Functional programming with graphs]]. ~ @futtetennista #Haskell
+ [[https://arxiv.org/abs/1712.06587][Solving satisfiability using inclusion-exclusion]]. ~ A. Zaleski #Logic #Sat
  #Maple
+ [[https://github.com/haskell-perf/checklist/blob/master/README.md][The Haskell performance checklist]]. ~ Chris Done #Haskell
+ [[https://github.com/haskell-perf/numbers][Benchmarks for numbers: ints, doubles, bignums, rationals, etc.]] ~ Chris Done
  #Haskell
+ [[https://ucsd-progsys.github.io/liquidhaskell-blog/2017/12/15/splitting-and-splicing-intervals-I.lhs][Splitting and splicing intervals (part 1)]]. ~ R. Jhala #Haskell
  #LiquidHaskell
+ [[http://bit.ly/2DfofTS][De Lutero a Voevodsky, pasando por Brouwer: Reformas en matemáticas]]. ~
  J. Ferreirós #Matemáticas
+ [[https://jfr.unibo.it/article/download/7235/7332][A library for algorithmic game theory in Ssreflect/Coq]]. ~ A. Bagnall,
  S. Merten, G. Stewart #ITP #Coq
+ [[https://www.fpcomplete.com/blog/2017/12/building-haskell-apps-with-docker][Building Haskell apps with Docker]]. ~ D. Bertovic #Haskell
+ [[http://www.tweag.io/posts/2017-12-21-reflection-tutorial.html][All about reflection: a tutorial]]. ~ A. Spiwack #Haskell
+ [[http://kvardek-du.kerno.org/2017/12/a-lisp-repl-in-your-pocket.html][A Lisp REPL in your pocket]]. ~ Kvardek Du #Lisp #Android
+ [[http://dev.stephendiehl.com/types_behavior.pdf][Reasoning about program behavior algebraically]]. ~ Stephen Diehl #Haskell
+ [[https://medium.com/@danrobinson/understanding-simplicity-implementing-a-smart-contract-language-in-30-lines-of-haskell-827521bfeb4d][Understanding simplicity: implementing a smart contract language in 30 lines of Haskell]]. ~ Dan Robinson #Haskell
+ [[https://cacm.acm.org/news/223727-evolutionary-programming-converts-darwinism-into-algorithms/fulltext][Evolutionary programming converts darwinism into algorithms]]. ~ R. Colin Johnson #Programming #AI
+ [[https://www.isa-afp.org/entries/Mason_Stothers.html][The Mason–Stother's theorem]]. ~ Manuel Eberl #ITP #IsabelleHOL
+ [[https://blog.infinitenegativeutility.com/2017/12/some-notes-about-how-i-write-haskell][Some notes about how I write Haskell]]. ~ Getty Ritter #Haskell
+ [[https://github.com/c-cube/zipperposition][Zipperposition: An automatic theorem prover in OCaml for typed logic with
  equality, datatypes and arithmetic]]. ~ Simon Cruanes #OCaml #ATP #Logic
+ [[http://cedeela.fr/~simon/files/thesis.pdf][Extending superposition with integer arithmetic, structural induction, and
  beyond]]. ~ Simon Cruanes #PhD_Thesis #OCaml #ATP #Logic
+ [[http://www.microsiervos.com/archivo/ordenadores/programas-artistico-matematicos-280-caracteres.html][Programas artístico-matemáticos en menos de 280 caracteres]]. ~ @Alvy
  #Programación #Matemáticas
+ [[https://blog.jle.im/entry/introduction-to-singletons-1.html][Introduction to singletons (Part 1)]]. ~ Justin Le #Haskell
+ [[http://atcm.mathandtech.org/EP2017/contributed/4202017_21470.pdf][On possible use of quantifier elimination software in upper secondary
  mathematics education]]. ~ Y. Sato, R. Fukasaku #Math #Logic
+ [[https://www.isa-afp.org/entries/Median_Of_Medians_Selection.html][The median-of-medians selection algorithm]]. ~ Manuel Eberl #ITP #IsabelleHOL
+ [[http://www2.ing.unipi.it/~a009435/issw/extra/cosim-cps_cr.pdf][Integrated simulation and formal verification of a simple autonomous
  vehicle]]. ~ A_ Domenici, A. Fagiolini, M. Palmieri #Formal_verification #ITP
  #PVS
+ [[https://github.com/serokell/importify][importify: manage Haskell imports quickly]]. ~ Dmitry Kovanikov et
  als. #Haskell
+ [[http://homerhanumat.com/r-notes/r-notes.pdf][Beginning Computer Science with R]]. ~ H. White #CompSci #Rstats 
+ [[https://github.com/sdiehl/protolude][Protolude: A sensible starting Prelude for building custom Preludes]]. ~
  Stephen Diehl #Haskell
+ [[http://sketis.net/wp-content/uploads/2017/12/Isabelle_Scaling_Dec-2017.pdf][Scaling Isabelle proof document processing]]. ~ M. Wenzel #IsabelleHOL
+ [[https://bookdown.org/chesterismay/rbasics/][Getting used to R, RStudio, and R Markdown]]. ~ C. Ismay #Rstats
+ [[https://www.r-bloggers.com/tiny-art-in-less-than-280-characters][Tiny art in less than 280 characters]]. ~ Antonio S. Chinchón   #Rstats
+ [[https://aschinchon.github.io/estalmat_2017/#1][Programar (en R) te da alas]]. ~ Antonio S. Chinchón #Rstats
+ [[https://hugo.feree.fr/cpp2018.pdf][Formal proof of polynomial-time complexity with quasi-interpretations]]. ~
  H. Férée et als. #ITP #Coq
+ [[https://jfr.unibo.it/article/download/7235/7332][A library for algorithmic game theory in Ssreflect/Coq]]. ~ A- Bagnall,
  S. Merten, G. Stewart #ITP #Coq
+ [[https://hal.archives-ouvertes.fr/hal-01656404/file/final_version_plas17_cabon_schmitt.pdf][Annotated multisemantics to prove Non-Interference analyses]]. ~ G. Cabon,
  A. Schmitt #ITP #Coq

