#+TITLE: Lecturas del Grupo de Lógica Computacional

Esta entrada es una recopilación de lecturas compartidas en la lista de correo
del [[http://www.glc.us.es][grupo de lógica computacional]]. La recopilación está ordenada por la fecha
de su publicación en la lista. Al final de cada artículo se encuentra etiquetas
relativas a los sistemas que usa o a su contenido.

* Lecturas del 2016

** Enero 2016

+ Categorical monads and computer programming. ~ N. Benton
  http://bit.ly/1MyraTg #Math #CompSci

+ Answer sets and the language of answer set programming. ~ V. Lifschitz
  http://bit.ly/1SoByUO #ASP #Declarative_programming

+ Formal proof of soundness for an RL prover. ~ A. Arusoaie et als. 
  http://bit.ly/1SoClVH #ITP #Coq

+ ACL2: Implementation of a computational logic. ~ M. Kaufmann 
  http://bit.ly/1PEWRk5 #ITP #ACL2

+ ACL2 support for interactive proof. ~ M. Kaufmann http://bit.ly/1ZHnurv 
  #ITP #ACL2

+ Introduction to ACL2. ~ M. Kaufmann [Slides] http://bit.ly/1ZHohc0 
  #Logic #ITP #ACL2

+ The table monad in Haskell. ~ A. Vandenbroucke, T. Schrijvers & F. Piessens
  http://bit.ly/1kBZpm4 #Haskell

+ Answer set programming and configuration knowledge representation. ~
  A. Falkner http://bit.ly/1kC0B9h #ASP #KR #Logic

+ A sample implementation of L-systems in Haskell. ~ F. Allberg 
  http://bit.ly/1kC2YsB #Haskell

+ Fixed points for Markov decision processes. ~ J. Hölzl http://bit.ly/1SoDxsn
  #ITP #Isabelle_HOL

+ Plover: High-level embedded linear algebra programming in Haskell. 
  http://bit.ly/1PaDqet #Haskell

+ The rsync algorithm: Just playing with the ideas in rsync with Haskell  ~
  R. Muthukrishnan http://bit.ly/1muxYfX http://bit.ly/1muy4Eo #Haskell

+ Data vs theory: the mathematical battle for the soul of physics. ~
  D.H. Bailey & J.M. Borwein http://huff.to/1OFfoHU

+ A computationally surveyable proof of the Curve25519 group axioms. ~
  D.M. Russinoff http://bit.ly/1SoDQU1 #ITP #ACL2

+ Logique propositionnelle, P, NP. ~ J. Goubault-Larrecq http://bit.ly/tyZgWv 
  #Logic

+ VPHL: A verified partial-correctness logic for probabilistic programs ~
  R. Rand & S. Zdancewic http://bit.ly/1SoEcK6 #ITP #Coq

+ Algebraic numbers in Isabelle/HOL ~ R. Thiemann & A. Yamada
  http://bit.ly/1SoEAIF #ITP #Isabelle_HOL #AFP

+ Emacs org-mode examples and cookbook. ~ E. Neilsen
  http://1.usa.gov/1SCjiHE #Emacs

+ Pour un raffinement spatio-temporel tuilé ~ S. Archipoff & D. Janin
  http://bit.ly/1kBZGWc #Haskell

+ Programmer's learning machine, an integrated educational software dedicated
  to the learning and teaching of #programming. http://bit.ly/1PiuzaL

+ Lazy dynamic programming. ~ T. Jelvis http://bit.ly/1kUpUU4 #Haskell

+ The science of deep specification. http://bit.ly/1kUqHnR http://deepspec.org 
  #ITP #Coq

+ High-level functional properties of bit-level programs: Formal specifications
  and automated proofs ~ C. Dross et als. http://bit.ly/1kC1iiD #Why3

+ Using Elm to create a fun game in just five days. ~ K. Wilcke & A. Kuzmin
  http://zln.do/1JD47Mc #Elm

+ A Coq library for internal verification of running-times. ~ J. McCarthy et
  als. http://bit.ly/1kC1NsZ #Coq

+ Hangman game exercise from Haskell programming from first principles by Julie
  Moronukie and Christopher Allen. http://bit.ly/1TOSySA #Haskell

+ Diagrams quick start tutorial. http://bit.ly/1K9IMVO #Haskell #Diagram

+ Higher-order representation predicates in separation logic. ~ A. Charguéraud
  http://bit.ly/1kC2d2y #Coq

+ Semi-intelligible Isar proofs from machine-generated proofs. ~
  J.C. Blanchette et als. http://bit.ly/1PitZts #ITP # ATP #Isabelle_HOL 

+ Elm in the real world. ~ O. Hanhinen http://bit.ly/1RloTCI #FP #Elm

+ Verified representations of Landau’s "Grundlagen" in the λδ family and in the
  calculus of constructions. ~ F. Guidi http://bit.ly/1RBdjBY #ITP #Coq

+ Free type theory, programming language and functional programming books ~
  steshaw http://steshaw.org/plt 

+ Formal analysis of geometrical optics using theorem proving. ~ M.U. Siddique
  http://bit.ly/1RBdU6V #PhD_Thesis #HOL_Light

+ Postdoctoral and PhD positions in LFCS on graph databases, provenance, and
  programming languages. http://bit.ly/1Zztq9z #PostDoc #CompSci

+ Certification of programs with computational effects. ~ B. Ekici
  http://bit.ly/1Sbfcqy #PhD_Thesis #ITP #Coq

+ Efficient amortised and real-time queues in Haskell. ~ E. de Vries 
  http://bit.ly/1JQtpXn #Haskell

+ Executable relational specifications of polymorphic type systems using logic
  programming. ~ Ki Yung Ahn http://bit.ly/1JQuoqy #Prolog

+ TIPER: Type Inference Prototyping Engines from Relational Specifications of
  type systems. ~ Ki Yung Ahn http://bit.ly/1JQuAGn #Prolog

+ A simple Haskell function. ~ N. Mitchell http://bit.ly/1JQuEWK #Haskell 

+ Functional programming, abstraction,  names. ~ Stephen Diehl
  http://bit.ly/1PhGntr #Programming #Haskell #Mat

+ On mathematical proving. ~ P. Stefaneas & I.M. Vandoulakis
  http://bit.ly/1Sbgimm #Math #Agents #Events 

+ Formal verification of stability properties of cyber-physical systems. ~
  M. Chan et als. http://bit.ly/1SbgulE #ITP #Coq

+ Types, abstraction and parametric polymorphism in higher-order logic. ~
  O. Kunčar http://bit.ly/1SbgFNB #PhD_Thesis #Isabelle_HOL

+ Liouville numbers in Isabelle/HOL. ~ M. Eberl http://bit.ly/1UGtg9t 
  #ITP #Math #Isabelle_HOL #AFP

+ Prime number with 22 million digits is the biggest ever
  found. http://bit.ly/1T3kVyg #Math

+ Basic geometric properties of triangles. ~ M. Eberl http://bit.ly/1Sbhx4R 
  #ITP #Math #Isabelle_HOL #AFP

+ The divergence of the prime harmonic series. ~ M. Eberl
  http://bit.ly/1kXaG0x #ITP #Math #Isabelle_HOL #AFP

+ Descartes' rule of signs. ~ M. Eberl http://bit.ly/1OHYzkb #ITP #Math 
  #Isabelle_HOL #AFP

+ Perspectives on formal verification. ~ H.M. Friedman
  http://bit.ly/1ZTyNk4 #Logic #Math #CompSci

+ Thinking about how and why we prove. ~ Evelyn Lamb
  http://bit.ly/1WDxz73 #Logic #Math #CompSci #ITP

+ Cardinality of number partitions in Isabelle/HOL. ~ L. Bulwahn
  http://bit.ly/1ZzvcaG #ITP #Isabelle_HOL #AFP

+ Course notes equational programming: Lambda calculus. ~ Femke van Raamsdonk
  http://bit.ly/1KylTvw

+ A theorem prover for quantum Hoare logic and its applications. ~ T. Liu et
  als. http://bit.ly/1RKlBcB #ITP #Isabelle_HOL

+ A formally verified proof of the central limit theorem. ~ L. Serafin
  http://bit.ly/1SiMym9  #ITP #Math #Isabelle_HOL

+ What is the modern conception of logic? #1. ~ P. Smith http://bit.ly/1NADXVx 
  #Logic

+ Logicians’ biographies. ~ R. Zach http://bit.ly/1NAECGt #Logic

+ The long and winding history of encryption | Interviews | Communications of
  the ACM http://bit.ly/1NAEWFm #CompSci

+ Particle smoothing. ~ D. Steinitz http://bit.ly/1NAFGu1 #Haskell

+ Introducing dimensional: Statically checked physical dimensions
  for #Haskell. ~ D. McClean http://bit.ly/1NAFQlc https://youtu.be/-Kz7SYZNoUU

+ Formalized linear algebra over elementary divisor rings in Coq. ~ G. Cano et
  als. http://bit.ly/1Tpi1Eh #ITP #Coq #Math

+ Pitfalls in Haskell. ~ S. Kiiskinen http://bit.ly/1OR3pdy #Haskell 

+ Set covering problem. ~ A. Kaygun http://bit.ly/1TpifLA #Lisp

+ Course: Introduction to functional programming ~ S. Kiiskinen
  http://bit.ly/1SdcP7p #Haskell 

+ Introduction to functional programming: Course tasks. ~ S. Kiiskinen
  http://bit.ly/1SdcVvP #Haskell 

+ Functional programming 2: Course tasks. ~ S. Kiiskinen http://bit.ly/1SddgPd 
  #Haskell

+ Writing a search DSL, part 1. http://bit.ly/1ZUWLWC #Haskell

+ GHC base Library Changes: 7.8 to 7.10. http://bit.ly/1SdgCS4 
  #Haskell

+ GHC/Haskell language extensions: a digest. ~ Allele Dev
  http://bit.ly/1ZUZ7VG #Haskell

+ Our functional future or: How I learned to stop worrying and love Haskell. ~
  @drombosky & @FugueHQ http://bit.ly/1P06DJC #Haskell 

+ Practical recursion schemes at PragPub. ~ @RacquelYerbury
  http://bit.ly/1P0heEr #Haskell

+ Design, optimization, and formal verification of circuit fault-tolerance
  techniques. ~ D. Burlyaev http://bit.ly/1Snosa6 #PhD_Thesis #ITP #Coq 

+ Recognizing correct code: Automatic bug-repair system fixes 10 times as many
  errors as its predecessors. http://bit.ly/20wKdXG

+ Monad tutorials timeline. http://bit.ly/1SnpOBA #Haskell

+ Example pet shop written in Haskell. ~ R. Johnson http://bit.ly/1Snqozo
  #Haskell 

+ Building a business that combines human experts and data science ~ B. Lorica
  http://oreil.ly/1ZYIeJL #DataScience

+ What’s a natural transformation? ~ L. Palmer http://bit.ly/1VwHdau 
  #Math #Haskell

+ Category theory/natural transformation ~ HaskellWiki. http://bit.ly/1VwHBWt 
  #Math #Haskell

+ Type introduction illustrated for casual Haskellers (to get over the
  Foldable) ~ Takenobu T. http://bit.ly/1PLbIey #Haskell

+ Probabilistic functions and cryptographic oracles in higher order logic. ~
  A. Lochbihler http://bit.ly/1Q2S7Rd http://bit.ly/1Q2S8o9 #Isabelle_HOL

+ Failure of unique factorization (A simple example of the failure of the
  fundamental theorem of arithmetic) ~ D. Lipton http://bit.ly/20A2Nyc #Math

+ Catamorphisms in 15 minutes! ~ C. Jones http://bit.ly/20A2P9q #Haskell #Math

+ Understanding F-algebras. ~ @BartoszMilewski | FP School of Haskell
  http://bit.ly/1PICIVL #Haskell #Math 

+ A new quantum approach to big data - MIT News http://bit.ly/1RUe4rD #BigData

+ Happy learn Haskell tutorial. http://bit.ly/1RUh9Il #Haskell

** Febrero 2016

+ Proof auditing formalised mathematics. ~ M. Adams http://bit.ly/1nHANuI 
  #ITP #Math

+ Clojure for data science. ~  Mike Anderson http://bit.ly/1PaJzYK 
  #DataScience #Clojure 

+ Now f is continuous (exercise!). ~ R.D. Arthan http://bit.ly/1TyJLGA
  #ITP #Math #ProofPower

+ Quake 3 map viewer in Haskell using GPipe. http://bit.ly/1VFJi3O #Haskell
  #Game

+ GPU programming in Haskell using GPipe. ~ Tobias Bexelius
  http://bit.ly/1VFJTmc http://bit.ly/1Pw3hSj #Haskell 

+ Mixing computations and proofs. ~ M. Beeson http://bit.ly/1KWeGWc
  #ITP #Logic #Math #CompSci

+ Category theory and networks: Corelations in network theory. ~ Azimuth
  http://bit.ly/1SH21wM #Math
 
+ Haskell is not for production and other tales. ~ Katie Miller
  http://bit.ly/1PSdmF1 #Haskell

+ Looking for a solid foundation in programming languages? 10 PL papers worth
  knowing, courtesy of Matthias Felleisen https://github.com/nuprl/10PL

+ Dropbox hack week: GraphQL server in Haskell (With optimal backend IO and low
  response latency). http://bit.ly/1PSdYue #Haskell

+ Haskell for commercial software development. ~ Mike Craig
  http://bit.ly/1SH4erZ #Haskell

+ Anaconda for R users: SparkR and rBokeh. ~ Christine Doig
  http://bit.ly/1SH75kz

+ Type theory and practical foundations. ~ J. Avigad
  http://bit.ly/1SH8jwq #Logic #CompSci #ITP

+ Homotopy type theory. ~ J. Avigad http://bit.ly/1SH8Uy5 #HoTT #Math #CompSci

+ The Lean theorem prover (system description). ~ L. de Moura, S. Kong,
  J. Avigad, F. Van Doorn & J. von Raumer http://bit.ly/1SZ9qcb #ITP #Lean 

+ Becoming productive in Haskell. ~ Matthew Griffith http://bit.ly/1SZ9Sam
  #Haskell

+ From mathematics to map-reduce. ~ G.  Gonzalez | Haskell for
  all. http://bit.ly/1KrvmK9 #Haskell #Math

+ The Isar proof language in 2016. ~ M. Wenzel http://bit.ly/20IViVU #ITP 
  #Isabelle #Isar

+ A modular, efficient formalisation of real algebraic numbers. ~ W. Li &
  L.C. Paulson http://bit.ly/1NTvEED #ITP #Isabelle_HOL #Math

+ Monad transformers, free monads, mtl, laws and a new approach. ~ @acid2 
  http://bit.ly/1NTw4uz #Haskell

+ Difference lists and the codensity monad. http://bit.ly/1NTwqkM #Haskell

+ Promoting the arrow type. ~ Alexander Vieth http://bit.ly/23MMFfk #Haskell

+ Binary and exponential searches. ~ Ross Paterson http://bit.ly/23MNcOr #Haskell

+ Big data, small data, and the role of logic in machine learning. ~ A. Cropper
  http://bit.ly/1QKuVdf #Prolog #ILP 

+ Tutorial: Creating Web applications in SWI-Prolog. ~ Anne Ogborn
  http://bit.ly/1QL8uVw #Prolog

+ Simply logical: Intelligent reasoning by example. ~ P. Flach
  http://bit.ly/1odhAAU #eBook #Prolog #Logic #AI

+ Parser combinators: parsing for Haskell beginners. http://bit.ly/20MgZEo 
  #Haskell

+ Hammering towards QED. ~ J.C. Blanchette, C. Kaliszyk, L.C. Paulson &
  J. Urban http://bit.ly/1SS3b8D #ATP #ITP

+ FLTKHS: Easy, native GUIs in Haskell using FLTK. ~ A. Siram
  http://bit.ly/1SS4dSf #Haskell

+ PSeInt: A tool for learning programming basis with a simple spanish
  pseudocode. http://pseint.sourceforge.net #Learning #Programming

+ A unified Coq framework for verifying C programs with floating-point
  computations. ~ T. Ramananandro et als. http://bit.ly/20hpx42 #ITP #Coq

+ A reflection on types. ~ S. Peyton Jones, S. Weirich, R.A. Eisenberg &
  D. Vytiniotis http://bit.ly/20hqGZs #Haskell

+ Empirical evaluation of test coverage for functional programs. ~ Y. Cheng et
  als. http://bit.ly/20hqY2p #Haskell

+ Theorem proving in Lean. ~ J. Avigad, L. de Moura & S. Kong
  http://bit.ly/20hrJIP #eBook #ITP #Lean #Logic #CompSci

+ Lambda calculus. ~ S. Das http://bit.ly/20hs7ai #Logic #CompSci 

+ Formalisation of ground inference systems in a proof assistant. ~ M. Fleury
  http://bit.ly/20hsxgQ #ITP #Logic #Isabelle_HOL

+ Teaching Haskell to a mathematician. ~ Syd Kerckhove http://bit.ly/1W1crqq
  #Haskell

+ Formalization and programming language design -- explained to all. | Lambda
  the Ultimate http://bit.ly/1SVKUrc #PL

+ Introducción a la programación con la ayuda de PSeInt. ~ R. Saucedo
  http://bit.ly/1S9fAq6 #Programación #PSeInt

+ Formalizing Jordan normal forms in Isabelle/HOL. ~ R. Thiemann & A. Yamada
  http://bit.ly/20hrmxP #ITP #Math #Isabelle_HOL

+ Haskell is easy: a list of recommended Haskell libraries. 
  http://bit.ly/1SDvBoP #Haskell 

+ Why today’s computer science students need to know more about 'professional
  coding'. ~ Mark Warren http://bit.ly/20QvMhg #CompSci #Coding

+ State of Clojure 2015 survey results. ~ Justin Gehtland http://bit.ly/20QwhYE 
  #Clojure 

+ Are there some students who can’t learn how to code? ~ D. Blaikie
  http://oreil.ly/20QwPOj #Programming 

+ Certified context-free parsing: a formalisation of Valiant's algorithm in
  Agda. ~ J.P. Bernardy, P. Jansson http://bit.ly/1ScUirv #ITP #Agda

+ QuickPlot: Quick and easy data visualizations with Haskell. 
  http://bit.ly/1ScWkrF #Haskell

+ Magic to do (Can we avoid accepting what we cannot verify?) ~ R.J. Lipton &
  K.W. Regan http://bit.ly/1ScUKpR

+ Compiling Hilbert’s operator. ~ K. Rustan & M. Leino http://bit.ly/20nL4Ig #Dafny

+ Hoed: a lightweight tracer and algorithmic debugger. http://bit.ly/20nM8vZ 
  #Haskell

+ Foundations of infinitesimal calculus. ~ H.J. Keisler http://bit.ly/20nMfYk 
  #eBook #Math #OpenLibra

+ Viva La Resistance! A Resistance game solver. ~ Lee Pike
  http://bit.ly/20nMzGn http://bit.ly/20nMFxS #Haskell

+ Equivalencias entre funciones de Haskell y Maxima. http://bit.ly/1LhvvLg 
  #Haskell #Maxima

+ Formalization of resolution calculus in Isabelle. ~ A. Schlichtkrull
  http://bit.ly/20nLy13 #PhD_Thesis #ITP #Isabelle_HOL #Logic

+ Decision trees are free monads over the reader functor. ~ C. Thomas
  http://bit.ly/1Rs1gYI #Haskell

+ Making efficient use of memory in Haskell. ~ Will Sewell
  http://bit.ly/1Rs2WBm #Haskell

+ Theorema 2.0: Computer-assisted natural-style mathematics ~ B. Buchberge et
  als. http://bit.ly/1QaWlWA #ITP #Theorema

+ Proof and computation in Coq. ~ L. Théry et als. [Slides]
  http://bit.ly/1V8k2Ds #ITP #Coq

+ The euclidean algorithm generates traditional musical rhythms. ~ G. Toussaint
  http://bit.ly/1V8kX6N #Math #Music

+ A verified SAT solver framework with learn, forget, restart, and
  incrementality. ~ J.C. Blanchette http://bit.ly/1QdmKtm #Isabelle_HOL

+ The finest imperative language. http://bit.ly/1QdoCSO #Haskell

+ A case study on using functional programming for Internet of Things
  applications. ~ Till Haenisch http://bit.ly/1Qdmo5P #FP #IoT 

+ Symbolic pattern matching in Clojure. ~ S. C. Lynch http://bit.ly/1QdmBGj 
  #Clojure

+ Using Crash Hoare Logic for certifying the FSCQ file system. 
  http://bit.ly/1QdoOBz #Coq #Haskell

+ Git fundamentos. ~ J. Amieiro Becerra http://bit.ly/1Qdp17O #LibroLibre 
  #Programación #Git #OpenLibra

+ Stack traces in GHCi, coming in GHC 8.0.1. ~ S. Marlow
  http://bit.ly/1Qds3sF #Haskell

+ Python programación. ~ L. Rodríguez Ojeda http://bit.ly/1Qdpln1 #LibroLibre  
  #Programación #Python #OpenLibra

+ Tutorial on type theory. ~ A. Bauer http://bit.ly/1Qdqeft #Logic #CompSci 

+ Constructive logic for concurrent real number computation. ~ U. Berger
  http://bit.ly/1QdqtqC #Logic #CompSci

+ Formal verification of numerical analysis programs. ~ S. Boldo
  http://bit.ly/1QdqKdc #ITP #Coq #Math

+ Newton sums for an effective formalization of algebraic numbers. ~ C. Cohen &
  B. Djalal http://bit.ly/1Vb4Jty #ITP #Coq #Math

+ The Seifert–van Kampen theorem in homotopy type theory. ~ K.B. Hou &
  M. Shulman http://bit.ly/1Xr40pE #ITP #Agda #Math #HoT 

+ Tests vs types. ~ K. Mahoney http://bit.ly/1Xr4493 #Haskell

+ Penn professor's computer algorithm could fight terrorism while protecting
  privacy. http://bit.ly/1Xr4gFh

+ NumberTheory: A Haskell number theory library. ~ Chris Fredrickson
  http://bit.ly/1Xr4uw7 #Haskell

+ A gentle introduction to secure computation. http://bit.ly/1Xr5vEj

+ A Pamphlet against R (Computational intelligence in Guile Scheme). ~ Panicz
  Maciej Godek http://bit.ly/1Xr5OPA #Scheme #Guile #Rstats

+ QuickPlot: Quick and easy data visualizations with
  Haskell. http://bit.ly/1Xr5HDF #Haskell 

+ Verified numerics for ODEs in Isabelle/HOL. ~ F. Immler [Slides]
  http://bit.ly/1Xr67Kb #ITP #IsabelleHOL #Math

+ Algebra and analysis in the Lean theorem prover. ~ Rob Lewis
  http://bit.ly/1U0kbKQ #ITP #Lean #Polya #Math

+ Political speech generation. ~ V. Kassarnig http://bit.ly/1U0lSb5
  http://bit.ly/1U0m0Y2 #NLP #Python 

+ Infinite lazy Knuth-Bendix completion for monoids in Haskell. ~ Mathematical
  Pamphlet http://bit.ly/1PV4IKf #Haskell #Math

+ Conversion of HOL Light proofs into Metamath. ~ M.M. Carneiro
  http://bit.ly/1of6Xxn #ITP #OpenTheory #Metamath #HOL_Light 

+ Mathematical theory exploration in Theorema: Reduction rings. ~ A. Maletzky
  http://bit.ly/246Cr9S #ITP #Theorema #Math 

+ Categories: From zero to infinity. ~ P. Schapira http://bit.ly/1TlEPV1 #Math

+ Fighting spam with Haskell. ~ Simon Marlow.  [Slides] http://bit.ly/1oloNyK 
  #Haskell #Haxl

+ Matters computational (Ideas, algorithms, source code). ~ Jörg Arndt
  http://bit.ly/1PP57dO #eBook #Algorithms #Programming 

+ Applications of MaxSAT in data analysis. ~ J. Berg, A. Hyttinen &
  M. Järvisalo http://bit.ly/1onyFIa #MaxSAT #Data_analysis

+ Formal proof of soundness for an RL prover. ~ A. Arusoaie et
  als. http://bit.ly/1Q2Gyh8 #ITP #Coq 

+ The Isabelle refinement framework (for verification of large software
  systems). ~ P. Lammich http://bit.ly/1mLkV95 #ITP #IsabelleHOL

+ Natural language access to data via deduction. ~ R. Waldinger
  http://bit.ly/1mLmvaX #ATP 

+ Beyond automation: smart machines + smart humans. ~ T.H. Davenport
  http://bit.ly/1mLmaVK #AI 

+ Selling Haskell in the pub. ~ Neil Mitchell http://bit.ly/1PX0Pky #Haskell

+ A general BFS solver in NetLogo. ~ F. Sancho http://bit.ly/1PX1uCt #NetLogo
  #AI

+ Seminario agentes, multiagentes y aplicaciones. ~ G. Aranda
  http://bit.ly/1PX2E0W #IA

+ Crunching quantum code | Communications of the ACM http://bit.ly/1PX3NWa 
  #CompSci

+ The joy and agony of Haskell in production. ~ S. Diehl
  http://bit.ly/1OljqVq #Haskell

+ Cálculo numérico con Maxima. ~ J. Ramírez http://bit.ly/1PK4N24 #Maxima 
  #Matemáticas #I1M2015

+ Breve manual de Maxima. ~ R. Ipanaqué http://bit.ly/1KxAQDF  
  #Libro #Maxima #I1M2015

+ Higher-order recursion abstraction: How to make Ackermann, Knuth and Conway
  look like a bunch of primitives. http://bit.ly/1L2fP3L #Haskell

+ Verifying Buchberger’s algorithm in reduction rings. ~ A. Maletzky
  http://bit.ly/1Rhjz0C #ITP #Theorema #Math

+ SimpleFP - A series of increasingly complex purely functional PLs implemented
  in Haskell. ~ Darryl McAdams http://bit.ly/1RhjPNk #Haskell

+ Linear regression in pictures. ~ Aditya Bhargava http://bit.ly/1RhkrCw #Math

+ Course: Advanced functional programming. ~ J. Yallop
  http://bit.ly/1RhkRca #FP #OCaml #Fω

+ Doing data science with Clojure. ~ @sbelak http://bit.ly/1RhlFO5 
  #DataScience #Clojure

+ It Is What It Is (And Nothing Else). ~ Robert Harper http://bit.ly/1Rhm3MJ 
  #CompSci

+ State of the Haskell ecosystem (February 2016 edition). ~ G. Gonzalez
  http://bit.ly/1Rhmqqp #Haskell

+ Purely functional Web apps. ~ Michał Płachta http://bit.ly/1RhmRB2 
  #Haskell

+ Applied logic in engineering. ~ M. Spichkova http://bit.ly/1oyD0sc #Teaching #Logic

+ Constraint (logic) programming. ~ R. Barták http://bit.ly/1oyCryI #Logic
  #Programming #Prolog 

+ Proving with types. ~ Matt Parsons http://bit.ly/1OrKEtu #Haskell #Logic

+ A framework for certified self-stabilization case study: silent
  self-stabilizing k-dominating set on a tree. ~ K. Altisen
  http://bit.ly/1oyDQ8f #Coq

+ Course: Applied logic in engineering. ~ M. Spichkova & M. Broy
  http://bit.ly/1T3btwv #Course #Logic

+ Level-confluence of 3-CTRSs in Isabelle/HOL. ~ C. Sternagel, T. Sternagel
  http://bit.ly/1mYW6qh #IsabelleHOL

+ What mathematical logic says about the foundations of mathematics. ~
  C. Bernardi. http://bit.ly/1Qh3hWT

+ Classical logic and intuitionistic logic: equivalent formulations in natural
  deduction. ~ R. Moot & C. Retoré. http://bit.ly/1Qh3nxw

+ Computability and analysis, a  historical approach. ~ V. Brattka. 
  http://bit.ly/1Qh3qcE

+ Automatically proving mathematical theorems with evolutionary algorithms and
  proof assistants. ~ L.A. Yang et als. http://bit.ly/1pbl4o1 #ITP #Coq

+ Features of a high school olympiad problem. ~ L. Smolinsky
  http://bit.ly/1TCqdRl #Math

+ A survey on Domain-Specific Languages for machine learning in Big Data. ~
  I. Portugal, P. Alencar, D. Cowan http://bit.ly/1TCsg7Z #Programming #BigData

+ QED reloaded: Towards a pluralistic formal library of mathematical
  knowledge. ~ M. Kohlhase, F. Rabe http://bit.ly/21169Zq #MKM

+ Haskell by example. ~ Tatsuya Hirose http://bit.ly/1Td7LAh #Haskell

+ Fighting spam with Haskell. ~ Simon Marlow http://bit.ly/1Td8lOL #Haskell 

+ Dimpl: An efficient and expressive DSL for discrete mathematics ~ R. Jha
  http://bit.ly/1UrBtkj #Haskell #Math

+ Retrieval, transformation and verification of proofs in higher order logic. ~
  Shuai Wang http://bit.ly/1XUrgwo #ITP #ProofCloud

+ The promise of Artificial Intelligence unfolds in small steps. ~ S. Lohr
  http://nyti.ms/1nceUT2 #AI 

** Marzo 2016

+ Mechanizing a process algebra for network protocols. ~ T. Bourke, R.J. van
  Glabbeek, P. Höfner http://bit.ly/1RhKMOh #ITP #IsabelleHOL 

+ The Haskell cheatsheet. ~ J. Bailey http://bit.ly/1RhLc7x #Haskell 

+ Proving completeness of logic programs with the cut. ~ W. Drabent
  http://bit.ly/1TPVGkv #Logic #Prolog

+ Linear temporal logic in Isabelle/HOL. ~ S. Sickert http://bit.ly/24COJqC 
  #ITP #Logic #IsabelleHOL #AFP

+ What mathematical logic says about the foundations of mathematics ~
  C. Bernardi http://bit.ly/1RsAXxc #Logic #Math #CompSci

+ Haskell meets large scale distributed analytics. ~ A. Mestanogullari &
  M. Boespflug http://bit.ly/1RsBi2P #Haskell #BigData

+ The rigor resolution on undergraduate education ~ Boyer (1995)
  http://bit.ly/1RsSZiF #CompSci #Education

+ Formalized mathematics. ~ J. Harrison http://bit.ly/1QXL1Ur #Logic #Math  
  #CompSci

+ Proof of correctness of a marching cubes algorithm carried out with Coq. ~
  A.N Chernikov & J. Xu http://bit.ly/21Mendx #ITP #Coq

+ Automated search for Gödel’s proofs. ~ W. Sieg & C. Field
  http://bit.ly/1QZ9J75 #Logic #Math #CompSci #ATP

+ Introduction to funcional programming. ~ J. Harrison (1997)
  http://bit.ly/1X2cfYr #FP #ML

+ Teaching logic for computer science: are we teaching the wrong narrative? ~
  J.A. Makowsky http://bit.ly/24IjoD5 #Logic #CompSci #Teaching

+ Proof relevant corecursive resolution. ~ P. Fu et als. http://bit.ly/1UJucwf
  #ITP #Coq #Haskell

+ A general A* solver in NetLogo ~ F. Sancho http://bit.ly/1U3spBx #Netlogo

+ The perfect language. ~ Gregory Chaitin http://bit.ly/1QWri1f #Logic

+ La teoría de grupos, el cubo de Rubik y Johann Sebastian Bach. ~ Imanol Pérez
  http://bit.ly/1U3tsS7 #Matemáticas 

+ Todo entero positivo es suma de tres capicúas (por Javier Cilleruelo) |
  Gaussianos. http://bit.ly/1U3tPvU #Matemáticas

+ A Coq library for internal verification of running-times. ~ J. McCarthy et
  als. http://bit.ly/1Qvp5Ng #ITP #Coq

+ ADN: ¿Es computable un ser humano? ~ J. Sampedro http://bit.ly/1M2ko9u

+ Teaching cryptography. ~ Boaz Barak http://bit.ly/1M2kvBR #Cryptography

+ Formal verification of the rank function for succinct data structures. ~
  A. Tanaka et als. http://bit.ly/1QvriZ8 #ITP #Coq #BigData

+ Certified universal gathering in R² for oblivious mobile robots. ~
  P. Courtieu et als. http://bit.ly/1Qvs0pe #ITP #Coq

+ Open source Mathematica compatible Mathics 0.9. ~ Mike James
  http://bit.ly/1pxxJlC #CAS #Math

+ Interactive natural deduction proof editor. ~ Bob Atkey http://bit.ly/1pxy1sJ
  #Logic

+ Verasco: a formally-verified static analyzer for C. http://bit.ly/1pxAhA5 #Coq

+ Local search algorithms in NetLogo. ~ F. Sancho http://bit.ly/1pxAovp
  #Netlogo

+ Solving Sudoku via SAT with Mathematica. ~ M. Sottile http://bit.ly/1p8ja7o
  #Logic #SAT #Mathematica

+ Well-founded unions verified. ~ J. Dawson, N. Dershowitz & R. Goré
  http://bit.ly/1QvsOKN #ITP #IsabelleHOL

+ Variations on noetherianness. ~ D. Firsov, T. Uustalu & N. Veltri
  http://bit.ly/1Qvt7Fj #ITP #Agda

+ The beginning of the end for encryption schemes? New quantum computer factors
  numbers in a scalable way. http://bit.ly/1SELw53 #CompSci

+ Verified construction of static single assignment form. ~ S. Buchwald,
  D. Lohner & S. Ullrich http://bit.ly/1QvtAas #ITP #IsabelleHOL

+ The Cartan fixed point theorems in Isabelle/HOL. ~ L. Paulson
  http://bit.ly/1SEMA9e #ITP #IsabelleHOL #Math #AFP

+ Using AlphaGo as a theorem prover. http://bit.ly/1RH2wTF #ATP #AI

+ Beginner's guide to the history of data science ~  Hannah Augur
  http://bit.ly/1RH2Dyx #DataScience

+ Blackstar: Raytracing black holes with Haskell. ~ Sakari Kapanen
  http://bit.ly/22aw7Q4 #Haskell

+ Big Data ¿Qué es y cómo nos cambiará la vida? ~ M.A. Trabado
  http://bit.ly/1RfHGKj #BigData 

+ Las ecuaciones más bellas de la historia de las matemáticas. ~ R. Pérez
  http://bit.ly/1RdXFZB #Matemáticas

+ Big Data y humanidades digitales: de la computación social a los retos de la cultura
  conectada. ~ S. Álvaro http://j.mp/21opILo #BigData 

+ Formalising confluence in PVS. ~ Mauricio Ayala-Rincón
  http://bit.ly/24Y0Mz2 #ITP #PVS

+ WIMS (WWW Interactive Multipurpose Server) allows you to work on mathematics
  interactively via the Internet. ~ G. Xiao http://bit.ly/1V5JfjZ #Math 

+ COGENT: Verifying high-assurance file system implementations. ~ S. Amani et
  als. http://bit.ly/24Y109e #ITP #Coq

+ Peculiar pattern found in "random" prime numbers. ~ E. Lamb
  http://bit.ly/1MkP8Tc #Math

+ Unexpected biases in the distribution of consecutive primes. ~ R.J. Lemke
  Oliver & K. Soundararajan http://bit.ly/1MkPFES #Math 

+ Propositional resolution and prime implicates generation in Isabelle/HOL. ~
  N. Peltier http://bit.ly/1RkdJz1 #ITP #IsabelleHOL #Logic 

+ Haskell is the Dark Souls of programming. ~ Steve Shogren
  http://bit.ly/1Rke4le #Haskell

+ Using the STM with Haskell. ~ Steve Severance http://bit.ly/1RkefwU #Haskell

+ Guilloche (spirograph) patterns. ~ Ken Takusagawa http://bit.ly/1RkewjB 
  #Haskell

+ From Tarski to Descartes: Formalization of the arithmetization of euclidean
  geometry. ~ P. Boutry et als, http://bit.ly/1RlXuS8 #ITP #Coq #Math

+ Reasoning about programs. ~ P. Manolios http://bit.ly/1S7vS09 #ITP #ACL2

+ Constructive analysis and experimental mathematics using the Nuprl proof
  assistant. ~ M. Bickford http://bit.ly/1Mhrblc #ITP #Nuprl #Math

+ SMT solving for functional programming over infinite structures. ~ B. Klin &
  M Szynwelski http://bit.ly/1MhupoC #Haskell

+ An introduction to mechanized reasoning. ~ M. Kerber, C. Lange & C. Rowat
  http://bit.ly/1SaIB1T #AR #ITP

+ Random binary heaps, separable permutations, and numbers that multiply to
  factorials http://bit.ly/1SaIGms

+ The SAT revolution: solving, sampling, and counting ~ Moshe Y. Vardi
  [Slides] http://bit.ly/1SaJpDZ #Logic #CompSci

+ Efficient binary serialization ~ M. Snoyman http://bit.ly/1SaJCqP #Haskell

+ Self-formalisation of Higher-Order Logic. ~ R. Kumar et
  als. http://bit.ly/1TY5M2V #ITP #HOL4

+ Example implementation of the `wc` command in Haskell using `turtle`:
  http://lpaste.net/155533 https://t.co/eHVxefSKRH #Haskell

+ Now you can benchmark any program from the command line using Criterion for
  repeated runs, statistics and charts: http://bit.ly/1RZCV8p #Haskell

+ Optical quantum gates formalization in HOL Light. ~ S.M. Beillahi,
  M.Y. Mahmoud y S. Tahar http://bit.ly/22BwVKt #ITP #HOL_Light 

+ Static vs. dynamic functional languages ~ Sami Badawi
  http://bit.ly/22uhirC #FP #Haskell #Lisp #Clojure #Scala

+ Structure-aware version control (A generic approach using Agda). ~
  V. Cacciari Miraldo & W. Swierstra http://bit.ly/1RxEAlb #Agda #Haskell

+ Markov chains and Markov decision processes in Isabelle/HOL. ~ J. Hölzl
  http://bit.ly/1q3krxw #IsabelleHOL

+ Formally verified approximations of definite integrals. ~ A. Mahboubi et
  als. http://bit.ly/1WRLWoe #ITP #Coq #Math

+ Extensible domain specific languages. ~ C. Schmalhofer & A. Biehl
  http://bit.ly/1VODaJb #Haskell

+ Hakaru: An embedded probabilistic programming language in
  Haskell. http://bit.ly/1VODurn #Haskell

+ Case studies in constructive mathematics. ~ E. Parmann
  http://bit.ly/1pTrwRw #PhD_Thesis #ITP #Coq #Math

+ Extensible and efficient automation through reflective tactics. ~ G. Malecha
  & J. Bengtson http://bit.ly/1RwNksF #Agda

+ The method "Model Elimination" of D.W.Loveland explained. ~ M. Lévy
  http://bit.ly/1q0AGeX #Logic #ATP  

+ Un dérivateur formel Ocaml en 5 minutes. ~ G. Connan http://bit.ly/1q0B9Ob
  #Math #OCaml

+ Computational thinking, 10 years later. ~ J.M. Wing http://bit.ly/1q0Buk4
  #CompSci

+ History and philosophy of types. ~ T. Petricek http://bit.ly/1q0C8xX #Logic
  #CompSci

+ Hoed: A lightweight Haskell tracer and debugger. http://bit.ly/1RPih0A #Haskell

+ Functional data validation using monads and applicative functors. ~ Gianmario
  Spacagna http://bit.ly/1V9rC2r #Big_Data #FP #Scala 

+ Adventures in functional Big Data. ~ Matthew Eric Bassett
  http://bit.ly/1V9tLvf #FP #Big_Data

+ Learning data science using functional Python. ~ Joel Grus
  http://bit.ly/1V9wGEb http://bit.ly/1V9wNiX #Data_science #FP #Python 

+ Past, present and future of AI: a fascinating journey ~ Ramón López de
  Mantaras http://bit.ly/1TlgAY7 #AI

+ Probabilistic logic programming tutorial. ~ F. Riguzzi & G. Cota
  http://bit.ly/1TlhBPT #Logic #Programming #Prolog

** Abril 2016

+ Towards formal proof metrics. ~ D. Aspinall & C. Kaliszyk
  http://bit.ly/1TmGXNm #ITP

+ Haskell for data science. ~ John Cant http://bit.ly/1Vfosdu #Haskell #Data_science 

+ Haskell for data science ~ Vladimir Alekseichenko [Video] http://bit.ly/1Vfqc6I 
  #Haskell #Data_science 

+ Simple linear regression in Haskell. ~ Josh Walters
  http://bit.ly/1SruBi5 #Haskell

+ roshask: Haskell client library for the ROS robotics framework. 
  http://bit.ly/1SFDTJW #Haskell #ROS 

+ Computabilidad, complejidad computacional y verificación de programas. ~
  R. Rosenfeld y J. Irazábal http://bit.ly/1SFFkbk #Libro #Computación

+ Automating proofs. ~ Chris Edwards | Communications of the ACM
  http://bit.ly/1oqAFiw #ATP

+ Composing (music) in Haskell. ~ Stuart Popejoy [Video]
  https://youtu.be/Jmw6LLNQQfs #Haskell #Music #I1M2015

+ Composing (music) in Haskell. ~ Stuart Popejoy [Slides] http://bit.ly/25Ciokj
  #Haskell #Music #I1M2015

+ Haskell, startups, and domain specific languages. ~ Adam Wespiser [Video]
  https://youtu.be/R4nLSxCKkNw #Haskell

+ The Happstack book: Modern, type-safe Web development in Haskell. ~ Jeremy
  Shaw http://bit.ly/25CjxrZ #Haskell #Web #Book

+ Proof puzzle game. http://bit.ly/1oqFJUd http://bit.ly/1oqFKrl #Logic
  #LMF2016

+ (Co)induction: it’s a thing! ~ V. Robert http://bit.ly/1qnxzgV #Logic

+ Comparing unification algorithms in first-order theorem proving. ~ K. Hoder,
  A. Voronkov http://bit.ly/1qnyrCl #Logic #Algorithms

+ Descending sort in Haskell. ~ Roman Cheplyaka http://bit.ly/25Cts0K
  #Haskell 

+ Beyond Good and Evil (Formalizing the security guarantees of low-level
  compartmentalization). ~ Y. Juglaret et als. http://bit.ly/1UAJDYU #ITP #Coq

+ STM (Software Transactional Memory) in Haskell. ~ Steve Severance
  http://bit.ly/1UAJS6a #Haskell

+ Computing the uncomputable. ~ John Baez http://bit.ly/1UAJVil #Logic #Math
  #CompSci

+ The 6 types of Haskell users (A user-centered look at those who write Haskell
  code). ~ Rick Dzekman http://bit.ly/1UAKade #Haskell 

+ The logic of real and complex numbers. ~ John Baez http://bit.ly/1UAKsRs
  #Logic #Math

+ Correctness and concurrent complexity of the Black-White Bakery algorithm. ~
  W.H. Hesselink http://bit.ly/1RWv1CQ #ITP #PVS 

+ The sym package: Definitions for permutations with an emphasis on permutation
  patterns and permutation statistics. http://bit.ly/225SEbv #Haskell #Math

+ Au delà des réels: méthodes numériques en informatique. ~ G. Connan
  http://bit.ly/225TzIQ #Book #Math #Python

+ Variations on noetherianness. ~ D. Firsov, T. Uustalu, N. Veltri
  http://bit.ly/228eYRS #ITP #Agda #Math

+ Introducing Haskell, functional abstraction and computation by calculation,
  reasoning about functional programs. http://bit.ly/228fCi1 #Haskell

+ Formal languages, formally and coinductively. ~ Dmitriy Traytel
  http://bit.ly/1q5ne8U #IsabelleHOL 

+ MapReduce. ~ Junghoon Kang http://bit.ly/25KbjOH #MapReduce #Big_Data

+ Matasano crypto challenges solutions in Haskell. ~ Christopher Blanchard
  http://bit.ly/1q5oGIq #Haskell

+ Desugaring Haskell’s do-notation into applicative operations. ~ S. Marlow et
  als. http://bit.ly/1q5p61s #Haskell

+ Automatic predicate testing in formal certification (You’ve only proven what
  you’ve said, not what you meant!) ~ F. Slama http://bit.ly/1RFuza7 #ITP 

+ ASlib: A benchmark library for algorithm selection. ~ B. Bischl et
  als. http://bit.ly/1qwbs8B #Algorithms #Machine_learning

+ Formalization of phase ordering. ~ T. Cogumbreiro, J. Shirako & V. Sarkar
  http://bit.ly/1VcDRg5 #ITP #Coq 

+ Algorithms, efficiency and complexity. ~ S. Kambhampati http://bit.ly/1VcDxxG
  #Algorithms

+ Algebrite: Computer Algebra System in Javascript. http://bit.ly/1YjjJqG #CAS
  #Math #Javascript

+ (Hyper) sequent calculi for the ALC (S4) description logics. ~ J.P. Muñoz et
  als. http://bit.ly/1VGi7Iq #Logic #Programming #ML

+ Functional programming vs. imperative programming. http://bit.ly/1VGjlDp
  #Programming

+ Coeffects: Context-aware programming languages. ~ Tomas Petricek
   http://bit.ly/1Q03OHF #Programming

+ Full stack Lisp (Build and deploy modern Lisp applications). ~ P. Penev
  http://bit.ly/1RXS3Ur #Lisp 

+ Premiers pas avec Python. ~ H. Hounwanou http://bit.ly/1RXTJ0a #eBook #Python

+ Datafun: a functional Datalog. ~ M. Arntzenius & N.R. Krishnaswami
  http://bit.ly/1S3uL1G #PD #Logic #Racket

+ Algorithmic composition: A gentle introduction to music composition using
  Common LISP and Common Music. ~ M. Simoni http://bit.ly/1S3v1hl #Lisp #Music

+ Functional models of Hadoop MapReduce with application to Scan. ~
  K. Matsuzaki [Slides] http://bit.ly/1WliHvN

+ Löb's theorem (A functional pearl of dependently typed quining). ~ J. Gross,
  J. Gallagher, B. Fallenstein http://bit.ly/1Wlk25Q #ITP #Agda #Logic

+ Worst practices should be hard. ~ G. Gonzalez http://bit.ly/23xESAX #Haskell

+ A brief tour of Haskell for Scala programmers. ~ Ed Conolly
  http://bit.ly/23xGavO #Haskell #Scala

+ Isotope: a chemistry library for calculating masses of elements and
  molecules. ~ Michael Thomas http://bit.ly/23xGZok #Haskell #Chemistry 

+ On distributive AG-groupoids. ~ A. Khan et als. http://bit.ly/1WlkKQH #ATP
  #Prover9 #Math

+ Titato: Tic tac toe in Haskell. ~ Taylor Fausak http://bit.ly/1SKGvDT
  #Haskell

+ forallX: Cambridge (a textbook for introductory formal logic) ~ Tim Button
  http://bit.ly/25WgRWj http://bit.ly/25WgStA #eBook #Logic

+ Basic data analysis with CL without frameworks. ~ A. Kaygun
  http://bit.ly/25WhjE9 #Lisp

+ Mathematistan (The landscape of mathematics). ~ Martin Kuppe
  http://bit.ly/1Vl5iVE #Math

+ A software methodology for compiling quantum programs. ~ T. Häner et
  als. http://bit.ly/23tf1O0 #Haskell #Quantum_computing 

+ Various computer generated pictures and animations. ~ C. Oudard
  http://bit.ly/1Q6lPnW #Haskell #Gloss

+ Machine learning and computer algebra. ~ Z. Huang http://bit.ly/1Shl8jf
  #PhD_Thesis #ATP #MetiTarski #Math #ML 

+ Programación funcional: ADT, teoría de categorías, functores y monads. ~
  A. Monsalve http://bit.ly/1ShmPgy #Haskell

+ El proceso de formalización de la lógica matemática (La crisis de la
  geometría euclídea). ~ B. Stonek http://bit.ly/1ShlW7M

+ Consideraciones sobre la lógica y sobre el funcionamiento de la matemática. ~
  B. Stonek http://bit.ly/1Shm7Qm #Lógica #Matemáticas 

+ Understanding typing judgments. ~ D. Elkins http://bit.ly/1Shmvyr #Agda

+ Usos prácticos de los Monoides. ~ L. López http://bit.ly/1Sc5ZN1
  http://bit.ly/1Sc60R8 http://bit.ly/1Sc6eYk #Haskell

+ What will humans do when artificial intelligence can do everything? ~ Sally
  Painter http://bit.ly/23xudK3
 
+ Alda - A music programming language for musicians. http://bit.ly/23xukoZ
  #Clojure #Music
 
+ Max subarray in Haskell. ~ D. Lettier http://bit.ly/23xuAEk #Haskell
 
+ Introduction to parallel and concurrent programming in Haskell by
  @BartoszMilewski (Part 1-1: Why Haskell?) http://bit.ly/1qwaxUX #Haskell
 
+ Why functional programming matters. ~ J. Hughes http://ow.ly/ZbvSB #FP
 
+ Understanding functors, applicatives and monads. ~ A.Y. Bhargava
  http://bit.ly/1ksViD7 #Haskell

+ Haskell: GADTs y desarrollo Web. ~ A. Serrano http://bit.ly/1qwaRTz
  #Haskell

+ Who checks the checkers? (You won’t believe the answer to this one). ~
  Z. Zhang et als. http://bit.ly/1qwbJrt #ITP #Coq

+ Composing bijections, surjections, and injections. ~ Noah Luck Easterly
  http://bit.ly/1qwcmkO #Haskell 

+ Experiments on the construction of functions. ~ Alexander Vieth
  http://bit.ly/1qwcu3M #Haskell

+ A new method of verification of functional programs. ~ A.M. Mironov
  http://bit.ly/1WyxIuc #Verification #FP

+ Dynamic programming in Haskell. ~ Thomas Sutton http://bit.ly/1VtGQkv
  #Haskell #Algorithms

+ Verification of randomized algorithms in the theorem prover Isabelle: open
  PhD/post doc position at TUM. http://bit.ly/1VdRgVl #PhD #CompSci 

+ A machine-checked constructive metatheory of computation tree logic. ~
  C. Doczkal http://bit.ly/1Vz2Yui #PhD_Thesis #ITP #Coq #Logic

+ Hadron: Construct and run Hadoop MapReduce programs in Haskell. 
  http://bit.ly/1SQG4HQ #Haskell #MapReduce

+ Formal Concept Analysis. ~ D. Fensel & F. Facca
  http://www.sti-innsbruck.at/sites/default/files/courses/fileadmin/documents/intelsys09-10/12_Intelligent_Systems-FormalConceptAnalysis.pdf #FCA

+ 1st Order Logic Formal Concept Analysis: from logic programming to theory. ~
  L. Chaudron & N. Maille http://bit.ly/1qWvmJH #FCA #Logic #Programming #ILP

+ Proof-relevant pi-calculus. ~ R. Perera & J. Cheney http://bit.ly/1MHc3hw 
  #ITP #Agda

+ Scientific computation and functional programming. ~ J. Karczmarczuk
  http://bit.ly/1WGOyqX #Haskell #Physic #I1M2015

+ learn-physics: Haskell code for learning physics. ~ S.N. Walck
  http://bit.ly/1VIjvvu #Haskell #Physics #I1M2015

+ Shine: Declarative graphics for the browser. ~ F. Gazzetta
  http://bit.ly/1SvXuwv #Haskell #JavaScript

+ 3 ways to generate lazy Fibonacci sequences in Clojure. ~ Y. Sharvit
  http://bit.ly/1VIm1BJ #Clojure

+ An example with Dedekind cuts. ~ C. Mummert http://bit.ly/1SvZsg9 #Math #Algorithms

+ Categories for programmers: Adjunctions. ~ B. Milewski
  http://bit.ly/1Sw0GYO #Haskell

+ Lazy processing and optimization of discrete sequences. ~ J. Karczmarczuk
  http://bit.ly/1YK1ElZ #Haskell #Math

+ Evaluating SMT solvers for software verification. ~ A. Healy et
  als. http://bit.ly/1YK19s1 #SMT #Verification

+ Beyond Clojure: Haskell. ~ Martin Trojer http://bit.ly/22Sz5DK #Haskell
  #Clojure

+ Implementing the game 2048 in less than 90 lines of Haskell. ~ Gregor Ulm
  http://bit.ly/1SfEVO0 #Haskell

+ Clause selection in reolution-style theorem provers. ~ R. Veroff
  http://bit.ly/1MOyKAn #ATP

+ The most unreliable technique in the world to compute pi. ~ J. Karczmarczuk
  http://bit.ly/1SEH1ZS #Haskell #Math

+ List and comprehension extensions. ~ A. Altman http://bit.ly/1MQtHiR #Haskell

+ The matrix cookbook (A desktop reference for quick overview of mathematics of
  matrices). ~ K.B. Petersen & M.S. Pedersen http://bit.ly/1MQupNa #eBook #Math

+ The probability and statistics cookbook. ~ M. Vallentin
  http://bit.ly/1MQuGQ8 #eBook #Math #Statistic

+ Breadth-first numbering: Lessons from a small exercise in algorithm design
  (Functional pearl). ~ Chris Okasaki http://bit.ly/219Yz0m #Haskell 

+ Bombyard: a clone of the minesweeper game in Haskell. ~ T. Fausak
  http://bit.ly/1MQOEKw #Haskell #Game #Gloss

+ Functional differentiation of computer programs. ~ J. Karczmarczuk
  http://bit.ly/1SmoFL8 #Haskell #Math 

+ A verified and executable implementation of reduced ordered binary decision
  diagrams in Isabelle/HOL. ~ J. Michaelis et als. http://bit.ly/24lwTHz 

+ Vers une théorie de l'intelligence. ~ J.P. Delahaye http://bit.ly/1N2hebY #AI

+ Chemical computing with Clojure. ~ C. Meier http://bit.ly/1N2hGqF #Clojure

+ Data is code. ~ G. Gonzalez http://bit.ly/24lZFrL #Haskell

+ Computing symbolic gradient vectors with plain Haskell. ~ Dan Aloni
  http://bit.ly/1rBZYRi #Haskell #Math

+ A Cantor trio: denumerability, the reals, and the real algebraic numbers. ~
  R. Gamboa & J. Cowles http://bit.ly/1rC3fjy #ITP #ACL2 #Math 

+ A formalisation of the Cocke-Younger-Kasami algorithm in Isabelle/HOL. ~
  M. Bortin http://bit.ly/21iE8yg #ITP #IsabelleHOL

+ A port of MiniPRL to Haskell with co-/inductive types bolted on the side. ~
  T. Sutton http://bit.ly/248nK8H #Haskell 

+ No faster-than-light observers (Using Isabelle/HOL to verify first-order
  relativity theory) ~ M. Stannett, I Németi http://bit.ly/1Un31YK #IsabelleHOL

+ A Turing machine simulator written in Haskell. ~ N. Lochner 
  http://bit.ly/1YXmTRl #Haskell

** Mayo 2016

+ Formal verification of NTRUEncrypt scheme. ~ G.R. Moghissi, A. Payandeh
  http://bit.ly/1TcW0UX #ITP #IsabelleHOL

+ Structuring depth-first search algorithms in Haskell. ~ D.J. King,
  J. Launchbury http://bit.ly/1TcWpqn #Haskell

+ A formal exploration of Nominal Kleene Algebra. ~ P. Brunet, D. Pous
  http://bit.ly/1WBGjfz #ITP #Coq #Logic 

+ MapReduce program synthesis. ~ C. Smith, A. Albarghouthi
  http://bit.ly/1QMfLRR #MapReduce #Verification

+ Haskell resources. ~ Mouna Cheikhna http://bit.ly/1WBHQlO #Haskell

+ A programming and problem-solving seminar. ~ J.D. Hobby & D.E. Knuth (1983)
  http://stanford.io/23i2UOp #Programming

+ Gröbner bases theory in Isabelle/HOL. ~ F. Immler & A. Maletzky
  http://bit.ly/1X60enl #ITP #IsabelleHOL #Math 

+ Notions of computation as monoids. ~ E. Rivas & M. Jaskelioff.
  http://bit.ly/21vkKy2 #Haskell 

+ Functional data structures. ~ M. Ivanovié & V. Kumcak. 
  http://bit.ly/21vlnHP #Haskell

+ El problema de los tres caballeros y los tres criados ~ R. Ibáñez
  http://bit.ly/26U9pvq #Matemáticas #Computación

+ Spivey's generalized recurrence for Bell numbers in Isabelle/HOL. ~
  L. Bulwahn http://bit.ly/21yVdny #ITP #IsabelleHOL #Math #AFP

+ Juega con el ordenador cuántico de IBM. ~ David Sarabia
  http://bit.ly/21yXoru #Programación

+ Formal methods engineer at Mitsubishi Electric R&D Centre in Rennes,
  France. http://bit.ly/1ZmUxjw #Job #CompSci

+ RustBelt: Logical foundations for the future of safe systems
  programming. http://bit.ly/1ZmW0Gx 

+ Randomised social choice theory in Isabelle/HOL. ~ M. Eberl
  http://bit.ly/1STDFAt #ITP #IsabelleHOL #AFP 

+ The incompatibility of SD-efficiency and SD-strategy-proofness in
  Isabelle/HOL. ~ M. Eberl http://bit.ly/1STDSUu #ITP #IsabelleHOL #AFP 

+ Uncertain: Manipulating numbers with inherent experimental/measurement
  uncertainty. ~ Justin Le http://bit.ly/1STEhpX #Haskell

+ Knuth-Morris-Pratt algorithm for substring matching in Haskell. ~ Twan van
  Laarhoven http://bit.ly/1D2wyf1 #Haskell #Algorithm

+ Aho–Corasick string matching algorithm. http://bit.ly/1STFf5j #Algorithm

+ Implementation of Aho-Corasick algorithm in Haskell. http://bit.ly/1STFjlz 
  #Haskell #Algorithm

+ Solving and verifying the boolean Pythagorean Triples problem via
  Cube-and-Conquer. ~ M.J.H. Heule et als. http://bit.ly/1TNNGy7 #ATP #SAT

+ Liquid Haskell. ~ G. Gonzalez http://bit.ly/274mJgX #Haskell

+ Comparison of implementations of the Newton-Raphson in Python and
  Clojure. http://bit.ly/274mTol #Python #Clojure #Math

+ Combinat: A collection of functions to generate, manipulate, visualize and
  count combinatorial objects. http://bit.ly/1WToYPf #Haskell #Math

+ A formal proof of the max-flow min-cut theorem for countable networks. ~
  A. Lochbihler http://bit.ly/1s6ZGCh #ITP #IsabelleHOL 

+ Some concepts from automata theory in Haskell. ~ Samuel Schlesinger
  http://bit.ly/1s70mHG #Haskell

+ Category theory in Coq 8.5. ~ A. Timany, B. Jacobs http://bit.ly/1OdGZWZ 
  #ITP #Coq

+ User-defined literals in Haskell via QuasiQuotes. ~ Harry Garrood
  http://bit.ly/1TBpsUT #Haskell 

+ Functional programming in practice. ~ M. Borkent http://bit.ly/27a2bUa #Scala
  #Haskell #Clojure

+ A mathematical proof takes 200 terabytes to state. ~ M. James
  http://bit.ly/1OmSXbx #ATP #SAT #Math

+ Solving and verifying the boolean pythagorean triples problem via
  cube-and-conquer. ~ M.J.H. Heule et als. http://bit.ly/1OmSS7J #ATP #SAT 

+ An introduction to Moessner's theorem and Moessner's sieve. ~ P. Urbak
  http://bit.ly/1OmTf2e #Haskell #Math

+ A dual to Moessner's sieve. ~ P. Urbak http://bit.ly/1OmTpqr #Haskell #Math

+ Formalizing graph theory and planarity certificates. ~ L. Noschinski
  http://bit.ly/1It1bBI #PhD_Thesis #Isabelle_HOL

+ HLinear: Exact dense linear algebra in Haskell. ~ A. Ghitza &
  M. Westerholt-Raum http://bit.ly/1ZA0WYU #Haskell #Math 

+ A mechanization of the Blakers-Massey connectivity theorem in Homotopy Type
  Theory. ~ K.B. Hou et als. http://bit.ly/22380z1 #ITP #Agda #HoTT

+ A characteristic function of Moessner's sieve ~ P. Urbak
  http://bit.ly/1OmZoki #Haskell #Math 

+ This Turing machine should run forever unless Maths is wrong. ~ J. Aron
  http://bit.ly/1OmZPv1 #Math #CompSci 

+ A relatively small Turing machine whose behavior is independent of set
  theory. ~ A. Yedidia & S. Aaronson http://bit.ly/1OmZWH0 #Math #CompSci

+ Mindless, verified (erasably) coding using dependent types. ~ Jonathan
  Leivent http://bit.ly/1TcldzK #Coq #Algorithms 

+ Mindless, verified (erasably) coding using dependent types, phase 2. ~
  Jonathan Leivent http://bit.ly/1TclsuD #Coq #Algorithms 

+ Rank-balanced trees. ~ B. Haeupler, S. Sen & R.E. Tarjan. 
  http://bit.ly/1TclyT8 #Algorithms

+ A Haskell to JVM compiler that supports GHC Haskell. ~ Rahul Muttineni
  http://bit.ly/1TcmlDu #Haskell #Java

+ Computer Algebra Library for Chez Scheme (R6RS). http://bit.ly/1TcmsiC 
  #Scheme #CAS

+ Números y hoja de cálculo: Rachas de dígitos. ~ Antonio Roldán
  http://bit.ly/1Tc9MM5 #Matemáticas #Programación

+ Functional modelling of musical harmony: An experience report. ~
  J.P. Magalhaes & W.B. de Haas http://bit.ly/1TcafxG #Haskell

+ Verified functional programming in Agda ~ A. Stump http://bit.ly/1oV9XNI
  #eBook #Agda #FP #Logic #Programming

+ Algorithms for bayesian networks. ~ @alpheccar http://bit.ly/1rLUVxo #Haskell

+ Automated theorem proving in a first-order logic with first class boolean
  sort. ~ E. Kotelnikov http://bit.ly/1Xs18e1 #ATP #Logic 

+ Flag-based big-step semantics. ~ C.B. Poulsen & P.D. Mosses
  http://bit.ly/1Xs1EIU #Coq #Vestigium

+ MendellianGenetics: Project for simulating Mendel's genetics. Written in
  Haskell. http://bit.ly/1Xs1X6A #Haskell #Genetics

+ Simplified Common Lisp reference. ~ Jakub Trávník http://bit.ly/1Xs2FRf #Lisp

+ The evolution of a Haskell programmer. ~ F. Ruehr http://bit.ly/1ZSrrca
  #Haskell 

+ A Haskell reading list. ~ S. Diehl http://bit.ly/1ZSrF2N #Haskell

+ Automatic propagation of uncertainty with AD. ~ Justin Le
  http://bit.ly/1ZSrSTF #Haskell

+ Formalization of quantum protocols using Coq. ~ J. Boender, F. Kammüller &
  R. Nagarajan http://bit.ly/1ZSuiBU #Coq

+ Implementing programming languages. ~ A. Ranta http://bit.ly/1spxYAO 
  #eBook #Programming

+ Learn you an Agda and achieve enlightenment! ~ Liam O’Connor-Davis
  http://bit.ly/1ZVHc1S #Agda  

+ Haskell design patterns: .Extended modules. ~ Jasper Van der Jeugt
  http://bit.ly/27qxt9u #Haskell

+ Plastelina interactive logic games. http://www.plastelina.net #Logic #Game 
  #I1M2015

+ Loopless gray code enumeration and the tower of Bucharest. ~ F. Herter &
  G. Rote http://bit.ly/1TdxWYm #Algorithms #Python

+ Lightweight higher-order rewriting in Haskell. ~ E. Axelsson & A. Vezzosi
  http://bit.ly/1Q8V2Lk #Haskell

+ Towards a theory of reach. ~ J. Fowler & G. Huttom http://bit.ly/1OxwHMk 
  #Haskell

+ Type class instances for type-level lambdas in Haskell. ~ T. Alkemade &
  J. Jeuring http://bit.ly/1Oxx4qa #Haskell

+ Haskell communities and activities report (May 2016). 
  http://bit.ly/1rVvj1g #Haskell

+ McMaster University Computing and Software Outreach. http://bit.ly/1TmiMdW
  #Programming #Elm 

+ Structure and interpretation of classical mechanics. ~ G.J. Sussman,
  J. Wisdom & M.E. Mayer http://bit.ly/1Tmke00 #Scheme

+ Communicating mathematics: Useful ideas from computer science- ~ C. Wells
  http://bit.ly/1rWVVyX #Math #CompSci #Teaching

+ DSLsofMath: Domain specific languages of mathematics. http://bit.ly/1suSCPk
  #Haskell #Math

+ Programmable signatures. ~ A. Persson & E. Axelsson http://bit.ly/1OxxwF0 
  #Haskell

+ Functional differential geometry. ~ G.J. Sussman, J. Wisdom & W. Farr
  http://bit.ly/25clBJB #FP #Scheme

+ The world's first artificially intelligent lawyer gets hired. ~ C. Weller
  http://til.ink/1VcVqwa #AI

+ Perron-Frobenius theorem for spectral radius analysis in Isabelle/HOL. ~
  J. Divasón et als. http://bit.ly/1VemISZ #IsabelleHOL #Vestigium

+ Simple balanced binary search trees. ~ P. Ragde http://bit.ly/20i3yem 
  #Haskell

+ Sequence implementations in Haskell. ~ P.R. Borges http://bit.ly/20i4bV4 
  #Haskell 

+ Axioms for modelling cubical type theory in a topos. ~ I. Orton & A.M. Pitts
  http://bit.ly/1NDS9Vd #ITP #Agda

+ Introduction to literate programming. ~ H. Abrams http://bit.ly/242RQVJ
  #Programming #Emacs #Clojure

+ Why GNU Emacs? ~ rekado http://bit.ly/1sMrso4 #Emacs

+ Emacs support library for PDF files. http://bit.ly/1TsE5KZ #Emacs #PDF

+ Compass-free navigation of mazes. ~ P. Scott & J. Fleuriot
  http://bit.ly/1NDSIOB #ITP #HOL_Light

+ CodeWorld’s big decisions. ~ C. Smith  http://bit.ly/1WbMcl2 #Haskell 
  #Teaching #CodeWorld

+ Bootstrap: a curriculum for students ages 12–16, teaching algebraic concepts
  through coding. http://www.bootstrapworld.org #Teaching #CompSci #Math

+ Bootstrap curriculum. ~ Wikipedia http://bit.ly/1TR0Ach #Teaching #CompSci 
  #Math

+ WeScheme: an online programming environment based on DrRacket and
  Scheme. http://www.wescheme.org #Racket #Scheme

+ Games from basic data structures. ~ M. Bovee, K. Burke & C. Tennenhouse
  http://bit.ly/1TR2nhp #Games #Data_structures #Algorithms

+ Modeling data with functional programming in R. ~ Brian Lee Yung Rowe
  http://bit.ly/1OIp8m9 #Data_Science #FP

+ The joy and agony of Haskell in production. ~ S. Diehl
  http://bit.ly/1OSmpfg #Haskell

+ Functional programming with structured graphs. ~  B.C.d.S. Oliveira &
  W.R. Cook http://bit.ly/1s4U9Mh #Haskell

+ A modular way to reason about iteration. ~ J.C. Filliätre & M. Pereira
  http://bit.ly/1TBf8AC #Why3

+ Formal verification of real-time function blocks using PVS. ~ L. Pang et
  als. http://bit.ly/242QJoZ #ITP #PVS

+ Refinement based verification of imperative data structures. ~ P. Lammich
  http://bit.ly/242RoGU #ITP #IsabelleHOL

+ Practical dependent types in Haskell: Type-safe neural networks (Part 1). ~
  Justin Le http://bit.ly/1sbSFzR #Haskell

+ A practical Template Haskell tutorial. http://bit.ly/1Ru0aqu #Haskell

+ Specification and proof of high-level functional properties of bit-level
  programs. ~ C. Fumex et als.  http://bit.ly/1TBhkIo #Why3

+ Stephen Diehl: Slides for a talk I gave this week about editor tooling in
  industrial Haskell. http://bit.ly/1WoXuSV #Haskell

+ Haskell gets a job (helping everyone get a job!) ~ Simon Fenton
  http://bit.ly/25pAMiG #Haskell

+ Mathematics is applied by everyone except applied mathematicians ~ David
  P. Wilson http://bit.ly/25pHkhs #Math 

+ ¿Matemáticas para la industria, matemáticas de segunda? ~ Mikel Lezaun
  http://bit.ly/25lZflB #Matemáticas 

+ Deductive evaluation: formal code analysis with low user burden. ~ B.L. Di
  Vito http://bit.ly/1sE3Q4e #PVS 

+ Emacs org-mode examples and cookbook. ~ Eric Neilsen http://bit.ly/1TOt3TS
  #Emacs

+ Two-hundred-terabyte maths proof is largest ever (A computer cracks the
  Boolean Pythagorean triples problem — but is it really maths?) ~ E. Lamb
  http://bit.ly/1X3Lt60 #Math #CompSci

+ Philosophical questions about programming. ~ Tomas Petricek
  http://bit.ly/1X3LhE2 #Programming

+ The matrix reproved (Verification Pearl). ~ M. Clochard, L. Gondelman &
  M. Pereira http://bit.ly/1TNCh1q #Why3 #Math

+ Producing all ideals of a forest, formally (verification pearl). ~
  J.C. Filliâtre & M. Pereira http://bit.ly/1X7Kcep #Why3 

+ Semantic systems application architect (KTP associate). Univ. of
  Manchester. http://bit.ly/1U6ZaKD #Job #CompSci

+ Formal verification of the rank algorithm for succinct data structures. ~
  A. Tanaka, R. Affeldt & J. Garrigue http://bit.ly/1O0PrsW #Coq #BigData 

+ CSV encoding and decoding in Haskell with Cassava. ~ J.P. Villa
  http://bit.ly/22w71aO #Haskell #Data_Science

** Junio 2016

+ MathCheck2: A SAT+CAS verifier for combinatorial conjectures. ~ C. Bright et
  als. http://bit.ly/1Pm1UYx #SAT #CAS #Math 

+ Proof assistants as a routine tool? ~ Neil Strickland http://bit.ly/22zaWn8 
  #ITP

+ ¿Esto es Matemáticas? (¿Pueden los ordenadores realizar demostraciones
  matemáticas?) ~ Manuel de León http://bit.ly/1Pm4eie

+ An introduction to scientific Python (and a bit of the maths behind it) -
  Pandas. ~ J. Moir http://bit.ly/1Pm4z4v #Python #DataScience 

+ A very general method of computing shortest paths. ~ Russell O’Connor
  http://bit.ly/1Pm4qxV #Haskell

+ Cardinality of equivalence relations in Isabelle/HOL. ~ L. Bulwahn
  http://bit.ly/1Xn3fRR #ITP #IsabelleHOL #AFP

+ Conjugate partitions. ~ A. Kaygun http://bit.ly/1Xn6yst #Lisp
  #Math

+ Computer experiments are transforming mathematics. ~ E. Klarreich. 
  http://bit.ly/1IhMLwS #Math #CompSci

+ From Cbits to Qbits: Teaching computer scientists quantum mechanics. ~
  N.D. Mermin http://bit.ly/1Xn7bC5

+ Mechanizing proofs about Mendler-style recursion. ~ R. Jacob-Rao, A. Cave &
  B. Pientka http://bit.ly/1TOtrhQ #Coq

+ Using real projects as motivators in programming education. ~ M. Konecki,
  S. Lovrenčić & M Kaniški http://bit.ly/1sssYLx #Programming

+ Recursion to iteration, part 1: The simple method, secret features, and
  accumulators. ~ Tom Moertel http://bit.ly/1sssFQL #Python

+ Functional binomial queues. ~ D.J. King http://bit.ly/1XqOzRL #Haskell 
  #Algorithms

+ A simple implementation technique for priority search queues. ~ R. Hinze
  http://bit.ly/1XqP3ax #Haskell #Algorithms

+ Does this drone sport the World's most secure OS? ~ Jeremy Kirk
  http://bit.ly/1U4NsEr #sel4 #Verification

+ Towards verified construction for planar class of a qualitative spatial
  representation. ~ S. Moriguchi et als. http://bit.ly/1Uq13C3 #ITP #Coq

+ ODE solver as a functional fold. ~ J.D. Cook http://bit.ly/1Uq2pN5
  #Haskell #Math

+ Abstract algebra for Scala.  http://bit.ly/1Uq2YGO #Scala

+ How programming supports math class, not the other way around. ~ C. Bartlo
  http://bit.ly/1Uq3Uee #Programming #Math

+ Perspectives for proof unwinding by programming languages techniques. ~
  D. Ilik http://bit.ly/1Xw1Fxf #Logic #Math #CompSci

+ EdisonAPI: A library of efficient, purely-functional data structures (API). ~
  Chris Okasaki http://bit.ly/1UsOzJO #Haskell

+ Rex: A Haskell quasi-quoter for typeful results of regex captures. ~ M. Sloan
  http://bit.ly/1Xw5PFb #Haskell

+ Software foundations, version 4.0 (May 2016). ~ Benjamin C. Pierce et
  als. http://bit.ly/25HDRr4 #Coq #Logic #CompSci

+ Haskell style guide. ~ J. Tibell http://bit.ly/1WDoGO4 #Haskell

+ Formalization of normal random variables. ~ M. Qasim http://bit.ly/1X9J49o
  #ITP #HOL

+ nanoCoP: A non-clausal connection prover. ~ J. Otten http://bit.ly/1RXLqQN
  #ATP #Logic #Prolog #CompSci

+ Google moves closer to a universal quantum computer. ~ P. Ball
  http://go.nature.com/1RXMBQl #CompSci

+ Why are so many mathematicians also musicians? ~ D.H. Bailey  &  J.M. Borwein
  http://huff.to/1RXN1Gj #Math #Music 

+ Experimental computation and visual theorems: Part I: the computer as
  collaborator. ~ J.M. Borwein http://bit.ly/1re6soi #Math #CompSci

+ Experimental computation and visual theorems: Part III. walking on numbers. ~
  J.M. Borwein http://bit.ly/1RXMYu5 #Math #CompSci

+ First experimental demonstration of a quantum Enigma machine. ~ MIT
  Technology Review http://bit.ly/1RXO8pu #CompSci

+ Distributed systems in Haskell. ~ Will Yager http://bit.ly/1RXOtII #Haskell

+ Coq’Art, CPDT and SF: a review of books on Coq proof assistant. ~ J. Stolarek
  http://bit.ly/1RXNBUn #ITP #Coq

+ Chi-square goodness of fit test example with primes. ~ J. Cook
  http://bit.ly/1RXOnkr #Math #Python

+ Haskell Tutorials, a tutorial. ~ Yann Esposito http://bit.ly/1RXNBE4 #Haskell

+ Create a game with Haskell. http://www.hgamer3d.org #Haskell #Game via

+ Formalizing semantic bidirectionalization with dependent types. ~ H. Grohne,
  A. Löh & J. Voigtländer http://bit.ly/1rfOou2 #ITP #Agda

+ Insertion sort implemented as a fold. ~ J. Cook http://bit.ly/1YdM2ZE
  #Haskell

+ Computing higher moments with a fold. ~ J. Cook http://bit.ly/1YdMirP
  #Haskell #Statistics

+ Tools for thought ~  Howard Rheingold http://bit.ly/1UGuMJZ #eBook #CompSci

+ A tool for thought. ~ David Nolen http://bit.ly/1UGu3sn
  #ClojureScript

+ Algo pasa con Haskell. ~ @__josejuan__ http://bit.ly/1YefXkw #Haskell

+ A complete tutorial to learn data science in R from scratch. ~ Manish
  Saraswat http://bit.ly/1UkXBNx #Rstats #DataScience

+ Formally verified countermeasures against cache based attacks in
  virtualization platforms. ~ J. Campo http://bit.ly/1RZRFDP #PhD_Thesis #Coq

+ Mastering programming. ~ Kent Beck http://bit.ly/1RZT90A #Programming

+ Analysing big time-series data in the cloud. ~ T. Petricek
  http://bit.ly/1U6fGk7 #Fsharp #BigData

+ Formal methods for secure software construction. ~ B. Goodspeed
  http://bit.ly/1QcQ9UR #Idris

+ Haskell programming from first principles - Follow-up resources ~ Peter Bhat
  Harkins http://bit.ly/1WKh5x8 #Haskell

+ HGeometry: Geometric algorithms, data structures, and data types. ~ Frank
  Staals http://bit.ly/1WKi3tj #Haskell #Math 

+ Proving type class laws for Haskell. ~ A. Arvidsson, M. Johansson & R. Touche
  http://bit.ly/1PmLPfP #Haskell

+ FizzBuzz in Haskell by embedding a domain-specific language. ~ M. Piróg
  http://bit.ly/25WyCnI #Haskell

+ The Recamán sequence. ~ Brent Yorgey http://bit.ly/25WATiF #Math

+ Queueing and glueing for optimal partitioning (Functional Pearl). ~ S.C. Mu,
  Y.H. Chiang & Y.H. Lyu http://bit.ly/25Soakx #Algorithms #Haskell

+ CIS-194-winter-2016: A modified version of Brent Yorgey's CIS 194 Haskell
  course http://bit.ly/1YoOGw5 #Haskell

+ Sequent calculus as a compiler intermediate language. ~ Simon Peyton Jones et
  als. http://bit.ly/25SoAal #Logic #Haskell

+ The story of Haskell at IMVU. ~ Chad Austin http://bit.ly/1XpqQ3W
  #Haskell

+ Reachability, confluence, and termination analysis with state-compatible
  automata. ~ B. Felgenhauer & R. Thiemann http://bit.ly/1txvAIY #Isabelle/HOL

+ A survey of satisfiability modulo theory. ~ D. Monniaux http://bit.ly/1txweGj
  #ATP #SMT

+ ASCII art diagrams in Emacs org-mode. ~ J.D. Cook http://bit.ly/1txxs4k
  #Emacs

+ Designing functional implementations of graph algorithms. ~ N. Danilenko
  https://t.co/cLvBTp0TK9 #Haskell #Algorithms #Math

+ Formal methods for secure software construction. ~ B. Goodspeed
  http://bit.ly/1QcQ9UR #Idris

+ Contribution of Warsaw logicians to computational logic. ~ D. Niwiński
  http://bit.ly/1QcQgQa #Logic #CompSci

+ A model for the Universe that begins to resemble a quantum computer- ~
  S. Gudder http://bit.ly/1QcQoPB

+ Implementing graph grammars for intelligence analysis in OCaml. ~ R. Moten,
  K. Anyanwu-Ogan & S. Miranshah http://bit.ly/1UViSMu #OCaml

+ A visual guide to graph traversal algorithms. http://bit.ly/26aufW3 #Algorithms

+ A fully automatic theorem prover with human-style output. ~ M. Ganesalingam &
  W.T. Gowers http://bit.ly/1UFpsrL #ATP #Haskell #Math #CompSci

+ Introducción a la demostracción asistida por ordenador con Isabelle/HOL. ~
  J.A. Alonso http://bit.ly/28OTxDc #Isabelle_HOL

+ Programs and proofs (Mechanizing Mathematics with dependent types). ~
  I. Sergey http://bit.ly/28OTMye #Coq

+ Visual theorem proving with the Incredible Proof Machine. ~ J. Breitner
  http://bit.ly/28LcVBZ #Logic #ITP

+ Theory in the time of Big Data (What is the role of theory today?) ~
  R.J. Lipton & K.W. Regan http://bit.ly/28OWjbx #Teaching #CompSci

+ Teaching Theory in the time of Data Science/Big Data. ~ A.C. Gilbert &
  A. Rudra http://bit.ly/28LdRGD #Teaching #CompSci

+ A formal proof of Cauchy’s residue theorem. ~ W. Li & L.C. Paulson
  http://bit.ly/28UMr00 #ITP #IsabelleHOL #Math

+ The formalization of discrete Fourier transform in HOL. ~ Z. Shi et
  als. http://bit.ly/28UNehF #ITP #HOL #Math

+ Automatic functional correctness proofs for functional search trees. ~
  T. Nipkow http://bit.ly/28OKVxs #ITP #IsabelleHOL

+ Formalizing the Edmonds-Karp algorithm. ~ P. Lammich & S.R. Sefidgar
  http://bit.ly/28OLmaM #ITP #IsabelleHOL

+ Regular expressions implemented in Haskell ~ G. Gonzalez
  http://bit.ly/28QHwdL #Haskell

+ Two-way automata in Coq. ~ C. Doczkal & G. Smolka http://bit.ly/28UPjdt #ITP
  #Coq

+ A beautiful question: finding nature's deep design. ~ Frank Wilczek
  http://bit.ly/28Yf27A

+ Getting started with GHCJS dev. ~ David Johnson http://bit.ly/28SvlPN
  #Haskell #JavaScript #GHCJS

+ Teaching machines to predict the future. ~ MIT News http://bit.ly/28SyNdb
  #CompSci

+ Hereditarily finite sets in constructive type theory. ~ G. Smolka & K. Stark
  http://bit.ly/28ONJdZ #ITP #Coq #Math

+ An Isabelle/HOL formalisation of Green’s theorem. ~ M. Abdulaziz &
  L.C. Paulson http://bit.ly/28OO4gC #ITP #IsabelleHOL

+ An introductory talk to functional programming & typeclasses. ~ R. Raja
  http://bit.ly/2916Rpg http://bit.ly/2917wGS #FP #Scala

+ A dependent security type system for concurrent imperative programs. ~
  T. Murray et als. http://bit.ly/293rZMo #ITP #IsabelleHOL #AFP 

+ Usar mónadas es mucho más fácil de lo que crees, empezando con la
  programación funcional.~ @__josejuan__ http://bit.ly/28ZNFoN 

+ The secret spiritual history of calculus (Integral calculus originated in a
  17th-century debate that was as religious as it was scientific). ~
  A. Alexander http://bit.ly/28ZPodK 

+ Why software startups should hire functional programmers. ~ Martijn Rutten
  http://bit.ly/293trOD #FP #Haskell

+ A tutorial implementation of Hindley-Milner type inference (Algorithm W) in
  Haskell. http://bit.ly/28ZTiDm http://bit.ly/293vemQ

+ Cardinality of multisets in Isabelle/HOL. ~ L. Bulwahn http://bit.ly/28ZQO8f
  #ITP #Math #IsabelleHOL #AFP 

+ Vocabulink: Web application for learning foreign vocabulary
  http://bit.ly/29aORdP #Haskell

+ Proving divide and conquer complexities in Isabelle/HOL. ~ M. Eberl
  http://bit.ly/296l8zt #ITP #IsabelleHOL #Vestigium

+ Paradigmas de programación: programación imperativa y programación
  declarativa. ~ @LoopaDev http://bit.ly/29bwvsL #Programación

+ Parallel combinatorics. ~ J. Aranda http://bit.ly/296mvOQ #Haskell #Math

+ Manual de cálculo científico en SageMath. ~ A. Aceña, J. Armijos y M. Llerena
  http://bit.ly/29bxqcO #SageMath

+ Spock: a lightweight Haskell web framework. https://www.spock.li #Haskell

+ Importancia de la programación funcional en un mundo paralelo. ~ @LoopaDev
  http://bit.ly/29bya1y #Programación #PF

** Julio 2016

+ The resolution calculus for first-order logic in Isabelle/HOL. ~
  A. Schlichtkrull http://bit.ly/29aQPYg #ITP #Isabelle/HOL #Logic

+ IsaFoL: Isabelle Formalization of Logic. http://bit.ly/29aQOmW #ITP
  #Isabelle/HOL #Logic

+ CodeWorld for younger ages! ~ C. Smith http://bit.ly/29aXYHZ #Haskell
  #Teaching #CodeWorld  

+ Blocks for CodeWorld. http://bit.ly/29iaAAX #Haskell #Teaching #CodeWorld 

+ Computing our future: Computer programming and coding (Priorities, school
  curricula and initiatives across Europe) http://bit.ly/29b07DE #CompSci

+ Translating Scala programs to Isabelle/HOL. ~ L. Hupel & V. Kuncak
  http://bit.ly/29AA0Wx #IsabelleHOL #Scala 

+ Qué hace un tipo de sistemas cuando se le cae todo el sistema. ~ Javier
  Pastor http://bit.ly/29c0hLY #Programación

+ OpenDreamKit: Open Digital Research Environment Toolkit for the Advancement
  of Mathematics. http://opendreamkit.org

+ Finding proofs in Tarskian geometry. ~ M. Beeson & L. Wos
  http://bit.ly/29eHjFU #ATP #OTTER #Math

+ Automating free logic in Isabelle/HOL. ~ C. Benzmüller & D. Scott
  http://bit.ly/29dFF3K #ITP #IsabelleHOL

+ 15 free Haskell books & tutorials to help you learn the Haskell programming
  language. ~ Hacker Lists http://bit.ly/29dFRzU #Haskell

+ Programs and proofs (Mechanizing Mathematics with dependent types). ~ Ilya
  Sergey http://bit.ly/29gVXwp #ITP #Coq #Math #eBook

+ Common Lisp ecosystem and the software distribution model. ~ D. Kochmański
  http://bit.ly/29dGqd1 #Lisp

+ Verified computer linear algebra. ~ J. Aransay & J. Divasón
  http://bit.ly/29mwyke #ITP #IsabelleHOL #Math

+ Category theory for the sciences ~ David Spivak http://bit.ly/29lRHaS

+ A tutorial on the universality and expressiveness of fold ~ G. Hutton
  http://bit.ly/29lScBW #Haskell

+ Functional geometry ~ Peter Henderson http://bit.ly/29yVC7O #FP

+ Functional geometry in julia notebook demo ~ S. Gowda http://bit.ly/29lSfh1 #Julia

+ A formalizing of Berlekamp's factorization algorithm ~ J. Divasón et
  als. http://bit.ly/29poKia #ITP #IsabelleHOL #Math

+ A framework for verifying depth-first search algorithms in Isabelle/HOL ~
  P. Lammich & R. Neumann http://bit.ly/29yVGon #ITP #IsabelleHOL #Vestigium

+ Four months with Haskell. ~ Alexis King ~ http://bit.ly/29yW5qX #Haskell

+ Original Apollo 11 guidance computer source code, in assembly, for Command
  Module and Lunar Module. http://bit.ly/29mORSV #Programming 

+ Arithmetic coding with folds and unfolds. ~ R. Bird & J. Gibbons
  http://bit.ly/29zNjZq #Haskell

+ Eastman maximal comma-free codes in Haskell. ~ Brent Yorgey
  http://bit.ly/29zMHmQ #Haskell

+ The Isar proof language in 2016. ~ Makarius Wenzel http://bit.ly/29oRFjv
  #IsabelleHOL 

+ Abstract nonsense for functional programmers (a introduction to category
  theory) ~ Edsko de Vries http://bit.ly/29nM2pl #Haskell

+ Optimal purely functional priority queues (1996) ~ G.S. Brodal & C. Okasaki
  http://bit.ly/29oTRYf #Algoritm #FP #ML

+ Tackling intractable computing problems ~ Aaron Dubrow http://bit.ly/29oViFN
  #CompSci

+ A new Haskell community nexus site: http://haskell-lang.org #Haskell

+ Literate programming: presenting code in human order ~ J.D. Cook
  http://bit.ly/29oWGZg #Programming

+ Aprende Haskell rápido y difícil. ~ Y. Esposito & D. Campoverde
  http://bit.ly/29oXrBI #Haskell #Tutorial

+ List of incomplete published mathematical proofs. ~ Wikipedia
  http://bit.ly/29padjz #Math

+ Graph algorithms. ~ Wikipedia book http://bit.ly/29o8rmg #eBook #Algorithms
  #Math

+ The rise of social bots. ~ E. Ferrara et als. | Communications of the ACM
  http://bit.ly/29psr83

+ The White House considers the future of AI. ~ Ariel Conn http://bit.ly/29pt69A 

+ From Hilbert to Tarski. ~ G. Braun, P. Boutry & J. Narboux
  http://bit.ly/29xV55h #ITP #Coq #Math

+ Purely functional incremental computing. ~ D. Firsov & W. Jeltsch
  http://bit.ly/2a16ucx #Haskell

+ Formalizing the Edmonds-Karp algorithm in Isabelle/HOL. ~ P. Lammich,
  S.R. Sefidgar http://bit.ly/29ANXnE #ITP #IsabelleHOL

+ Haskell Hero: un manual interactivo del lenguaje Haskell para
  principiantes. ~ S. Novák http://bit.ly/29zVZkC #Haskell

+ Formalisation of the computation of the echelon form of a matrix in
  Isabelle/HOL. ~ J. Aransay & J. Divasón http://bit.ly/29MzGXc #IsabelleHOL
  #Vestigium 

+ On the formalization of some results of context-free language theory. ~
  M.V.M. Ramos et als. http://bit.ly/29AJnVD #ITP #Coq

+ Formalization of context-free language theory. ~ M.V.M. Ramos
  http://bit.ly/29AJqRs #PhD_Thesis #ITP #Coq

+ Dive into GHC: intermediate forms ~ S. Diehl http://bit.ly/29AQ75W
  #Haskell 

+ Org-Mode and writing papers: some tips ~ C.R. Donley http://bit.ly/29AN3qg
  #Emacs #LaTeX 

+ Verified functional algorithms (Volume 3 of the software foundations series)
  ~ A.W. Appel http://bit.ly/29zqMwH #Coq

+ Extensiones de bases de datos relacionales y deductivas: fundamentos teóricos
  e implementación. ~ G. Aranda http://bit.ly/29AIc8S #Tesis #PL

+ El ZEN de Javascript: a la búsqueda de la armonía del código. ~ C. Benítez
  http://bit.ly/29zpF09 #Programación #JavaScript  

+ Verification of an LCF-style first-order prover with equality. ~ A.B. Jensen
  et als. http://bit.ly/29JXhtq #ITP #IsabelleHOL #Logic #Vestigium

+ A proof of the compositions of time interval relations. ~ F. Ghourabi &
  K. Takahashi http://bit.ly/2a6M71F #ITP #IsabelleHOL

+ Doing data science with Clojure http://bit.ly/2a6R2jo #Data_Science #Clojure

+ The joy of programming to learn. ~ Eric Normand http://bit.ly/2a6RuOp
  #Programming  

+ Scala is the new golden child. ~ Chris McKinlay http://tcrn.ch/2a5eIln #Scala

+ Graphs: a balancing act. ~ Francesco Mazzoli http://bit.ly/2a67c9U #Haskell #Gloss

+ Graph problems and vector-matrix multiplications in Haskell. ~ N. Danilenko
  http://bit.ly/2a6luqY #Haskell #Math

+ Proceedings of the Fifth Workshop on Practical Aspects of Automated Reasoning
  (PAAR-2016) http://bit.ly/29Zv8fH #ATP #ITP 

+ All sorts of permutations (Functional Pearl). ~ J. Christiansen,
  N. Danilenko, S. Dylus http://bit.ly/29ZsLK0 #Haskell

+ A rule based approach to teach mathematics using animation. ~ N. Sharaf,
  S. Abdennadher, T. Frühwirth http://bit.ly/29TAMfx #CHR #Prolog 

+ Threading the Arduino with Haskell. ~ M. Grebe & A. Gill
  http://bit.ly/29TBvgN #Haskell 

+ Using DSLs to help people solve rule-based problems. ~ N. Naus & J. Jeuring
  http://bit.ly/29ZtkTO #Clean 

+ The surprise paradox in Isabelle/HOL. ~ J. Breitner http://bit.ly/29TE4iS
  #ITP #IsabelleHOL #Logic 

+ Generating random planar graphs. ~ P. Vasconcelos http://bit.ly/29ZZjmW
  #Haskell #QuickCheck

+ Verification of optimised 48-bit multiplications on AVR. ~ J. Schmaltz &
  P. Schwabe http://bit.ly/29TEhmu #ACL2 

+ Proving type class laws for Haskell. ~ A. Arvidsson, M. Johansson & R. Touche
  http://bit.ly/29TCWMi #Haskell 

+ Numbers aplenty: Interesting natural numbers and their properties.
  http://www.numbersaplenty.com #Math

+ Logic programming with graph automorphism: Integrating nauty with Prolog (a
  tool paper). ~ M. Frank & M. Codish http://bit.ly/2awr70z #Prolog

+ Underground Maths: teaching resources enabling all students to explore the
  connections that underpin mathematics http://bit.ly/2awsjB4 #Math

+ Recursion schemes, part III: folds in context. ~ P. Thomson
  http://bit.ly/2awx91m #Haskell

+ Algebraic patterns: Semigroup. ~ P. Nilsson http://bit.ly/2awIKgx #Haskell

+ A formally verified proof of the central limit theorem. ~ J. Avigad, J. Hölzl
  & L. Serafin http://bit.ly/29XnDpf #ITP #IsabelleHOL #Math #Vestigium

+ Test data generators. ~ K. Claessen http://bit.ly/2a3PO6X #Haskell #QuickCheck

+ Efficient R programming (A practical guide to smarter programming). ~
  C. Gillespie & R. Lovelace http://bit.ly/2a0YaZy #Rstats #DataScience

+ Constructive Galois connections: Taming the Galois connection framework for
  mechanized metatheory. ~ D. Darais & als. http://bit.ly/2awLbQf #Coq

+ Haskell operator tutorial. ~ M. Snoyman http://bit.ly/29V4Est #Haskell

+ FitSpec: refining property sets for testing Haskell programs. ~ R. Matela
  http://bit.ly/2a7su7z #Haskell

+ A Haskell Cheat Sheet. ~ R. Matela http://bit.ly/2a7sDYX
  http://bit.ly/2a7sDYX #Haskell 

+ A Haskell Typeclasses Cheat Sheet. ~ R. Matela http://bit.ly/2a7sDYX
  http://bit.ly/2a7sDYX #Haskell 

+ Git magic. ~ Ben Lynn http://stanford.io/29V5sOb #Git #eBook 

+ Three approaches to monads. ~ Lawrence Evans http://bit.ly/29V5Ax4 #Haskell

+ The mechanization of mathematics ~ M. Beeson [Slides] http://bit.ly/2a99aqT
  #ATP #ITP #Math 

+ The mechanization of mathematics ~ M. Beeson http://bit.ly/29WNoTx #ATP #ITP
  #Math  #Vestigium

+ Datafun: a functional datalog. ~ M. Arntzenius & N.R. Krishnaswami
  http://bit.ly/2awMDlZ #Racket #Prolog 

+ La programación funcional y las arquitecturas multicore: estado del arte. ~
  J.G. Hoyos y A. Puertas http://bit.ly/29WN87h #PF

+ Property testing using QuickCheck. ~ P. Vasconcelos http://bit.ly/29WOnmJ
  #Haskell #QuickCheck 

+ A brief intro to QuickCheck. ~ Stuart Gunter http://bit.ly/2a9a6vi #Haskell
  #QuickCheck

+ Modular verification for computer security. ~ Andrew W. Appel
  http://bit.ly/2aEWmqa #Verification 

+ Deriving a probability density calculator (Functional Pearl). ~ W.M. Ismail &
  C.C. Shan http://bit.ly/2awNtPG #Haskell

+ Proust: a nano proof assistant. ~ P. Ragde http://bit.ly/29UnKDm #Racket
  #Logic

+ The Lax-Milgram theorem. A detailed proof to be formalized in Coq. ~
  F. Clément & V. Martin http://bit.ly/2aEYBd0 #Math #Coq

+ Análisis de desempeño de HASKELL en la ejecución de algoritmos paralelizados
  con primitivas. ~ A. Puertas y J.G. Hoyos http://bit.ly/29UomJi #Haskell

+ Parallel evaluation strategies for lazy data structures in Haskell. ~
  P. Totoo http://bit.ly/2aF0FC9 #Haskell #PhD_Thesis

+ The most important idea in Computer Science. ~ E. Normand
  http://bit.ly/29UFNcI #CompSci #Lisp #Turing

+ The magic of abstraction ~ E. Normand http://bit.ly/29UG936 #Programming

+ Soundly proving B method formulae using typed sequent calculus. ~
  P. Halmagrand http://bit.ly/29Un8xG #Zenon 

+ Ghostbuster: A tool for simplifying and converting GADTs. ~ T.L. McDonell &
  als. http://bit.ly/2awNP8E #Haskell

+ Principles of programming languages. ~ M. Grant, Z. Palmer y S. Smith
  http://bit.ly/2aHbrHT #Programming #OCaml #eBook

+ Proving correctness of a compiler using step-indexed logical relations. ~
  L. Rodrı́guez, M. Pagano & D. Fridlender http://bit.ly/2aEZ92E #Coq 

+ Queueing and glueing for optimal partitioning (Functional Pearl). ~ S.C. Mu &
  als. http://bit.ly/29XBsE7 #Algorithms #Haskell 

+ Constructive geometry and the parallel postulate. ~ Michael Beeson
  http://bit.ly/29YzO6F #Math #eBook 

+ Proof and computation in geometry. ~ Michael Beeson http://bit.ly/29YA6ud
  #Math #Otter 

+ Web meme generator: A web application for creating memes from
  pictures. http://bit.ly/2aJr1Th #Haskell

+ Aterrizando en la programación funcional. ~ @__josejuan__
  http://bit.ly/29YTM17 #Programación #PF #Haskell

+ Refinement through restraint: bringing down the cost of verification. ~
  L. O'Connor & als. http://bit.ly/2awOQOi #IsabelleHOL

+ Mathematical logic and computers (Some interesting examples). ~ Michael
  Beeson http://bit.ly/29YBpJU #Logic #ATP #Otter 

+ Libro de exámenes de programación funcional con Haskell (versión del 28 de
  julio de 2016) http://bit.ly/2ay8e1u #Haskell #I1M  

+ Automating change of representation for proofs in discrete mathematics. ~
  D. Raggi, A. Bundy, G. Grov, A. Pease http://bit.ly/2a8SNam #IsabelleHOL 

+ String diagrams for free monads (Functional Pearl). ~ M. Piróg & N. Wu
  http://bit.ly/2awOoj2 #Haskell

+ Criptografía desde el punto de vista de la programación funcional. ~
  D. Rodríguez http://bit.ly/2a8PGz7 #Haskell #TFG

+ Análisis formal de conceptos desde el punto de vista de la programación
  funcional. ~ M. Najarro http://bit.ly/2alh1ld #Haskell #TFG

+ HGE2D: 2D game engine written in Haskell. ~ Martin Buck http://bit.ly/2alt2qQ
  #Haskell #Games

+ Exception safety ~ Haskell-lang.org http://bit.ly/2alsyAK #Haskell #Tutorial

+ A literate program implementing the microKanren relational programming
  language. ~ seantalts http://bit.ly/2a949uU #Haskell

+ High-performance client-side web applications through Haskell EDSLs. ~
  A. Ekblad http://bit.ly/2awPafE #Haskell

+ Relation-algebraic verification of Prim’s minimum spanning tree algorithm. ~
  W. Guttmann http://bit.ly/2a8F7ka #ITP #IsabelleHOL 

+ Lazy graph processing in Haskell. ~ P. Dexter, Y. Liu & K. Chiu
  http://bit.ly/29XDnZh #Haskell

+ Un viaje a la historia de la informática. http://bit.ly/2aDUGQp #Informática
  #Historia 

+ Using programming to teach mathematics. ~ A. Cangiano http://bit.ly/2a8PzrW
  #Math #Programming 

** Agosto 2016

+ Modularity in Mathematics. ~ J. Avigad http://bit.ly/2aETtbM #Math #CompSci

+ Quick specifications for the busy programmer. ~ N. Smallbone et
  als. http://bit.ly/29Uoicy #Haskell #QuickSpec 

+ Sistema de tipos en Haskell. ~ Daniel Mery http://bit.ly/2aEUW1J #Haskell 

+ Puzzle solving in Haskell. ~ Nicolas Mattia http://bit.ly/2aEVULs #Haskell

+ Cryptographic block ciphers in functional programming: A case study on
  Feldspar and AES. ~ Gregor Ulm http://bit.ly/2aEWicT #Haskell 

+ Code generation for a simple first-order prover. ~ J. Villadsen et
  als. http://bit.ly/2aLu4hk #IsabelleHOL #SML 

+ A calculus for variational programming. ~ S. Chen, M. Erwig & E. Walkingshaw
  http://bit.ly/2am9FeJ #Haskell 

+ Zero knowledge proofs for NP. ~ Jeremy Kun | Math ∩ Programming
  http://bit.ly/2aocMDx 

+ Behavior-driven development (BDD) in Haskell with Hspec. ~ J.Carlos Pazmiño
  http://bit.ly/2aoulTZ #Haskell #Hspec #BDD 

+ Beginner’s Luck (A language for property-based generators). ~ L. Lampropoulos
  et als. http://bit.ly/2ambOa7 #Haskell

+ How to twist pointers without breaking them. ~ S. Chauhan, P.P. Kurur &
  B.A. Yorgey http://bit.ly/2aFOhkx #Haskell

+ Catamorphisms in 15 minutes! ~ C. Jones http://bit.ly/2aTPGqI
  #Haskell #Math

+ Example driven development. ~ W. Hughes http://bit.ly/2aTQQCC
  #Emacs #Programming

+ Report on the NSF workshop on formal methods for security. ~ S. Chong et
  als. http://bit.ly/2aTRT5E #Formal_methods

+ Why writing correct software is hard ... and why math (alone) won’t help
  us. http://bit.ly/2aTRtfJ #CompSci #Math

+ Formalized timed automata. ~ S. Wimmer http://bit.ly/2aBW6ww #IsabelleHOL
  #Vestigium 

+ Functional reactive programming, refactored. ~ I. Perez, M. Bärenz &
  H. Nilsson http://bit.ly/2aBXgIx #Haskell

+ Guilt free Ivory. ~ T. Elliott et als. http://bit.ly/2aBX3VJ #Haskell 

+ A tool for the automatic generation of logical models of order-sorted
  first-order theories ~ R. Gutiérrez et als.http://bit.ly/2aPAZUC 

+ AGES: a tool for generate logical models, for use with order-sorted first
  order logic. http://bit.ly/2aBYeVi #Haskell 

+ Consistent consequences formalized. ~ M. van Delft http://bit.ly/2aFmD8p
  #ITP #Coq

+ Calculating functional programs. ~ J. Gibbons http://bit.ly/2aFow4P #Haskell

+ Playing with Mersenne numbers. ~ A. Cangiano http://bit.ly/2aFoJFo #Math
  #Python 
 
+ Ptolemy's theorem in Isabelle/HOL. ~ L. Bulwahn http://bit.ly/2aVZAao #ITP
  #IsabelleHOL #Math #AFP

+ Formally verified complexity analysis of a functional language. ~ S. Wimmer
  http://bit.ly/2b2ISqX #IsabelleHOL 

+ Holophrasm: a neural automated theorem prover for higher-order logic. ~
  D. Whalen http://bit.ly/2b5oYvo #ATP

+ Comonads and day convolution. ~ Phil Freeman | Functorial Blog
  http://bit.ly/2aYodmx #Haskell  

+ The early development of programming languages. ~ D.E. Knuth & L.T. Pardo
  http://bit.ly/2b6s56n #Programming #History

+ A decision procedure for univariate real polynomials in Isabelle/HOL. ~
  M. Eberl http://bit.ly/2b5rUs3 #ITP #IsabelleHOL #Math

+ Functional programming and intelligent algorithms. ~ Hans Georg Schaathun
  http://bit.ly/2b91xBn #Haskell #AI

+ Interactive proofs in higher-order concurrent separation logic. ~ R. Krebbers
  et als. http://bit.ly/2aPGiDQ #ITP #Coq

+ Safe zero-cost coercions for Haskell. J. Breitner et als.
  http://bit.ly/2aPFE9z #Haskell

+ Towards a verifiable topology of data. ~ L. Lambán, F.J. Martín, J. Rubio &
  J.L. Ruiz http://bit.ly/2bqrZs6 pp. 113-116. #ACL2  

+ Foundations of Mathematics: Reliability AND Clarity: the explanatory role of
  mathematical induction. ~ J.T. Baldwin http://bit.ly/2aVhGZ5 #Math

+ A formal, resource consumption-preserving translation of actors to Haskell. ~
  E. Albert et als. http://bit.ly/2aViv3Z #Haskell

+ Declare and access tuple fields with labels. ~ @christopherdone
  http://bit.ly/2btUYeH #Haskell 

+ Formal availability analysis using theorem proving. ~ W. Ahmed & O. Hasan
  http://bit.ly/2aWZ3E0 #HOL4

+ Computer programming made easier (Harnessing automated program synthesis
  allows non-programmers to create working code) http://bit.ly/2bwF42Y

+ Λ◦λ : Functional lattice cryptography. ~ C. Peikert & E. Crockett
  http://bit.ly/2aWZZIP #Haskell

+ Overview of ExCAPE (Expeditions in Computer Augmented Program Engineering). ~
  R. Alur http://bit.ly/2bwMfs6 #Programming

+ Scaling up superoptimization. ~ P. Phothilimthana http://bit.ly/2aX2XwK
  #Programming

+ Inductive functional programming. ~ U. Schmid http://bit.ly/2bwO4VM
  #Programming

+ Leon: an automated system for verifying, repairing, and synthesizing
  functional Scala programs. http://bit.ly/2bwQowa #Scala 

+ The calculus of computation: decision procedures with applications to
  verification. ~ A. Bradley & Z. Manna [Slides] http://bit.ly/2aX5as1 

+ Synthesis, analysis, and verification. ~ V. Kuncak & O. Lhotak
  http://bit.ly/2bwOVpy  

+ Software synthesis using automated reasoning. ~ R. Piskac
  http://bit.ly/2aX5Cqf

+ Automated program synthesis at Kestrel Institute. ~ C. Green & D. Smith
  http://bit.ly/2bwQVyb 

+ Example-directed synthesis: a type-theoretic interpretation. ~ J. Frankle et
  als. http://bit.ly/2bwRwzK #Programming

+ Hoare-style specifications as correctness conditions for non-linearizable
  concurrent objects. ~ I. Sergey et als. http://bit.ly/2bjpciz #Coq 

+ Type-and-example-directed program synthesis. ~ S. Zdancewic [Slides]
  http://bit.ly/2bwTqAC #Programming 

+ Myth: Type-and-example-driven program synthesis for functional programming
  languages. ~ Peter-Michael Osera http://bit.ly/2bwSOuF #OCaml 

+ A theoretician's guide to the experimental analysis of algorithms. ~
  D.S. Johnson http://bit.ly/2bjq8ng

+ SeaHorn: A fully automated analysis framework for LLVM-based
  languages. http://bit.ly/2bjqKJL 

+ JayHorn: a software model checking tool for Java. http://bit.ly/2balyqe

+ Certified context-free parsing: a formalisation of Valiant’s algorithm in
  Agda. ~ J.P. Bernardy & P. Jansson http://bit.ly/2b0c1SX #Agda 

+ Programming languages for pre-mechanical calculating tools. ~ B. Mélès
  http://bit.ly/2b0bwIx #CompSci #Math 

+ Implementing HOL in an higher order logic programming language. ~ C. Dunchev
  et als. http://bit.ly/2b0bVL6 #Logic #λProlog

+ Deriving Moessner's sieve from Horner's method. ~ P. Urbak
  http://bit.ly/2b0f0L7 #Haskell #Math 

+ Lazy depth-first search and linear graph algorithms in Haskell. ~ D.J. King &
  J. Launchbury http://bit.ly/2bxSJ6C #Haskell 

+ Formalized linear algebra over elementary divisor rings in Coq. ~ G. Cano et
  als. http://bit.ly/2b0elJs #ITP #Coq #Math

+ Free delivery (Functional pearl). ~ Jeremy Gibbons http://bit.ly/2bzzaLj
  #Haskell

+ CoSMed: A confidentiality-verified social media platform. ~ F. Raimondi et
  als. http://bit.ly/2aYcKAK #IsabelleHOL 

+ mySQL-Haskell: a MySQL driver written entirely in Haskell. ~ winterland1989
  http://bit.ly/2bzB1zH #Haskell

+ On Tarski's axiomatic foundations of the calculus of relations. ~ H. Andréka,
  S. Givant, P. Jipsen, I. Németi http://bit.ly/2bC0kkH #Mace4  

+ APLicative Programming with Naperian Functors. ~ J. Gibbons
  http://bit.ly/2bzz2vm #Haskell

+ mueval: A secure sandboxed Haskell interpreter for pure function
  evaluation. ~ @gwern http://bit.ly/2bC1flh #Haskell 

+ A grid of Moessner triangles. ~ P. Urbak http://bit.ly/2bNZZib
  #Haskell #Math 

+ Propositions as types generalised: The Rosetta Stone ~ P. Wadler
  http://bit.ly/2bC0s3X #Programming 

+ Lecture notes on spectral graph methods. ~ M.W. Mahoney http://bit.ly/2bO06dS
  #Math 

+ MagicHaskeller: Automatic inductive functional programmer by systematic
  search http://bit.ly/2bO0Y1T #Haskell 

+ Nuevas profesiones que puede traer la web. ~ J. Archeni
  http://bit.ly/2bOCKER

+ How to read a scientific paper. ~ S. Keshav http://bit.ly/2bOKW87

+ How to implement an algorithm from a scientific paper. ~ Emmanuel Goossaert
  http://bit.ly/2bOMz5O  

+ Physics, topology, logic and computation: A Rosetta stone. ~ J.C. Baez &
  M. Stay http://bit.ly/15oC3rs #CompSci

+ Reasoner-aid research: potentials and popularity. ~ S. Wang
  http://bit.ly/2bKt3pE #ATP #ITP  

+ Haskell relational record (A pragmatic embedded system for type-safe and
  composable SQL queries). ~ K. Hibino et als. http://bit.ly/2bzzM3u #Haskell

+ Practical probabilistic programming with monads. ~ A. Scibior
  http://bit.ly/2bKoSdm #Haskell 

+ Beautiful Racket: learn how to make your own programming languages with
  Racket (and why). ~ M. Butterick http://bit.ly/2bKqmo8 #Racket

+ Rosette: solver-aided programming language that extends Racket for program
  synthesis, verification, and more. http://bit.ly/2bKqDau #Rosette #Racket

+ Certified derivative-based parsing of regular expressions. ~ R. Lopes,
  R. Ribeiro, C. Camarao http://bit.ly/2brHzyR #Idris 

+ Pattern synonyms. ~ M. Pickering, G. Érdi, S.P. Jones & R.A. Eisenberg
  http://bit.ly/2bzA6PL #Haskell

+ Taint analysis for system-wide privacy audits: a framework and real-world
  case studies. ~ M. von Maltitz et als. http://bit.ly/2btDkmx #IsabelleHOL 

+ Revisiting software transactional memory in Haskell1. ~ M. Le, R. Yates &
  M. Fluet http://bit.ly/2bzAI82 #Haskell

+ Formal semantics of firewalls in Isabelle/HOL. ~ C. Diekmann
  http://bit.ly/2btEQF1 #IsabelleHOL

+ Formalisation and execution of Linear Algebra: theorems and algorithms. ~
  J. Divasón http://bit.ly/2bIQFrv #PhD_Thesis #ITP #IsabelleHOL #Math

+ Haskell for beginners. ~ J. Moronuki http://bit.ly/2bIS2Xi #Haskell

+ Analyzing programs with Z3. ~ T. Jelvis http://bit.ly/2bISDZ0 #Haskell #Z3

+ Functional reactive programming. ~ T. Jelvis http://bit.ly/2bIWqVU #FRP
  #Haskell 

+ DeepSpec given $10m to prove logic behind bug-free software. ~ @BugFinders
  http://bit.ly/2brPyPc 

+ QuickCheck testing for fun and profit. ~ J. Hughes http://bit.ly/2brRKq7
  #Haskell #QuickCheck

+ A formal study of Moessner’s sieve. ~ P. Urbak http://bit.ly/2bIYj5c
  #ITP #Coq #Math

+ Modeling communication network requirements for an integrated clinical
  environment in PVS. ~ C. Bernardeschi et als. http://bit.ly/2brMwKD #PVS 

+ Inductive graphs. ~ T. Jelvis http://bit.ly/2bIVjFX #Haskell

+ Simple firewall in Isabelle/HOL. ~ C. Diekmann, J. Michaelis & M. Haslbeck
  http://bit.ly/2bke9Sw #IsabelleHOL #AFP 

+ Thinking with laziness. ~ T. Jelvis http://bit.ly/2brQ1RC #Haskell

+ Verified analysis of algorithms for the list update problem. ~ M. Haslbeck
  http://bit.ly/2bi78Vc #MsC_Thesis #IsabelleHOL 

+ Reading code with Emacs: controlling what's displayed. ~ Nat Knight
  http://bit.ly/2bis7r9 #Emacs

+ Functional programming by example. ~ C. Rodrigues http://bit.ly/2bkPfC2
  #Haskell #OCaml #Scheme #Clojure

+ Algorithms for reduced ordered binary decision diagrams (for Isabelle/HOL). ~
  J. Michaelis et als. http://bit.ly/2bkeqEM #IsabelleHOL #AFP 

+ The benefits (not features!) of programming with Haskell. ~ Robb Shecter
  http://bit.ly/2bkM9UC #Haskell

+ Formalising in Isabelle/HOL a simplicial model for Homotopy Type Theory: a
  naive approach. ~ J. Aransay et als. http://bit.ly/2bFp7FL #IsabelleHOL

+ An alarming number of scientific papers contain Excel errors. ~ The
  Washington Post http://wapo.st/2bQl4qR

+ Should I do that? Using relational reinforcement learning and declarative
  programming to discover domain axioms. http://bit.ly/2bJlsEf #ASP #Prolog 

+ Automating black-box property based testing. ~ Jonas Duregård
  http://bit.ly/2bJm392 #PhD_Thesis #Haskell 

+ Comment Haskell a changé ma vision de développeur sur de nombreux points et
  notamment le typage ~ G. Bouchard http://bit.ly/2bQsWZ6 #Haskell 

+ Haskell, monads and purity ~ Tikhon Jelvis http://bit.ly/2bJmFvl #Haskell

+ Python 3 for scientists. ~ Stephanie Douglas et als. http://bit.ly/2bQmH7K
  #Python

+ Cheat sheet for exploratory data analysis in Python. ~ M. Saraswat
  http://bit.ly/2bJmMa8 #DataScience #Python 

+ A curious connection between continued fractions and combinatorics. ~ Dan
  Piponi http://bit.ly/2bJnmEQ #Haskell #Math 

+ Le compilateur GHC Haskell en version 8.0.1. ~ Guillaume Bouchard
  http://bit.ly/2bJoLLs #Haskell  

+ Build GHC in Vagrant. ~ Hiroshi Ogawa http://bit.ly/2bJw8CP #Haskell #Vagrant

+ Introduction to scientific software deployment and development. ~ Damien
  Francois http://bit.ly/2bJxMnV #Programming 

+ CurryCheck: Checking properties of Curry programs. ~ M. Hanus
  http://bit.ly/2bKINdg #Curry

+ Unwanted Haskell triangle. ~ C. Martin http://bit.ly/2bKKHKT
  #Haskell

+ hindent 5: One style to rule them all. ~ Chris Done http://bit.ly/2bO5n4s
  #Haskell

+ A formalization of elementary group theory in the proof assistant Lean. ~
  A. Zipperer http://bit.ly/2bUzV2n #ITP #Lean #Math

+ cabal new-build is a package manager. ~ E.Z. Yang http://bit.ly/2bzUMuF
  #Haskell

+ Sets, logic, computation (An open logic text) ~ R. Zach http://bit.ly/2bzXjVV
  #eBook #Logic

+ How to compile GHC on Windows using Stack and the new Shake-based GHC build
  system. ~ Neil Mitchell http://bit.ly/2bUE06s #Haskell

** Septiembre 2016

+ Culling concurrency theory: Reusable and trustworthy meta-theory, proof
  techniques and separation results. ~ J. Åman http://bit.ly/2bUcG9c
  #IsabelleHOL 

+ Answer set programming for logical analysis of data. ~ K Becker et
  als. http://bit.ly/2bUd3R7 pp. 15-26 #ASP #Prolog #DataScience #LAD

+ ladoscope: tools for Logical Analysis of Data. ~ P. Lemaire
  http://bit.ly/2cek1ys #DataScience #LAD #OCaml 

+ Verifier theory from axioms to unverifiability of mathematical proofs,
  software and AI. ~ R.V. Yampolskiy http://bit.ly/2c0lnOr 

+ Build GHC on Windows using Hadrian and Stack. ~ A. Mokhov
  http://bit.ly/2bIitBd #Haskell

+ Craft3e: Code for "Haskell: the craft of functional programming", 3rd ed. ~
  S. Thompson http://bit.ly/2bItYsp #Haskell 

+ DataHaskell: an open source Haskell Data Science organization
  http://bit.ly/2c0o0A2 #Haskell #DataScience

+ Currying is delicious. ~ J. Moronuki http://bit.ly/2c0p9Yb

+ Function compose, type cut, and the algebra of logic. ~ X. Yuheng
  http://bit.ly/2cyZ4CU #Logic #CompSci #Scheme

+ Getting started with Haskell using Stack. http://bit.ly/2c05IwK #Haskell

+ Set-theoretic mereology. ~ Joel David Hamkins http://bit.ly/2c0502v #Logic
  #Math

+ Has-Sci: A collection of computational methods in science. ~ Sarthak Bagaria
  http://bit.ly/2czDD4y #Haskell #Physics 

+ Reproducible research in the mathematical sciences. ~ D. Donoho & V, Stodden
  http://stanford.io/2clI4ey #Math #CompSci

+ Haskell for Data Science. ~ G. Gonzalez http://bit.ly/2cmdlxT
  #Haskell #DataScience

+ Problemas de satisfacción de restricciones. ~ F. Sancho
  http://bit.ly/2cefsa2 #AI  

+ Formal reasoning about programs. ~ Adam Chlipala http://bit.ly/2ceeiv8 #eBook
  #Logic #CompSci #ITP #Coq

+ How the Königsberg bridge problem changed mathematics. ~ Dan Van der Vieren
  https://youtu.be/nZwSo4vfw6c #Math 

+ Proofs and programs. ~ @JohnDCook http://bit.ly/2cmCnNz #Math #CompSci

+ Inteligencia artificial: Colonias de hormigas. ~ Daniel Riera
  http://bit.ly/2cmFlSh #IA

+ How hard, really, is SAT? ~ R.J Lipton & K.W. Regan http://bit.ly/2cegGSv
  #Logic #CompSci

+ A variant of the superposition calculus in Isabelle/HOL. ~ N. Peltier 
  http://bit.ly/2cpSVEb #ITP #IsabelleHOL #Logic #AFP

+ Haskell basics: functions and pictures. ~ J. Breitner
  http://bit.ly/2cpVKFF #Haskell #CodeWorld  

+ The new CIS-194 (The Haskell minicourse at the University of Pennsylvania). ~
  J. Breitner http://bit.ly/2cpXyy5 #Haskell 

+ Datrik Intelligence: Advanced data analytics and predictive
  models. http://www.datrik.com #DataScience

+ Una de las demostraciones más bonitas de Paul Erdös. ~ http://bit.ly/2cpYNgK
  #Matemáticas

+ An elegant proof from Erdös ~ J.D. Cook http://bit.ly/2cq0ZVv #Math

+ Learn you an Elm. ~ J. Eremondi & A. Neslusan http://bit.ly/2cpZy9C #Elm

+ haskell-emacs: Write Emacs extensions in Haskell. http://bit.ly/2chxecg
  #Haskell #Emacs

+ Stone algebras in Isabelle/HOL. ~ W. Guttmann http://bit.ly/2cpVPc2 #ITP
  #IsabelleHOL #Math #AFP

+ Deriving Haskell lenses from an adjunction in the Kleisli category using
  Yoneda. ~ B, Milewski http://bit.ly/2ciUuXi #Haskell

+ Why is list comprehension bad? ~ Xah Lee http://bit.ly/2cruk1N
  #Programming

+ An algebra of synchronous atomic steps. ~ I.J. Hayes et als.
  http://bit.ly/2cqDlJJ #ITP #IsabelleHOL

+ Automated reasoning and Amazon s2n. ~ Colm MacCárthaigh
  http://amzn.to/2cqG8md #Cryptography #AR #Cryptol #Haskell  

+ Part one: Verifying s2n HMAC with SAW. ~ J. Dodds
  http://bit.ly/2cEoaPt #Cryptography #AR #Cryptol #Haskell  

+ Part two: Specifying HMAC in Cryptol. ~ J. Dodds http://bit.ly/2cEoyO2
  #Cryptography #AR #Cryptol #Haskell  

+ DataHaskell wiki http://bit.ly/2cEqSED #Haskell #DataScience #DataHaskell

+ The new and improved Programming Languages Zoo. ~ Andrej Bauer
  http://bit.ly/2cEq3LT #Programming 

+ The Programming Languages Zoo (A potpourri of programming languages). ~
  A. Bauer & M. Pretnar http://bit.ly/2cqJdCV #Programming 

+ Understanding Plotkin's call-by-name, call-by-value and the λ-calculus. ~
  Darryl McAdams http://bit.ly/2cErOJe

+ Columbia creates data set cleaner. ~ Kay Ewbank  http://bit.ly/2cqS87z
  #DataScience

+ The base of a string theory for Haskell ~ Edward Z. Yang
  http://bit.ly/2cEDU4O #Haskell 

+ A formal proof of the incompatibility of SD-efficiency and
  SD-strategy-proofness. ~ M.Eberl http://bit.ly/2cElvFt #ITP #IsabelleHOL 

+ CodeWorld: Educational computer programming environment using Haskell. ~
  C. Smith http://code.world http://bit.ly/2bYjVOB #Haskell #CodeWorld  

+ HaskellStarter: A project that demonstrates getting up and running with
  Haskell. ~ Josh Cough http://bit.ly/2bZn3K5 #Haskell

+ How to teach computational thinking. ~ Stephen Wolfram http://bit.ly/2bZnZhH
  #Education #CompSci

+ Emacs configurations for LaTeX | Irreal http://bit.ly/2bZp1KF #Emacs #LaTeX

+ uhub/awesome-coq: A curated list of awesome Coq frameworks, libraries and
  software. http://bit.ly/2bY1KE2 #Coq

+ How to write a package in Haskell and interact with the code inside of it. ~
  Chris Allen http://bit.ly/2bZtiOh #Haskell

+ Proving non-deterministic computations in Agda. ~ S. Antoy, M. Hanus &
  S. Libby http://bit.ly/2cBBh0l #Agda #Curry 

+ Using Haskell for a declarative implementation of system Z inference. ~
  S. Kutsch & C. Beierle http://bit.ly/2csTtMq #Haskell 

+ Iptables-semantics in Isabelle/HOL. ~ C. Diekmann & L. Hupel 
  http://bit.ly/2csSxYG #IsabelleHOL #AFP

+ A framework for extending microKanren with constraints. ~ J. Hemann &
  D.P. Friedman http://bit.ly/2cBCEw9 #Racket

+ Selene: a generic framework for model checking concurrent programs from their
  semantics in Maude. ~ A. Riesco & G. Suárez http://bit.ly/2cBBqBh #Maude 

+ Huri: a Clojure library for the lazy data scientists. ~ Simon Belak
  http://bit.ly/2c115lc #Clojure #DataScience 

+ Doing data science with Clojure. ~ Simon Belak http://bit.ly/2c2ASrf
  #Clojure #DataScience 

+ Los polinomios de Rudin-Shapiro | Café Matemático http://bit.ly/2c2BugI
  #Matemáticas 

+ Intro to formal logic 2nd ed. — readers wanted! ~ Peter Smith
  http://bit.ly/2c2BXPZ #Logic

+ IDRIS: Systems programming meets full dependent types. ~ E.C. Brady
  http://bit.ly/2c2Dwxc #Idris

+ Emacs configuration in 24 minutes. ~ Mohammed Ismail
  https://youtu.be/FRu8SRWuUko #Emacs

+ Example driven development. ~ Wilfred Hughes http://bit.ly/2c14lwP
  #Emacs #Lisp

+ Creating and running unit tests directly in source files with org-mode. ~
  Frederick Giasson http://bit.ly/2c14aSj #Clojure #Emacs

+ An implementation of Deflate in Coq. ~ C.S. Senjak & M. Hofmann
  http://bit.ly/2cCh6kd #Coq

+ What does Flatland have to do with Haskell? ~ Tony Fischetti
  http://bit.ly/2cFBZLe #Haskell

+ Formalized confluence of quasi-decreasing, strongly deterministic conditional
  TRSs. ~ T. Sternagel & C. Sternagel http://bit.ly/2cND2Ia #ITP #IsabelleHOL 

+ foldl-statistics: A reimplementation of the Statistics.Sample module using
  the foldl package. ~ Alex Mason http://bit.ly/2cNDXbs #Haskell 

+ Working with data in Haskell. ~ Chris Done http://bit.ly/2cNHDKg #Haskell
  #DataScience

+ A short mechanized proof of the Church-Rosser Theorem by the Z-property for
  the λβ-calculus in Nominal Isabelle. http://bit.ly/2cPsqIM #IsabelleHOL

+ Applicative style programming. ~ J.L. García http://bit.ly/2cPvtAP
  http://bit.ly/2cPvy7o #Haskell

+ El trabajo en un mundo de sistemas inteligentes. http://bit.ly/2cGOUOU

+ A short Haskell FileStore tutorial. ~ M. Mayer http://bit.ly/2cGQVL3 #Haskell
  #Git #Darcs #Mercurial

+ Emacs for Haskell. ~ M. Mayer http://bit.ly/2cGQK2k #Haskell #Emacs

+ Top algorithms used by data scientists. ~ G. Piatetsky http://bit.ly/2cI2MIP
  #DataScience

+ Lógica formal y argumentación como disciplinas complementarias. ~ G. Palau
  http://bit.ly/2cI6H88 #Lógica

+ learn-physics: Haskell code for learning physics. ~ S.N. Walck
  http://bit.ly/2cI4YzW http://bit.ly/2cI53n3 #Haskell #Physic

+ Practical string processing in Haskell. ~ K. Osanai http://bit.ly/2cI65zH
  #Haskell 

+ Certifying a crash-safe file system. ~ Haogang Chen http://bit.ly/2cSSTFl
  #PhD_Thesis #Coq

+ Modules that enable one to write simulation scripts in #Haskell. The examples
  particularly simulate some of the laws of mechanics. http://bit.ly/2cKcuu9 

+ Formal semantics & verification for the Border Gateway Protocol. ~ K. Weitz
  et als. http://bit.ly/2ctUkJx #Coq 

+ La estética del código fuente: a la búsqueda del Arte en la Programación. ~
  Carlos Benítez http://bit.ly/2cR2P3e #Programación 

+ Toward a history of mathematics focused on procedures. ~ P. Blaszczyk et
  als. http://bit.ly/2cR4Uwi #Math #History 

+ Axiomatizing category theory in free logic. ~ C. Benzmüller & D.S. Scott
  http://bit.ly/2cfxLY8 #ITP #IsabelleHOL

+ Folds and infinite lists. ~ @argumatronic http://bit.ly/2cfA51o #Haskell

+ Set theory and its place in the foundations of mathematics (a new look at an
  old question). ~ M. Džamonja http://bit.ly/2cfyGrA #Logic #Math

+ Machine-checked mathematics. ~ A. Mahboubi http://bit.ly/2ch3xEa #ITP #Math

+ Programas, funciones y dibujos. http://bit.ly/2cinKOY #CodeWorld #Haskell
  #I1M 

+ Teenage Haskell. ~ Tim Docker http://bit.ly/2cib8m9 #CodeWorld #Haskell

+ SAT/SMT solving in Haskell. ~ Masahiro Sakai http://bit.ly/2ciaIMw #Haskell
  #SAT #SMT

+ Introduction to Stack's Docker integration. ~ Yuji Yamamoto
  http://bit.ly/2ckuv2H #Haskell #Stack #Docker

+ Mechanized analysis of a formalization of Anselm's ontological argument by
  Eder and Ramharter. ~ J. Rushby http://bit.ly/2d4ngc4 #ITP #PVS  

+ Proofs and assurance (The case of the ontological argument). ~ J. Rushby
  [Slides] http://bit.ly/2cVnIw4 #ITP #PVS 

+ Assurance and formal methods. ~ J. Rushby http://bit.ly/2cVnYLb
  #Formal_methods

+ Formal models for human-machine interactions. ~ J. Rushby
  http://bit.ly/2d4nvUs #Formal_methods

+ Assurance in the internet of things and for automated driving. ~ J. Rushby
  http://bit.ly/2cVo6uk #Formal_methods #IoT 

+ Practical Haskell: simple file mirror (part 1). ~ M. Snoyman
  http://bit.ly/2ckvYWA #Haskell 

+ Álgebra Linear: com um pouco de Mecânica Quântica. ~ D. Krause
  http://bit.ly/2cVq9Pf #eBook #Math 

+ SECOMP Project: Efficient formally secure compilers to a tagged
  architecture. http://bit.ly/2cVs7in

+ A proof of the halting theorem. ~ R.J Lipton & K.W. Regan
  http://bit.ly/2d4z7Xq #Logic #CompSci

+ Music as code talks. ~ Chris Ford http://bit.ly/2cVzjLt #Programming
  #Music

+ Equilibrium graphs. ~ P. Cabalar, C. Pérez & G. Pérez http://bit.ly/2d4AGVd
  #Logic #ASP

+ Beginning Haskell. ~ Tom Prior http://bit.ly/2d4Pljd #Haskell

+ Stone algebras in Isabelle/HOL. ~ W. Guttmann http://bit.ly/2d0thsN
  #IsabelleHOL #Math #AFP 

+ Math-aware search engines: physics applications and overview. ~ D.C. Pineau
  http://bit.ly/2d0sdFw #Math #MKM

+ Practical Haskell: simple file mirror (part 2). ~ M. Snoyman
  http://bit.ly/2d0tQmp #Haskell 

+ Social network processes in the Isabelle and Coq theorem proving
  communities. ~ J. Fleuriot, S. Obua, P. Scott http://bit.ly/2d5UZRg
  #IsabelleHOL #Coq

+ Distributed agent-based automated theorem proving in order-sorted first-order
  logic. ~ Dohan Kim http://bit.ly/2d5TDWX #ATP

+ The influence of Haskell: new Java Spring release contains functional web
  framework ~ @poutsma http://bit.ly/2d5Uu9W http://bit.ly/2cAr3PU #Haskell

+ L'intelligence artificielle, ce n'est plus de la science-fiction. ~ Christine
  Siméone http://bit.ly/2d758xg #IA

+ Hacker-proof code confirmed. ~ Kevin Hartnett | Quanta Magazine
  http://bit.ly/2d7b2yD

+ Your first Haskell application (with Gloss) ~ Andrew Gibiansky
  http://bit.ly/2cBeT9L #Haskell #Cabal #Gloss #Game 

+ GIF as time paradox: between transience and permanence. http://bit.ly/2cBfR5x
  #Math #GIF #Mathematica 

+ Refinement reflection: Haskell as a theorem prover. R. Jhala
  http://bit.ly/2cBgZX3 #Haskell #LiquidHaskell #Logic 

+ Certification of context-free grammar algorithms. ~ D. Firsov
  http://bit.ly/2cWxYGn #PhD_Thesis #Agda 

+ Data science and the perfect team. ~ Ryan Swanstrom http://bit.ly/2cBcM5u
  #DataScience

+ Semiring programming: a framework for search, inference and learning. ~
  V. Belle & L. de Raedt http://bit.ly/2d5hetS #Programming 

+ Allen's interval calculus in Isabelle/HOL. ~ F. Ghourabi
  http://bit.ly/2dmUUwB #ITP #IsabelleHOL #AFP 

+ Artículo sobre Gottfried Leibniz (1646-1716) en la Wikipedia. 
  http://bit.ly/2dmTe6l

+ Leibniz' dream. ~ The Ratiocinator http://bit.ly/2dmU7vo #Logic #CompSci
  #Leibniz

+ Under the spell of Leibniz's Dream. ~ Edsger W.Dijkstra http://bit.ly/2dmUfLn
  #Logic #CompSci #Leibniz

** Octubre 2016

+ Mathematical components. ~ A. Mahboubi, E. Tassi, Y. Bertot, G. Gonthier
  http://bit.ly/2dsc3Fj #ITP #Coq #Math #eBook 

+ On the functional interpretation of OCL. ~ D. Calegari & M. Viera
  http://bit.ly/2dscbV8 #Haskell 

+ List of logical lists. ~ Adolfo Neto http://bit.ly/2d2ZlJB #Logic

+ Failing faster: Overlapping patterns for property-based testing. ~ J. Fowler
  & G. Hutton http://bit.ly/2daALpZ #Haskell

+ Tutorial on reasoning in expressive non-classical logics with Isabelle/HOL. ~
  A. Steen, M. Wisniewski & C. Benzmüller http://bit.ly/2daBUxW #IsabelleHOL

+ Big Logic: verifying the correctness of large systems. ~ J.D. Cook
  http://bit.ly/2dBYweo #Logic #CompSci

+ Sparse linear algebra datastructures and algorithms in Haskell. ~ Marco Zocca
  http://bit.ly/2dC0HhJ #Haskell

+ Total functional programming. ~ D.A.Turner http://bit.ly/2dGqvcA #Haskell 

+ Thonny: Python IDE for beginners. http://thonny.cs.ut.ee #Python

+ A theoretician’s guide to the experimental analysis of algorithms. ~
  D.S. Johnson http://bit.ly/2bjq8ng #Algorithmic

+ Dependent types at work. ~ A. Bove & P. Dybjer http://bit.ly/pFCZew #Haskell

+ Foundations of data science. ~ A. Blum, J. Hopcroft & R. Kannan
  http://bit.ly/2dMbLsS #eBook #DataScience 

+ Proof assistants for natural language semantics. ~ S. Chatzikyriakidis &
  Z. Luo http://bit.ly/2dMchqN #ITP #Coq

+ Verified algorithms for context-free grammars in Coq. ~ J. Hofmann
  http://bit.ly/2dMd23j #Coq

+ On the applications of interactive theorem proving in computational sciences
  and engineering. ~ A. Tahat http://bit.ly/2dMj9Vd #ITP #PVS

+ Modular deductive verification of sampled-data systems. ~ Daniel Ricketts et
  als. http://bit.ly/2dMfhTS #Coq

+ ¿Se puede liberar la programación del estilo de von Neumann? ~ F. Sancho
  http://bit.ly/2dnOY3b #Programación 

+ An introduction to programming and proving with dependent types in Coq. ~
  A. Chlipala http://bit.ly/2dOHGsF #Coq

+ La lógica matemática: una disciplina en busca de encuadre. ~ J. Ferreirós
  http://bit.ly/2dORMJY #Lógica

+ Mind the gap: Addressing behavioural inconsistencies with formal methods. ~
  J.K.F. Bowles & M.B. Caminati http://bit.ly/2dMkew7 #IsabelleHOL #Z3

+ Refinement reflection on ADTs: Lists are monoids. ~ R. Jhala
  http://bit.ly/2dq5fER #Haskell #LiquidHaskell #Logic 

+ Intersecting chords theorem in Isabelle/HOL. ~ L. Bulwahn
  http://bit.ly/2dWh8Wq #ITP #Isabell/HOL #Math #AFP

+ Bullipedia: un caso de construcción social de conocimiento gastronómico. ~
  A. Jiménez  http://bit.ly/2dWivnU #PhD_Thesis

+ Free programming ebooks - O'Reilly media. http://oreil.ly/2dWib8T #eBook
  #Programming

+ HLogo: A parallel Haskell variant of NetLogo. ~ N. Bezirgiannis,
  I.S.W.B. Prasetya & I. Sakellariou  http://bit.ly/2dWlexF #Haskell 

+ What makes a program elegant? ~ Robin K. Hill | Communications of the ACM
  http://bit.ly/2dWE3AT #Programming 

+ Essentials missed by mathematics education (for good reasons, and with bad
  consequences). ~ W. Neuper http://bit.ly/2e5pRpr #Math #Education #ITP

+ "Systems that explain themselves" for engineering education. ~ W.A. Neuper
  http://bit.ly/2e5qpvm #Education #TP

+ Foundations of Mathematics (Oct. 15, 2016). ~ Ken Kubota
  http://bit.ly/2dFCAeU #Logic #Math #ITP 

+ A toy Mathematica interpreter in Haskell. ~ Yonghao Jin http://bit.ly/2dFDV5p
  #Haskell #Mathematica

+ The Administration’s Report on the Future of Artificial Intelligence |
  whitehouse.gov ~ E. Felton and T. Lyons http://bit.ly/2dFHete #AI

+ Razonamiento formalizado: Del sueño a la realidad de las pruebas.
  http://bit.ly/2dFY1N3 #RA2016

+ Du rêve à la réalité des preuves. ~ Jean-Paul Delahaye http://bit.ly/2dFZF15
  #RA2016

+ Proof assistants: History, ideas and future. ~ H. Geuvers
  http://bit.ly/2dG0F5c #RA2016

+ A short survey of automated reasoning. ~ J. Harrison http://bit.ly/2dG0pDh
  #RA2016

+ Computer math proof shows reasoning power. ~ G. Kolata http://nyti.ms/2dG0xTh
  #RA2016

+ Computers and the sociology of mathematical proof. ~ D. MacKenzie
  http://bit.ly/2dG2oYy #RA2016 

+ What is automated theorem proving?. ~ G. Sutcliffe http://bit.ly/2dG0dE4
  #RA2016

+ The QED Manifesto. http://bit.ly/2dG2Nu2 #RA2016

+ The QED manifesto revisited. ~ F. Wiedijk http://bit.ly/2dG003X #RA2016

+ The HoTT Library: A formalization of homotopy type theory in Coq. ~ A. Bauer
  et als. http://bit.ly/2eaczYA #ITP #Coq #HoTT

+ Formalising real numbers in homotopy type theory. ~ G. Gilbert
  http://bit.ly/2edb6ku #ITP #Coq #Math

+ Analyzing program termination and complexity automatically with AProVE ~
  J. Giesl et als. http://bit.ly/2edbXSi

+ Cours: Automated reasoning. ~ J. Fleuriot http://bit.ly/2et9R0C #AR #Logic
  #IsabelleHOL #RA2016

+ Refinement reflection (or, how to turn your favorite language into a proof
  assistant using SMT) ~ N. Vazou & R. Jhala http://bit.ly/2etbrQc  #Haskell

+ Stable matching in Isabelle/HOL. ~ Peter Gammie http://bit.ly/2ewWhJA
  #IsabelleHOL #AFP 

+ Persistent data structures. ~ G. Kunigami http://bit.ly/2ewoC2G
  #OCaml

+ A simple embedded probabilistic programming language. ~  Jared Tobin
  http://bit.ly/2ewucC5 #Haskell

+ Efficient certified resolution proof checking.~ L. Cruz-Filipe et
  als. http://bit.ly/2e5Yvwe #ITP #Coq #Logic

+ A taste of Haskell. ~ Dennis Felsing http://bit.ly/2e607Ga #Haskell 

+ Calling Python libraries from Haskell. ~ John Millikin http://bit.ly/2e5ZWuj
  #Python #Haskell

+ Verifying Haskell programs using constructive type theory. ~ A. Abel at
  als. http://bit.ly/2e5XfsX #Haskell #Agda

+ hs2agda: A tool for formally verifying Haskell code in Agda. ~ Langston
  Barrett http://bit.ly/2e5XnIX #Haskell #Agda 

+ Automation of separation logic using auto2. ~ B. Zhan http://bit.ly/2eAkq3L
  #IsabelleHOL

+ Modal logics for nominal transition systems in Isabelle/HOL. ~ T. Weber et
  als. http://bit.ly/2eXiAqd #IsabelleHOL #AFP

+ How are programs found? (Speculating about language ergonomics with
  Curry-Howard) ~ J. Emerich http://bit.ly/2fjfK21 #CompSci #Math 

+ Formal reasoning. ~ H. Geuvers http://bit.ly/2f1XbeT #Logic

+ Absolute firsts (An initiative for women in computing). ~ KW Regan
  http://bit.ly/2fjixbt

+ Florida Tech, CS: Functional programming (Fall 2016). ~ Ryan Stansifer
  http://bit.ly/2f1SYrz #Haskell 

+ Building small native languages with Haskell. ~ S. Diehl
  https://t.co/zvMNQz9pFt #Haskell

+ Efficient certified resolution proof checking. ~ L. Cruz-Filipe,
  J. Marques-Silva & P. Schneider-Kamp http://bit.ly/2fjexbd #ITP #Coq #SAT 

+ Máster en Ciencia de Datos de la Universidad de
  Sevilla. http://bit.ly/2eMatya #DataScience 

** Noviembre 2016

+ Verified parallel string matching in Haskell. ~ N. Vazou & J. Polakow
  http://bit.ly/2fjfNec #Haskell #LiquidHaskell

+ Certified convergent Perceptron learning. ~ T. Murphy, P. Gray & G. Stewart
  http://bit.ly/2eTjJRb #Coq #ML 

+ A functional approach to library construction for conceptual reasoning. ~ DWP
  MacMillan http://bit.ly/2fqI5QV #Haskell

+ Automation of separation logic using auto2. ~ B. Zhan http://bit.ly/2fqE0fu
  #IsabelleHOL

+ Verificación formal de la lógica de Hoare en Isabelle/HOL. ~ N. González
  http://bit.ly/2f5bKAi #IsabelleHOL

+ Introductory Programming Subject in European Higher Education. ~ V. Aleksić &
  M. Ivanović http://bit.ly/2f5c2HE #Programming #Education

+ The theory and practice of Randori coding dojos. ~ J. Rooksby, J. Hunt &
  X. Wang http://bit.ly/2frOQ50 #Programming

+ Haskell vs. other programming languages. ~ http://bit.ly/2f8VjTO ~ S. Diehl
  #Programming Haskell

+ La charla de un profesor de universidad que puso en pie a todo un
  auditorio. http://huff.to/2fD7hU9

+ A Coq formal proof of the Lax–Milgram theorem. ~ S. Boldo et
  als. http://bit.ly/2fguInH #ITP #Coq #Math

+ Write your own Theorem Prover. ~ P. Scott http://bit.ly/2fgwuFB
  http://bit.ly/2fgvP7a #Haskell #Logic 

+ Covariance and contravariance. ~ M. Snoyman http://bit.ly/2fEydTN #Haskell

+ Exceptions best practices in Haskell. ~ M. Snoyman http://bit.ly/2fEuoOa
  #Haskell

+ The best Functional Programming blogs and how to get started. ~ Medium
  http://bit.ly/2fEveL4 #FP #Haskell #Scala #Clojure #Elixir #Erlang #FSharp

+ Theorem prover museum. ~ M. Kohlhase http://bit.ly/2fEBZwp #ATP #ITP

+ Artificial Intelligence (Provisional Lecture Notes). ~ M. Kohlhase
  http://bit.ly/2fEwwWq #AI

+ Computational Logic (320441 CompLog Lecture Notes). ~ M. Kohlhase
  http://bit.ly/2fEAder #Logic

+ Living in Emacs. ~ Irreal http://bit.ly/2fgLnro #Emacs

+ Expressiveness of deep learning in Isabelle/HOL. ~ A. Bentkamp
  http://bit.ly/2fH1rkY #IsabelleHOL #AFP 

+ Trees that grow (an early draft). ~ S. Najd & S. Peyton Jones
  http://bit.ly/2fgIqad #Haskell

+ Concrete semantics with Isabelle/HOL (Advanced course at Universität des
  Saarlandes). ~ J. Blanchette et als. http://bit.ly/2fi9q9g #IsabelleHOL

+ Extending superposition with integer arithmetic, structural induction, and
  beyond. ~ S. Cruanes http://bit.ly/2ficVN9 #PhD_Thesis #Logic #ATP #OCaml

+ A brief presentation of OCaml. ~ S. Cruanes http://bit.ly/2fGUOiy #OCaml

+ Popular Math books at Goodreads. http://bit.ly/2fuvuLN #Math #Books

+ Coming to terms with quantified reasoning. ~ L. Kovács, S. Robillard &
  A. Voronkov http://bit.ly/2f615mr #ATP #Vampire 

+ Observations of a functional programmer. ~ Yaron Minsky http://bit.ly/2f4MjvU
  #FP #OCaml  

+ Practical recursion schemes ~ Jared Tobin http://bit.ly/2f4Q58G #Haskell

+ What Artificial Intelligence can and can’t do right now. ~ Andrew Ng
  http://bit.ly/2euFjMX #AI

+ Functional programming in Clojure. ~ Troy Miles http://bit.ly/2euCEmb #FP
  #Clojure

+ Contributions to a computational theory of policy advice and avoidability. ~
  N. Botta, P. Jansson & C. Ionescu http://bit.ly/2f60tgl #Idris

+ "Let us calculate!": Leibniz, Llull, and the computational imagination. ~
  J. Gray http://bit.ly/2fxMhQn #Leibniz #math #CompSci 

+ CertSkel: a verified compiler for a Coq-embedded GPGPU DSL. ~ I. Asakura et
  als. http://bit.ly/2g0W5Bg #ITP #Coq 

+ Beginning practical Haskell (An introductory Haskell programming course by
  Richard Cook). http://bit.ly/2g46xrz #Haskell 

+ Theorem proving in Lean. ~ J. Avigad, L. de Moura y S. Kong
  http://bit.ly/2g4PbuF #ITP #Lean 

+ Interactive and automated theorem proving for non-classical logics (Tutorial
  at GCAI 2016). ~ C. Benzmüller http://bit.ly/2fCJ95J #IsabelleHOL #Logic

+ teaspoon: Solving the curriculum-based course timetabling problems with
  Answer Set Programming. ~ M. Banbara http://bit.ly/2fETMVU #ASP

+ Haskell tutorial and cookbook. ~ M. Watson http://bit.ly/2fESeuN #Haskell 
  #eBook

+ Solving the 15-Puzzle with Haskell and diagram ~ J. Rosenbluth
  http://bit.ly/2fEZgzS #Haskell 

+ Haskell numeric types: quick reference. ~ J. Rosenbluth http://bit.ly/2fEVGpA
  #Haskell

+ ¿Puede existir matemática sin computación? ~ F. Sancho
  http://bit.ly/2fJBEKu #Matemáticas #Computación

+ Monte Carlo connection prover. ~ M. Färber, C. Kaliszyk & J. Urban
  https://arxiv.org/abs/1611.05990 #ATP #ML #leanCoP

+ Comparative concurrency with Haskell. ~ M. Snoyman http://bit.ly/2fXx8FY
  #Haskell

+ A Haskell study syllabus (Learn professional-grade Haskell coding practices
  quickly and efficiently). ~ FP Complete http://bit.ly/2fMKhnn #Haskell 

+ A verified low-level formatting EDSL in Agda. ~ M. van Geest
  http://bit.ly/2fMFhiE #MsC_Thesis #Agda

+ Software libre bajo Linux: Una alternativa para las Matemáticas de México. ~
  G.M. Ortigoza http://bit.ly/2fMENZU #Matemáticas #Computación 

+ Proceedings of the 16th Conference on Formal Methods in Computer-Aided Design
  (FMCAD 2016) http://bit.ly/2fMPueZ

+ Fundamental concepts in programming languages. ~ C. Strachey
  https://t.co/4iShOUjdKf #Programming

+ Proving opacity of a pessimistic STM. ~ S. Doherty et
  als. http://bit.ly/2fMOwQ3 #IsabelleHOL

+ Haskell for dummies. ~ M. Snoyman http://bit.ly/2g1SK3O #Haskell

+ SAW provides the ability to formally verify properties of code written in C,
  Java, and Cryptol. http://bit.ly/2g1RNsh #Haskell #Formal_verification

+ Hackage dependency monitor. http://bit.ly/2g2KjVQ #Haskell

+ Donald Knuth was the first Erlang programmer. ~ A. Videla
  http://bit.ly/2fQUSOd #Programming #Erlang

+ Boolean Pythagorean triples problem. ~ Wikipedia http://bit.ly/2fFHwle #Math
  #Logic #CompSci

+ Spreading the Gospel of Haskell. ~ M. Snoyman http://bit.ly/2fIbJzP
  #Haskell

+ Máximo producto en la partición de un número (2). ~ Antonio Roldán
  http://bit.ly/2fIgA4j #Matemáticas #Programación 

+ Programming and mathematical thinking. ~ A.M. Stavely http://bit.ly/2fIh5uY
  #eBook #Math #Programming #Python

+ The coder’s apprentice: learning programming with Python 3. ~ P. Spronck
  http://bit.ly/2fIfmGh #eBook #Programming #Python

+ Towards certified compilation of financial contracts. ~ D. Annenkov &
  M. Elsman http://bit.ly/2feEUOU #Coq #Haskell 

+ New Computer Algebra System: OSCAR http://bit.ly/2ffruSB #Math #CompSci #CAS

+ Introducción a la Lógica (para informáticos). ~ L.M. Pardo
  http://bit.ly/xA2Dm7 #Lógica 

+ Bach and the musical Möbius strip. ~ Tony Phillips http://bit.ly/2fMXwlm
  #Math #Music 

+ plots: Diagrams based plotting library. http://bit.ly/2fN7pPR #Haskell

+ Simulate physics on generalized coordinate systems using Hamiltonian
  Mechanics and automatic differentiation. http://bit.ly/2fZZBgC #Haskell 

+ UCI datasets: data sets for statistics and machine learning, in Haskell
  http://bit.ly/2g0bVNR #Haskell

+ Why category theory matters: a functional programmer’s perspective. ~
  J.N. Oliveira http://bit.ly/2fOFmQ2 #Math #FP

+ Proofs from THE BOOK. ~ M. Aigner & G.M. Ziegler http://bit.ly/2g5t5ty #Math
  
+ Euclid's theorem: proofs of infinitude of primes. ~ Wikipedia
  http://bit.ly/2g5kF5z #Math 

+ Fermat numbers are coprime. ~ ProofWiki http://bit.ly/2g5eWfZ #Math

+ Foldl: Composable, streaming, and efficient left folds. ~ G. Gonzalez
  http://bit.ly/2g5zHs7 #Haskell 

+ Libro de exámenes de programación funcional con Haskell (versión del 27 de
  noviembre de 2016). http://bit.ly/2fTn5RV #Haskell #I1M2016 

+ An interactive tutorial on numerical optimization. ~ Ben Frederickson
  http://bit.ly/2g7c7et #Math #Javascript

+ Simple unsolved math problem: How often does an integer occur as a binomial
  coefficient? ~ W. David Joyner http://bit.ly/2g7f6mZ #Math

+ Aprendiendo a usar GitHub. http://bit.ly/2g9W6V1 #I1M2016 #GitHub

+ An integer N is divisible by 2^r if and only if the last r digits of N form
  an integer divisible by 2^r. ~ ProofWiki http://bit.ly/2ga0H9A

+ Demonstration of Data.Numbers.Fixed. ~ Ken Takusagawa http://bit.ly/2g9Z6Rh
  #Haskell  

+ Adventures in enumerating balanced brackets. ~ Brent Yorgey
  http://bit.ly/2ga2TxV #Haskell 

+ The generic-random library, part 1: simple generic Arbitrary instances. ~
  Brent Yorgey http://bit.ly/2g9Zuzf #Haskell 

+ Haskell documentation, 2016 update. ~ M. Snoyman http://bit.ly/2gahmKg
  #Haskell

+ Group theory in Haskell. https://github.com/hubbards/GroupTheory #Haskell
  #Math  

+ Formally certified round-off error analysis of floating-point functions. ~ M
  Moscato, L Titolo, A Dutle, CA Muñoz http://go.nasa.gov/2g2VY6X #PVS

+  GHC optimization and fusion. ~ Mark Karpov http://bit.ly/2g4xIBi #Haskell 

** Diciembre 2016

+ Implementation of Bourbaki's Elements of Mathematics in Coq: Part two, from
  natural numbers to real numbers. ~ J. Grimm http://bit.ly/2gsHL65 #Coq #Math

+ Beautiful folds are practical, too. ~ G. Gonzalez [Slides]
  http://bit.ly/2ghBozI [Video] http://bit.ly/2ghKI6Q #Haskell

+ Beautiful folds in Scala. ~ A. Warski http://bit.ly/2gvLm3u #Scala

+ Scala, the language for Data Science. ~ D. Arenas http://bit.ly/2ghC9sz
  #Scala #DataScience

+ Do you like Scala? Give Haskell a try! ~ P. Kant http://bit.ly/2gvKiwH
  #Haskell #Scala

+ Introduction to functional reactive programming (FRP), Yampa, and Arrows. ~
  H. Nilsson http://bit.ly/2gysl09 #FRP #Haskell

+ Demostración asistida por ordenador. ~ J.M. Aransay y C. Domínguez
  http://bit.ly/2gpsq3E #IsabelleHOL #Matemáticas

+ Analyzing programs with Z3 and Haskell. ~ T. Jelvis http://bit.ly/2gpp9RW
  #Haskell 

+ Proust: A nano proof assistant. ~ Prabhakar Ragde http://bit.ly/2g5cySU #ITP
  #Logic #Racket 

+ Course: Logic and Computation. ~ Prabhakar Ragde http://bit.ly/2g5csdP #ITP
  #Logic #Racket #Agda #Coq

+ An algebra of graphs. ~ Andrey Mokhov http://bit.ly/2g4HG9H #Haskell #Math

+ Learn Quantum Mechanics with Haskell. ~ Scott N. Walck http://bit.ly/2h16kFM
  #Haskell #Physics

+ Domain-specific languages of mathematics: presenting mathematical analysis
  using functional programming. ~ C. Ionescu http://bit.ly/2h53WQJ #Haskell
  #Math 

+ The Bricklayer Ecosystem: Art, Math, and Code. ~ V. Winter, B. Love &
  C. Corritore http://bit.ly/2gdFGY4 #Programming #Math

+ Paraconsistency in Isabelle/HOL. ~ A. Schlichtkrull & J. Villadsen
  http://bit.ly/2hdGRZM #Logic #IsabelleHOL #ITP 

+ Denotational semantics of IMP without fixed points. ~ Jeremy Siek
  http://bit.ly/2hfzxws http://bit.ly/2hfy8X2 #Coq

+ Liquid Haskell: Haskell as a theorem prover. ~ Niki Vazou
  http://bit.ly/2hfvUHc #PhD_Thesis #Haskell 

+ A formal proof of a Unix path resolution algorithm. ~ R. Chen, M. Clochard,
  C. Marche http://bit.ly/2gvffAw #ITP #Coq 

+ Course: Computer-aided reasoning for software engineering. ~ Vijay Ganesh
  http://bit.ly/2gvcMWQ #ATP #Logic #CompSci 

+ Algoritmos voraces. ~ Carlo Frabetti http://bit.ly/2gvNYxM 

+ Twelve monads of Christmas. Day 1: IO — Our ugly friend. ~ Ben Clifford
  http://bit.ly/2gvQ3Kj #Haskell

+ Twelve monads of Christmas. Day 2: [] — Seeing the rest of a program run. ~
  Ben Clifford http://bit.ly/2heYubf #Haskell 

+ Twelve monads of Christmas. Day 3: Maybe — Mini-lists, or mini-exceptions. ~
  Ben Clifford http://bit.ly/2gvXkty #Haskell 

+ Towards verified computer algebra. ~ M. Dénès, C. Cohen, A. Mörtberg
  http://bit.ly/2gyMWB3 #Coq #Math 

+ Logic in Computer Science. ~ Thierry Coquand http://bit.ly/2hhQiXO #Logic
  #CompSci 

+ Principes des langages de programmation. ~ Eric Goubault
  http://bit.ly/2gyYqob #eBook #CompSci #OCaml

+ Plotting a weight chart using Emacs Org-Mode and Gnuplot. ~ Praveen Kumar
  http://bit.ly/2gz6zJA #Emacs #GnuPlot

+ ¡Olvida OO y a pensar funcionalmente! ~ Javier Onielfa [Vídeo]
  https://youtu.be/Q3UqTSWPZ8E #Haskell

+ Formally verified differential dynamic logic. ~ B. Bohre et
  als. http://bit.ly/2gwKojE #IsabelleHOL #Coq #Logic

+ Extensible records explained. ~ Fumiaki Kinoshita | School of Haskell
  http://bit.ly/2gwQsJd #Haskell  

+ AI in biological modelling. ~ F. Fages http://bit.ly/2gwJZOi #AI

+ DeepBach: a steerable model for Bach chorales generation. ~ G. Hadjere,
  F. Pachet http://bit.ly/2gwKmZa #AI

+ The calculus of dependent lambda eliminations. ~ A. Stump
  http://bit.ly/2hDsjp7 #Agda

+ A gentle introduction to functional programming in Haskell. ~ K.A. Lambert
  http://bit.ly/2hDvjC4 #eBook #Haskell

+ Markov processes in Isabelle/HOL. ~ J. Hölzl http://bit.ly/2hI9RM9
  #IsabelleHOL 

+ Haskell in the Datacentre: how we tuned the GHC runtime to make Haskell run
  better at scale. ~ Simon Marlow http://bit.ly/2hI2wfE

+ A fun refactoring example in Haskell. ~ Pascal Hartig http://bit.ly/2hIcaPj
  #Haskell 

+ The great A.I. awakening. ~ Gideon Lewis-Krausdec http://nyti.ms/2hLq3wn #AI

+ Normalisation by evaluation for type theory, in type theory. ~ T. Altenkirch
  & A. Kaposi http://bit.ly/2hS4lXn #Agda 

+ Efficient certified RAT verification. ~ L. Cruz-Filipe et
  als. http://bit.ly/2hYdc9U #SAT #Coq #ACL2 

+ Zeller's congruence algorithm to calculate the day of the
  week. http://bit.ly/2hYgNoF #Haskell 

+ Implementation of Bourbaki's Elements of Mathematics in Coq: Part Three
  Structures. ~ J. Grimm http://bit.ly/2hY8vND #Coq #Math 

+ Formal foundations of 3d geometry to model robot manipulators. ~ R. Affeldt &
  C. Cohen http://bit.ly/2gWlmLj #Coq #Math

+ Verification of certifying distributed programs (Case study: leader
  election). ~ S. Akili, K. Völlinger http://bit.ly/2ic8xkV #Coq

+ PureScript mediante ejemplos (Programación funcional para la Web). ~ Phil
  Freeman http://bit.ly/2idBsW3 #PureScript #eBook 

+ Mónadas. ~ Mario Román | LibreIM http://bit.ly/2idFZHW #Haskell

+ Jupyter Notebooks for the "Python Data Science Handbook". ~ Jake Vanderplas
  http://bit.ly/2h4HHq6 #Python #DataScience #eBook 

+ How to teach introductory logic to undergraduates. ~ Diary of Dr. Logic
  http://bit.ly/2h4LUK9 #Logic

+ Specification driven programming: A design pattern. (Solving the dichotomy
  between solution and test). ~ C. Kohlhepp http://bit.ly/2idUVFZ #Lisp   

+ A bird’s eye view of functional programming. ~ Brooklyn Zelenka
  http://bit.ly/2idQpY2 #FP #Haskell 

+ Music and measure theory. [Video] https://youtu.be/cyW5z-M2yzw #Math #Music

+ 8 ways to report errors in Haskell. ~ Eric Kidd http://bit.ly/2hbyyvD
  #Haskell

+ hs-logo: an interpreter for the Logo Programming Language, written in
  Haskell. http://bit.ly/2hbASDa #Haskell #Logo

+ Data frames for tabular data. ~ Anthony Cowley http://bit.ly/2hbEPI3 #Haskell

+ Reflecting on Haskell in 2016. ~ Stephen Diehl http://bit.ly/2hf1tyX
  #Haskell 

+ Formalization and assessment of Lowe’s modal ontological argument. ~
  D. Fuenmayor http://bit.ly/2isPP91 #IsabelleHOL 

+ Validating the meta-theory of programming languages with Haskell. ~
  G. Fachini http://bit.ly/2heX4MH #Haskell

+ Mutual recursion in final encoding. ~ Andreas Herrmann http://bit.ly/2hfYs1C
  #Haskell 

+ Introducing the Hamilton library. ~ Justin Le http://bit.ly/2iuvL67 #Haskell

+ Proving Stuff in Haskell. ~ Mads Buch http://bit.ly/2hg2JSA #Haskell

+ Little languages. ~ David Laing http://bit.ly/2iukEtJ #Haskell

+ Tamarin prover: a powerful tool for the symbolic modeling and analysis of
  security protocols. http://bit.ly/2iuG3mM #Haskell

+ The theory of abstract objects. ~ E. Badstübner, D. Kirchner & P. Schießl
  http://bit.ly/2isNMBI #IsabelleHOL

+ Formal verification for ASP: A case study using the PVS theorem prover. ~
  F. Aguado et als. http://bit.ly/1BRfexe #ITP #PVS #ASP 

+ Mathematical components (The Book) ~ Assia Mahboubi & Enrico Tassi
  http://bit.ly/2iyYqXI #eBook #Coq #Math

+ McCarthy Math ~ Harry Prevor http://bit.ly/2iz5Qu4 #Lisp #Python #Math

+ Proving God’s existence by automating Leibniz’ algebra of concepts. ~
  M. Bentert et als. http://bit.ly/2it2AAc #IsabelleHOL

+ Quo Vadis Program Verification. ~ Krzysztof R. Apt http://bit.ly/2iD3GJL

+ Post-Prism Data Science Venn Diagram. ~ Joel Grus http://bit.ly/2hoSBqK
  #DataScience

+ Haskell-style Fibonacci in Python. ~ Joel Grus http://bit.ly/2iEJ43L #Haskell
  #Python

+ What Python can learn from Haskell. ~ Bob Ippolito http://bit.ly/1mGh9aQ
  #Python #Haskell

+ The Zen of Python. http://bit.ly/2hoPvTI #Python

+ The Zen of Haskell. http://bit.ly/2hp4IUz #Haskell

+ How pythonic is Haskell? ~ Mike Meyer http://bit.ly/2hp5OzX #Haskell #Python

+ Haskell gets static typing right. ~ Andres Löh http://bit.ly/2hp0lsK #Haskell

+ Functional programming with Python. ~ Alexey Kachayev http://bit.ly/2hp5rp6
  #FP #Python  

+ A formalization of the Berlekamp–Zassenhaus factorization algorithm. ~
  J. Divasón et als. http://bit.ly/2hn7ud4 #IsabelleHOL #Math 

+ Elegant and efficient Python. ~ S.R. Hastings http://bit.ly/2iHmuaW #Python 

+ Computational algebra system in Haskell. ~ Hiromi Ishii http://bit.ly/2htEFf3
  #Haskell #Math 

+ The idea of Lisp. ~  Eric Normand http://bit.ly/2htOslf #Lisp

+ The next 700 safe tactic languages. ~ B. Ziliani et
  als. http://bit.ly/2hveNja #Coq

+ Computerized verification of formal reconstructions of Anselm’s argument by
  Eder and Ramharter. ~ L. Grätz & F. Schütz http://bit.ly/2it6ZTG #IsabelleHOL

+ Fiction as model theory. ~ Robin K. Hill  http://bit.ly/2hyXihQ #Logic

+ Software project maintenance is where Haskell shines. ~ Chris Done
  http://bit.ly/2iQ54c5 #Haskell

+ F-algebras or: how I learned to stop worrying and love the type system. ~
  Anthony Burzillo http://bit.ly/2iQ5orj #Haskell

+ Impressionnante liste de logiciels éducatifs libres | Thot Cursus
  http://bit.ly/2iPRhlU

+ Twelve monads of Christmas. ~ Ben Clifford http://bit.ly/2hzJ8gc #Haskell
