#+OPTIONS: ^:nil
#+TITLE: Lecturas del Grupo de Lógica Computacional

Este repositorio es una recopilación de lecturas compartidas en la lista
de correo del [[http://www.glc.us.es][grupo de lógica computacional]]. La recopilación está
ordenada por la fecha de su publicación en la lista. Al final de cada
artículo se encuentra etiquetas relativas a los sistemas que usa o a su
contenido.

* Contenido                                                             :TOC:
- [[#lecturas-del-año-2021][Lecturas del año 2021]]
  - [[#octubre-de-2021][Octubre de 2021]]
  - [[#septiembre-de-2021][Septiembre de 2021]]
  - [[#agosto-de-2021][Agosto de 2021]]
  - [[#julio-de-2021][Julio de 2021]]
  - [[#junio-de-2021][Junio de 2021]]
  - [[#mayo-de-2021][Mayo de 2021]]
  - [[#abril-de-2021][Abril de 2021]]
  - [[#marzo-de-2021][Marzo de 2021]]
  - [[#febrero-de-2021][Febrero de 2021]]
  - [[#enero-de-2021][Enero de 2021]]
- [[#lecturas-anteriores][Lecturas anteriores]]

* Lecturas del año 2021

** Octubre de 2021

*** 11-Oct-21
+ [[https://youtu.be/GfrBViUdWoA][Haskelling in Hackerrank!!: Episode 1: Competitive coding]].  #Haskell #FunctionalProgramming
+ [[https://youtu.be/GfrBViUdWoA][Haskelling in Hackerrank!!: Episode 2: Mini-Max Sum]].  #Haskell #FunctionalProgramming

*** 10-Oct-21
+ [[http://ceur-ws.org/Vol-2970/meepaper1.pdf][Logic programming for XAI: A technical perspective]]. ~ Laura State. #LogicProgramming #AI #XAI
+ [[https://arxiv.org/abs/2110.00789][Kernels and small quasi-kernels in digraphs]]. ~ Allan van Hulst. #ITP #Coq #Math
+ [[https://www.ps.uni-saarland.de/~koch/bachelor/thesis.pdf][Mechanizing second-order logic in Coq]]. ~ Mark Koch. #BSc_Thesis #ITP #Coq #Logic #Math

*** 08-Oct-21
+ [[https://arxiv.org/abs/2110.03551][Formalizing geometric algebra in Lean]]. ~ Eric Wieser, Utensil Song. #ITP #LeanProver #Math
+ [[https://youtu.be/NbXkhPmUvug][Introduction to University Mathematics 2021: Logic in Lean, video 2 (true, false, not)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://vitez.me/tuple-prelude][Tuple Prelude]]. ~ Mitchell Vitez. #Haskell #FunctionalProgramming

*** 07-Oct-21
+ [[https://es.cs.uni-kl.de/publications/datarsg/Kock21.pdf][An overview of functional reactive programming]]. ~ F. Kockelke. #FunctionalProgramming #Haskell

*** 05-Oct-21
+ [[https://www.isa-afp.org/entries/FOL_Axiomatic.html][Soundness and completeness of an axiomatic system for first-order logic (in Isabelle/HOL)]]. ~ Asta Halkjær From. #ITP #IsabelleHOL #Logic #Math
+ [[https://www.duo.uio.no/bitstream/handle/10852/88548/R-mming_thesis.pdf][Learning to reason]]. ~ Fredrik Rømming. #Logic #ATP #MachineLearning
+ [[https://youtu.be/kTQZiyniYYI][Logic in Lean, video 1]]. ~ Kevin Buzzard. #ITP #LeanProver #Logic

*** 03-Oct-21
+ [[https://leanprover-community.github.io/mathlib_stats.html][Mathlib statistics]]. #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/statistics.html][Isabelle's AFP statistics]]. #ITP #IsabelleHOL #Math

*** 02-Oct-21
+ [[https://leanprover-community.github.io/blog/posts/month-in-mathlib-sep-2021/][This month in mathlib (Sep 2021)]]. ~ Mathlib community. #ITP #LeanProver #Math
+ [[https://linuxplumbersconf.org/event/11/contributions/1036/attachments/860/1666/Polat_2021_Testing-the-Red-Black-Tree-Implementation-of-the-Linux-Kernel-against-a-Formally-Verified-Variant.pdf][Testing the Red-Black tree implementation of the Linux kernel against a formally verified variant]]. ~ Mete Polat. #ITP #IsabelleHOL
+ [[https://dl.acm.org/doi/pdf/10.1145/3477041][Verified Lustre normalization with node subsampling]]. ~ Timothy Bourke, Paul Jeanmaire, Basile Pesin, Marc Pouzet. #ITP #Coq

*** 01-Oct-21
+ [[https://github.com/Agnishom/lattice-mtl][A verified online monitor for metric temporal logic with quantitative semantics]]. ~ Agnishom Chattopadhyay. #ITP #Coq
+ [[https://youtu.be/fNpsgTIpODA][How to market Haskell to a mainstream programmer]]. ~ Gabriella Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming
+ [[http://h2.jaguarpaw.co.uk/posts/nested-strict-data/][Nested strict data in Haskell]]. ~ Tom Ellis. #Haskell #FunctionalProgramming

** Septiembre de 2021

*** 30-Sep-21
+ [[http://cambium.inria.fr/~fpottier/publis/moine-chargueraud-pottier-transient.pdf][Specification and verification of a transient stack]]. ~ A. Moine, A. Charguéraud, F. Pottier. #ITP #Coq
+ [[https://arxiv.org/abs/2109.14534][A verified algebraic representation of Cairo program execution]]. ~ Jeremy Avigad, Lior Goldberg, David Levit, Yoav Seginer, Alon Titleman. #ITP #LeanProver
+ [[https://www.jameskoppel.com/files/papers/phd_dissertation.pdf][Meta-metaprogramming]]. ~ James Koppel. #PhD_Thesis #Haskell #FunctionalProgramming
+ [[https://www.imo.universite-paris-saclay.fr/~pmassot/enseignement/poly_alg.pdf][Structures algébriques fondamentales (Définitions, constructions et propriétés universelles)]]. ~ Patrick Massot. #eBook #Math
+ [[https://willcrichton.net/nota/][A new medium for communicating research on programming languages]]. ~ Will Crichton. #CompSci
+ [[https://laurentrdc.xyz/posts/existential.html][Can you make heterogeneous lists in Haskell? Sure — as long your intent is clear]]. ~ Laurent P. René de Cotret. #Haskell #FunctionalProgramming

*** 29-Sep-21
+ [[https://magnus.therning.org/2021-09-28-using-lens-to-set-a-value-based-on-another.html][Using lens to set a value based on another]]. ~ Magnus Therning. #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/typed-template-haskell-overview][A short overview of typed template Haskell]]. ~ Heitor Toledo Lassarote de Paula. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2109.13500][Not another computer algebra system: Highlighting wxMaxima in calculus]]. ~ N. Karjanto, H. S. Husain. #CAS #Math

*** 28-Sep-21
+ [[https://repositories.lib.utexas.edu/bitstream/handle/2152/88056/TEMEL-DISSERTATION-2021.pdf][Automated, efficient, and sound verification of integer multipliers]]. ~ Mertcan Temel. #PhD_Thesis #ITP #ACL2
+ [[https://luctielen.com/posts/making_llvm_gep_safer_in_haskell/][Making LLVM GEP safer in Haskell]]. ~ Luc Tielen (@luctielen). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2109.12755][Abstraction, reasoning and deep learning: A Study of the "Look and Say" sequence]]. ~ Wlodek W. Zadrozny. #AI #MachineLearning #Math
+ [[https://junjizhi.com/all/experience/2021/09/19/emacs-systems-thinking/][Use Emacs for systems thinking]]. ~ Junji Zhi. #Emacs #OrgMode

*** 27-Sep-21
+ [[https://leanprover-community.github.io/blog/posts/the-radon-nikodym-theorem-in-lean/][The Radon-Nikodym theorem in Lean]]. ~ Kexing Ying. #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/Weighted_Path_Order.html][A formalization of weighted path orders and recursive path orders (in Isabelle/HOL)]]. ~ Christian Sternagel, René Thiemann. #ITP #IsabelleHOL
+ [[https://boris-marinov.github.io/category-theory-illustrated/05_logic/][Category theory ilustrated: Logic]]. ~ Boris Marinov (@AlexanderKatt). #CategoryTheory #Logic #Math

*** 26-Sep-21
+ [[https://www.extrema.is/articles/haskell-books/what-the-industrial-coder-misses][What the industrial coder misses]]. ~ Zoltán Tóth. #eBook #Haskell #FunctionalProgramming
+ [[https://github.com/leanprover-community/mathlib/wiki/Big-missing-undergraduate-theorems][Big missing undergraduate theorems (in Lean mathlib)]]. ~ Patrick Massot. #ITP #LeanProver #Math

*** 25-Sep-21
+ [[https://www.cs.bham.ac.uk/~axj/ccc2021/abstracts/CCC_2021_paper_10.pdf][A certified library of ordinal arithmetic]]. ~ Nicolai Kraus, Fredrik Nordvall Forsberg, Chuangjie Xu. #ITP #Agda #Logic #Math #SetTheory
+ [[https://revistas.pucsp.br/index.php/circumhc/article/view/55033][How AI can be surprisingly dangerous for the philosophy of mathematics and of science]]. ~ Walter Carnielli. #AI #MachineLearning #Math #ITP
+ [[https://odr.chalmers.se/bitstream/20.500.12380/304169/1/CSE%2021-31%20Group%2061.pdf][A functional quantum programming language]]. ~ Matilda Blomqvist et als. #Haskell #FunctionalProgramming

*** 24-Sep-21
+ [[https://mathai-iclr.github.io/papers/papers/MATHAI_3_paper.pdf][Beyond the tactic-state automaton]]. ~ Daniel Selsam. #ITP #LeanProver #MachineLearning
+ [[https://youtu.be/tbz6cdnFyPc][Presentation by Jeremy Avigad at the opening of the Hoskinson Center for Formal Mathematics at CMU]]. ~ Jeremy Avigad. #ITP #LeanProver #Math
+ [[https://www.researchgate.net/publication/354542199_Conflict-Driven_Satisfiability_for_Theory_Combination_Lemmas_Modules_and_Proofs][Conflict-driven satisfiability for theory combination: Lemmas, modules, and proofs]]. ~ Maria Paola Bonacina, Stéphane Graham-Lengrand, Natarajan Shankar. #ATP #Logic
+ [[https://hbr.github.io/Lambda-Calculus/lambda1/untyped_lambda.pdf][Lambda calculus - Step by step]]. ~ Helmut Brandl. #LambdaCalculus
+ [[https://byorgey.wordpress.com/2021/09/23/swarm-preview-and-call-for-collaboration/][A new programming game, Swarm]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming #Game
+ [[https://github.com/byorgey/swarm][Swarm: a 2D programming and resource gathering game]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming #Game
+ [[https://www.tweag.io/blog/2021-09-23-funflow2-intro/][Functional data pipelines with funflow2]]. ~ Dorran Howell, Guillaume Desforges, Vince Reuter. #Haskell #FunctionalProgramming #DataScience

*** 23-Sep-21
+ [[https://www.andrew.cmu.edu/user/avigad/Talks/hoskinson_inaugural.pdf][The promise of formal mathematics]]. ~ Jeremy Avigad. #ITP #LeanProver #Math
+ [[https://escholarship.org/content/qt2g73d7qv/qt2g73d7qv_noSplash_3bfa3e4d313d996081476f109a2ad825.pdf][Voting theory in the Lean theorem prover]]. ~ Wesley H. Holliday, Chase Norman, Eric Pacuit. #ITP #LeanProver #Math
+ [[https://flint.cs.yale.edu/flint/publications/ado-tr.pdf][Much ADO about failures: A fault-aware model for compositional verification of strongly consistent distributed systems]]. ~ W. Honoré, J. Kim, J.Y. Shin, Z. Shao. #ITP #Coq
+ [[https://www.researchgate.net/publication/354765192_Introduccion_a_la_programacion_funcional_usando_Haskell_y_Agda][Introducción a la programación funcional usando Haskell y Agda]]. ~ Camilo Chacón Sartori (@camilo_chacon_s). #ProgramaciónFuncional #Haskell #Agda
+ [[https://arxiv.org/abs/2109.10317][Introduction to neural network verification]]. ~ Aws Albarghouthi. #eBook #NeuralNetwork #MachineLearning #Logic
+ [[https://cacm.acm.org/magazines/2021/10/255716-trustworthy-ai/fulltext][Trustworthy AI]]. ~ Jeannette M. Wing. #AI #FormalMethods
+ [[https://cacm.acm.org/magazines/2021/10/255711-ai-futures/fulltext][AI futures: Fact and fantasy]]. ~ Devdatt Dubhashi. #AI
+ [[https://bit.ly/3u6I7Da][La inteligencia artificial y la solución de problemas]]. ~ Juan Arias de Reyna. #IA #Matemáticas
+ [[https://youtu.be/jWtPimYNA9Q][Online course on Category theory: 4. Adjoint functors]]. ~ Richard E. Borcherds. #CategoryTheory
+ [[http://videoarxiv.org/][VideoArxiv: a searchable repository of links to math videos]]. #Math

*** 22-Sep-21
+ [[https://buttondown.email/hillelwayne/archive/there-was-no-formal-methods-winter/][There was no formal methods winter]]. ~ Hillel Wayne (@hillelogram). #FormalMethods via @LogicPractice
+ [[https://arxiv.org/abs/2104.02549][Connecting constructive notions of ordinals in homotopy type theory]]. ~ Nicolai Kraus, Fredrik Nordvall Forsberg, Chuangjie Xu. #ITP #Agda #Logic #Math #HoTT
+ [[https://byorgey.wordpress.com/2021/09/21/competitive-programming-in-haskell-codeforces-educational-round-114/][Competitive programming in Haskell: Codeforces Educational Round 114]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://unimath.github.io/SymmetryBook/book.pdf][Symmetry]]. ~ Marc Bezem, Ulrik Buchholtz, Pierre Cagne, Bjørn Ian Dundas, Daniel R. Grayson. #eBook #Univalent_mathematics
+ [[https://www.gaussianos.com/primos-que-generan-primos-el-teorema-de-scherk/][Primos que generan primos: el teorema de Scherk]]. ~ M.A. Morales (@gaussianos). #Matemáticas
+ [[https://youtu.be/JOp7mH72Jlg][Online course on Category theory: 1]]. Introduction. ~ Richard E. Borcherds. #CategoryTheory
+ [[https://youtu.be/6jrQjoM8b9s][Online course on Category theory: 2]]. Functors. ~ Richard E. Borcherds. #CategoryTheory
+ [[https://youtu.be/YLZuamSNLvc][Online course on Category theory: 3]]. Natural transformations. ~ Richard E. Borcherds. #CategoryTheory

*** 21-Sep-21
+ [[http://leanprover.github.io/papers/lean4.pdf][The Lean 4 theorem prover and programming language (System description)]]. ~ Leonardo de Moura, Sebastian Ullrich. #ITP #LeanProver
+ [[https://leanprover-community.github.io/blog/posts/continuous-partitions-of-unity/][Continuous partitions of unity (in Lean)]]. ~ Patrick Massot. #ITP #LeanProver #Math
+ [[https://lean-forward.github.io/pubs/konovalova_bsc_thesis.pdf][Verifying AVL trees in Lean]]. ~ Sofia Konovalova. #ITP #LeanProver #Algorithms
+ [[https://www.cjquines.com/files/typetheory.pdf][Type theory by example]]. ~ Carl Joshua Quines. #TypeTheory #Logic #CompSci

*** 20-Sep-21
+ [[https://bor0.wordpress.com/2021/09/20/closed-expression-of-a-sum-with-proof-in-coq/][Closed-expression of a sum with proof in Coq]]. ~ Boro Sitnikovski (@BSitnikovski).  #ITP #Coq #Math
+ [[http://www.andrew.cmu.edu/user/avigad/Papers/verified_optimization_wip_paper.pd][Verified optimization (work in progress)]]. ~ Alexander Bentkamp, Jeremy Avigad.f#ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/Complex_Bounded_Operators.html][Complex bounded operators in Isabelle/HOL]]. ~ José Manuel Rodríguez Caballero, Dominique Unruh. #ITP #IsabelleHOL #Math
+ [[https://soupi.github.io/learn-haskell-blog-generator/][Learning Haskell by building a static blog generator]]. ~ Gil Mizrahi (@_gilmi). #eBook #Haskell #FunctionalProgramming

*** 18-Sep-21
+ [[https://byorgey.wordpress.com/2021/09/17/automatically-updated-cached-views-with-lens/][Automatically updated, cached views with lens]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://odr.chalmers.se/bitstream/20.500.12380/304114/1/CSE%2021-17%20Group%2016.pdf][Proof editor for natural deduction]]. ~ Freddy Abrahamsson, Therese Andersson, Axel Forsman, Lo Ranta, Michael Åkesson. #BSc_Thesis #Logic #PureScript #FunctionalProgramming
+ [[https://proofs.openlogicproject.org/][Natural deduction proof editor and checker]]. #Logic #PureScript #FunctionalProgramming
+ [[https://lamassr.github.io/papers/Existence-Nash.pdf][Existence of Nash equilibria in 2-player simultaneous games and priority games proven in Isabelle]]. ~ S Le Roux, É Martin-Dorel, JG Smaus. #ITP #IsabelleHOL #Math
+ [[https://lamassr.github.io/papers/Formalized-Soundness.pdf][Formalized soundness and completeness of epistemic logic]]. ~ AH From, AB Jensen, J Villadsen. #ITP #IsabelleHOL #Logic

*** 17-Sep-21
+ [[https://jmtd.net/log/ghc_rewrite_rules/][GHC rewrite rules]]. ~ Jonathan Dowland. #Haskell #FunctionalProgramming
+ [[https://blog.kalvad.com/haskell-series-part-4/][Haskell series part 4 (This is the fourth article of a series on the functional language Haskell for beginners)]]. ~ Pierre Guillemot. #Haskell #FunctionalProgramming

*** 16-Sep-21
+ [[https://www.cs.ru.nl/bachelors-theses/2021/Michiel_Philipse___1016359___Distributed_Knowledge_Proofs_in_the_Coq_Proof_Assistant.pdf][Distributed knowledge proofs in the Coq proof assistant]]. ~ Michiel Philipse #BSc_Thesis #ITP #Coq
+ [[https://github.com/UniMath/UniMath][Univalent Mathematics: This Coq library aims to formalize a substantial body of mathematics using the univalent point of view]]. #ITP #Coq #Math

*** 15-Sep-21
+ [[https://www.scientificamerican.com/article/infinity-category-theory-offers-a-birds-eye-view-of-mathematics/][Infinity category theory offers a bird’s-eye view of mathematics]]. ~ Emily Riehl. #Math #CategoryTheory
+ [[https://arxiv.org/abs/2109.06258][Unprovability in mathematics: A first course on ordinal analysis]]. ~ Anton Freund. #Logic #Math

*** 14-Sep-21
+ [[http://aitp-conference.org/2021/abstract/paper_17.pdf][LISA: Language models of ISAbelle proofs]]. ~ Albert Q. Jiang, Wenda Li, Jesse M. Han, Yuhuai Wu. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/CZH_Foundations.html ~ Mihails Milehins.][Category theory for ZFC in HOL I: Foundations: Design patterns, set theory, digraphs, semicategories]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/CZH_Elementary_Categories.html ~ Mihails Milehins.][Category theory for ZFC in HOL II: Elementary theory of 1-categories]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/CZH_Universal_Constructions.html ~ Mihails Milehins.][Category theory for ZFC in HOL III: Universal constructions]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Types_To_Sets_Extension.html ~ Mihails Milehins.][Extension of types-to-sets]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Intro_Dest_Elim.html ~ Mihails Milehins.][IDE: Introduction, destruction, elimination]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Conditional_Transfer_Rule.html ~ Mihails Milehins.][Conditional transfer rule]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Conditional_Simplification.html ~ Mihails Milehins.][Conditional simplification]]. #ITP #IsabelleHOL #Math
+ [[https://drimyswinteri.ml/esteblog.html][Como está hecho este blog]]. #Emacs #OrgMode
+ [[http://mbork.pl/2021-09-06_My_experience_with_book_writing][My experience with book writing]]. ~ Marcin Borkowski (@marcin_mbork). #Emacs #OrgMode #Elisp
+ [[https://ruor.uottawa.ca/bitstream/10393/42643/4/Bahrami_Abdorrahim_2021_thesis.pdf][Modelling and verifying dynamic properties of neuronal networks in Coq]]. ~ Abdorrahim Bahrami. #PhDThesis #ITP #Coq #NeuralNetwork
+ [[https://readerunner.wordpress.com/2021/09/13/diagrams-for-penrose-tiles/][Penrose kite and dart tilings with Haskell Diagrams]]. ~ Chris Reade. #Haskell #FunctionalProgramming #Math

*** 13-Sep-21
+ [[http://aitp-conference.org/2021/abstract/paper_3.pdf][Mining counterexamples for wide-signature algebras with an Isabelle server]]. ~ Boris Shminke, Wesley Fussner. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2109.02806v1][Symbolic computation in software science: My personal view]]. ~ Bruno Buchberger. #CompSci
+ [[https://arxiv.org/abs/2109.04886][Proceedings 18th International Conference on Quantum Physics and Logic]]. #Logic #Math #Physics

*** 12-Sep-21
+ [[https://github.com/leanprover-community/mathlib/blob/56a59d3eaf3f1fad38fd3742831729bfd6d1a1dd/src/data/polynomial/hasse_deriv.lean][Hasse derivative of polynomials (in Lean)]].~ Johan Commelin. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/3e10324f686c8d895f97e4160a8ff796adaabdd4/src/data/polynomial/taylor.lean][Taylor expansions of polynomials (in Lean)]]. ~ Johan Commelin. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2109.01362][A survey of practical formal methods for security]]. ~ Tomas Kulik et als. #FormalMethods

*** 11-Sep-21
+ [[https://link.springer.com/article/10.1007/s10817-021-09599-8][Distilling the requirements of Gödel’s incompleteness theorems with a proof assistant]]. ~ Andrei Popescu, Dmitriy Traytel. #ITP #IsabelleHOL #Logic #Math
+ [[http://jssst.or.jp/files/user/taikai/2021/papers/9-L.pdf][GSOL: A confluence checker for Haskell rewrite rules]]. ~ Yao Faustin Date Makoto Hamana. #Haskell #FunctionalProgramming
+ [[https://taylor.fausak.me/2021/09/10/evoke/][Announcing Evoke, a GHC plugin for deriving type class instances quickly]]. ~ Taylor Fausak (@taylorfausak). #Haskell #FunctionalProgramming
+ [[https://www.parsonsmatt.org/2021/09/09/deferred_derivation.html][Deferred derivation]]. ~ Matt Parsons (@mattoflambda). #Haskell #FunctionalProgramming
+ [[https://inside.mines.edu/~ndantam/csci-561/L02-lisp-prelecture.pdf][Symbolic computation and Common Lisp]]. ~ Neil T. Dantam. #CommonLisp
+ [[https://www.quantamagazine.org/new-math-book-rescues-landmark-topology-proof-20210909/][New math book rescues landmark topology proof]]. ~ Kevin Hartnett (@KSHartnett). #Math

*** 10-Sep-21
+ [[https://byorgey.wordpress.com/2021/09/08/implementing-hindley-milner-with-the-unification-fd-library/][Implementing Hindley-Milner with the unification-fd library]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://rebeccaskinner.net/posts/2021-08-25-introduction-to-type-level-programming.html][An introduction to type level programming]]. ~ Rebecca Skinner. #Haskell #FunctionalProgramming
+ [[https://bartoszmilewski.com/2021/09/08/optics-for-the-working-mathematician/][Optics for the working mathematician]]. ~ Bartosz Milewski (@BartoszMilewski). #CategoryTheory
+ [[https://oleg.fi/gists/posts/2021-09-09-leibniz-coercion.html][Leibniz coercion]]. ~ Oleg Grenrus (@phadej). #Haskell #FunctionalProgramming

*** 09-Sep-21
+ [[https://arxiv.org/abs/2109.03234][Learned provability likelihood for tactical search]]. ~ Thibault Gauthier. #ITP #HOL4 #MachineLearning
+ [[https://arxiv.org/abs/2109.03721][Conjectures, tests and proofs: An overview of theory exploration]]. ~ Moa Johansson, Nicholas Smallbone. #Haskell #FunctionalProgramming
+ [[https://gitlab.homotopic.tech/haskell/conic-graphs][Vinyl-style extensible graphs]]. ~ Daniel Firth. #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2021/09/optics-are-monoids.html?m=1][Optics are monoids]]. ~ Gabriella Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming
+ [[https://byorgey.wordpress.com/2021/09/09/competitive-programming-in-haskell-kadanes-algorithm/][Competitive programming in Haskell: Kadane’s algorithm]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://ryanglscott.github.io/2021/09/06/leibniz-equality-in-haskell-part-2-heterogeneous-equality/][Leibniz equality in Haskell, part 2: heterogeneous equality]]. ~ Ryan Scott. #Haskell #FunctionalProgramming
+ [[https://kleczkow.ski/cayley-representation-of-monads/][Cayley representation of ... monads?]] ~ Konrad Kleczkowski. #Haskell #FunctionalProgramming

*** 08-Sep-21
+ [[https://www.isa-afp.org/entries/Dominance_CHK.html][A data flow analysis algorithm for computing dominators (in Isabelle/HOL)]]. ~ Nan Jiang. #ITP #IsabelleHOL
+ [[https://www.coalg.org/calco-mfps2021/files/2021/08/Veltri-Voorneveld.pdf][Inductive and coinductive predicate liftings for effectful programs]]. ~ Niccolò Veltri, Niels Voorneveld. #ITP #Agda
+ [[https://tarmean.github.io/mutable_lenses][Mutating lenses]]. ~ Tarmean. #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/how-dependent-haskell-can-improve-industry-projects][How dependent Haskell can improve industry projects]]. ~ Danya Rogozin, Vladislav Zavialov. #Haskell #FunctionalProgramming

*** 07-Sep-21
+ [[https://vtss.doc.ic.ac.uk/publications/Watt2021Two.pdf][Two mechanisations of WebAssembly 1]].0. ~ Conrad Watt, Xiaojia Rao, Jean Pichon-Pharabod, Martin Bodin, Philippa Gardner. #ITP #IsabelleHOL #Coq
+ [[https://arxiv.org/abs/2109.01121][A reasoning engine for the gamification of loop-invariant discovery]]. ~ Andrew Walter, Seth Cooper, Panagiotis Manolios. #ATP #ACL2 #Program_verification
+ [[http://cliplab.org/proglog/][Course: Logic Programming (2020-2021)]]. ~ Manuel Hermenegildo et als. #LogicProgramming #Prolog

*** 06-Sep-21
+ [[https://www.isa-afp.org/entries/Schutz_Spacetime.html][Schutz' independent axioms for Minkowski spacetime (in Isabelle/HOL)]]. Richard Schmoetten, Jake Palmer, Jacques Fleuriot. #ITP #IsabelleHOL #Math
+ [[https://github.com/leanprover-community/mathlib/blob/0a94b29f2296d00526724640d204f9222ec265eb/src/data/nat/choose/vandermonde.lean][Vandermonde's identity (in Lean)]]. ~ Johan Commelin. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2109.01483][A survey of the proof-theoretic foundations of logic programming]]. ~ Dale Miller. #LogicProgramming

*** 05-Sep-21
+ [[https://dev.to/viglioni/creating-haskell-notebooks-with-org-mode-4h7][Creating Haskell notebooks with org-mode]]. ~ Laura Viglioni (@LauraViglioni). #Emacs #OrgMode #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2108.13114][Embedded pattern matching]]. ~ Trevor L. McDonell, Joshua D. Meredith, Gabriele Keller. #Haskell #FuncionalProgramming

*** 04-Sep-21
+ [[https://www.researchgate.net/profile/Giancarlo-Guizzardi-2/publication/354150631_On_the_Role_of_Automated_Proof-Assistants_in_the_Formalization_of_Upper_Ontologies/links/6127b2fd2b40ec7d8bc8321e/On-the-Role-of-Automated-Proof-Assistants-in-the-Formalization-of-Upper-Ontologies.pdf][On the role of automated proof-assistants in the formalization of upper ontologies]]. ~ João R. M. Nicola, Giancarlo Guizzardi. #ITP #IsabelleHOL
+ [[https://youtu.be/U5i2VQj5jPk][Programming with proofs]]. ~ Thorsten Altenkirch. #ITP #Agda #FunctionalProgramming
+ [[http://philsci-archive.pitt.edu/19508/1/language_archive.pdf][The design of mathematical language]]. ~ Jeremy Avigad. #Logic #Math
+ [[https://abby.how/posts/parsing-layout.html][Parsing layout, or: Haskell's syntax is a mess]]. ~ Abigail (@plt_abbie). #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/functional-programming-in-fintech][Why fintech companies use Haskell]]. ~ Roman Alterman. #Haskell #FunctionalProgramming
+ [[https://bartoszmilewski.com/2021/09/04/dependent-optics/][Dependent optics]]. ~ Bartosz Milewski (@BartoszMilewski). #FunctionalProgramming #CategoryTheory

*** 03-Sep-21
+ [[https://www.isa-afp.org/entries/Cubic_Quartic_Equations.html][Solving cubic and quartic equations (in Isabelle/HOL)]]. ~ René Thiemann. #ITP #IsabelleHOL #Math
+ [[https://www.parsonsmatt.org/2021/09/02/family_values.html][Family values]]. ~ Matt Parsons (@mattoflambda). #Haskell #FunctionalProgramming

*** 02-Sep-21
+ [[http://www.andreas-lochbihler.de/pub/lochbihler-mfmc.pdf][A mechanized proof of the max-flow min-cut theorem for countable networks with applications to probability theory]]. ~ Andreas Lochbihler. #ITP #IsabelleHOL #Math
+ [[https://sciendo.com/pdf/10.2478/forma-2021-0002][Inverse function theorem]]. Part I. ~ K. Nakasho, Y. Futa. #ITP #Mizar #Math
+ [[https://sciendo.com/pdf/10.2478/forma-2021-0006][Elementary number theory problems]]. Part II. ~ A. Korniłowicz, D. Surowik. #ITP #Mizar #Math
+ [[https://sciendo.com/pdf/10.2478/forma-2021-0001][Derivation of commutative rings and the Leibniz formula for power of derivation]]. ~ Y. Watase, S. Matsunoki. #ITP #Mizar #Math
+ [[https://sciendo.com/pdf/10.2478/forma-2021-0004][Algebraic extensions]]. ~ C. Schwarzweller, A. Rowińska-Schwarzweller. #ITP #Mizar #Mat #ITP #Mizar #Math
+ [[https://sciendo.com/pdf/10.2478/forma-2021-0003][Miscellaneous graph preliminaries]]. Part I. ~ S. Koch. #ITP #Mizar #Math
+ [[https://arxiv.org/abs/2109.00110][MiniF2F: a cross-system benchmark for formal Olympiad-level mathematics]]. ~ Kunhao Zheng, Jesse Michael Han, Stanislas Polu. #ITP #LeanProver #IsabelleHOL #Metamath #Math
+ [[https://leanprover.github.io/theorem_proving_in_lean4/][Theorem proving in Lean 4]].  #ITP #LeanProver
+ [[https://youtu.be/11QrZa6wlhw][From Euclid to Hilbert to Lean]]. ~ Tianchen Zhao. #ITP #LeanProver #Math
+ [[https://youtu.be/8hk-IO0-Zcg][Formalising nilpotent groups in Lean]]. ~ Ines Wright. #ITP #LeanProver #Math
+ [[https://youtu.be/HajwhhUyXxE][Formalising the fundamental group]]. ~ Shing Tak Lam. #ITP #LeanProver #Math
+ [[https://youtu.be/QyIrjY3ntuY][Proving Dedekind's Theorem in Lean]]. ~ Paul Lezeau. #ITP #LeanProver #Math
+ [[https://youtu.be/Xhe3IR-HSoo][Formalizing Thomae's function in Lean]]. ~ Frick Hazard. #ITP #LeanProver #Math
+ [[https://youtu.be/ZaT_ciXoc40][Ax-Grothendieck theorem in Lean]]. ~ Joseph Hua. #ITP #LeanProver #Math
+ [[https://youtu.be/pq3uc8xkTcE][Conformal maps, Liouville's theorem and random stuffs in Lean]]. ~ Yourong Zang. #ITP #LeanProver #Math
+ [[https://youtu.be/jtxysgZL8Jk][Probability in Lean: a new begnining]]. ~ Kexing Ying. #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/Design_Theory.html][Combinatorial design theory in Isabelle/HOL]]. ~ Chelsea Edmonds, Lawrence Paulson. #ITP #IsabelleHOL

*** 01-Sep-21
+ [[http://www-verimag.imag.fr/~boulme/boulme_hdr.pdf][Formally verified defensive programming (efficient Coq-verified computations from untrusted ML oracles)]]. ~ Sylvain Boulmé. #ITP #Coq #OCaml #FunctionalProgramming
+ [[https://www.isa-afp.org/entries/Three_Circles.html][The theorem of three circles (in Isabelle/HOL)]]. ~ Fox Thomson, Wenda Li #ITP #IsabelleHOL #Math
+ [[https://serokell.io/blog/dependency-analysis-haskell][Dependency analysis of Haskell declarations]]. ~ Artem Kuznetsov. #Haskell #FunctionalProgramming

** Agosto de 2021

*** 31-Ago-21
+ [[https://bit.ly/3DxZPnp][New Software Foundations release]]. ~ Benjamin C. Pierce et als. #ITP #Coq
+ [[https://arxiv.org/abs/2108.04194][Modal logic S5 satisfiability in answer set programming]]. ~ Mario Alviano,a Sotiris Batsakis, George Baryannis. #Logic #ASP #LogicProgramming
+ [[https://raw.githubusercontent.com/BartoszMilewski/Publications/master/TheDaoOfFP/DaoFP.pdf][The Dao of Functional Programming (Last updated: August 30, 2021)]]. ~ Bartosz Milewski (@BartoszMilewski). #Haskell #FunctionalProgramming #CategoryTheory
+ [[https://youtube.com/playlist?list=PLyrlk8Xaylp6_QTmXGuRe3lShaRGaMtgc][HIW (The Haskell Implementors’ Workshop) 2021 videos]]. #Haskell #FunctionalProgramming
+ [[https://www.ppig.org/files/2021-PPIG-32nd-tavante.pdf][A data-centered user study for proof assistant tools]]. ~ Hanneli C.A. Tavante. #ITP #Coq#LeanProver
+ [[https://arxiv.org/abs/2108.11155][Latent effects for reusable language components: Extended version]]. ~ Birthe van den Berg, Tom Schrijvers, Casper Bach-Poulsen, Nicolas Wu. #Haskell #FunctionalProgramming
+ [[https://www.cs.kent.ac.uk/people/staff/dao7/publ/timo-hope21.pdf][Formalising algebraic effects with non-recoverable failure]]. ~ Timotej Tomandl, Dominic Orchard. #Haskell #FunctionalProgramming
+ [[https://www.researchgate.net/profile/Mertcan-Temel/publication/354010466_Sound_and_Automated_Verification_of_Real-World_RTL_Multipliers/links/611ed85f169a1a01031224fd/Sound-and-Automated-Verification-of-Real-World-RTL-Multipliers.pdf][Sound and automated verification of real-world RTL multipliers]]. ~ Mertcan Temel, Warren A. Hunt Jr. #ITP #ACL2

*** 30-Ago-21
+ [[https://arxiv.org/abs/2108.12301][Computer algebra in Julia]]. ~ Dmitry S. Kulyabov, Anna V. Korolkova. #CAS #JuliaLang #Math
+ [[https://youtu.be/GhkoPskC3eY][Dijkstra: O homem que tornou a computação uma ciência]]. ~ Adriano Santos (@adrianolcp). #CompSci

*** 29-Ago-21
+ [[https://katyhristova.medium.com/what-is-category-theory-and-why-is-it-trendy-b94ce59fe42b][What is category theory and why is it trendy?]] ~ Katerina Hristova. #Math #CategoryTheory

*** 28-Ago-21
+ [[https://youtu.be/LwwzVpolxm8][Geometry in Lean, a report for mathematicians]]. ~ Nicolò Cavalleri, Anthony Bordg. #ITP #LeanProver #Math
+ [[https://youtu.be/qac1O4Co0IU][Formalizing the Gromov-Hausdorff space]]. ~ Sébastien Gouëzel. #ITP #LeanProver #Math

*** 27-Ago-21
+ [[https://ryanglscott.github.io/2021/08/22/leibniz-equality-in-haskell-part-1/][Leibniz equality in Haskell, part 1]]. ~ Ryan Scott. #Haskell #FunctionalProgramming
+ [[https://leanpub.com/magicalhaskell][Magical Haskell (modern functional programming and type theory in a fun and accessible way)]]. ~ Anton Antich (@aantich). #Haskell #FunctionalProgramming #eBook
+ [[https://cdsmithus.medium.com/nascent-ghc-proposal-source-rewrite-rules-and-optional-constraints-810a2f6051eb][Nascent GHC proposal: Source rewrite rules and optional constraints]]. ~ Chris Smith (@cdsmithus). #Haskell #FunctionalProgramming
+ [[https://cacm.acm.org/news/255113-life-as-a-logician/fulltext][Life as a logician (An interview with Martin Davis by Allyn Jackson)]]. #Logic #Math #CompSci #AI #MachineLearning

*** 26-Ago-21
+ [[https://youtu.be/8P-X8YgsCZ0][Une idée assez folle, l'Intelligence Artificielle ]]... (un film sur le parcours d'Alain Colmerauer). #AI #LogicProgramming #Prolog

*** 25-Ago-21
+ [[https://arxiv.org/abs/2108.10868][Towards formalising Schutz' axioms for Minkowski spacetime in Isabelle/HOL]]. ~ Richard Schmoetten, Jake E. Palmer, Jacques D. Fleuriot. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2108.10700][Scalar actions in Lean's mathlib]]. ~ Eric Wieser. #ITP #LeanProver #Math
+ [[https://cacm.acm.org/magazines/2021/9/255036-ai-ethics/fulltext][AI ethics: A call to faculty]]. ~ Illah Reza Nourbakhsh. #AI

*** 24-Ago-21
+ [[https://github.com/leanprover-community/mathlib/blob/c811dd774f9590e9106c0780ea0983c60b659c78/src/data/nat/mul_ind.lean][Multiplicative induction principles for ℕ]]. ~ Eric Rodriguez. #ITP #LeanProver #Math

*** 23-Ago-21
+ [[https://youtu.be/OCQfkhqg8Yg][Formalizing Fibonacci squares]]. ~ Harun Khan. #ITP #LeanProver #Math
+ [[https://daemons.it/posts/programacion-literaria-para-sysadminsdevops/][Programación literaria para sysadmins / devops]]. ~ drymer. #Emacs #OrgMode

*** 21-Ago-21
+ [[https://www.ijcai.org/proceedings/2021/0273.pdf][Faster smarter proof by induction in Isabelle/HOL]]. ~ Yutaka Nagashima. #ITP #IsabelleHOL
+ [[https://github.com/leanprover-community/mathlib/blob/15b1461951d8821c1354dcf01a89ce09e798965b/archive/imo/imo2006_q3.lean][Formalization in Lean of IMO 2006 Q3]]. ~ Tian Chen. #ITP #LeanProver #Math #IMO
+ [[https://arxiv.org/abs/2108.06944v1][Verifying C11-style weak memory libraries via refinement]]. ~ Sadegh Dalvandi, Brijesh Dongol. #ITP #IsabelleHOL

*** 20-Ago-21
+ [[https://youtu.be/wUUcuaegljk][The design of mathematical language]]. ~ Jeremy Avigad. #Logic #Math
+ [[https://youtu.be/-uGhuknZHJI][Verified optimization]]. ~ Alexander Bentkamp, Jeremy Avigad. #ITP #LeanProver #Math
+ [[https://youtu.be/pudd4F749tE][Automatically generalizing theorems using typeclasses]]. ~ Alexander Best. #ITP #LeanProver
+ [[https://github.com/google/formal-ml][Formal ML: A LEAN library for proving foundational results in measure theory, probability, statistics, and machine learning, based upon mathlib]]. #ITP #LeanProver #Math #MachineLearning

*** 19-Ago-21
+ [[https://github.com/RaitoBezarius/berkovich-spaces][Formalization of Ostrowski theorems in Lean theorem prover]]. ~ Ryan Lahfad†, Julien Marquet, Hadrien Barral. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2108.08079][On correctness and completeness of an n queens program]]. ~ Włodzimierz Drabent. #LogicProgramming #Prolog
+ [[https://www.microsiervos.com/archivo/ia/colisiones-matematicas-neuralhash.html][Colisiones matemáticas que muestran cómo confundir al algoritmo Neural Hash]]. ~ @Alvy. #AI #MachineLearning
+ [[https://arxiv.org/abs/2108.08009][XAI methods for neural time series classification: A brief review]]. ~ Ilija Šimić, Vedran Sabol, Eduardo Veas. #DeepLearning #XAI
+ [[https://arxiv.org/abs/2108.07804][A framework for understanding AI-induced field change: How AI technologies are legitimized and institutionalized]]. ~ Benjamin Cedric Larsen. #AI
+ [[https://books.google.es/books?id=DjM9EAAAQBAJ&lpg=PP1&pg=PP.1#v=onepage&q&f=true][A first course in Artificial Intelligence]]. ~ Osondu Oguike #eBook #AI

*** 18-Ago-21
+ [[https://www.cantorsparadise.com/machine-learning-and-the-continuum-hypothesis-87bb9bb23e90][Machine learning and the continuum hypothesis (How the unprovable concerns the unlearnable)]]. ~ Robert Passmann. #MachineLearning #Math
+ [[https://awakesecurity.com/blog/spectacle-a-language-for-writing-and-checking-formal-specifications-in-haskell/][Announcing Spectacle – A language for writing and checking formal specifications in Haskell]]. ~ Jacob Leach. #Haskell #FunctionalProgramming

*** 17-Ago-21
+ [[https://github.com/leanprover-community/mathlib/blob/53d97e1ad2b5e30eff5f9246a689ec37361f63d0/archive/oxford_invariants/2021summer/week3_p1.lean][The Oxford Invariants Puzzle Challenges (Summer 2021, Week 3, Problem 1) in Lean]]. ~ Yaël Dillies, Bhavik Mehta. #ITP #LeanProver #Math

*** 16-Ago-21
+ [[https://books.google.es/books?id=bhkSEAAAQBAJ&lpg=PP1&pg=PP1#v=onepage&q&f=true][Ideas that created the future: Classic papers of Computer Science]]. ~ Harry R. Lewis. #eBook #CompSci
+ [[https://gilmi.me/blog/post/2021/08/14/hs-core-tools][Core Haskell tools]]. ~ Gil Mizrahi (@_gilmi). #Haskell #FunctionalProgramming
+ [[https://twobithistory.org/2018/10/14/lisp.html][How Lisp became God's own programming language]]. ~ @TwoBitHistory. #Lisp #Programming
+ [[https://arxiv.org/abs/2108.06015][Natural deduction calculus for first-order logic]]. ~ Yazeed Alrubyli.  #Logic #Math

*** 14-Ago-21
+ [[https://easychair.org/publications/preprint/RDH3][Assimilating the structure of formal and informal proof]]. ~ Kensho Tsurusaki, Akiko Aizawa. #ITP #LeanProver
+ [[https://repositorio.inesctec.pt/bitstream/123456789/12455/1/P-00V-35V.pdf][Balancing the formal and the informal in user-centred design]]. ~ JC Campos, MD Harrison, P Masci. #ITP #PVS
+ [[https://arxiv.org/abs/2108.02995][Extracting functional programs from Coq, in Coq]]. ~ Danil Annenkov, Mikkel Milo, Jakob Botsch Nielsen, Bas Spitters. #ITP #Coq
+ [[https://www.cybok.org/media/downloads/Formal_Methods_for_Security_v1.0.0.pdf][Formal methods for security knowledge area]]. ~ David Basin. #FormalMethods
+ [[https://publications.waset.org/10012167/haskellfl-a-tool-for-detecting-logical-errors-in-haskell][HaskellFL: A tool for detecting logical errors in Haskell]]. ~ Vanessa Vasconcelos, Mariza A. S. Bigonha. #Haskell #FunctionalProgramming
+ [[https://cdsmithus.medium.com/abstraction-in-reflex-and-codeworld-a1b42ad36923][Abstraction in Reflex and CodeWorld]]. ~ Chris Smith (@cdsmithus). #Haskell #CodeWorld #FunctionalProgramming
+ [[https://blog.cofree.coffee/2021-08-13-that-one-cool-reader-trick/][That one cool reader trick]]. ~ Solomon. #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2021/08/namespaced-de-bruijn-indices.html][Namespaced De Bruijn indices]]. ~ Gabriella Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/1801.00631][Deep Learning: A critical appraisal]]. ~ Gary Marcus. #DeepLearning
+ [[https://github.com/conal/talk-2018-deep-learning-rebooted][A functional reboot for Deep Learning]]. ~ Conal Elliott (@conal). #DeepLearning #FunctionalProgramming #Haskell
+ [[http://conal.net/papers/language-derivatives/][Symbolic and automatic differentiation of languages]]. ~ Conal Elliott (@conal). #Agda #FunctionalProgramming

*** 13-Ago-21
+ [[https://youtu.be/alByz_LoANE][What is the point of Lean's maths library?]] ~ Kevin Buzzard. #ITP #LeanProver #Math
+ [[https://vitez.me/counting-cardinalities][Counting cardinalities]]. ~ Mitchell Vitez. #Haskell #FunctionalProgramming

*** 12-Ago-21
+ [[http://adam.chlipala.net/papers/FrapICFP21/FrapICFP21.pdf][Skipping the binder bureaucracy with mixed embeddings in a semantics course (Functional Pearl)]]. ~ Adam Chlipala. #ITP #Coq
+ [[http://www.cs.ru.nl/~wouters/Publications/HoareLogicStateMonad.pdf][The Hoare State Monad (Proof Pearl)]]. ~ Wouter Swierstra. #ITP #Coq
+ [[https://byorgey.wordpress.com/2021/08/11/competitive-programming-in-haskell-monoidal-accumulation/][Competitive programming in Haskell: monoidal accumulation]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming

*** 11-Ago-21
+ [[https://github.com/leanprover-community/mathlib/blob/master/archive/imo/imo2001_q6.lean][Formalization in Lean of IMO 2001 Q6]]. ~ Sara Díaz, Johan Commelin. #ITP #LeanProver #Math #IMO

*** 10-Ago-21
+ [[https://arxiv.org/abs/2108.01883v1][Reasoning about iteration and recursion uniformly based on big-step semantics]]. ~ Ximeng Li, Qianying Zhang, Guohui Wang, Zhiping Shi, Yong Guan. #ITP #Coq
+ [[https://academiccommons.columbia.edu/doi/10.7916/d8-3tsv-1117/download][A secure and formally verified commodity multiprocessor hypervisor]]. ~ Shih-Wei Li. #PhD_Thesis #ITP #Coq
+ [[https://github.com/leanprover-community/mathlib/blob/master/src/data/matrix/kronecker.lean][Kronecker product of matrices (in Lean)]]. ~ Filippo A. E. Nuccio, Eric Wieser. #ITP #LeanProver #Math
+ [[https://malv.in/posts/2021-01-09-depth-first-and-breadth-first-search-in-haskell.html][Depth-first and breadth-first search in Haskell]]. ~ Malvin Gattinger (@m4lvin). #Haskell #FunctionalProgramming
+ [[https://www.slideshare.net/pjschwarz/left-and-right-folds-comparison-of-a-mathematical-definition-and-a-programmatic-one-polyglot-fp-for-fun-and-profit-haskell-and-scala][Left and right folds (Comparison of a mathematical definition and a programmatic one)]]. ~ Philip Schwarz (@philip_schwarz). #Haskell #Scala #FunctionalProgramming
+ [[https://arxiv.org/abs/2108.03574][Elementary recursive algorithms]]. ~ Yiannis N. Moschovakis. #Algorithms #Logic #Math #CompSci

*** 09-Ago-21
+ [[https://arxiv.org/abs/2108.02995][Extracting functional programs from Coq, in Coq]]. ~ Danil Annenkov, Mikkel Milo, Jakob Botsch Nielsen, Bas Spitters. #ITP #Coq
+ [[https://github.com/synacktiv/toy-wasm-symbexp][A toy WASM symbolic interpreter]]. ~ Simon Marechal et als. #Haskell #FunctionalProgramming

*** 08-Ago-21
+ [[https://www.isa-afp.org/entries/Relational_Forests.html][Relational forests (in Isabelle/HOL)]]. ~ Walter Guttmann. #ITP #IsabelleHOL

*** 07-Ago-21
+ [[https://www.imperial.ac.uk/media/imperial-college/faculty-of-engineering/computing/public/2021-ug-projects/Theorem-proving-with-classical-logic.pdf][Theorem proving in classical logic]]. ~ David Davies. #Haskell #FunctionalProgramming #Logic
+ [[https://easychair.org/publications/preprint_download/KLfT][Automatically generalizing theorems using typeclasses]]. ~ Alex J. Best. #ITP #LeanProver
+ [[https://blog.cofree.coffee/2021-08-05-a-brief-intro-to-monad-transformers/][A brief intro to monad transformers]]. ~ Solomon. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2108.00484][Elements of differential geometry in Lean: A report for mathematicians]]. ~ Anthony Bordg, Nicolò Cavalleri. #ITP #LeanProver #Math

*** 06-Ago-21
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?FIDE2021.6][Plotting in a formally verified way]]. ~ Guillaume Melquiond. #ITP #Coq
+ [[https://www.edukera.com/][Edukera: Teach Logic and Math with a proof assistant]]. #ITP #Coq #Edukera #Logic #Math
+ [[https://medium.com/coinmonks/archetype-a-dsl-for-tezos-6f55c92d1035][Archetype, a DSL for Tezos]]. ~ Benoit Rognier. #ITP #Coq #Edukera #Archetype
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?FIDE2021.7][A logic theory pattern for linearized control systems]]. ~ Andrea Domenici, Cinzia Bernardeschi. #ITP #PVS
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?FIDE2021.9][Verifying time complexity of binary search using Dafny]]. ~ Shiri Morshtein, Ran Ettinger, Shmuel Tyszberowicz. #ATP #FormalVerification #Dafny
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?FIDE2021.10][Explaining counterexamples with giant-step assertion checking]]. ~ Benedikt Becker, Cláudio Belo Lourenço, Claude Marché. #ATP #Why3 #FormalVerification
+ [[https://arxiv.org/html/2108.02369v1][VeriFly: On-the-fly assertion checking with CiaoPP (extended abstract)]]. ~ Miguel A. Sanchez-Ordaz, Isabel Garcia-Contreras, Víctor Pérez, Jose F. Morales, Pedro Lopez-Garcia, Manuel V. Hermenegildo./#EPTCS338.13 #Prolog #CiaoPP
+ [[https://blog.noredink.com/post/658510851000713216/haskell-for-the-elm-enthusiast][Haskell for the Elm enthusiast]]. ~ No Red Ink. #Haskell #Elm #FunctionalProgramming
+ [[https://blog.kalvad.com/haskell-series-part-2/][Haskell series part 2 (This is the second article of a series on the functional language Haskell for beginners)]]. ~ Pierre Guillemot. #Haskell #FunctionalProgramming
+ [[https://danso.ca/blog/frommaybe-is-just-a-fold/][fromMaybe is Just a fold]]. ~ Dan Soucy (@ninedotnine). #Haskell #FunctionalProgramming
+ [[https://antitypical.com/posts/2021-07-28-when-howard-met-curry/][When Howard Met Curry]]. ~ Rob Rix (@rob_rix). #Haskell #FunctionalProgramming

*** 05-Ago-21
+ [[https://project-archive.inf.ed.ac.uk/msc/20204462/msc_proj.pdf][Axiomatic Minkowski spacetime in Isabelle/HOL]]. ~ Richard Schmoetten. #MSc_Thesis #ITP #IsabelleHOL
+ [[https://afp.theoremproving.org/][Archive of Formal Proofs]]. #ITP #IsabelleHOL
+ [[https://github.com/carlinmack/afp][Archive of Formal Proofs redesign]]. ~ Carlin MacKenzie. #ITP #IsabelleHOL

*** 04-Ago-21
+ [[https://github.com/FrickHazard/thomaes-function][Lean proof of Thomaes (popcorn) function]]. ~ Ender Doe. #ITP #LeanProver #Math

*** 03-Ago-21
+ [[https://www.worldscientific.com/doi/pdf/10.1142/9789811236488_0001][Proof and computation: Perspectives for mathematics, computer science, and philosophy]]. ~ Klaus Mainzer. #Logic #Math #CompSci #ITP
+ [[https://www.cs.purdue.edu/homes/bendy/OADT/oadt.pdf][Oblivious Algebraic Data Types]]. ~ Qianchuan Ye, Benjamin Delaware. #ITP #Coq
+ [[https://ryanglscott.github.io/2021/08/01/equality-constraints-in-kinds/][GHC curiosities: Equality constraints in kinds]]. ~ Ryan Scott. #Haskell #FunctionalProgramming

*** 02-Ago-21
+ [[https://www.philipzucker.com/egglog2-monic/][Egglog 2: Automatically proving the pullback of a monic is monic]]. ~ Philip Zucke. #CategoryTheory
+ [[http://www.wouterspekkink.org/academia/writing/tool/doom-emacs/2021/02/27/writing-academic-papers-with-org-mode.html][Writing academic papers with org-mode]]. ~ Wouter Spekkink (@wouterspekkink). #Emacs #OrgMode
+ [[https://morrowm.github.io/posts/2021-08-02-shoes.html][Tying shoes with GADTs]]. ~ MorrowM. #Haskell #FunctionalProgramming

** Julio de 2021

*** 31-Jul-21
+ [[https://www21.informatik.tu-muenchen.de/students/past/interval_newton/assets/newton.pdf][Formalisation of interval methods for nonlinear root-finding]]. ~ Daniel Seidl. #BSc_Thesis #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2107.11838][New algebraic normative theories for ethical and legal reasoning in the LogiKEy framework]]. ~ Ali Farjami. #ITP #IsabelleHOL
+ [[https://dspace.library.uu.nl/handle/1874/403363][The categorical origin of monads in Haskell]]. ~ Marien Matser. #BSc_Thesis #Haskell #FunctionalProgramming #CategoryTheory
+ [[https://analyticsindiamag.com/what-separates-ai-from-an-idiot-savant-is-common-sense-hector-levesque/][What separates AI from an idiot savant is common sense: Hector Levesque]]. #AI #KRR
+ [[https://mathscholar.org/2021/07/computer-theorem-prover-verifies-sophisticated-new-result/][Computer theorem prover verifies sophisticated new result]]. ~ David H Bailey. #ITP #ATP #Math #AI

*** 30-Jul-21
+ [[https://arxiv.org/abs/2107.14044][Ethical AI for Social Good]]. ~ Ramya Akula, Ivan Garibay. #AI
+ [[https://www.foxhound.systems/blog/composable-data-validation/][Composable data validation with Haskell]]. ~ Ben Levy, Christian Charukiewicz. #Haskell #FunctionalProgramming
+ [[https://blog.sumtypeofway.com/posts/ode-to-a-streaming-bytestream.html][Ode to a streaming ByteString (Or: lazy I/O without shooting yourself in the foot)]]. ~ Patrick Thomson. #Haskell #FunctionalProgramming
+ [[https://coot.me/posts/containers-strict-foldr.html][Strictness of foldr' from containers]]. ~ Marcin Szamotulski (@me_coot). #Haskell #FunctionalProgramming
+ [[https://easychair.org/publications/preprint/k1hv][Formalization of Gambler’s Ruin Problem in Isabelle/HOL]]. ~ Zibo Yang. #ITP #IsabelleHOL #Math
+ [[https://easychair.org/publications/preprint/XmvS][Formalization of RBD-based Cause Consequence Analysis in HOL]]. ~ Mohamed Abdelghany, Sofiene Tahar. #ITP #HOL4
+ [[https://easychair.org/publications/preprint/gGb9][Inductive Benchmarks for Automated Reasoning]]. ~ Márton Hajdu, Petra Hozzová, Laura Kovács, Johannes Schoisswohl, Andrei Voronkov. #ATP
+ [[https://easychair.org/publications/preprint/sD76][Formalizing the Gromov-Hausdorff Space]]. ~ Sébastien Gouëzel. #ITP #LeanProver #Math
+ [[https://easychair.org/publications/preprint/38w1][Formalizing rotation number and its properties in Lean]]. ~ Yury Kudryashov. #ITP #LeanProver #Math
+ [[https://easychair.org/publications/preprint/mC9X][Scalar actions in Lean's Mathlib]]. ~ Eric Wieser. #ITP #LeanProver #Math

*** 29-Jul-21
+ [[http://flaviomoura.info/files/fmm21.pdf][A formalization of the (compositional) Z property]]. ~ Flávio L. C. de Moura,a Leandro O. Rezende. #ITP #Coq
+ [[http://flaviomoura.info/files/reportZtoConfl.pdf][Confluence via the Z property in Coq]]. ~ Flávio L. C. de Moura, Leandro O. Rezende. #ITP #Coq
+ [[https://arxiv.org/abs/2107.13509][The who in explainable AI: How AI background shapes perceptions of AI explanations]]. ~ Upol Ehsan, Samir Passi, Q. Vera Liao, Larry Chan, I-Hsiang Lee, Michael Muller, Mark O. Riedl. #AI #XAI
+ [[http://www.cse.chalmers.se/research/group/logic/TypesSS05/Extra/wiedijk_2.pdf][The QED Manifesto]]. #ATP #ITP
+ [[https://www.quantamagazine.org/lean-computer-program-confirms-peter-scholze-proof-20210728/][Proof assistant makes jump to big-league Math]]. ~ Kevin Hartnett (@KSHartnett). #ITP #LeanProver #Math
+ [[https://www.researchgate.net/publication/353208312_Integrating_an_Automated_Prover_for_Projective_Geometry_as_a_New_Tactic_in_the_Coq_Proof_Assistant][Integrating an automated prover for projective geometry as a new tactic in the Coq proof assistant]]. ~ Nicolas Magaud. #ITP #Coq #Math
+ [[https://www.researchgate.net/publication/353526866_Is_computer_algebra_ready_for_conjecturing_and_proving_geometric_inequalities_in_the_classroom][Is computer algebra ready for conjecturing and proving geometric inequalities in the classroom?]] ~ Zoltán Kovács, Tomás Recio, Robert Vajda, M. Pilar Vélez. #GeoGebra #Math
+ [[https://www.researchgate.net/profile/Zoltan-Kovacs-3/publication/353466393_Is_computer_algebra_ready_for_conjecturing_and_proving_geometric_inequalities_in_the_classroom/links/60ff0d602bf3553b29142ca4/Is-computer-algebra-ready-for-conjecturing-and-proving-geometric-inequalities-in-the-classroom.pdf?origin=homeFeed_download&_iepl%5BactivityId%5D=1396227761647622&_iepl%5BactivityTimestamp%5D=1627257600&_iepl%5BactivityType%5D=person_publish_publication&_iepl%5Bcontexts%5D%5B0%5D=homeFeed&_iepl%5BrecommendationActualVariant%5D=&_iepl%5BrecommendationDomain%5D=&_iepl%5BrecommendationScore%5D=&_iepl%5BrecommendationTargetActivityCombination%5D=&_iepl%5BrecommendationType%5D=&_iepl%5BfeedVisitIdentifier%5D=&_iepl%5BpositionInFeed%5D=11&_iepl%5BsingleItemViewId%5D=KUZ4i5ThvdxaoZf1ctK2jh1s&_iepl%5BviewId%5D=mkX7HMc1c9d9Y7Hyr4ISW4R9&_iepl%5BhomeFeedVariantCode%5D=ncls&_iepl%5B__typename%5D=HomeFeedTrackingPayload&_iepl%5BinteractionType%5D=publicationDownload&_iepl%5BtargetEntityId%5D=PB%3A353466393][Is computer algebra ready for conjecturing and proving geometric inequalities in the classroom? [Slides]]] ~ Zoltán Kovács, Tomás Recio, Robert Vajda, M. Pilar Vélez. #GeoGebra #Math
+ [[https://link.springer.com/content/pdf/10.1007%2F978-3-030-52200-1_27.pdf][A formalization of properties of continuous functions on closed intervals]]. ~ Yaoshun Fu, Wensheng Yu. #ITP #Coq #Math
+ [[https://github.com/coderfys/Analysis][Formal analysis in Coq]]. #ITP #Coq #Math
+ [[https://raw.githubusercontent.com/mirefek/geo_logic/master/article/geo_logic.pdf][GeoLogic – Graphical interactive theorem prover for Euclidean geometry]]. ~ Miroslav Olsak. #ITP #Logic #Math
+ [[https://github.com/mirefek/geo_logic][GeoLogic: Tool for euclidean geometry aware of logic]]. ~ Miroslav Olsak. #ITP #Logic #Math

*** 27-Jul-21
+ [[https://arxiv.org/abs/2107.11674][Case studies in formal reasoning about lambda-calculus: Semantics, Church-Rosser, standardization and HOAS]]. ~ Lorenzo Gheri, Andrei Popescu. #ITP #IsabelleHOL
+ [[http://www.math.uni-bonn.de/ag/logik/teaching/2021SS/Introduction_Naproche.pdf][An introduction to the Naproche natural language proof checker]]. ~ Peter Koepke. #ITP #IsabelleHOL #Naproche #Logic #Math
+ [[https://www.ps.uni-saarland.de/~hagemeier/files/thesis.pdf][Intuitionistic epistemic logic in Coq]]. ~ Christian Albert Hagemeier. #BSc_Thesis #ITP #Coq #Logic
+ [[https://cacm.acm.org/magazines/2021/8/254304-what-does-saying-that-programming-is-hard-really-say-and-about-whom/fulltext][What does saying that 'Programming is hard' really say, and about whom? ~ Brett A]]. Becker. #Programming

*** 26-Jul-21
+ [[https://gist.github.com/MantasBaksys/5db553021d417b62f33a8c821581498f][Formalization in Lean of IMO 2021 Q1]]. ~ Mantas Baksys. #ITP #LeanProver #Math #IMO
+ [[https://arxiv.org/abs/2107.10988][Formalizing Galois theory (in Lean)]]. ~ Thomas Browning, Patrick Lutz. #ITP #LeanProver #Math
+ [[https://frasertweedale.github.io/blog-fp/posts/2021-07-26-hakyll-without-sources.html][Hakyll how-to: pages without source files]]. ~ Fraser Tweedale (@hackuador). #Haskell #FunctionalProgramming
+ [[https://www.cantorsparadise.com/why-math-is-an-art-not-a-science-94d234cacb76][Why math is an art, not a science]]. ~ Peter Flom. #Math

*** 25-Jul-21
+ [[https://github.com/b-mehta/combinatorics][Combinatorics in Lean]]. ~  Bhavik Mehta. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/056d709743bfc8371400dfbe1b2d4b627d89f6ef/src/model_theory/basic.lean][First-order languages and structures in Lean]]. ~ Aaron Anderson, Jesse Michael Han, Floris van Doorn. #ITP #LeanProver #Logic #Math
+ [[https://github.com/leanprover-community/mathlib/blob/8a0d5e07c88b8b6a36f183e4b1b8d8a4d81f9df8/src/group_theory/complement.lean][Schur–Zassenhaus theorem in Lean]]. ~ Thomas Browning. #ITP #LeanProver #Math
+ [[https://youtu.be/j5RIZAzooAg][Univalence from a computer science point-of-view]]. ~ Dan Licata. #Logic #Math #CompSci
+ [[https://mpodlasin.com/articles/haskell-i][Haskell (The most gentle introduction ever)]]. ~ Mateusz Podlasin (@m_podlasin). #Haskell #FunctionalProgramming
+ [[https://www21.in.tum.de/~wenzelm/papers/romantic.pdf][A comparison of the mathematical proof languages Mizar and Isar]]. ~ Freek Wiedijk, Markus Wenzel. #ITP #Mizar #IsabelleHOL #Isar
+ [[https://www.cs.ru.nl/~freek/notes/mv.pdf][The mathematical vernacular]]. ~ Freek Wiedijk. #ITP #Mizar #IsabelleIsar
+ [[https://github.com/leanprover-community/mathlib/blob/53c830592cc48471c873df6b6ba726b764fcd7f0/src/analysis/convex/krein_milman.lean][The Krein-Milman theorem in Lean]]. ~ Yaël Dillies. #ITP #LeanProver #Math
+ [[https://www.ma.imperial.ac.uk/~buzzard/M4000x_html/M40001/M40001_C1.html][Sets and logic in Lean]]. ~ Kevin Buzzard. #ITP #LeanProver #Logic #Math
+ [[https://www.ma.imperial.ac.uk/~buzzard/M4000x_html/M40001/M40001_C2.html][Functions and equivalence relations in Lean]]. ~ Kevin Buzzard. #ITP #LeanProver #Logic #Math
+ [[https://arxiv.org/abs/0809.1552][A computer verified, monadic, functional implementation of the integral]]. ~ Russell O'Connor, Bas Spitters. #ITP #Coq #Math

*** 24-Jul-21
+ [[https://luctielen.com/posts/static_analysis_using_haskell_and_datalog/][Static analysis using Haskell and Datalog]]. ~ Luc Tielen (@luctielen). #Haskell #FunctionalProgramming
+ [[https://brandonchinn178.github.io/blog/2021/07/23/foralls-in-data-types.html][`forall`s in Data Types]]. ~ Brandon Chinn. #Haskell #FunctionalProgramming

*** 23-Jul-21
+ [[https://github.com/leanprover-community/mathlib/blob/cb21104b83e13a814b913cecc9601f55405bd888/archive/mccune.lean][Every group is a McCune group (in Lean)]]. ~ Bhavik Mehta. #ITP #LeanProver #Math

*** 22-Jul-21
+ [[https://link.springer.com/chapter/10.1007/978-3-030-81685-8_2][Balancing automation and control for formal verification of microprocessors]]. #ITP #ACL2
+ [[https://arxiv.org/abs/2107.10034][Learning theorem proving components]]. ~ Karel Chvalovský, Jan Jakubův, Miroslav Olšák, Josef Urban. #ATP #MachineLearning
+ [[https://arxiv.org/abs/2104.02549][Connecting constructive notions of ordinals in Homotopy Type Theory]]. ~ Nicolai Kraus, Fredrik Nordvall Forsberg, Chuangjie Xu. #HoTT #ITP #Agda #Logic #Math
+ [[https://books.google.es/books?id=NvI4EAAAQBAJ&lpg=PR3&hl=es&pg=PR][Artificial intelligence (A textbook)]]. ~ Charu C. Aggarwal.3#v=onepage&q&f=false #eBook #AI

*** 21-Jul-21
+ [[https://mathematicswithoutapologies.wordpress.com/2021/07/21/announcing-a-new-newsletter-on-mechanizing-mathematics][Announcing a new newsletter on mechanizing mathematics]]. ~ Michael Harris. #ITP #ATP #Math
+ [[https://siliconreckoner.substack.com/about][Silicon Reckoner: an opinionated newsletter about the implications of mechanization of mathematics]]. ~ Michael Harris. #ITP #ATP #Math

*** 20-Jul-21
+ [[http://fmv.jku.at/papers/Fleury-EDA-Challenge-2021.pdf][IsaSAT and Kissat entering the EDA Challenge 2021]]. ~ Mathias Fleury. #ITP #IsabelleHOL #SATSolvers
+ [[https://github.com/impermeable/waterproof][Waterproof: an educational environment for writing mathematical proofs in interactive notebooks]]. #ITP #Coq #Math
+ [[https://pure.tue.nl/ws/portalfiles/portal/174693710/BFP_Jan_Moraal.pdf][Measure theory in Waterproof (Interactive theorem-proving for measure theory in an educational setting)]]. ~ Jan Moraal. #ITP #Coq #Math
+ [[https://www.cs.princeton.edu/~appel/papers/comp-opt-certicoq.pdf][Compositional optimizations for CertiCoq]]. ~ Zoe Paraskevopoulou, John M. Li, Andrew W. Appel. #ITP #Coq
+ [[https://hal.archives-ouvertes.fr/tel-03286314/document][Noetherian induction for computer-assisted first-order reasoning]]. ~ Sorin Stratulat. #ITP #Coq #Logic #Math
+ [[https://eprints.ucm.es/id/eprint/66943/1/BLAZQUEZ%20SABORIDO%2069815_JORGE_BLAZQUEZ_SABORIDO_Verificacion_de_estructuras_de_datos_enlazadas_en_Dafny_784051_493349558%20%281%29.pdf][Verification of linked data structures in Dafny]]. ~ Jorge Blázquez Saborido. #TFG #ATP #SMT #Dafny
+ [[https://rpeszek.github.io/posts/2021-07-18-prob-tree-scheme.html][Probability tree diagrams. Recursion schemes. Why finding the right solution is sometimes hard?]] ~ Robert Peszek. #Haskell #FunctionalProgramming
+ [[http://ocramz.github.io/haskell/automatic-differentiation/2021/07/19/ad-delcont.html][Purely-functional reverse-mode automatic differentiation with delimited continuations]]. ~ Marco Zocca (@ocramz_yo). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2107.08821][Proceedings of ICML 2021 workshop on theoretic foundation, criticism, and application trend of explainable AI]]. #AI #MachineLearning #XAI

*** 19-Jul-21
+ [[https://lucidmanager.org/productivity/publishing-with-org-mode-export/][Publishing articles and books with Org Mode export]]. ~ Peter Prevos (@pprevos). #Emacs #OrgMode #LaTeX

*** 18-Jul-21
+ [[https://github.com/leanprover-community/mathlib/blob/master/src/combinatorics/hales_jewett.lean][The Hales-Jewett theorem (in Lean)]]. ~ David Wärn. #ITP #LeanProver #Math
+ [[https://www.genbeta.com/herramientas/emacs-editor-texto-libre-vocacion-sistema-operativo-sus-extensiones-usadas-suplen-toda-clase-aplicaciones][Emacs, el editor de texto libre con vocación de sistema operativo: sus 'extensiones' más usadas suplen toda clase de aplicaciones]]. ~ Marcos Merino (@MarcosMerino_B). #Emacs
+ [[https://forkast.news/video-audio/watch-charles-hoskinson-co-founder-of-ethereum-and-iohk-on-why-cardano-is-a-better-platform-part-i-2-2/][Of all the programming languages in the world, why Haskell? ~ Charles Hoskinson]]. #Haskell #FunctionalProgramming #Cardano
+ [[https://github.com/manateelazycat/emacs-application-framework][Emacs Application Framework (EAF)]]. #Emacs

*** 17-Jul-21
+ [[https://arxiv.org/abs/2107.05225][Incremental vulnerability detection via back-propagating symbolic execution of insecurity separation logic]]. ~ Toby Murray, Pengbo Yan, Gidon Ernst. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2107.05493][Integrating an automated prover for projective geometry as a new tactic in the Coq proof assistant]]. ~ Nicolas Magaud. #ITP #Coq #Math
+ [[https://dione.lib.unipi.gr/xmlui/bitstream/handle/unipi/13557/AI_MSc_Thesis_EiriniVandorou.pdf][Reasoning on figures of theoretical geometry theorems]]. ~ Eirini Vandorou. #MSc_Thesis #Clojure #FunctionalProgramming #Prolog #LogicProgramming #Math
+ [[https://www.parsonsmatt.org/2021/07/16/hspec_hooks.html][Hspec hooks]]. ~ Matt Parsons (@mattoflambda). #Haskell #FunctionalProgramming
+ [[https://i.cs.hku.hk/~bruno/papers/icfp2021.pdf][Distributing intersection and union types with splits and duality (Functional pearl)]]. ~ Xuejing Huang, Bruno C.D.S. Oliveira. #Haskell #FunctionalProgramming
+ [[https://mally.stanford.edu/Papers/logicism.pdf][A defense of logicism]]. ~ Hannes Leitgeb, Uri Nodelman, Edward N. Zalta. #Logic #Math

*** 16-Jul-21
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.1][Facilitating meta-theory reasoning]]. ~ Giselle Reis. #Logic #CompSci #SELLF #TATU #QUATI #OCaml #FunctionalProgramming
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.2][Touring the MetaCoq project]]. ~ Matthieu Sozeau. #ITP #Coq
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.4][Automating induction by reflection]]. ~ Johannes Schoisswohl, Laura Kovács. #ATP #Logic
+ [[https://repositum.tuwien.at/handle/20.500.12708/16472][Automated induction by reflection]]. ~ Johannes Schoisswohl. #MSc_Thesis #ATP #Logic
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.5][Countability of inductive types formalized in the object-logic level]]. ~ Qinxiang Cao, Xiwei Wu. #ITP #Coq
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.6][SMLtoCoq: Automated generation of Coq specifications and proof obligations from SML programs with contracts]]. ~ Laila El-Beheiry, Giselle Reis, Ammar Karkour. #ITP #Coq #SML #FunctionalProgramming
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.7][Systematic translation of formalizations of type theory from intrinsic to extrinsic style]]. ~ Florian Rabe, Navid Roux. #MMT #LogicalFramework
+ [[https://arxiv.org/abs/2107.07373][A reinforcement learning environment for mathematical reasoning via program synthesis]]. ~ Joseph Palermo, Johnny Ye, Alok Singh. #AI #MachineLearning #Math
+ [[https://arxiv.org/abs/2107.07045][Explainable AI: current status and future directions]]. ~ Prashant Gohel, Priyanka Singh, Manoranjan Mohanty. #XAI #AI #MachineLearning
+ [[https://cuddly-octo-palm-tree.com/posts/2021-07-11-cwafi-4/][Cheap interpreter, part 4: stack machines]]. ~ Gary Verhaegen. #Haskell #FunctionalProgramming
+ [[https://blog.kalvad.com/haskell-series-part-1/][Haskell series part 1]]. ~ Pierre Guillemot (@hnb_02). #Haskell #FunctionalProgramming
+ [[https://www.parsonsmatt.org/2021/07/12/template_haskell_performance_tips.html][Template Haskell performance tips]]. ~ Matt Parsons. #Haskell #FunctionalProgramming
+ [[http://libros.csic.es/product_info.php?cPath=164&products_id=1493&PHPSESSID=ccd9b6102a86d43bb8272bb1de415d03][Artificial Intelligence, Robotics & Data Science (CSIC Scientific Challenges: Towards 2030, Volume 11)]]. #AI #DataScience #MachineLearning

*** 15-Jul-21
+ [[https://blog.desdelinux.net/copilot-el-asistente-de-ai-de-github-recibio-fuertes-criticas-de-la-comunidad-open-source][Copilot, el asistente de AI de GitHub recibió fuertes críticas de la comunidad open source]]. ~ Darkcrizt. #AI #Copilot #Programación
+ [[https://cacm.acm.org/careers/253975-hrs-role-in-understanding-and-mitigating-ai-bias/fulltext][HR's role in understanding and mitigating AI bias]]. ~ Laura Baldwin. #AI
+ [[https://stopachka.essay.dev/post/5/risp-in-rust-lisp][(Risp (in (Rust) (Lisp)))]]. ~ Stepan Parunashvili (@stopachka). #Rust #Lisp
+ [[https://www.fotonixx.com/posts/rust-fizzbuzz/][Writing an (overly) idiomatic Fizzbuzz with Rust]]. ~ Ryan Frazier. #RustLang
+ [[https://arxiv.org/abs/2007.00752][Is Rust used safely by software developers?]] ~ Ana Nora Evans, Bradford Campbell, Mary Lou Soffa. #RustLang
+ [[https://neptune.ai/blog/explainability-auditability-ml-definitions-techniques-tools][Explainability and auditability in ML: Definitions, techniques, and tools]]. ~ Ejiro Onose. #AI #MachineLearning #XAI
+ [[https://pure.tue.nl/ws/portalfiles/portal/174690614/Final_thesis_Cottaar.pdf][Reinforcement learning for interactive theorem proving (Creating an artificial student)]]. ~ Jolijn Cottaar. #ITP #Coq #MachineLearning
+ [[https://is.muni.cz/th/zedur/Game_development_in_Haskell_Archive.pdf][Game development in Haskell]]. ~ Jan Rychlý. #BSc_Thesis #Haskell #FunctionalProgramming

*** 14-Jul-21
+ [[https://drops.dagstuhl.de/opus/frontdoor.php?source_opus=13914][A mechanised proof of the time invariance thesis for the weak call-by-value λ-calculus]]. ~ Yannick Forster, Fabian Kunze, Gert Smolka, Maximilian Wuttke. #ITP #Coq #CompSci
+ [[https://arxiv.org/abs/2107.06015][A classification of artificial intelligence systems for mathematics education]]. ~ Steven Van Vaerenbergh, Adrián Pérez-Suay. #AI #Math
+ [[https://youtu.be/XspZEqNl6Wo][GHC: Dependency analysis of Haskell declarations]]. ~ Artyom Kuznetsov. #Haskell #FunctionalProgramming
+ [[https://www.isa-afp.org/entries/Finitely_Generated_Abelian_Groups.html][Finitely generated abelian groups (in Isabelle/HOL)]]. ~ Joseph Thommes, Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://perso.univ-rennes1.fr/sebastien.gouezel/articles/gromov_hausdorff.pdf][Formalizing the Gromov-Hausdorff space]]. ~ Sébastien Gouëzel. #ITP #LeanProver #Math
+ [[https://www.xixilogic.org/events/wp-content/uploads/2021/07/proceedingsfinal.pd][A flexible approach to argumentation framework analysis using theorem proving]]. ~ David Fuenmayor, Alexander Steen.f#page=26 #ITP #IsabelleHOL
+ [[https://matela.com.br/express.pdf][Express: Applications of dynamically typed Haskell expressions]]. ~ Rudy Matela. #Haskell #FunctionalProgramming
+ [[https://link.springer.com/article/10.1007/s40753-021-00140-1][Learning about proof with the theorem prover Lean: the abundant numbers task]]. ~ Athina Thoma, Paola Iannone. #ITP #LeanProver #Math

*** 12-Jul-21
+ [[https://www.extrema.is/articles/haskell-books][Haskell books: a tagged index of English books related to the Haskell programming language]]. ~ Travis Cardwell. #Haskell #FunctionalProgramming

*** 11-Jul-21
+ [[https://arxiv.org/abs/2107.02353][General automation in Coq through modular transformations]]. ~ Valentin Blot, Louise Dubois de Prisque, Chantal Keller, Pierre Vial. #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/14256/ ][Synthetic undecidability of MSELL via FRACTRAN mechanised in Coq]]. ~ Dominique Larchey-Wendling. #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/14260/pdf/LIPIcs-FSCD-2021-22.pdf][Type-theoretic constructions of the final coalgebra of the finite powerset functor]]. ~ Niccolò Veltri. #ITP #Agda
+ [[https://arxiv.org/abs/2107.02354][Alethe: Towards a generic SMT proof format]]. ~ Hans-Jörg Schurr, Mathias Fleury, Haniel Barbosa, Pascal Fontaine. #ATP #SMT
+ [[http://www.cse.chalmers.se/~jomoa/papers/VPT21QuickSpec.pdf][Conjectures, tests and proofs: An overview of theory exploration]]. ~ Moa Johansson, Nicholas Smallbone. #Haskell #FunctionalProgramming #QuickSpec
+ [[https://arxiv.org/abs/2107.02352][A framework for proof-carrying logical transformations]]. ~ Quentin Garchery. #FunctionalProgramming #OCaml #Why3

*** 10-Jul-21
+ [[https://link.springer.com/content/pdf/10.1007%2F978-3-030-79876-5.pd][Isabelle’s metalogic: Formalization and proof checker]]. ~ Tobias Nipkow, Simon Roßkopf.f#page=104 #ITP #IsabelleHOL
+ [[https://link.springer.com/content/pdf/10.1007%2F978-3-030-79876-5.pd][Reliable reconstruction of fine-grained proofs in a proof assistant]]. ~ Hans-Jörg Schurr, Mathias Fleury, Martin Desharnais.f#page=459 #ATP #SMT #ITP #IsabelleHOL
+ [[https://link.springer.com/content/pdf/10.1007%2F978-3-030-79876-5.pd][The Isabelle/Naproche natural language proof assistant]]. ~ Adrian De Lon et als.f#page=619 #ITP #IsabelleHOL
+ [[https://leanprover-community.github.io/mathlib_docs/computability/turing_machine.html][Turing machines in Lean]]. ~ Mario Carneiro et als. #ITP #LeanProver #CompSci
+ [[https://www.tweag.io/blog/2021-07-08-linear-traversable/][Exploring linear Traversable using generics]]. ~ Sjoerd Visscher. #Haskell #FunctionalProgramming
+ [[https://bdtechtalks.com/2021/07/05/openai-github-gpt-3-copilot/][What OpenAI and GitHub’s "AI pair programmer" means for the software industry]]. ~ Ben Dickson. #AI #Programming #Copilot
+ [[https://cacm.acm.org/news/253847-using-ai-to-drill-down-in-physics/fulltext][Using AI to Drill Down in Physics]]. ~ Bennie Mols. #AI
+ [[https://www.microsiervos.com/archivo/matematicas/matematicas-dinamicas-visualizaciones-codigo-abierto.html][Matemáticas dinámicas: estupendas visualizaciones a partir de código abierto]]. ~ @Alvy. #Matemáticas #Computación
+ [[https://www.dynamicmath.xyz/][Dynamic mathematics (Interactive mathematical applets & animations)]]. ~ Juan Carlos Ponce. #Math
*** 09-Jul-21
+ [[https://raw.githubusercontent.com/sofsanfer/TFM/main/output/document.pdf][Formalización del teorema de existencia de modelo en Isabelle/HOL]]. ~ Sofı́a Santiago Fernández. #TFM #ITP #IsabelleHOL #Lógica #Matemática
+ [[https://www.lix.polytechnique.fr/iwc2021/IWC2021_proceedings.pdf#page=29][Formalized signature extension results for confluence, commutation and unique normal forms]]. ~ A. Lochmann, F. Mitterwallner, A. Middeldorp. #ITP #IsabelleHOL
+ [[http://fitelson.org/walsh.pdf][Answers to some open questions of Ulrich & Meredith]]. ~ Matthew Walsh, Branden Fitelson. #ATP #Otter #Logic #Math
+ [[https://www.isa-afp.org/entries/SpecCheck.html?utm_source=dlvr.it&utm_medium=twitter][SpecCheck: Specification-based testing for Isabelle/ML]]. ~ Kevin Kappelmann, Lukas Bulwahn. #ITP #IsabelleHOL
+ [[https://media.suub.uni-bremen.de/bitstream/elib/4986/4/Dissertation_Bornebusch.pdf][Coq meets CλaSH (Proposing a hardware design synthesis flow that combines proof assistants with functional hardware description languages)]]. ~ Fritjof Bornebusch. #PhD_Thesis #ITP #Coq
+ [[https://utmsjoe.mk/files/Vol.12.No.1/3.MODELS_FOR_SOFTWARE_VERIFICATION_PROVING_PROGRAM_CORRECTNESS.pdf][Models for software verification: Proving program correctness]]. ~ Boro Sitnikovski, Lidija Goracinova-Ilieva, Biljana Stojcevska. #FormalVerification #Coq #Dafny
+ [[http://ksiresearch.org/seke/seke21paper/paper047.pdf][Using LSTM to predict tactics in Coq]]. ~ X. Luan, X. Zhang, M. Sun. #ITP #Coq #MachineLearning #NeuralNetwork
+ [[https://arxiv.org/abs/2107.01883][A theory of higher-order subtyping with type intervals]]. ~ Sandro Stucki, Paolo G. Giarrusso. #ITP #Agda
+ [[https://bit.ly/3AO50OI][Curry-Howard correspondence: An intuitive language for mathematics]]. ~ Xiao Tan. #MSc_Thesis #Logic #CompSci
+ [[https://www.ams.org/journals/notices/202106/rnoti-p930.pdf][Practical suggestions for mathematical writing]]. ~ R. Bell, B. Kadets, P. Srinivasan, N. Triantafillou, I. Vogt. #Math

*** 07-Jul-21
+ [[https://odr.chalmers.se/bitstream/20.500.12380/302935/1/CSE%2021-74%20Engsmyre%20Wikstr%c3%b6m.pdf][Complementing the digital programming tutor Ask-Elle with program synthesis]]. ~ Gustav Engsmyre, Karl Wikström. #MSc_Thesis #Haskell #FunctionalProgramming

*** 06-Jul-21
+ [[https://github.com/FredericLeRoux/LEAN_ESPACES_METRIQUES][Code Lean contenant les preuves d'un cours standard sur les espaces métriques]]. ~  Frederic Le Roux. #ITP #LeanProver #Math
+ [[https://mmhaskell.com/blog/2021/7/5/function-application-using-the-dollar-sign-][Function application: Using the dollar sign ($)]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/introduction-to-template-haskell][A brief introduction to Template Haskell]]. ~ Heitor Toledo Lassarote de Paula. #Haskell #FunctionalProgramming
+ [[https://cacm.acm.org/news/253785-will-ai-rewrite-coding/fulltext][Will AI rewrite coding?]] ~ Samuel Greengard. #AI

*** 05-Jul-21
+ [[https://exlean.org/groups-i/][Groups I]]. Omar Harhara. #ITP #LeanProver #Math
+ [[https://www.iiia.csic.es/sat2021/program/Slides39.pdf][Chinese remainder encoding for hamiltonian cycles [Slides]]]. ~ Marijn Heule. #ATP #SATSolvers #Math
+ [[https://www.iiia.csic.es/sat2021/program/Presentation39.mp4][Chinese remainder encoding for hamiltonian cycles [Video]]]. ~ Marijn Heule. #ATP #SATSolvers #Math
+ [[https://www.iiia.csic.es/sat2021/program/Slides48.pdf ][DiMo: Discrete modelling using propositional logic [Slides]]]. ~ Norbert Hundeshagen, Martin Lange and Georg Siebert. #Logic #Math
+ [[https://www.iiia.csic.es/sat2021/program/Presentation48.mp4][DiMo: Discrete modelling using propositional logic [Video]]]. ~ Norbert Hundeshagen, Martin Lange and Georg Siebert. #Logic #Math
+ [[https://dumbarton.fm.cs.uni-kassel.de/assets/manual/DiMoManual_v0.2.2.pdf][DiMo: A tool for discrete modelling using propositional logic (version 0]].2.2). ~ Martin Lange. #Logic #Math
+ [[https://repository.tudelft.nl/islandora/object/uuid:989e34ff-c81f-43ba-a851-59dca559ab90/datastream/OBJ/download][Verifying correctness of Haskell programs using the programming language Agda and framework agda2hs]]. ~ Dixit Sabharwal, Jesper G.H. Cockx, Lucas F.B. Escot. #ITP #Agda #Haskell #FunctionalProgramming
+ [[https://www.itl.waw.pl/czasopisma/JTIT/2021/2/107.pdf][Security verification in the context of 5G sensor networks]]. ~ Piotr Remlein, Urszula Stachowiak. #Haskell #FunctionalProgramming
+ [[https://repository.tudelft.nl/islandora/object/uuid:5f308592-49ac-4395-985c-77f8c48a52f2/datastream/OBJ/download][Deriving a symbolic executor for definitional interpreters suitable for the study of heuristics]]. ~ Laura-Ana Pîrcalaboiu, Casper Bach Poulsen, Cas van der Rest. #Haskell #FunctionalProgramming
+ [[https://gopiandcode.uk/logs/log-certified-synthesis.html][Goodbye C developers: The future of programming with certified program synthesis]]. ~ Kiran Gopinathan (@Gopiandcoshow). #ITP #Coq
+ [[https://ilyasergey.net/assets/pdf/papers/certisuslik-icfp21.pdf][Certifying the synthesis of heap-manipulating programs]]. ~ Y. Watanabe, K. Gopinathan, George Pîrlea, Nadia Polikarpova, I. Sergey. #ITP #Coq

*** 03-Jul-21
+ [[https://costa.fdi.ucm.es/wst2021/WST2021_proceedings.pd][Formalizing higher-order termination in Coq]]. ~ Deivid Vale, Niels van der Weide.f#page=71 #ITP #Coq
+ [[https://hal.inria.fr/hal-03274013/document][Formalization of a sign determination algorithm in real algebraic geometry]]. ~ Cyril Cohen. #ITP #Coq #Math
+ [[https://www.cs.bham.ac.uk/%7emhe/agda-new/CantorSchroederBernstein.html][The Cantor-Schröder-Bernstein for homotopy types, or ∞-groupoids, in Agda]]. ~ Martin Escardo. #ITP #Agda #Logic #Math
+ [[https://link.springer.com/article/10.1007/s40062-021-00284-6][The Cantor–Schröder–Bernstein Theorem for ∞-groupoids]]. ~ Martin Escardo. #Logic #Math
+ [[https://repository.tudelft.nl/islandora/object/uuid:2c32c354-42e4-466e-9869-b7c68b4388ec/datastream/OBJ/download][Practical verification of the Haskell ranged-sets library]]. ~ Ioana Savu, Jesper Cockx, Lucas Escot. #ITP #Agda #Haskell #FunctionalProgramming
+ [[https://repository.tudelft.nl/islandora/object/uuid:065b9e87-43e5-4e3c-8e37-04f1b50c8cf7/datastream/OBJ/download][Producing a verified implementation of sequences using agda2hs]]. ~ Shashank Anand, Jesper Cockx, Lucas Escot. #ITP #Agda #Haskell #FunctionalProgramming
+ [[https://raw.githubusercontent.com/barry-jay-personal/tree-calculus/master/tree_book.pdf][Reflective programs in tree calculus]]. ~ Barry Jay (@Jay59009444). #eBook #ITP #Coq
+ [[https://github.com/barry-jay-personal/tree-calculus][Proofs in Coq for the book "Reflective programs in tree calculus"]]. ~ Barry Jay (@Jay59009444). #ITP #Coq
+ [[https://webspace.science.uu.nl/~swier004/publications/2010-fundamentae-informatica.pdf][A tutorial implementationof a dependently typed lambda calculus]]. ~ Andres Löh, Conor McBride, Wouter Swierstra. #ITP #Agda
+ [[https://youtu.be/tYqbbRsx8DI][Formalising contemporary mathematics in simple type theory]]. ~ Lawrence Paulson. #ITP #IsabelleHOL #Math

*** 02-Jul-21
+ [[https://arxiv.org/abs/2104.12224v1][Isabelle's metalogic: Formalization and proof checker]]. ~ Tobias Nipkow, Simon Roßkopf. #ITP #IsabelleHOL
+ [[https://rpeszek.github.io/posts/2021-06-28-polysemy-arrows.html][Arming polysemy with Arrows]]. ~ Robert Peszek. #Haskell #FunctionalProgramming
+ [[http://www.jerf.org/iri/post/2958][Functors and monads for people who have read too many "Tutorials"]]. ~ Jeremy Bowers. #Haskell #FunctionalProgramming

** Junio de 2021

*** 30-Jun-21
+ [[https://www.sciencedirect.com/science/article/pii/S2352220821000626][A Perron–Frobenius theorem for deciding matrix growth]]. ~ RenéThiemann. #ITP #IsabelleHOL #Math
+ [[https://yfu.tw/publication/cav21-coq-qfbv/cav21-coq-qfbv.pdf][CoqQFBV: A scalable certified SMT quantifier-free bit-vector solver]]. ~ Xiaomu Shi et als. #ITP #Coq
+ [[http://www.ccas.ru/ca/_media/ca-2021.pd][On a machine-checked proof for an optimized method to multiply polynomials]]. ~ S.D. Meshveliani.f#page=88 #ITP #Agda #Math
+ [[https://www.researchgate.net/profile/Hester-Breman/publication/350607318_Augmenting_the_human_mathematician/links/608bc486a6fdccaebdf9063e/Augmenting-the-human-mathematician.pdf][Augmenting the human mathematician]]. ~ H.K. Sørensen, M.W. Johansen, R. Hoekzema, H. Breman. #ITP #ATP #Math
+ [[https://arxiv.org/abs/1905.13100][Towards finding longer proofs]]. ~ Zsolt Zombori, Adrián Csiszárik, Henryk Michalewski, Cezary Kaliszyk, Josef Urban. #ATP #MachineLearning
+ [[https://cdsmithus.medium.com/towers-of-hanoi-from-a-random-start-db22d09da027][Towers of Hanoi from a random start]]. ~ Chris Smith (@cdsmithus). #Haskell #FunctionalProgramming

*** 29-Jun-21
+ [[https://exlean.org/well-founded-recursion/][Well-founded recursion]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math

*** 28-Jun-21
+ [[https://hal.inria.fr/inria-00139131v2/document][A modular formalisation of finite group theory]]. ~ Georges Gonthier, Assia Mahboubi, Laurence Rideau, Enrico Tassi, LaurentThéry. #ITP #Coq #Math
+ [[https://siddhartha-gadgil.github.io/automating-mathematics/posts/sat-prover-lean/][SAT solver-prover in Lean 4]]. ~ Siddhartha Gadgil. #ITP #LeanProver #Logic
+ [[http://siddhartha-gadgil.github.io/ProvingGround/][ProvingGround: Automated Theorem proving by learning]]. ~ Siddhartha Gadgil. #ITP #LeanProver #MachineLearning
+ [[http://siddhartha-gadgil.github.io/presentations/KWK-AutoMath.htm][Automating Mathematics? ~ Siddhartha Gadgil]].l#/ #Math #ATP #ITP #AI
+ [[http://math.iisc.ac.in/~gadgil/SMTGeom.pdf][Euclidean geometry by high-performance solvers? ~ Siddhartha Gadgil, Anand Tadipatri]]. #Math #ATP #SAT #SMT
+ [[http://www.contrib.andrew.cmu.edu/~avigad/Students/serafin_thesis.pdf][A formally verified proof of the central limit theorem]]. ~ Luke Serafin. #PhD_Thesis #ITP #IsabelleHOL #Math
+ [[http://www.contrib.andrew.cmu.edu/~avigad/Students/wu_thesis.pdf][A formally verified proof of Kruskal’s tree theorem in Lean]]. ~ Minchao Wu. #ITP #LeanProver #Math

*** 27-Jun-21
+ [[https://dodisturb.me/posts/2021-06-27-Typed-Programs-Dont-Leak-Data.html][Typed programs don't leak data]]. ~ Mistral Contrastin. #Haskell #FunctionalProgramming
+ [[https://youtu.be/yLw5j-4-aEE][Historia de desafíos matemáticos]]. Cómo ganar un millón de dólares. ~ Antonio Pérez (@aperezsanz). #Matemáticas vía @manuel_de_leon

*** 26-Jun-21
+ [[https://bit.ly/3AboKvE][La prova del software (in Italian)]]. ~ Riccardo Brasca et als. #ITP #LeanProver #Math
+ [[https://philpapers.org/archive/DETGFA.pdf][Groundwork for a fallibilist account of Mathematics]]. ~ Silvia De Toffoli. #Math
+ [[https://morrowm.github.io/posts/2021-06-26-assoc.html][Associated types in two different ways]]. #Haskell #FunctionalProgramming

*** 25-Jun-21
+ [[https://bit.ly/3h3jXDD][Creación artística y creación matemática]]. ~ Juan Arias de Reyna. #Matemáticas #ITP #LeanProver
+ [[http://abstract.ups.edu/index.html][Abstract algebra: Theory and applications]]. ~ Thomas W. Judson et als. #eBook #Math #Sage
+ [[http://antoniobehn.cl/cursillo2017/][Taller de Sage]]. ~ Antonio Behn. #Sage #Matemáticas
+ [[https://www.isa-afp.org/entries/MiniSail.html][MiniSail: A kernel language for the ISA specification language SAIL in Isabelle/HOL]]. ~ Mark Wassell. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Public_Announcement_Logic.html][Public announcement logic (in Isabelle/HOL)]]. ~ Asta Halkjær From (@astahfrom). #ITP #IsabelleHOL
+ [[http://people.compute.dtu.dk/ahfrom/Formalizing%20Epistemic%20Logic.pdf][Formalized soundness and completeness of epistemic logic]]. ~ Asta Halkjær From (@astahfrom) et als. #Logic #ITP #IsabelleHOL
+ [[https://leanprover-community.github.io/lt2021/slides/paula-LeanTogether2021.pdf][Results in modal and dynamic epistemic logic (A formalization in Lean)]]. ~ Paula Neeley. #Logic #ITP #LeanProver
+ [[https://www.rsme.es/2021/06/hito-de-las-demostraciones-asistidas-por-ordenador-en-nature/][Hito de las demostraciones asistidas por ordenador en Nature]]. ~ Nerea Diez López. #DAO #LeanProver #Matemáticas
+ [[http://endlessparentheses.com/embedding-youtube-videos-with-org-mode-links.html][Embedding Youtube videos with org-mode links]]. ~ Artur Malabarba. #OrgMode #Emacs

*** 24-Jun-21
+ [[https://link.springer.com/content/pdf/10.1007/s42979-020-00417-3.pdf][Verified model checking for conjunctive positive logic]]. ~ Alex Abuin et als. #ITP #Dafny
+ [[https://dl.acm.org/doi/pdf/10.1145/3453483.3454053][CoStar: a verified ALL (*) parser]]. ~ Sam Lasser et als. #ITP #Coq
+ [[https://dl.acm.org/doi/pdf/10.1145/3453483.3454027][Revamping hardware persistency models: view-based and axiomatic persistency models for Intel-x86 and Armv8]]. ~ Kyeongmin Cho et als. #ITP #Coq
+ [[https://elpais.com/ciencia/2021-06-24/las-matematicas-que-estudian-los-limites-de-los-ordenadores.html][Las matemáticas que estudian los límites de los ordenadores]]. ~ Daniel Graça, Ágata A. Timón. #Matemáticas #Computación
+ [[http://www.contrib.andrew.cmu.edu/~avigad/Students/zipperer_ms_thesis.pdf][A formalization of elementary group theory in the proof assistant Lean]]. ~ Andrew Zipperer. #ITP #LeanProver #Math
+ [[https://byorgey.wordpress.com/2021/06/24/types-versus-sets-in-math-and-programming-languages/][Types versus sets in math and programming languages]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[http://math.andrej.com/2021/06/24/the-dawn-of-formalized-mathematics/][The dawn of formalized mathematics]]. ~ Andrej Bauer (@andrejbauer). #ITP #Math

*** 23-Jun-21
+ [[https://www.isa-afp.org/entries/Van_der_Waerden.html][Van der Waerden's theorem in Isabelle/HOL]]. ~ Katharina Kreuzer, Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://www.tweag.io/blog/2021-06-23-deconstructing-class/][Deconstructing classes]]. ~ Nicholas Clarke. #Haskell #FunctionalProgramming

*** 22-Jun-21
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13901/pdf/LIPIcs-ITP-2021-6.pdf][A formally verified checker for first-order proofs]]. ~ Seulkee Baek. #ITP #Agda #Logic
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13924/pdf/LIPIcs-ITP-2021-29.pdf][Reaching for the star: Tale of a monad in Coq]]. ~ Pierre Nigron, Pierre-Évariste Dagand. #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13915/pdf/LIPIcs-ITP-2021-20.pdf][Mechanising complexity theory: The Cook-Levin theorem in Coq]]. ~ Lennard Gäher, Fabian Kunze. #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13920/pdf/LIPIcs-ITP-2021-25.pdf][A mechanized proof of the max-flow min-cut theorem for countable networks]]. ~ Andreas Lochbihler. #ITP #IsabelleHOL
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13917/pdf/LIPIcs-ITP-2021-22.pdf][Formalization of basic combinatorics on words]]. ~ Štěpán Holub, Štěpán Starosta. #ITP #IsabelleHOL
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13926/pdf/LIPIcs-ITP-2021-31.pdf][Proof Pearl: Playing with the Tower of Hanoi formally]]. ~ Laurent Théry. #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13896/pdf/LIPIcs-ITP-2021-1.pdf][The CakeML project's quest for ever stronger correctness theorems]]. ~ Magnus O. Myreen. #ITP #HOL4
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13911/pdf/LIPIcs-ITP-2021-16.pdf][A natural formalization of the mutilated checkerboard problem in Naproche]]. ~ Adrian De Lon, Peter Koepke, Anton Lorenzen. #ITP #Naproche
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13905/pdf/LIPIcs-ITP-2021-10.pdf][Verified progress tracking for timely dataflow]]. ~ M. Brun, S. Decova, A. Lattuada, D. Traytel. #ITP #IsabelleHOL
+ [[https://github.com/leanprover-community/mathlib/blob/master/src/geometry/euclidean/sphere.lean][Ptolemy’s Theorem in Lean]]. ~ Manuel Candales, Benjamin Davidson. #ITP #LeanProver #Math
+ [[https://cacm.acm.org/magazines/2021/7/253452-formal-software-verification-measures-up/fulltext][Formal software verification measures up]]. ~ Samuel Greengard. #FormalVerification
+ [[https://cacm.acm.org/magazines/2021/7/253448-program-verification/fulltext][Program verification: Vision and reality]]. ~ Moshe Y. Vardi. #FormalVerification
+ [[https://arxiv.org/abs/2106.10966][Consequence relations (An introduction to the Tarski-Lindenbaum method)]]. ~ Alex Citkin, Alexey Muravitsky. #eBook #Logic #Math

*** 21-Jun-21
+ [[https://cj-xu.github.io/abm19/mainzer.pdf][From proof theory to proof assistants (Challenges of responsible software and AI)]]. ~ Klaus Mainzer. #ITP #Coq #AI
+ [[https://www.isa-afp.org/entries/IMP_Compiler.html][A shorter compiler correctness proof for language IMP]]. ~ Pasquale Noce. #ITP #IsabelleHOL
+ [[https://isabelle.systems/conventions/][Isabelle community conventions]]. #ITP #IsabelleHOL
+ [[https://search.isabelle.in.tum.de][FindFacts: Experimental search platform for Isabelle and the AFP]]./# #ITP #IsabelleHOL
+ [[https://isabelle.systems/][Isabelle quick access links]]. #ITP #IsabelleHOL
+ [[https://cdsmithus.medium.com/hmock-first-rate-mocks-in-haskell-e59d7c3b066c][HMock: first rate mocks in Haskell]]. ~ Chris Smith (@cdsmithus). #Haskell #FunctionalProgramming
+ [[https://youtu.be/S0HvfXq3454][A new kind of programming: Tactic metaprogramming in Haskell]]. ~ Sandy Maguire. #Haskell #FunctionalProgramming
+ [[https://youtu.be/n4IgYrc0pes][Testing smart contracts with QuickCheck]]. ~ John Hughes. #Haskell #FunctionalProgramming
+ [[https://youtu.be/wJsXjsCvSPg][Lift unliftable (and unlift liftable)]]. ~ Veronika Romashkina (@vrom911). #Haskell #FunctionalProgramming

*** 20-Jun-21
+ [[https://doisinkidney.com/pdfs/algebras-for-weighted-search.pdf][Algebras for weighted search]]. ~ Donnacha Oisín Kidney, Nicolas Wu. #Haskell #FunctionalProgramming
+ [[https://byorgey.wordpress.com/2021/06/19/competitive-programming-in-haskell-folding-folds/][Competitive programming in Haskell: folding folds]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://mkdoku.github.io/posts/2021-06-19-molecular-dynamics.html ][Molecular dynamic simulations in Haskell]]. ~ Sascha Bubeck (@SaschaBubeck). #Haskell #FunctionalProgramming

*** 19-Jun-21
+ [[https://www.nature.com/articles/d41586-021-01627-2 ][Mathematicians welcome computer-assisted proof in 'grand unification' theory]]. ~ Davide Castelvecchi. #ITP #LeanProver #Mat
+ [[https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/489454/thesis.pdf?sequence=3][Formal verification of composable security proofs]]. ~ Seyed Reza Sefidgar. #PhDThesis #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2106.07707v1][An alternative axiomatic presentation of Nelson algebras]]. ~ Juan Manuel Cornejo, Andrés Gallardo, Luiz Monteiro, Ignacio Viglizzo. #ATP #Prover9 #Mace4 #Math

*** 17-Jun-21
+ [[https://youtu.be/ikR4T44PT9w][La gran familia de los números]]. ~ Raúl Ibáñez. #Matemáticas
+ [[https://youtu.be/8LUPWXW_6rc][Computer says 'I don't know' (The case for Honest AI)]]. ~ Peter Flach. #AI via @hakankj

*** 15-Jun-21
+ [[https://benjaminselfridge.github.io/haskell/mathematics/2021/06/13/finite-algebra-1.html][Finite abstract algebra in Haskell]]. ~ Ben Selfridge. #Haskell #FunctionalProgramming #Math
+ [[https://www.ps.uni-saarland.de/~koch/bachelor/incompleteness.pdf][Undecidability and incompleteness of second-order logic]]. ~ Mark Koch. #ITP #Cog #Logic #Math
+ [[https://samuelgruetter.net/assets/lightbulb_pldi21.pdf][Integration verification across software and hardware for a simple embedded system]]. ~ A. Erbsen, S. Gruetter, J. Choi, C. Wood, A. Chlipala. #ITP #Coq
+ [[https://www.cis.upenn.edu/~sweirich/papers/spector-zabusky-thesis.pdf][Don’t mind the formalization gap: The design and usage of Hs-to-Coq]]. ~ Antal Spector-Zabusky. #PhD_Thesis #ITP #Coq #Haskell #FunctionalProgramming

*** 14-Jun-21
+ [[https://arxiv.org/abs/2106.05987][Hybrid systems verification with Isabelle/HOL: Simpler syntax, better models, faster proofs]]. ~ Simon Foster, Jonathan Julián Huerta y Munive, Mario Gleirscher, Georg Struth. #ITP #IsabelleHOL

*** 13-Jun-21
+ [[https://micahcantor.xyz/blog/median-heap-haskell][Median heaps in Haskell]]. ~ Micah Cantor. #Haskell #FunctionalProgramming
+ [[https://bit.ly/3xiBmyF][Theorem proving and Artificial Intelligence (A brief introduction)]]. ~ Josef Urban. #ATP #ITP #AI #MachineLearning
+ [[https://bit.ly/3gl4akg][Towards a human-like reasoning system]]. ~ Mateja Jamnik. #ATP #AI
+ [[https://bit.ly/35hF7IB][Mathematical reasoning in humans]]. ~ Jay McClelland. #AI #Math
+ [[https://bit.ly/2RT6ANU][From Hammer to Scalpel: Progress in Automated Theorem Proving]]. ~ Markus Rabe. #ATP #AI
+ [[https://bit.ly/3xlg1EC][Training a first-order theorem prover from synthetic data]]. ~ Vlad Firoiu et als. #ATP #AI #MachineLearning
+ [[https://mathai-iclr.github.io/papers/papers/MATHAI_18_paper.pdf][Training a first-order theorem prover from synthetic data]]. ~ Vlad Firoiu et als. #ATP #AI #MachineLearning
+ [[https://arxiv.org/abs/2102.06203][Proof artifact co-training for theorem proving with language models]]. ~ Jesse Michael Han, Jason Rute, Yuhuai Wu, Edward W. Ayers, Stanislas Polu. #ITP #LeanProver #MachineLearning
+ [[https://bit.ly/3wm5hG3][Neural theorem proving in Lean using proof artifact co-training and language models]]. ~ Jesse Michael Han. #ITP #LeanProver #MachineLearning
+ [[https://youtube.com/playlist?list=PLp2qifo30hMuNgmUUhgl82DTK2JTUqK6M][Video series "Haskell by Example"]]. ~ Michael Oswald. #Haskell #FunctionalProgramming

*** 12-Jun-21
+ [[https://ensiwiki.ensimag.fr/images/2/20/Rapport_cousin_marie.pdf][Formalisation du théorème de décomposition de Hahn avec le démonstrateur interactif Isabelle]]. ~ Marie Cousin. #ITP #IsabelleHOL #Math
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13884/pdf/LIPIcs-TYPES-2020-5.pdf][Synthetic completeness for a terminating Seligman-Style tableau system]]. ~ Asta Halkjær From. #ITP #IsabelleHOL #Logic #Math
+ [[https://youtu.be/aIObfpWdDbo][Teaching computers about numbers]]. ~ Kevin Buzzard  (@XenaProject). #ITP #LeanProver #Math
+ [[http://www.cse.unsw.edu.au/~crizkallah/theses/harrison-scott-honours-thesis.pdf][Towards a verified compiler from Cogent to LLVM]]. ~ Harrison Jay Scott. #BsC_Thesis #ITP #Coq
+ [[https://www.cse.chalmers.se/~abela/agda/MultiSortedAlgebra.pdf][Birkhoff's completeness theorem for multi-sorted algebras formalized in Agda]]. ~ Andreas Abel. #ITP #Agda #Math
+ [[https://www.cs.bham.ac.uk/~txw467/lics21.pdf][Global optimisation with constructive reals]]. ~ Dan R. Ghica, odd Waugh Ambridge. #ITP #Agda #Math
+ [[https://tonyday567.github.io/posts/avoid/][Haskell and the elegant attack]]. ~ Tony Day (@tonyday567). #Haskell #FunctionalProgramming
+ [[https://youtu.be/bwI3MSWQ-po][Demostración del teorema de Cantor-Schröder-Bernstein]]. ~ Urtzi Buijs (@archimedestub). #Matemáticas
+ [[https://rebeccaskinner.net/posts/2021-06-09-getting-to-the-fixed-point.html][The fixed point]]. ~ Rebecca Skinner. #Haskell #FunctionalProgramming

*** 11-Jun-21
+ [[https://exlean.org/blog/][What the rec? Types dependent on terms, Lean eliminators, and threshold concepts]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver
+ [[https://www.softwarefactory-project.io/practical-haskell-use-cases.html][Practical Haskell use cases]]. #Haskell #FunctionalProgramming
+ [[https://marcosh.github.io/post/2021/06/04/introducing-haskell-in-soisy.html][Introducing Haskell in Soisy]]. ~ Marco Perone. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2106.05784][Programming puzzles]]. ~ Tal Schuster, Ashwin Kalyan, Oleksandr Polozov, Adam Tauman Kalai. #Programming #Python
+ [[https://github.com/microsoft/PythonProgrammingPuzzles][Python Programming Puzzles (P3)]]. #Programming #Python
+ [[https://www.lemonde.fr/blog/binaire/2021/06/11/des-bibliotheques-aux-logiciels-une-histoire-damour/][Des bibliothèques aux logiciels: une histoire d’amour!]] ~ Sabrina Granger. #Programming
+ [[https://youtu.be/6otIuI89fcU][Jornada sobre Inteligencia Artificial de los Institutos de Investigación de la Universidad de Zaragoza]]. #IA

*** 10-Jun-21
+ [[https://link.springer.com/content/pdf/10.1007%2Fs10817-020-09584-7.pdf][Certified quantum computation in Isabelle/HOL]]. ~ Anthony Bordg, Hanna Lachnitt, Yijun He. #ITP #IsabelleHOL
+ [[https://icube-publis.unistra.fr/docs/15134/hal.pdf][Combining pencil/paper proofs and formal proofs, a challenge for Artificial Intelligence and mathematics education]]. ~ Julien Narboux, Viviane Durand-Guerrier. #ITP #Coq #Math
+ [[https://ilyasergey.net/assets/pdf/papers/Watanabe-MComp.pdf][A framework for certified program synthesis]]. ~ Yasunari Watanabe. #PhDThesis #ITP #Coq

*** 09-Jun-21
+ [[https://arxiv.org/abs/2106.03906][Learning to guide a saturation-based theorem prover]]. ~ Ibrahim Abdelaziz et als. #ATP #MachineLearning
+ [[https://coqmath.blogspot.com/2015/01/learning-set-theory-through-coq-part-1.html][Learning set theory through Coq (part 1)]]. ~ Kyle Stemen. #ITP #Coq #Math
+ [[https://coqmath.blogspot.com/2015/02/learning-set-theory-through-coq-part-2.html][Learning set theory through Coq (part 2)]]. ~ Kyle Stemen. #ITP #Coq #Math
+ [[https://coqmath.blogspot.com/2015/02/learning-set-theory-through-coq-part-3.html][Learning set theory through Coq (part 3)]]. ~ Kyle Stemen. #ITP #Coq #Math

*** 08-Jun-21
+ [[https://arxiv.org/abs/2106.01184][Formally verified convergence of policy-rich DBF routing protocols]]. ~ Matthew L. Daggitt, Timothy G. Griffin. #ITP #Agda
+ [[https://d1wqtxts1xzle7.cloudfront.net/66762807/tphols05.pdf?1619895651=&response-content-disposition=inline%3B+filename%3DTeaching_a_HOL_course_Experience_report.pdf&Expires=1623139510&Signature=FnVfzvP4dk3Wo~3AiYraNZVPRtbII4B6XawBO4iMOhP~nJIzG39oRQfdKJFy8Ts9Pi6NuS5QcnBgdASL0XaM4OlO46wQsWe~y5kt70-UdA-iYGnXcsK-t7iyx~MF6OIKGEspN3AbRas1WKEyRRniSGsJmfmwvXVlH0u202o-GXHehmk5F8agabp9EqSwST3-8IiOwCLDJTWsBdjN22CXs~3YVPUnn0FFjoND5Rmg5hRpfzSpLo1CGmsShzNA3kQLQ~OJ7G3BTfvgY~-OM30x4UOFJ4Sor-waAeerRNJGy-uFoIqJwdhkyoh6-6XfpWZ1KJ8HpvhHOIl-h7Ilt-~9Xg__&Key-Pair-Id=APKAJLOHF5GGSLRBV4ZA][Teaching a HOL course: experience report]]. ~ Konrad Slind et als. #ITP #HOL4
+ [[https://slate.com/technology/2021/05/artificial-intelligence-moonshots-usually-fail.html][Why A.I. Moonshots Miss (Ambitious predictions about the future powers of computers keep turning out to be wrong).]] ~ Jeffrey Funk, Gary Smith. #AI
+ [[https://arxiv.org/abs/2104.05207 Liao Zhang, Lasse Blaauwbroek, Bartosz Piotrowski, Prokop Černý, Cezary Kaliszyk, Josef Urban.][Online machine learning techniques for Coq: a comparison]]. ~ #ITP #Coq #MachineLearning
+ [[https://arxiv.org/abs/2106.03015][Learning proofs for the classification of nilpotent semigroups]]. ~ Carlos Simpson. #ATP #MachineLearning #Math
+ [[https://bor0.wordpress.com/2021/06/07/re-inventing-the-monad-wheel/][Re-inventing the Monad wheel]]. ~ Boro Sitnikovski (@BSitnikovski). #Haskell #FunctionalProgramming

*** 07-Jun-21
+ [[https://logicaltypes.blogspot.com/2021/06/why-kleisli-arrow-matter.html][Why Kleisli arrows matter]]. ~ Douglas M. Auclair (geophf). #Haskell #FunctionalProgramming
+ [[https://github.com/williamdemeo/TypeFunc][TypeFunc: This repository collects some links and resources for learning about type theory, functional programming, and related subjects]]. ~  Avatar William DeMeo. #ITP #FunctionalProgramming #Agda #Coq #Haskell #Idris #LeanProver #Scala

*** 06-Jun-21
+ [[https://youtu.be/w11mI67R95I][Roger Penrose explains Godel's incompleteness theorem in 3 minutes]]. #Logic #Math
+ [[https://xenaproject.wordpress.com/2021/06/05/half-a-year-of-the-liquid-tensor-experiment-amazing-developments/][Half a year of the Liquid Tensor Experiment: Amazing developments]]. ~ Peter Scholze. #ITP #LeanProver #Math

*** 05-Jun-21
+ [[https://paulaneeley.com/wp-content/uploads/2021/05/draft1.pdf][A formalization of dynamic epistemic logic]]. ~ Paula Neeley. #ITP #LeanProver #Logic
+ [[https://arxiv.org/abs/2105.14183][Verified quadratic virtual substitution for real arithmetic]]. ~ Matias Scharager, Katherine Cordwell, Stefan Mitsch, André Platzer. #ITP #IsabelleHOL #Logic #Math
+ [[https://etd.ohiolink.edu/apexprod/rws_etd/send_file/send?accession=ohiou1618999718015199&disposition=inline][Verifying value iteration and policy iteration in Coq]]. ~ David M. Masters. #MSc_Thesis #ITP #Coq #MachineLearning
+ [[https://www.ps.uni-saarland.de/~kirst/downloads/abstract_CoqWS_21.pdf][A toolbox for mechanised first-order logic]]. ~ Johannes Hostert, Mark Koch, Dominik Kirst. #ITP #Coq #Logic #Math
+ [[https://arxiv.org/abs/2105.14706v1][The role of entropy in guiding a connection prover]]. ~ Zsolt Zombori, Josef Urban, Miroslav Olšák. #ATP #MachineLearning
+ [[https://blog.monadfix.com/th-groups][Declaration groups: where order of declarations suddenly matters in Haskell]]. ~ Artyom Kazak. #Haskell #FunctionalProgramming
+ [[https://www.foxhound.systems/blog/final-tagless/][Final tagless encodings have little to do with typeclasses]]. ~ Ben Levy. #Haskell #FunctionalProgramming
+ [[https://www.stackbuilders.com/tutorials/haskell/getting-started-with-haskell-projects-using-scotty/][Getting started with Haskell projects using Scotty]]. ~ Juan Pedro Villa Isaza. #Haskell #FunctionalProgramming
+ [[https://pbrisbin.com/posts/phantom-types-and-globbing-bugs/][Phantom types and globbing bugs]]. ~ Patrick Brisbin. #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2021/06/probability-for-slay-spire-fanatics.html][Probability for Slay the Spire fanatics]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming #Math
+ [[https://mathscholar.org/2021/06/bach-as-mathematician/][Bach as mathematician]]. ~ David H Bailey. #Math #Music #Bach

*** 04-Jun-21
+ [[https://youtu.be/IoCcZ5CjuGc][El Teorema de Cantor-Schröder-Bernstein]]. ~ Urtzi Buijs @archimedestub. #Lógica #Matemática
+ [[https://www.quantamagazine.org/mathematicians-identify-threshold-at-which-shapes-give-way-20210603/][Mathematicians identify threshold at which shapes give way]]. ~ Mordechai Rorvig. #Math

*** 03-Jun-21
+ [[https://janmasrovira.gitlab.io/ascetic-slug/post/haskell-proofs/][Using dependent types to write proofs in Haskell]]. ~ Jan Mas Rovira. #Haskell #FunctionalProgramming #Logic

*** 02-Jun-21
+ [[https://suzdalnitski.medium.com/functional-programming-the-true-silver-bullet-fbeb7cf4a17a][Functional Programming - the True Silver Bullet]]. ~ Ilya Suzdalnitski. #FunctionalProgramming

*** 01-Jun-21
+ [[https://www.quantamagazine.org/how-a-simple-math-puzzle-can-guide-discovery-20210528/][How a simple arithmetic puzzle can guide discovery]]. ~ Pradeep Mutalik. #Math
+ [[https://exlean.org/relations-in-lean/][Relations in Lean]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math
+ [[https://exlean.org/decidable-propositions-i/][Decidable propositions I]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math
+ [[https://exlean.org/decidable-propositions-ii/][Decidable propositions II]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math
+ [[https://exlean.org/decidable-propositions-iii/][Decidable propositions III]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math
+ [[https://exlean.org/vectors-and-dependent-function-types/][Vectors and dependent function types]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math
+ [[https://link.springer.com/article/10.1007/s10516-021-09561-8][The limits of computation]]. ~ A. Powell. #CompSci #LambdaCalculus #TypeTheory
+ [[https://homepages.inf.ed.ac.uk/slindley/papers/nbe-for-edsls-draft-may2021.pdf][Practical normalization by evaluation for EDSLs]]. ~ N. Valliappan, A. Russo, S. Lindley. #Haskell #FunctionalProgramming
+ [[http://www.cs.tufts.edu/t/tech_reports/reports/2021-01/report.pdf][Hook: An embedded domain-specific language for fusing implicit interactions to explicit event handlers]]. ~ Tomoki Shibata, Usamatthew Ahrens, Usarobert J.K. Jacob. #Haskell #FunctionalProgramming
+ [[https://blanqui.gitlabpages.inria.fr/papers/fscd21.pdf][Some axioms for mathematics]]. ~ Frédéric Blanqui et als. #Logic #Math
+ [[http://profs.sci.univr.it/~bonacina/papers/JARLWHistoricSurvey.pdf][Set of support, demodulation, paramodulation: a historical Perspective]]. ~ Maria Paola Bonacina. #ATP #Logic #Math
+ [[https://www.isa-afp.org/entries/Lifting_the_Exponent.html][Lifting the exponent]]. ~ Jakub Kądziołka. #ITP #IsabelleHOL #Math

** Mayo de 2021

*** 31-May-21
+ [[https://www.lavanguardia.com/ciencia/20210531/7484405/maquinas-creativas.html][¿Pueden las máquinas ser creativas?]] ~ Ramón López de Mántaras. #IA
*** 30-May-21
+ [[https://cdsmithus.medium.com/fun-with-category-theory-and-dynamical-systems-f470ea5e7809][Fun with category theory and dynamical systems]]. ~ Chris Smith (@cdsmithus). #CategoryTheory
+ [[https://functional.works-hub.com/learn/representable-functors-by-example-6c5c0][Representable functors: Practical examples]]. ~ Siddharth Bhat. #Haskell #FunctionalProgramming

*** 29-May-21
+ [[https://arxiv.org/abs/2105.10914v1][Quantum and classical registers]]. ~ Dominique Unruh. #ITP #IsabelleHOL
+ [[https://dependenttyp.es/pdf/thesis.pdf][Proof repair]]. ~ Talia Ringer. #PhD_Thesis #ITP #Coq
+ [[https://www.hindawi.com/journals/complexity/2021/5525539/][CoCEC: An automatic combinational circuit equivalence checker based on the interactive theorem prover]]. ~ Wilayat Khan, Farrukh Aslam Khan, Abdelouahid Derhab, Adi Alhudhaif. #ITP #Coq
+ [[https://hal.inria.fr/hal-03233227/document][Some formal tools for computer arithmetic: Flocq and Gappa]]. ~ S. Boldo, G. Melquiond. #ITP #Coq
+ [[https://arxiv.org/abs/2105.12077][A beginner guide to Iris, Coq and separation logic]]. ~ Elizabeth Dietrich. #ITP #Coq
+ [[https://langsec.org/spw21/papers/Chen_LangSec21.pdf][Mechanized type safety for gradual information flow]]. ~ Tianyu Chen, Jeremy G. Siek. #ITP #Agda
+ [[https://arxiv.org/abs/2105.11267v1][Actions you can handle: Dependent types for AI plans]]. ~ Alasdair Hill, Ekaterina Komendantskaya, Matthew L. Daggitt, Ronald P. A. Petrick. #ITP #Agda #AI
+ [[https://langsec.org/spw21/papers/Hardin_LangSec21.pdf][Formal synthesis of filter components for use in security-enhancing architectural transformations]]. ~ David S. Hardin, Konrand L. Slind. #ITP #ACL2

*** 28-May-21
+ [[https://frasertweedale.github.io/blog-fp/posts/2021-05-23-tax-combinators.html][A combinator library for taxes]]. ~ Fraser Tweedale (@hackuador). #Haskell #FunctionalProgramming
+ [[https://cstml.github.io/2021/05/23/applicative.html][Haskell: Applicative]]. ~ Vlad P. Luchian (@Cstml1). #Haskell #FunctionalProgramming
+ [[https://youtu.be/V9_14jjJiuQ][Testing smart contracts with QuickCheck]]. ~ John Hughes. #Haskell #FunctionalProgramming #QuickCheck
+ [[http://www.fstar-lang.org/tutorial/][Proof-oriented programming in F*]]. #ITP #FunctionalProgramming

*** 26-May-21
+ [[https://softwarefoundations.cis.upenn.edu/slf-current][Separation logic foundations (Software Foundations, Volume 6)]]. ~ Arthur Charguéraud. #ITP #Coq
+ [[https://mathlesstraveled.com/2021/05/25/the-natural-number-game/][The Natural Number Game]]. ~ Brent Yorgey. #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/Combinatorics_Words.html][Combinatorics on words basics]]. ~ Štěpán Holub, Martin Raška, Štěpán Starosta. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Combinatorics_Words_Graph_Lemma.html][Graph lemma]]. ~ Štěpán Holub, Štěpán Starosta. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Combinatorics_Words_Lyndon.html][Lyndon words]]. ~ Štěpán Holub, Štěpán Starosta. #ITP #IsabelleHOL
+ [[http://www.jerf.org/iri/post/2958][Functors and monads for people who have read too many "tutorials"]]. ~ Jeremy Bowers. #Haskell #FunctionalProgramming
+ [[https://www.fpcomplete.com/blog/tying-the-knot-haskell/][Tying the Knot in Haskell]]. ~ Michael Snoyman (@snoyberg). #Haskell #FunctionalProgramming

*** 25-May-21
+ [[https://cister-labs.pt/f-ide2021/images/preprints/F-IDE_2021_paper_10.pdf][Verifying time complexity of binary search using Dafny]]. ~ Shiri Morshtein et als. #Dafny #Algorithms
+ [[https://hal.archives-ouvertes.fr/hal-03225987/document][Two new ways to formally prove Dandelin-Gallucci's theorem]]. ~ D. Braun, N. Magaud, P. Schreck. #ITP #Coq #Math
+ [[https://cister-labs.pt/f-ide2021/images/preprints/F-IDE_2021_paper_4.pdf][A logic theory pattern for linearized control systems]]. ~ A. Domenici, C. Bernardeschi. #ITP #PVS

*** 24-May-21
+ [[https://kowainik.github.io/posts/fixity][Fix(ity) me]]. ~ Veronika Romashkina (@vrom911), Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming

*** 23-May-21
+ [[https://etd.ohiolink.edu/apexprod/rws_etd/send_file/send?accession=ouhonors161919616626269&disposition=inline][Translating LaTeX to Coq: A recurrent neural network approach to formalizing natural language proofs]]. ~ Benjamin A. Carman. #PhD_Thesis #ITP #Coq #NeuralNetwork
+ [[https://eprint.iacr.org/2021/588.pdf][A novel proof of shuffle: Exponentially secure cut-and-choose]]. ~ Thomas Haines, Johannes Müller. #ITP #Coq
+ [[https://langsec.org/spw21/papers/Egolf_LangSec21.pdf][Verbatim: A verified lexer generator]]. ~ D. Egolf, S. Lasser, K. Fisher. #ITP #Coq
+ [[https://github.com/openai/miniF2F][miniF2F: Formal to Formal Mathematics Benchmark consisting of exercise statements from olympiads (AMC, AIME, IMO)]]. #ITP #LeanProver #Math
+ [[http://www.netlib.org/tex/bib/jfunctprogram.pdf][A complete bibliography of publications in the Journal of Functional Programming]]. ~ Nelson H.F. Beebe. #FunctionalProgramming

*** 21-May-21
+ [[https://blog.shaynefletcher.org/2021/05/annotations-in-ghc.html][Annotations in GHC]]. ~ Shayne Fletcher. #Haskell #FunctionalProgramming
+ [[https://www.quantamagazine.org/mathematicians-answer-old-question-about-odd-graphs-20210519/][Mathematicians answer old question about odd graphs]]. ~ Kevin Hartnett (@KSHartnett). #Maths
+ [[https://github.com/project-oak/silveroak][Silver Oak: Formal specification and verification of hardware, especially for security and privacy]]. #ITP #Coq
+ [[https://outline.com/he3HH7][An AI has disproved five mathematical conjectures with no human help]]. #AI #Math
+ [[https://arxiv.org/abs/2104.14516][Constructions in combinatorics via neural networks]]. ~ Adam Zsolt Wagner. #AI #Math #MachineLearning #NeuralNetwork

*** 20-May-21
+ [[https://www.haskellforall.com/2021/05/module-organization-guidelines-for.html][Module organization guidelines for Haskell projects]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming
+ [[https://github.com/Debdut/oeis.haskell][A collection of OEIS sequences in Haskell]]. ~ Debdut Karmakar (@KarmakarDebdut). #Haskell #FunctionalProgramming #Math

*** 18-May-21
+ [[https://arxiv.org/abs/2105.05133][Formally verified simulations of state-rich processes using interaction trees in Isabelle/HOL]]. ~ Simon Foster, Chung-Kil Hur, Jim Woodcock. #ITP #IsabelleHOL
+ [[https://www.mat.unb.br/~ayala/Formalization_of_Ring_TheoryR1.pdf][Formalization of ring theory in PVS (Isomorphism theorems, principal, prime and maximal ideals, chinese remainder theorem)]]. ~ Thaynara Arielly de Lima et als. #ITP #PVS #Math
+ [[https://lmcs.episciences.org/7478/pdf][Computable analysis and notions of continuity in Coq]]. ~ H. Thies, L. Thery, F. Steinberg. #ITP #Coq #Math

*** 17-May-21
+ [[https://github.com/leanprover-community/mathlib/blob/9084a3c765f7177d6466c72563998b9f48cf8e81/src/order/fixed_points.lean][Fixed point construction on complete lattices]]. ~ Johannes Hölzl et als. #ITP #LeanProver #Math

*** 16-May-21
+ [[https://arxiv.org/abs/2104.14516][Constructions in combinatorics via neural networks]]. ~ Adam Zsolt Wagner. #MachineLearning #Math

*** 15-May-21
+ [[https://www.researchgate.net/profile/Angeliki-Koutsoukou-Argyraki/publication/351126012_On_Preserving_the_Computational_Content_of_Mathematical_Proofs_Toy_Examples_for_a_Formalising_Strategy/links/60895dfe299bf1ad8d632b7b/On-Preserving-the-Computational-Content-of-Mathematical-Proofs-Toy-Examples-for-a-Formalising-Strategy.pdf][On preserving the computational content of mathematical proofs: toy examples for a formalising strategy]]. ~ Angeliki Koutsoukou-Argyraki. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Padic_Ints.html][Hensel's Lemma for the p-adic integers (in Isabelle/HOL)]]. ~ Aaron Crighton. #ITP #IsabelleHOL #Math
+ [[https://typeclasses.com/phrasebook][The Haskell Phrasebook]]. ~ Chris Martin (@chris__martin), Julie Moronuki (@argumatronic). #Haskell #FunctionalProgramming
+ [[https://haskell.mooc.fi/part1][Haskell MOOC University of Helsinki]]. ~ Joel Kaasinen, John Lång. #Haskell #FunctionalProgramming
+ [[http://counterexamples.org/][Counterexamples in type systems]]. ~ Stephen Dolan. #TypeTheory
+ [[https://youtu.be/RSJrBEhdZxw][Qué son los algoritmos y cómo aprenden de nosotros]]. | BBC Mundo. #Algoritmos

*** 14-May-21
+ [[https://www.microsiervos.com/archivo/ia/enigma-gpt-2-trabajo-falso.html][Enigma GPT-2: ¿Puedes distinguir un artículo real de otro falso generado mediante inteligencia artificial simplemente leyendo el resumen?]]. ~ @Alvy. #IA
+ [[https://theconversation.com/regreso-al-futuro-de-las-matematicas-si-hipatia-levantara-la-cabeza-158094][Regreso al futuro de las matemáticas: Si Hipatia levantara la cabeza]]. ~ Patricia Contreras Tejada (@_PatriciaCT). #Matemáticas

*** 12-May-21
+ [[https://patternsinfp.wordpress.com/2021/05/10/the-genuine-sieve-of-eratosthenes/][The Genuine Sieve of Eratosthenes]]. ~ Jeremy Gibbons (@jer_gib). #Haskell #FunctionalProgramming
+ [[https://frasertweedale.github.io/blog-fp/posts/2021-05-12-types-garden-path.html][Type-guided development and garden paths]]. ~ Fraser Tweedale (@hackuador). #Haskell  #FunctionalProgramming
+ [[https://forketyfork.medium.com/why-you-should-learn-functional-programming-type-classes-vs-interfaces-9d2192d20ac2][Why you should learn functional programming: Type classes vs. interfaces]]. ~ @forketyfork #Java #Haskell #FunctionalProgramming
+ [[https://www.quantamagazine.org/how-mathematicians-use-homology-to-make-sense-of-topology-20210511/][How mathematicians use homology to make sense of topology]]. ~ Kelsey Houston-Edwards. #Math

*** 11-May-21
+ [[http://www.cse.chalmers.se/~jomoa/papers/Automated_Conjecturing_in_QuickSpec.pdf][Automated conjecturing in QuickSpec]]. ~ Moa Johansson, Nicholas Smallbone. #Haskell #FuncionalProgramming

*** 10-May-21
+ [[http://functional-algorithms-verified.org/.][Functional algorithms, verified! ~ Tobias Nipkow et als]]. #eBook #ITP #IsabelleHOL #Algorithms
+ [[https://github.com/leanprover-community/mathlib/blob/93e9e0d7057889fe4d5ffea7a3f4b45c236a916b/archive/100-theorems-list/16_abel_ruffini.lean][Construction of an algebraic number that is not solvable by radicals]]. ~ Thomas Browning. #ITP #LeanProver #Math

*** 09-May-21
+ [[https://github.com/IPDSnelting/tba-2021][Slides and exercises of the Lean 4 course "Theorem prover lab: applications in programming languages"]]. ~ Jakob von Raumer, Sebastian Ullrich (@derKha). #ITP #Lean4
+ [[https://github.com/digama0/mm-lean4][Lean 4 Metamath verifier]]. ~ Mario Carneiro. #ITP #Lean4 #Metamath
+ [[https://github.com/digama0/lean-type-theory/releases/download/v1.0/main.pdf][The type theory of Lean]]. ~ Mario Carneiro. #ITP #LeanProver #TypeTheory

*** 06-May-21
+ [[https://www.artofmathematics.org/books][Books: Inquiry-Based Learning Guides]]. #eBooks #Math

*** 05-May-21
+ [[https://www.welcometothejungle.com/en/articles/btc-deep-learning-clojure-haskell][The beauty of functional languages in Deep Learning — Clojure and Haskell]]. ~ Jun Wu. #Clojure #Haskell #FunctionalProgramming #DeepLearning
+ [[https://youtu.be/GtAo8wqWHHg][The IMO Grand Challenge]]. ~ Daniel Selsam. #ITP #LeanProver
+ [[https://www.haskellforall.com/2021/05/the-trick-to-avoid-deeply-nested-error.html][The trick to avoid deeply-nested error-handling code]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming

*** 04-May-21
+ [[https://www.isa-afp.org/entries/Regression_Test_Selection.html][Regression test selection]]. ~ Susannah Mansky. #ITP #IsabelleHOL #Math
+ [[http://people.rennes.inria.fr/Frederic.Besson/itauto.pdf][Itauto: an extensible intuitionistic SAT solver]]. ~ Frédéric Besson. #ITP #Coq #Logic #SAT_Solver
+ [[https://bellmar.medium.com/programming-in-z3-by-learning-to-think-like-a-compiler-401fd46828d5][Programming in Z3 by learning to think like a compiler]]. ~ Marianne Bellotti. #SMT #Z3

*** 03-May-21
+ [[https://arxiv.org/abs/2104.15021][Formalizing the face lattice of polyhedra]]. ~ Xavier Allamigeon, Ricardo D. Katz, Pierre-Yves Strub. #ITP #Coq #Math
+ [[https://youtu.be/mTLuON5eRZI][Lean Together 2021: Panel on teaching with proof assistants]]. #ITP #LeanProver
+ [[https://mazzo.li/posts/haskell-backprop-short.html][Quick and dirty backpropagation in Haskell]]. ~ Francesco Mazzoli (@trascendentale). #Haskell #FunctionalProgramming #NeuralNetwork

*** 02-May-21
+ [[https://www.logicmatters.net/2021/05/01/fefermans-logic-mathematics-and-conceptual-structuralism/][Feferman’s virtual book: Logic, Mathematics, and Conceptual Structuralism]]. ~ Peter Smith (@PeterSmith). #Logic #Math

*** 01-May-21
+ [[https://arxiv.org/abs/2104.11613v1][A formalised theorem in the partition calculus]]. ~ Lawrence C. Paulson. #ITP #IsabelleHOL #Logic #Math
+ [[https://arxiv.org/abs/2104.11622v1][Producing symmetrical facts for lists induced by the list reversal mapping in Isabelle/HOL]]. ~ Martin Raška, Štěpán Starosta. #ITP #IsabelleHOL
+ [[https://schurr.io/academic/pubs/cade2021.pdf][Reliable reconstruction of fine-grained proofs in a proof assistant]]. ~ HJ Schurr, M Fleury, M Desharnais. #ITP #IsabelleHOL
+ [[https://docs.zkproof.org/pages/standards/accepted-workshop4/proposal-leo.pdf][LEO: A programming language for formally verified, zero-knowledge applications]]. ~ C. Chin et als. #ITP #ACL2
+ [[https://shemesh.larc.nasa.gov/fm/papers/itp2021.pdf][Formal verification of termination criteria for first-order recursive functions]]. ~ C.A. Muñoz et als. #ITP #PVS
+ [[https://repository.tudelft.nl/islandora/object/uuid:2d831aa4-df6b-4ab6-983e-9776c710b450][Verifying the semantics of disambiguation rules (Using parse tree repairing for showing safety and completeness of associativity and priority rules)]]. ~ L. Miljak. #ITP #Coq

** Abril de 2021

*** 30-Abr-21
+ [[https://arxiv.org/abs/2104.14445][Trakhtenbrot's theorem in Coq: Finite model theory through the constructive lens]]. ~ Dominik Kirst, Dominique Larchey-Wendling. #ITP #Coq #Logic #Math
+ [[https://github.com/youtakaoka/topos][Topos: Programming language which can treat set and topology]]. #Haskell #FunctionalProgramming #Math
+ [[https://notes.srid.ca/ema-announce][Announcing Ema - Static sites in Haskell]]. ~ Sridhar Ratnakumar. #Haskell #FunctionalProgramming
+ [[https://z.haskell.world/design/2021/04/20/introduce-BIO-a-simple-streaming-abstraction.html][Introduce BIO: A simple streaming abstraction]]. ~ Dong Han. #Haskell #FunctionalProgramming
+ [[https://bit.ly/3344TyV][We are happy being poor: El problema de Erdös-Faber-Lovász]]. ~ Juan Arias de Reyna. #Matemáticas

*** 29-Abr-21
+ [[https://arxiv.org/abs/2104.13792][A mechanised proof of Gödel's incompleteness theorems using Nominal Isabelle]]. ~ Lawrence C. Paulson. #ITP #IsabelleHOL #Logic #Math
+ [[https://arxiv.org/abs/2104.13851][Verified approximation algorithms]]. ~ Robin Eßmann, Tobias Nipkow, Simon Robillard. #ITP #IsabelleHOL #Algorithms
+ [[https://iwilare.com/bsc-thesis.pdf][Formalizations of the Church-Rosser theorem in Agda]]. ~ Andrea Laretto. #ITP #Agda
+ [[https://arxiv.org/abs/2104.13645][Learning from Łukasiewicz and Meredith: Investigations into proof structures (Extended version)]]. ~ Christoph Wernhard, Wolfgang Bibel. #ATP #Prover9 #Logic
+ [[https://www.educative.io/blog/haskell-tutorial][Haskell tutorial: Get started with functional programming]]. ~ Ryan Thelin. #Haskell #FunctionalProgramming

*** 28-Abr-21
+ [[https://www.math.umd.edu/~jda/seminarNotes/carneiro.pdf][Mathematics in the computer]]. ~ Mario Carneiro. #Math #ITP #LeanProver #Metamath #Metamath_Zero
+ [[https://arxiv.org/abs/2104.13117][A verified decision procedure for orders in Isabelle/HOL]]. ~ Lukas Stevens, Tobias Nipkow. #ITP #IsabelleHOL #Logic #Math
+ [[https://www.isa-afp.org/entries/GaleStewart_Games.html][Gale-Stewart games (in Isabelle/HOL)]]. ~ Sebastiaan Joosten. #ITP #IsabelleHOL

*** 27-Abr-21
+ [[https://youtu.be/N7orNWIur-c][Induction and collection up to definable elements: calibrating the strength of parameter-free Δn-minimization]]. ~ Andrés Cordón. #Logic #Math
+ [[https://novo.manzano.pro.br/wp/download/logica-de-programacao-funcional-programe-em-hope/][Lógica de programação funcional: Programe em Hope]]. ~ José Augusto N. G. Manzano, José A. Alonso. #Hope #FunctionalProgramming
+ [[https://github.com/J-AugustoManzano/hope_programe][Código fonte do livro "Lógica de programação funcional: Programe em Hope"]]. ~ José Augusto N. G. Manzano. #Hope #FunctionalProgramming
+ [[https://www21.in.tum.de/~rosskops/papers/metalogic_pre.pdf][Isabelle's metalogic: Formalization and proof checker]]. ~ Tobias Nipkow, Simon Roßkopf. #ITP #IsabelleHOL #Logic
+ [[https://youtu.be/1SCvFDZDLgQ][Mathematical structures in dependent type theory]]. ~ Assia Mahboubi. #ITP #Coq #Math
+ [[https://academic.oup.com/iwc/advance-article/doi/10.1093/iwcomp/iwab012/6232199][Balancing the formal and the informal in user-centred design]]. ~ M.D. Harrison, P. Masci, J.C. Campos. #ITP #PVS
+ [[https://cacm.acm.org/magazines/2021/5/252165-a-satisfying-result/fulltex][A satisfying result]]. ~ Don Monroe.t#.YIeLaVxXfk0.twitter #Math #CompSci #SATSolvers
+ [[https://www.investigacionyciencia.es/noticias/el-producto-de-matrices-en-pos-de-una-meta-mtica-19718][El producto de matrices, en pos de una meta mítica]]. ~ Kevin Hartnett. #Matemáticas #Computación

*** 26-Abr-21
+ [[https://arxiv.org/abs/2104.11613][A formalised theorem in the partition calculus]]. ~ Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/BenOr_Kozen_Reif.html][The BKR decision procedure for univariate real arithmetic (in Isabelle/HOL)]]. ~ Katherine Cordwell, Yong Kiam Tan, André Platzer. #ITP #IsabelleHOL #Math

*** 25-Abr-21
+ [[https://youtu.be/44fb3tI2Cak][Grandes ideas de la Filosofía: Lógica]]. #Lógica
+ [[https://github.com/leanprover-community/mathlib/blob/2ecd65e6de2939f09df9d964782f8ec7ba4aeb5c/archive/imo/imo2001_q2.lean][Formalization in Lean of IMO 2001 Q2]]. ~ Tian Chen. #ITP #LeanProver #Math #IMO

*** 24-Abr-21
+ [[https://arxiv.org/abs/2002.09282][Homotopy Type Theory in Isabelle]]. ~ Joshua Chen. #ITP #IsabelleHOL #HoTT
+ [[https://pp.ipd.kit.edu/uploads/publikationen/dieterichs21masterarbeit.pdf][Formal verification of pattern matching analyses]]. ~ Henning Dieterichs. #ITP #LeanProver
+ [[https://www.ps.uni-saarland.de/~smolka/drafts/icl2021.pdf][Modeling and proving in computational type theory using the Coq proof assistant]]. ~ Gert Smolka. #eBook #ITP #Coq
+ [[https://tel.archives-ouvertes.fr/tel-03202580/document][Formalisation en Coq des algorithmes de filtre numérique calculés en précision finie]]. ~ Diane Gallois-Wong. #ITP #Coq #Math
+ [[https://lmcs.episciences.org/7383/pdf][Logic for exact real arithmetic]]. ~ Helmut Schwichtenberg, Franziskus Wiesnet. #ITP #MinLog #Haskell
+ [[https://home.sandiego.edu/~shulman/papers/induction.pdf][Induction on equality]]. #Logic #Math #CompSci

*** 23-Abr-21
+ [[https://arxiv.org/abs/2104.11157][Ackermann's function in iterative form: A proof assistant experiment]]. ~ Lawrence C Paulson. #ITP #IsabelleHOL
+ [[https://www.danielbrice.net/blog/of-function-instances-and-abstract-syntax/][Of function instances and abstract syntax]]. ~ Daniel Brice. #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/type-families-haskell][Type families in Haskell: The definitive guide]]. ~ Vladislav Zavialov. #Haskell #FunctionalProgramming
+ [[https://www.poberezkin.com/posts/2021-04-21-what-i-wish-somebody-told-me-when-i-was-learning-Haskell.html][What I wish somebody told me when I was learning Haskell]]. ~ Evgeny Poberezkin (@epoberezkin). #Haskell #FunctionalProgramming
+ [[https://spectrum.ieee.org/tech-talk/artificial-intelligence/machine-learning/the-state-of-ai-in-15-graphs][15 graphs you need to see to understand AI in 2021]]. ~ Eliza Strickland. #AI

*** 22-Abr-21
+ [[https://www.pointedset.ca/blog/2020/02/06/proptype.html][A practical difference between Props and Types in Lean]]. ~ Mathieu Guay-Paquet. #ITP #LeanProver
+ [[https://github.com/leanprover-community/mathlib/blob/afa6b72e20728cf46912ef9333d0f08ccebf7a6f/src/geometry/euclidean/sphere.lean][Product of segments of chords in Lean]]. ~ Manuel Candales. #ITP #LeanProver #Math
+ [[https://www.haskellforall.com/2021/04/the-end-of-history-for-programming.html][The end of history for programming]]. ~ Gabriel Gonzalez (@GabrielG439). #Programming

*** 20-Abr-21
+ [[https://arxiv.org/abs/2104.09366][Simple type theory is not too simple: Grothendieck's schemes without dependent types]]. ~ Anthony Bordg, Lawrence Paulson, Wenda Li. #ITP #IsabelleHOL #Math
+ [[https://github.com/mirefek/sokoban.lean][Sokoban implementation in Lean for proving solvability / unsolvability]]. ~ Miroslav Olšák. #ITP #LeanProver
+ [[https://cdsmithus.medium.com/continued-fractions-haskell-equational-reasoning-property-testing-and-rewrite-rules-in-action-77a16d750e3f][Continued fractions: Haskell, equational reasoning, property testing, and rewrite rules in action]]. ~ Chris Smith (@cdsmithus). #Haskell #FunctionalProgramming
+ [[https://medium.com/geekculture/a-random-tour-of-typeclass-in-haskell-87a5a2125e1a][A random tour of typeclass in Haskell]]. ~ Ong Yi Ren. #Haskell #FunctionalProgramming
+ [[https://alpha2phi.medium.com/writing-technical-documentation-with-emacs-276f13284e54][Writing technical documentation with Emacs]]. #Emacs #OrgMode

*** 18-Abr-21
+ [[https://xenaproject.wordpress.com/2021/04/18/induction-on-equality/][Induction on equality]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math

*** 17-Abr-21
+ [[https://arxiv.org/abs/2104.05256][A Coq formalization of Lebesgue integration of nonnegative functions]]. ~ Sylvie Boldo, François Clément, Florian Faissole, Vincent Martin, Micaela Mayero. #ITP #Coq #Math
+ [[https://www.cs.columbia.edu/~rgu/publications/oakland21-li.pdf][A secure and formally verified Linux KVM hypervisor]]. ~ Shih-Wei Li, Xupeng Li, Ronghui Gu, Jason Nieh, John Zhuang Hui. #ITP #Coq
+ [[https://arxiv.org/abs/2104.05516][Machine-checked ZKP for NP-relations: Formally verified security proofs and implementations of MPC-in-the-head]]. ~ José Carlos Bacelar Almeida et als. #EasyCrypt
+ [[https://www.easycrypt.info][EasyCrypt: Computer-aided cryptographic proofs]]. #EasyCrypt
+ [[https://www.easycrypt.info/downloads/tutorial/tutorial-prg.pdf][EasyCrypt: A tutorial]]. ~ Gilles Barthe et als. #EasyCrypt
+ [[https://arxiv.org/abs/2104.05207][Online machine learning techniques for Coq: A comparison]]. ~ Liao Zhang, Lasse Blaauwbroek, Bartosz Piotrowski, Prokop Černý, Cezary Kaliszyk, Josef Urban. #ITP #Coq #MachineLearning
+ [[https://turcomat.org/index.php/turkbilmat/article/download/2435/2138][Balanced Academic Curriculum: Looking for an optimal solution with metaheuristics and functional programming]]. ~ José Miguel Rubio, Cristian Vidal-Silva, Luis Carter, Miguel Tupac-Yupanqui. #Haskell #FunctionalProgramming
+ [[http://gallais.github.io/blog/poltergeist-types][Poltergeist types]]. ~ G. Allais. #Haskell #FunctionalProgramming
+ [[https://ec-jones.github.io/flocking.html][Functional flocks]]. ~ Eddie Jones. #Haskell #FunctionalProgramming
+ [[https://aadaa-fgtaa.github.io/blog/optionally/][Checking for uncheckable: optional constraints]]. #Haskell #FunctionalProgramming

*** 16-Abr-21
+ [[https://plato.stanford.edu/entries/type-theory/][Type theory]]. ~ Thierry Coquand. #TypeTheory
+ [[https://functional.works-hub.com/learn/more-on-types-typeclasses-and-the-foldable-typeclass-e1862][More on types, typeclasses and the foldable typeclass]]. ~ Marty Stumpf. #Haskell #FunctionalProgramming
+ [[https://chrisdone.com/posts/the-movement-principle/][The movement principle]]. ~ Chris Done (@christopherdone). #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2021-04-15-arrows-through-a-different-lens/][Arrows, through a different lens]]. ~ Juan Raphael Diaz Simões. #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2021-04-08-capabilities-ad-hoc-interpreters/][Ad-hoc interpreters with capability]]. ~ Gaël Deest, Andreas Herrmann. #Haskell #FunctionalProgramming
+ [[https://medium.math.dev/lisp-the-web-4c00c88d11f9][Lisp & the Web (Introductory reference guide to creating Web applications with Common Lisp & Google Compute Engine)]]. ~ Ashok Khanna. #CommonLisp #Programming
+ [[https://www.quantamagazine.org/mathematician-disproves-group-algebra-unit-conjecture-20210412/][Mathematician disproves 80-year-old algebra conjecture]]. ~ Erica Klarreich (@EricaKlarreich). #Math

*** 15-Abr-21
+ [[https://github.com/leanprover-community/mathlib/blob/8d3e8b5b2635fc20a27922893cdf852bd0bd5706/archive/imo/imo1977_q6.lean][Formalization in Lean of IMO 1977 Q6]]. ~ Tian Chen. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/3379f3ed992a6bce819a030178082efb6f6a92b4/archive/100-theorems-list/57_herons_formula.lean][Heron's Formula (in Lean)]]. ~ Matt Kempster. #ITP #LeanProver #Math

*** 14-Abr-21
+ [[https://culturacientifica.com/2013/04/24/para-que-sirven-las-matematicas/][¿Para qué sirven las matemáticas?]] ~ Marta Macho Stadler (@MartaMachoS). #Matemáticas

*** 13-Abr-21
+ [[https://www.researchgate.net/profile/David-Fuenmayor/publication/349043183_Topological_semantics_for_paraconsistent_and_paracomplete_logics_in_IsabelleHOL/links/606c0941458515614d3a53c9/Topological-semantics-for-paraconsistent-and-paracomplete-logics-in-Isabelle-HOL.pdf][Topological semantics for paraconsistent and paracomplete logics in Isabelle/HOL]]. ~ David Fuenmayor. #ITP #IsabelleHOL #Logic
+ [[https://jonascarpay.com/posts/2021-01-28-haskell-project-template.html][The working programmer’s guide to setting up Haskell projects]]. ~ Jonas Carpay (@jonascarpay). #Haskell #FunctionalProgramming
+ [[https://jrsinclair.com/articles/2019/what-i-wish-someone-had-explained-about-functional-programming/][Things I wish someone had explained about functional programming (Part 1: Faulty assumptions)]]. ~ James Sinclair (@jrsinclair). #FunctionalProgramming
+ [[https://jrsinclair.com/articles/2019/algebraic-structures-what-i-wish-someone-had-explained-about-functional-programming/][Things I wish someone had explained about functional programming (Part 2: Algebraic structures)]]. ~ James Sinclair (@jrsinclair). #FunctionalProgramming
+ [[https://jrsinclair.com/articles/2019/type-classes-what-i-wish-someone-had-explained-about-functional-programming/][Things I wish someone had explained about functional programming (Part 3: Type classes)]]. ~ James Sinclair (@jrsinclair). #FunctionalProgramming
+ [[https://jrsinclair.com/articles/2019/algebraic-data-types-what-i-wish-someone-had-explained-about-functional-programming/][Things I wish someone had explained about functional programming (Part 4: Algebraic data types)]]. ~ James Sinclair (@jrsinclair). #FunctionalProgramming
+ [[https://github.com/quchen/generative-art][Generative art using Haskell]]. ~ David Luposchainsky (@quch3n). #Haskell #FunctionalProgramming
+ [[https://blogs.elconfidencial.com/tecnologia/tribuna/2021-04-13/programador-software-consultoria-producto-universidad_3030868/][Programar es de pobres: por qué el mundo del 'software' está roto en España]]. ~ Eduardo Manchón (@eduardomanchon). #Programación #Informática

*** 12-Abr-21
+ [[https://github.com/leanprover-community/mathlib/blob/e269dbc17a978dfabe57975b84d0b0250b78a2db/src/tactic/itauto.lean][Intuitionistic tautology (`itauto`) decision procedure in Lean]]. ~ Mario Carneiro. #ITP #LeanProver #Logic
+ [[https://arxiv.org/abs/2104.04095][First-order natural deduction in Agda]]. ~ Louis Warren. #ITP #Agda #Logic
+ [[https://github.com/BartoszMilewski/Publications/tree/master/TheDaoOfFP][The Dao of functional programming]]. ~ Bartosz Milewski (@BartoszMilewski). #Haskell #FunctionalProgramming #CategoryTheory
+ [[https://www.brynmawr.edu/cs/resources/beauty-of-programming][The beauty of programming]]. ~ Linus Torvalds. #Programming
+ [[https://www.vidal-rosset.net/gnus_emacs_as_email_client_in_imap_with_protonmail.html][Gnus Emacs as email client in IMAP with ProtonMail]]. ~ Joseph Vidal-Rosset. #Emacs #ProtonMail

*** 11-Abr-21
+ [[https://osa1.net/posts/2021-04-10-sums-and-products.html][Products and sums, named and anonymous]]. ~ Ömer Sinan Ağacan. #Haskell #FunctionalProgramming

*** 10-Abr-21
+ [[https://arxiv.org/abs/2104.02549][Connecting constructive notions of ordinals in Homotopy Type Theory]]. ~ Nicolai Kraus, Fredrik Nordvall Forsberg, Chuangjie Xu. #ITP #Agda #Logic #Math #HoTT
+ [[https://49jaiio.sadio.org.ar/pdfs/saei/SAEI-12.pdf][Propuesta de enseñanza de la formalización de la Matemática utilizando un asistente de pruebas en estudiantes de la Licenciatura en Ciencias de la Computación]]. ~ Daniel Severın, Alejandro Hernández. #ITP #Coq
+ [[https://github.com/leanprover-community/mathlib/blob/c6b06369392473fe9ebc480fbcfed1695db3e554/archive/imo/imo2008_q3.lean][Formalization in Lean of IMO 2008 Q3]]. ~ Manuel Candales. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2104.01112][NaturalProofs: Mathematical theorem proving in natural language]]. ~ Sean Welleck, Jiacheng Liu, Ronan Le Bras, Hannaneh Hajishirzi, Yejin Choi, Kyunghyun Cho. #ATP #MachineLearning
+ [[https://youtu.be/79ymkGQW3b4][Type theory from the perspective of Artificial Intelligence]]. ~ David McAllester. #TypeTheory #AI
+ [[https://arxiv.org/abs/2104.02466][A review of formal methods applied to machine learning]]. ~ Caterina Urban, Antoine Miné. #MachineLearning #FormalMethods
+ [[https://youtu.be/nmBkU-l1zyc][Prolog meta-interpreters]]. ~ Markus Triska (@MarkusTriska). #Prolog #LogicProgramming

*** 09-Abr-21
+ [[https://www.isa-afp.org/entries/Grothendieck_Schemes.html][Grothendieck's Schemes in Algebraic Geometry]]. ~ Anthony Bordg, Lawrence Paulson, Wenda Li. #ITP #IsabelleHOL #Math
+ [[https://code.world/haskel][Continued fractions in Haskell]]. ~ Chris Smith (@cdsmithus).l#P7oZc6pbWBK6wRaBBMm0goA #Haskell #FunctionalProgramming #Math
+ [[https://bor0.wordpress.com/2021/04/09/algorithmic-puzzle-continuous-increasing-subsequences/][Algorithmic puzzle: Continuous increasing subsequences]]. ~ Boro Sitnikovski (@BSitnikovski). #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2021/04/how-to-replace-proxy-with.html][How to replace Proxy with AllowAmbiguousTypes]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming

*** 08-Abr-21
+ [[https://github.com/leanprover-community/mathlib/blob/a6024f10dde5322da06d1158221e1827d3ba4cfe/archive/imo/imo2008_q4.lean][Formalization in Lean of IMO 2008 Q4]]. ~ Manuel Candales. #ITP #LeanProver #Math
+ [[https://gilmi.me/blog/post/2021/04/06/giml-type-inference][Giml's type inference engine]]. ~ Gil Mizrahi (@_gilmi). #Haskell #FunctionalProgramming
+ [[https://github.com/jimburton/scrabble][Scrabbλe: A one- or two-player implementation of Scrabble for teaching functional programming]]. ~ Jim Burton. #eBook #Haskell #FunctionalProgramming

*** 06-Abr-21
+ [[https://arxiv.org/abs/2104.00506v1][Intuitionistic NF Set Theory]]. ~ Michael Beeson. #Logic #Math #ITP #LeanProver
+ [[https://github.com/leanprover-community/mathlib/blob/82fd6e1e1b9b35249e25d1e19af1df0eb7cf2a15/src/logic/girard.lean][Girard's paradox]]. ~ Mario Carneiro. #ITP #LeanProver #Logic #Math
+ [[https://github.com/leanprover-community/mathlib/blob/89ea423d261b46c4e90e49362a6471a5ceb1d6d5/archive/imo/imo2005_q3.lean][Formalization in Lean of IMO 2005 Q3]]. ~ Manuel Candales. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/1e1eaae6ad91319c1f3cc2f414a0f763b8f15641/archive/imo/imo2008_q2.lean][Formalization in Lean of IMO 2008 Q2]]. ~ Manuel Candales. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/1e1eaae6ad91319c1f3cc2f414a0f763b8f15641/archive/imo/imo2011_q5.lean][Formalization in Lean of IMO 2011 Q5]]. ~ Alain Verberkmoes. #ITP #LeanProver #Math
+ [[https://bor0.wordpress.com/2021/04/05/capturing-number-theory-in-haskell/ https://bor0.wordpress.com/2021/04/05/capturing-number-theory-in-haskell/][Capturing number theory in Haskell]]. ~ Boro Sitnikovski (@BSitnikovski). #Haskell #FunctionalProgramming #Math
+ [[https://erick.navarro.io/blog/auto-build-and-publish-emacs-org-configuration-as-a-website/][Auto build and publish emacs org configuration as a website]]. ~ Erick Navarro (@erickgnavar). #Emacs
+ [[https://hal.archives-ouvertes.fr/hal-03184956/document][Division by zero in Logic and Computing]]. ~ Jan Bergstra. #Logic #Math #CompSci

*** 05-Abr-21
+ [[https://xenaproject.wordpress.com/2021/04/03/induction-and-inductive-types/][Induction, and inductive types]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://youtu.be/LZMtQNdqtvc][Doing mathematics with simple types: Infinitary combinatorics in Isabelle/HOL]]. ~ Lawrence Paulson. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2104.01052][An evaluation of the Archive of Formal Proofs]]. ~ Carlin MacKenzie, Jacques Fleuriot, James Vaughan. #ITP #IsabelleHOL
+ [[https://taylor.fausak.me/2021/04/03/default-exception-handler-in-haskell/][Default exception handler in Haskell]]. ~ Taylor Fausak. #Haskell #FunctionalProgramming
+ [[https://home.fnal.gov/~neilsen/notebook/orgExamples/org-examples.html][Emacs org-mode examples and cookbook]]. ~ Eric H. Neilsen, Jr. #Emacs

*** 04-Abr-21
+ [[https://repositorioaberto.uab.pt/bitstream/10400.2/9925/1/TD_IvoRobert.pdf][ProverX: Rewriting and extending Prover9]]. ~ Ivo Robert. #PhDThesis #ATP #Prover9

*** 03-Abr-21
+ [[https://eprint.iacr.org/2021/397.pdf][SSProve: A foundational framework for modular cryptographic proofs in Coq]]. ~ Carmine Abate et als. #ITP #Coq

*** 02-Abr-21
+ [[https://github.com/J-AugustoManzano/hope][Código fonte do livro "Lógica de programação funcional: Pense em Hope"]]. ~ José Augusto N. G. Manzano. #Hope #FunctionalProgramming
+ [[https://gallais.github.io/pdf/draft_sigbovik21.pdf][Dependent stringly-typed programming]]. ~ @anormalform. #Agda #FunctionalProgramming #ITP
+ [[https://www.stephanschiffels.de/posts/2021-03-24-Haskell-CLI/][Designing command line interfaces in Haskell]]. ~ Stephan Schiffels (@stschiff). #Haskell #FunctionalProgramming
+ [[https://boris-marinov.github.io/category-theory-illustrated/04_order/][Category theory illustrated]]. ~ Boris Marinov (@AlexanderKatt). #CategoryTheory
+ [[https://plato.stanford.edu/entries/category-theory][#SEP: Category theory]]. ~ Jean-Pierre Marquis. #CategoryTheory #Logic #Math

** Marzo de 2021

*** 31-Mar-21
+ [[http://www.andreas-lochbihler.de/pub/basin2021.pdf][Abstract modeling of systems communication in constructive cryptography using CryptHOL]]. ~ D. Basin, A. Lochbihler, U. Maurer, S.R. Sefidgar. #ITP #IsabelleHOL
+ [[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7984526/pdf/978-3-030-72019-3_Chapter_5.pdf][Verified software units]]. ~ Lennart Beringer. #ITP #Coq
+ [[https://github.com/ekmett/linear-logic][linear-logic: a version of intuitionistic linear logic on top of linear Haskell]]. ~ Edward Kmett (@kmett). #Haskell #FunctionalProgramming #Logic
+ [[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7984547/pdf/978-3-030-72019-3_Chapter_10.pdf/?tool=EBI][Do judge a test by its cover: Combining combinatorial and property-based testing]]. ~ Harrison Goldstein, John Hughes, Leonidas Lampropoulos, Benjamin C. Pierce. #Haskell #FunctionalProgramming

*** 30-Mar-21
+ [[https://www.ams.org//journals/bull/0000-000-00/S0273-0979-2021-01726-5/S0273-0979-2021-01726-5.pdf][Varieties of mathematical understanding]]. ~ Jeremy Avigad. #ITP #Math
+ [[https://arxiv.org/abs/2103.13534v1][A formal proof of the Lax equivalence theorem for finite difference schemes]]. ~ Mohit Tekriwal, Karthik Duraisamy, Jean-Baptiste Jeannin. #ITP #Coq #Math
+ [[https://hal.archives-ouvertes.fr/hal-03176024][Verifying min-plus Computations with Coq (extended version with appendix)]]. ~ Lucien Rakotomalala, Pierre Roux, Marc Boyer. #ITP #Coq
+ [[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7984530/][For a few dollars more: Verified fine-grained algorithm analysis down to LLVM]]. ~ Maximilian P.L. Haslbeck, Peter Lammich. #ITP #IsabelleHOL
+ [[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7984549/][Certifying proofs in the first-order theory of rewriting]]. ~ Fabian Mitterwallner, Alexander Lochmann, Aart Middeldorp, Bertram Felgenhauer. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2103.15702][Limits of real numbers in the binary signed digit representation]]. ~ Franziskus Wiesnet, Nils Köpp. #Haskell #FunctionalProgramming #Math
+ [[https://www.microsiervos.com/archivo/matematicas/analisis-complejo-mandelbrot-julia-codigo-abierto.html][El Análisis complejo y una exploración de los conjuntos de Mandelbrot y Julia con código abierto]]. ~ @Alvy. #Matemáticas #Programación
+ [[https://complex-analysis.com/es.html][Análisis complejo (Una introducción visual e interactiva)]]. ~ Juan Carlos Ponce Campuzano. #eBook #Matemáticas
+ [[https://novo.manzano.pro.br/wp/download/logica-de-programacao-funcional-pense-em-hope/][Lógica de programação funcional: Pense em Hope (Exercícios de programação funcional com Hope)]]. ~ José Augusto N. G. Manzano, José A. Alonso Jiménez, María J. Hidalgo Doblado. #eBook #Hope #FunctionalProgramming

*** 29-Mar-21
+ [[https://perl.plover.com/yak/typing/notes.html][Strong typing]]. ~ M-J. Dominus (1999). #Programming
+ [[https://www.cse.chalmers.se/~rjmh/Papers/whyfp.pdf][Why functional programming matters]]. ~ John Hughes. #FunctionalProgramming
+ [[https://www.ams.org/journals/notices/202104/rnoti-p565.pdf][The dawning of a new era in applied mathematics]]. ~ Weinan E. #Math via @emulenews
+ [[https://www.lavanguardia.com/ciencia/20210329/6607152/inteligencia-artificial-nunca-sera-humana.html][La inteligencia artificial nunca será como la humana]]. ~ Ramón López de Mántaras. #IA
+ [[https://github.com/AbstProcDo/Master-Emacs-From-Scratch-with-Solid-Procedures/blob/master/01.semantic-keybinding-en.org][EmacsTutorial01: Semantic keybindings to memorize hundreds of keys instantly]]. #Emacs

*** 27-Mar-21
+ [[https://eprint.iacr.org/2021/397][SSProve: A foundational framework for modular cryptographic proofs in Coq]]. ~ C. Abate, P.G. Haselwarter, E. Rivas, A. Van Muylder, T. Winterhalter, C. Hritcu, K. Maillard, B. Spitters. #ITP #Coq
+ [[https://webspace.science.uu.nl/~swier004/publications/2021-jfp-submission.pdf][A well-known representation of monoids and its application to the function "vector reverse"]]. ~ Wouter Swierstra. #Agda #FunctionalProgramming
+ [[https://arxiv.org/abs/2103.11751v1][Functional Pearl: Witness me - Constructive arguments must be guided with concrete witness]]. ~ Hiromi Ishii. #Haskell #FunctionalProgramming
+ [[https://luctielen.com/posts/combining_folds_using_semigroups/][Combining folds using semigroups]]. ~ Luc Tielen (@luctielen). #Haskell #FunctionalProgramming
+ [[https://kowainik.github.io/posts/internal-functions][Many faces of internal functions]]. ~ Veronika Romashkina (@vrom911). #Haskell #FunctionalProgramming

*** 26-Mar-21
+ [[https://plv.csail.mit.edu/blog/alectryon.html][Alectryon: a collection of tools for writing technical documents that mix Coq code and prose]]. ~ Clément Pit-Claudel. #ITP #Coq via @jjcarett2
+ [[https://www.ereslibre.es/blog/2019/09/building-a-personal-website-with-org-mode.html][Building a personal website with org-mode]]. ~ Rafael Fernández (@ereslibre). #Emacs #OrgMode
+ [[https://emacs.love/weblorg/][Weblorg: A static HTML generator for Emacs and Org-Mode]]. #Emacs #OrgMode

*** 25-Mar-21
+ [[https://lexi-lambda.github.io/blog/2021/03/25/an-introduction-to-typeclass-metaprogramming/][An introduction to typeclass metaprogramming]]. ~ Alexis King (@lexi_lambda). #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2021-03-25-haskell-java/][How to build hybrid Haskell and Java programs]]. ~ Facundo Domínguez, Andreas Hermann. #Haskell #Java

*** 24-Mar-21
+ [[https://courses.cs.washington.edu/courses/cse505/17au/][Course: Programming languages]]. ~ Zach Tatlock, Leonardo De Moura. #CompSci #ITP #LeanProver
+ [[https://docs.google.com/document/d/1V22TC-vf6b7ciBquR5-IK3wJ1WCPhrBLWIP1Tf18z0Y/edit#][Coq fundamentals]]. ~ Zach Tatlock. #ITP #Coq
+ [[https://www.tomhoule.com/leaning-into-calculus-chapter-1/][Leaning into Spivak's calculus]]. ~ Tom Houle (@_tomhoule). #ITP #LeanProver #Math

*** 23-Mar-21
+ [[https://openreview.net/pdf/c9fb7dd359102a00d8676684bd704c54961a5285.pdf][IsarStep: A benchmark for high-level mathematical reasoning]]. ~ W. Li, L. Yu, Y. Wu, L.C. Paulson. #ITP #IsabelleHOL #Math #MachineLearning
+ [[https://arxiv.org/abs/2103.11389][Formal verification of Zagier's one-sentence proof]]. ~ Guillaume Dubach, Fabian Muehlboeck. #ITP #Coq #Math
+ [[https://www.snoyman.com/blog/2021/03/programmer-learning-list/][Programmer learning list]]. ~ Michael Snoyman (@snoyberg). #Programming
+ [[https://github.com/tomjaguarpaw/tilapia/blob/master/Windows10.md][Install GHC, Cabal and Haskell Language Server IDE on Windows 10]]. ~ Will Gould. #Haskell #FunctionalProgramming

*** 21-Mar-21
+ [[https://readerunner.wordpress.com/2021/03/20/diagrams-for-penrose-tiles/][Diagrams for Penrose tiles]]. ~ Chris Reade. #Haskell #FunctionalProgramming #Math

*** 20-Mar-21
+ [[https://arxiv.org/abs/2103.08535v1][Quantum projective measurements and the CHSH inequality in Isabelle/HOL]]. ~ Mnacho Echenim, Mehdi Mhalla. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2103.07543v1][Reasoning about the garden of forking paths]]. ~ Yao Li, Li-yao Xia, Stephanie Weirich. #ITP #Coq
+ [[https://hal.inria.fr/hal-03168208/document][Plotting in a formally verified way]]. ~ Guillaume Melquiond. #ITP #Coq
+ [[https://arxiv.org/abs/2103.06913v1][Classical (co)recursion: Programming]]. ~ Paul Downen, Zena M. Ariola. #Agda #Scheme #Python #Java
+ [[http://web.wakayama-u.ac.jp/~sakama/slide/aspocp2018-slide.pdf][Partial evaluation of logic programs in vector spaces]]. ~ Chiaki Sakama, Hien D. Nguyen, Taisuke Sato, Katsumi Inoue. #LogicProgramming #Math

*** 18-Mar-21
+ [[https://www21.in.tum.de/~haslbema/documents/haslbeck2021thesis.pdf][Verified quantitative analysis of imperative algorithms]]. ~ Maximilian P.L. Haslbeck. #PhDThesis #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Constructive_Cryptography_CM.html][Constructive cryptography in HOL: the communication modeling aspect]]. ~ Andreas Lochbihler, S. Reza Sefidgar. #ITP #IsabelleHOL
+ [[https://www.cs.helsinki.fi/u/jllang/Introduction_to_Lambda_Calculus.pdf][Introduction to lambda calculus]]. ~ John Lång. #LambdaCalculus #FunctionalProgramming
+ [[https://www.quantamagazine.org/avi-wigderson-and-laszlo-lovasz-win-abel-prize-20210317/][Pioneers linking Math and Computer Science win the Abel Prize]]. ~ Kevin Hartnett (@KSHartnett). #Math #CompSci
+ [[https://plus.maths.org/content/laszlo-lovasz-working-mathematical-miracles][László Lovász: Working mathematical miracles]]. ~ Marianne Freiberger. #Math #CompSci
+ [[https://plus.maths.org/content/its-good-have-hard-problems][Avi Wigderson: "It's good to have hard problems"]]. ~ Rachel Thomas. #Math #CompSci
+ [[http://www.cs.toronto.edu/~ledt/papers/Avi/L2.pdf][Cryptography and pseudorandomness]]. ~ Avi Wigderson. #Math #CompSci
+ [[https://www.math.ias.edu/avi/book][Mathematics and computation (A theory revolutionizing technology and science)]]. ~ Avi Wigderson. #eBook #Math #CompSci via @mbelcrypt_vasco

*** 17-Mar-21
+ [[https://arxiv.org/abs/2103.09092][The Agda universal algebra library, Part 2: Structure]]. ~ William DeMeo. #ITP #Agda #Math
+ [[https://youtu.be/5e7UdWzITyQ][Formal methods for the informal engineer (Tutorial 2: The Coq theorem prover)]]. ~ Cody Roux. #ITP #Coq
+ [[https://gilmi.me/blog/post/2021/03/16/bottom-haskell-pyramid][The bottom of the Haskell Pyramid]]. ~ Gil Mizrahi (@_gilmi). #Haskell #FunctionalProgramming
+ [[https://www.math.wustl.edu/~sk/eolss.pdf][The history and concept of mathematical proof]]. ~ Steven G. Krantz. #Logic #Math via @mathematicsprof
+ [[https://ingenieriadesoftware.es/historia-visual-lenguajes-programacion/][Historia visual de los lenguajes de programación]]. ~ Jordi Cabot (@ingdesoftware). #Programación vía @fernand0

*** 16-Mar-21
+ [[https://ps.uni-saarland.de/Publications/documents/KirstHermes_2021_Synthetic.pdf][Synthetic undecidability and incompleteness of first-order axiom systems in Coq]]. ~ Dominik Kirst, Marc Hermes. #ITP #Coq #Logic #Math
+ [[https://webspace.science.uu.nl/~swier004/publications/2020-jfp.pdf][Functional Pearls: Heterogeneous binary random-access lists]]. ~ Wouter Swierstra. #Agda #FunctionalProgramming
+ [[https://kowainik.github.io/images/Haskell_Knowledge_Map.png][Haskell knowledge map]]. ~ Veronika Romashkina (@vrom911), Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://blog.ch3m4.org/2021/03/07/evaluacion-perezosa-en-python-parte-5/][Evaluación perezosa en Python. Parte 5: Formalización de la secuencia perezosa]]. ~ Chema Cortés (@chemacortes). #Python #Programación

*** 15-Mar-21
+ [[https://xenaproject.wordpress.com/2021/03/15/formalising-mathematics-workshop-8-group-cohomology/][Formalising mathematics: workshop 8 (group cohomology)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/Modular_arithmetic_LLL_and_HNF_algorithms.html][Two algorithms based on modular arithmetic: lattice basis reduction and Hermite normal form computation (in Isabelle/HOL)]]. ~ Ralph Bottesch, Jose Divason, Rene Thiemann. #ITP #IsabelleHOL #Math
+ [[https://doisinkidney.com/posts/2021-03-14-hyperfunctions.html][Hyperfunctions]]. ~ Donnacha Oisín Kidney (@oisdk). #Haskell #FunctionalProgramming
+ [[https://www.wikiwand.com/en/List_of_formulae_involving_%CF%80][List of formulae involving π]]. #Math via @mathematicsprof

*** 14-Mar-21
+ [[https://ubikium.gitlab.io/portfolio/2021-03-13-wait-a-moment.html][(((Wait a moment .) .) .) - Composing functions with multiple arguments]]. ~ Philip K. Dick. #Haskell #FunctionalProgramming

*** 13-Mar-21
+ [[https://magnus.therning.org/posts/2021-03-05-000-flycheck-and-hls.html][Flycheck and HLS]]. ~ Magnus Therning. #Emacs #LSPmode #Haskell #HLS via @jneira

*** 12-Mar-21
+ [[https://www.isa-afp.org/entries/Hermite_Lindemann.html][The Hermite–Lindemann–Weierstraß transcendence theorem (in Isabelle/HOL)]]. ~ Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[http://matt.might.net/articles/partial-orders/][Order theory for computer scientists]]. ~ Matt Might (@mattmight). #Math #CompSci #Haskell #FunctionalProgramming via @CompSciFact
+ [[https://www.newyorker.com/culture/culture-desk/what-is-mathematics][What is mathematics?]] ~ Alec Wilkinson. #Math
+ [[https://infinitedescent.xyz/][An infinite descent into pure mathematics]]. ~ Clive Newstead. #eBook #Math
+ [[http://eugeniacheng.com/wp-content/uploads/2017/02/cheng-proofguide.pdf][How to write proofs: a quick guide]]. ~ Eugenia Cheng (@DrEugeniaCheng). #Logic #Math

*** 11-Mar-21
+ [[https://notxor.nueva-actitud.org/2021/03/11/emacs-y-lsp-mode.html][Emacs y lsp-mode]]. #Emacs #LSPmode

*** 10-Mar-21
+ [[https://arxiv.org/abs/2103.05581][The Agda universal algebra library - Part 1: Foundation (Equality, extensionality, truncation, and dependent types for relations and algebras)]]. ~ William DeMeo. #ITP #Agda #Math
+ [[https://link.springer.com/article/10.1007/s00283-020-10037-7][A replication crisis in mathematics?]] ~ Anthony Bordg. #Math #ITP
+ [[http://www.divulgamat.net/index.php?option=com_content&view=article&id=18][Contrastando dos códices matemáticos iluminados]]. ~ Ángel Requena Fraile. #Matemáticas

*** 09-Mar-21
+ [[https://github.com/jespercockx/agda-lecture-notes/blob/master/agda.pdf][Programming and proving in Agda]]. ~ Jesper Cockx (@dregntael). #ITP #Agda #FunctionalProgramming #Haskell
+ [[https://arxiv.org/abs/2103.04519][Formal verification of authenticated, append-only skip lists in Agda: Extended version]]. ~ Victor Cacciari Miraldo, Harold Carr, Mark Moir, Lisandra Silva, Guy L. Steele Jr. #ITP #Agda
+ [[http://conal.net/papers/language-derivatives/paper.pdf][Symbolic and automatic differentiation of languages]]. ~ Conal Elliott. #ITP #Agda
+ [[https://www.isa-afp.org/entries/Projective_Measurements.html][Quantum projective measurements and the CHSH inequality (in Isabelle/HOL)]]. ~ Mnacho Echenim. #ITP #IsabelleHOL
+ [[https://github.com/leanprover-community/mathlib/blob/b25994d522d1368e19a6e568aa7e642d72a95294/src/number_theory/bernoulli_polynomials.lean][Bernoulli polynomials (in Lean prover)]]. ~ Ashvni Narayanan. #ITP #LeanProver #Math
+ [[https://dfithian.github.io/2021/03/08/pruning-unused-haskell-dependencies.html][Pruning unused Haskell dependencies]]. ~ Dan Fithian. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2103.03930][Logical foundations: Personal perspective]]. ~ Yuri Gurevich. #Logic #Math #CompSci
+ [[http://math.fau.edu/yiu/RecreationalMathematics2003.pdf][Recreational Mathematics]]. ~ Paul Yiu. #eBook #Math
+ [[https://cacm.acm.org/blogs/blog-cacm/203554-five-principles-for-programming-languages-for-learners][Five principles for programming languages for learners]]. ~ Mark Guzdial (@guzdial). #CompSci #Teaching #Programming
+ [[https://blog.jpolak.org/?p=2358][Fifteen awesome cross-platform math apps]]. ~ Jason Polak. #Math #CompSci #Programming

*** 08-Mar-21
+ [[https://arxiv.org/abs/2103.03607][Formalizing graph trail properties in Isabelle/HOL]]. ~ Laura Kovacs, Hanna Lachnitt, Stefan Szeider. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2103.03798][Training a first-order theorem prover from synthetic data]]. ~ Vlad Firoiu, Eser Aygun, Ankit Anand, Zafarali Ahmed, Xavier Glorot, Laurent Orseau, Lei Zhang, Doina Precup, Shibl Mourad. #ATP #MachineLearning
+ [[https://arxiv.org/abs/2103.03874][Measuring mathematical problem solving with the MATH dataset]]. ~ Dan Hendrycks, Collin Burns, Saurav Kadavath, Akul Arora, Steven Basart, Eric Tang, Dawn Song, Jacob Steinhardt. #MachineLearning #ITP #Math

*** 07-Mar-21
+ [[https://users-cs.au.dk/birke/papers/free-theorems-sep-logic.pdf ][Theorems for free from separation logic specifications]]. ~ Lars Birkedal et als. #ITP #Coq
+ [[https://www.isa-afp.org/entries/Mereology.html][Mereology (in Isabelle/HOL)]]. ~ Ben Blumson. #ITP #IsabelleHOL #Logic

*** 06-Mar-21
+ [[https://wiki.tfpie.science.ru.nl/images/a/a6/TFPIE_AHF_JV.pdf][Teaching automated reasoning and formally verified functional programming in Agda and Isabelle/HOL]]. ~ Asta Halkjær From, Jørgen Villadsen. #Logic #FunctionalProgramming #ITP #Agda #IsabelleHOL
+ [[https://www.scitepress.org/Papers/2020/98936/98936.pdf][Formalization and verification of reconfigurable discrete-event system using model driven engineering and Isabelle/HOL]]. ~ S. Soualah, Y. Hafidi, M. Khalgui, A. Chaoui, L. Kahloul. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2103.00223][Generalized universe hierarchies and first-class universe levels]]. ~ András Kovács. #ITP #Agda
+ [[https://arxiv.org/abs/2103.01346][Roosterize: Suggesting lemma names for Coq verification projects using deep learning]]. ~ Pengyu Nie, Karl Palmskog, Junyi Jessy Li, Milos Gligoric. #ITP #Coq #DeepLearning
+ [[https://youtu.be/EXpmbAfBNnw][Neural theorem proving in Lean using Proof Artifact Co-training and language models]]. ~ Jason Rute. #ITP #LeanProver #MachineLearning
+ [[https://cmsa.fas.harvard.edu/wp-content/uploads/2021/03/LeanStep-Talk-New-Technology-in-Mathematics-Seminar.pdf][Neural theorem proving in Lean using Proof Artifact Co-training and language models]]. [Slides] ~ Jason Rute. #ITP #LeanProver #MachineLearning
+ [[https://github.com/atarnoam/lean-automata][Proving theorems about regular languages and DFAs in Lean]]. ~ Noam Atar. #ITP #LeanProver
+ [[https://github.com/leanprover-community/mathlib/blob/5962c76fb636d17a041726adcc11299c8a23e2b6/src/algebra/ring/boolean_ring.lean][Boolean rings (in Lean prover)]]. ~ Bryan Gin-ge Chen. #ITP #LeanProver #Math
+ [[https://hgeometry.org/][HGeometry: Computational Geometry in Haskell]]. #Haskell #FunctionalProgramming #Math

*** 05-Mar-21
+ [[https://xenaproject.wordpress.com/2021/03/04/formalising-mathematics-workshop-7-quotients/][Formalising mathematics: workshop 7 (quotients)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://functional.works-hub.com/learn/tutorial-cellular-automata-and-comonads-fc3a6][Tutorial: Cellular automata and comonads]]. ~ Siddharth Bhat. #Haskell #FunctionalProgramming
+ [[https://www.popularmechanics.com/science/math/g29008356/hard-math-problems/][These are the 10 toughest math problems ever solved]]. ~ Dave Linkletter. #Math
+ [[https://www.lemonde.fr/blog/binaire/2021/03/05/linformatique-quelques-questions-pour-se-facher-entre-amis/][L’informatique, quelques questions pour se fâcher entre amis]]. ~ Serge Abiteboul, Inria Paris, Gilles Dowek. #CompSci

*** 04-Mar-21
+ [[https://www.cs.rice.edu/~vardi/comp409/history.pdf][A brief history of Logic]]. ~ Moshe Y. Vardi (2003). #Logic #Math #CompSci via @prathyvsh
+ [[https://arxiv.org/abs/2103.02102][Experimental mathematics approach to Gauss diagrams realizability]]. ~ A. Khan, A. Lisitsa, A. Vernitski. #Prolog #LogicProgramming #Math

*** 03-Mar-21
+ [[https://blog.plover.com/math/topology-doc.html][Short introduction to Topology (for Computer Science grad students)]]. ~ Mark Jason Dominus (2010). #Math via @CompSciFact
+ [[https://jcodev.eu/posts/using-nix-for-haskell-development-in-emacs-with-lsp/][Using Nix for Haskell development in Emacs with LSP]]. ~ Jonas Collberg. #Haskell #Emacs
+ [[https://www.researchgate.net/publication/348829872_Towards_a_Notion_of_Basis_for_Knowledge-Based_Systems_-_Applications][Towards a notion of basis for knowledge-based systems - Applications]]. ~ Gonzalo A. Aranda, Joaquín Borrego, Juan Galán, Daniel Rodríguez. #Math #CompSci

*** 02-Mar-21
+ [[https://youtu.be/UnYrWuOzOlc][AI and Theorem Proving [Video]]]. ~ Josef Urban. #ATP #ITP #MachineLearning #AI
+ [[https://cmsa.fas.harvard.edu/wp-content/uploads/2021/01/Urbanslides.pdf][AI and Theorem Proving [Slides]]]. ~ Josef Urban. #ATP #ITP #MachineLearning #AI
+ [[https://youtu.be/Y0hpHm74FYs][Language modeling for mathematical reasoning [Video]]]. ~ Christian Szegedy. #Logic #Math #AI
+ [[https://cmsa.fas.harvard.edu/wp-content/uploads/2021/01/Language-modeling-for-Mathematical-Reasoning-.pdf ][Language modeling for mathematical reasoning [Slides]]]. ~ Christian Szegedy. #Logic #Math #AI
+ [[https://kowainik.github.io/posts/arrows-zoo][Arrows Zoo]]. ~ Veronika Romashkina (@vrom911), Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://www.cs.utexas.edu/users/EWD/transcriptions/EWD10xx/EWD1011.html][Introducing my fall 1987 course on Mathematical Methodology]]. ~ Edsger W.Dijkstra. #Math

*** 01-Mar-21
+ [[https://www.isa-afp.org/entries/Sunflowers.html][The sunflower lemma of Erdős and Rado (in Isabelle/HOL)]]. ~ René Thiemann. #ITP #IsabelleHOL #Math
+ [[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.303.8201&rep=rep1&type=pdf][12² beautiful mathematical theorems with short proofs]]. ~ Jörg Neunhäuserer. #Math via @@lizardbill
+ [[http://www.cut-the-knot.org/proofs/index.shtml][Proofs in Mathematics]]. ~ Alexander Bogomolny. #Math

** Febrero de 2021

*** 28-Feb-21
+ [[https://cs.nyu.edu/faculty/davise/papers/proof.pdf][Proof verification technology and elementary physics]]. ~ Ernest Davis. #FormalVerification #Physics
+ [[http://h2.jaguarpaw.co.uk/posts/how-i-use-dante/][How I use Dante]]. #Haskell #FunctionalProgramming #Emacs

*** 27-Feb-21
+ [[https://www.scitepress.org/Papers/2020/94644/94644.pdf][Computational logic in the first semester of computer science: An experience report]]. ~ David M. Cerna et als. #Logic #CompSci
+ [[https://arxiv.org/abs/2102.10698v1][Certifying choreography compilation]]. ~ Luís Cruz-Filipe, Fabrizio Montesi, Marco Peressotti. #ITP #Coq

*** 26-Feb-21
+ [[https://xenaproject.wordpress.com/2021/02/25/formalising-mathematics-workshop-6-limits/][Formalising mathematics: workshop 6 (limits)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://mediatum.ub.tum.de/doc/1596550/1596550.pdf][A verified imperative implementation of B-trees (in Isabelle/HOL)]]. ~ Niels Mündle. #ITP #IsabelleHOL
+ [[https://kowainik.github.io/posts/totality][Totality]]. ~ Veronika Romashkina (@vrom911), Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://blog.ch3m4.org/2021/02/15/evaluacion-perezosa-en-python-parte-4/][Evaluación perezosa en Python. Parte 4: Evaluación perezosa avanzada]]. ~ Chema Cortés (@chemacortes). #Python #Programación

*** 25-Feb-21
+ [[https://www.isa-afp.org/entries/Formal_Puiseux_Series.html][Formal Puiseux series (in Isabelle/HOL)]]. ~ Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://blog.drewolson.org/purescript-and-haskell][PureScript and Haskell]]. ~ Drew Olson. #Haskell #PureScript #FunctionalProgramming
+ [[http://math.andrej.com/2021/02/22/burali-forti-in-hott-uf/][The Burali-Forti argument in HoTT/UF]]. ~ Martin Escardo. #Logic #Math #HoTT

*** 24-Feb-21
+ [[https://youtu.be/YqAu1hdd4Z4][Rerecorded introduction to the Algebra of Programming research group]]. ~  Jeremy Gibbons (@jer_gib). #CompSci #Haskell #FunctionalProgramming

*** 23-Feb-21
+ [[https://student.cs.uwaterloo.ca/~cs442/W21/notes/][Course: Principles of Programming Languages]]. ~ Gregor Richards. #Programming #Haskell #Prolog #Pascal #Smalltalk #Erlang #C
+ [[https://cacm.acm.org/magazines/2021/3/250711-knowledge-graphs/fulltext][Knowledge graphs]]. ~ Claudio Gutierrez, Juan F. Sequeda. #AI #Logic #CompSci
+ [[https://cacm.acm.org/magazines/2021/3/250710-the-decline-of-computers-as-a-general-purpose-technology/fulltext][The decline of computers as a general purpose technology]]. ~ Neil C. Thompson, Svenja Spanuth. #CompSci
+ [[https://cacm.acm.org/magazines/2021/3/250705-50-years-of-pascal/fulltext][50 years of Pascal]]. ~ Niklaus Wirth. #Pascal #Programming #CompSci
+ [[https://arxiv.org/abs/2102.10556v1][Inductive logic programming at 30]]. ~ Andrew Cropper, Sebastijan Dumančić, Richard Evans, Stephen H. Muggleton. #ILP #LogicProgramming #MachineLearning

*** 21-Feb-21
+ [[https://link.medium.com/LjTU9hQL3db][A formal proof of safegcd bounds]]. ~ Russell O’Connor, Andrew Poelstra. #ITP #Coq

*** 20-Feb-21
+ [[https://arxiv.org/abs/2102.07636][Formalized Haar measure]]. ~ Floris van Doorn. #ITP #LeanProver #Math
+ [[https://hal.archives-ouvertes.fr/hal-03142192/document][A variant of Wagner’s theorem based on combinatorial hypermaps]]. ~ Christian Doczkal. #ITP #Coq #Math
+ [[https://eprint.iacr.org/2021/147.pdf][IPDL: A simple framework for formally verifying distributed cryptographic protocols]]. ~ Greg Morrisett, Elaine Shi, Kristina Sojakova, Xiong Fan, Joshua Gancher. #ITP #Coq
+ [[http://angg.twu.net/LATEX/2021excuse.pdf][Category theory as an excuse to learn type theory]]. ~ Eduardo Ochs, Selana Ochs. #CategoryTheory #TypeTheory
+ [[https://youtu.be/ipIY7MWhk8s][Introducción al sistema de tipos en Haskell]]. ~ Manuel Soto (@manu_msr). #Haskell #FunctionalProgramming
+ [[https://youtu.be/ipIY7MWhk8s][Type classes: de aprendiz a maestro]]. ~ Alejandro Serrano (@trupill). #Haskell #FunctionalProgramming

*** 19-Feb-21
+ [[https://arxiv.org/abs/2102.09125v1][Formalizing groups in type theory]]. ~ Farida Kachapova. #Logic #Math #ITP
+ [[https://xenaproject.wordpress.com/2021/02/18/formalising-mathematics-workshop-5-filters][Formalising mathematics: workshop 5 (filters)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://en.wikipedia.org/wiki/Filter_(mathematics)][Filter (mathematics)]]. ~ Wikipedia. #Math
+ [[https://en.wikipedia.org/wiki/Filters_in_topology][Filters in topology]]. ~ Wikipedia. #Math
+ [[https://plato.stanford.edu/entries/set-theory/][Set theory (in "The Stanford Encyclopedia of Philosophy")]]. ~ Joan Bagaria (@BagariaJoan). #Logic #Math
+ [[https://www.icrea.cat/security/files/researchers/researcher-sections/pcm_set_theory_long_revised.pdf][Set theory]]. ~ Joan Bagaria (@BagariaJoan). #Logic #Math
+ [[https://www.icrea.cat/security/files/researchers/researcher-sections/mst2019-20.pdf][Models of set theory]]. ~ Joan Bagaria (@BagariaJoan). #Logic #Math #Set_theory
+ [[https://plato.stanford.edu/entries/boolalg-math/][The mathematics of boolean algebra (in "The Stanford Encyclopedia of Philosophy")]]. ~ J. Donald Monk. #Logic #Math

*** 18-Feb-21
+ [[https://alistairb.dev/reflections-on-haskell-for-startup/][Reflections on using Haskell for my startup]]. ~ Alistair Burrowes (@AlistairBuzz). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2102.08595v1][Formalizing relations in type theory]]. ~ Farida Kachapova. #Logic #Math

*** 17-Feb-21
+ [[https://www.lri.fr/~wolff/teach-material/2020-2021/M2-CSMR/index.html][Course: Interactive theorem proving and applications]]. ~ Burkhart Wolff. #ITP #IsabelleHOL
+ [[https://plato.stanford.edu/entries/algebra/][#SEP: Algebra (in "The Stanford Encyclopedia of Philosophy")]]. ~ Vaughan Pratt. #Math
+ [[https://blog.ch3m4.org/2021/02/14/evaluacion-perezosa-en-python-parte-3/][Evaluación perezosa en Python]]. Parte 3: Cachés y memoización. ~ Chema Cortés (@chemacortes). #Python #Programación
+ [[https://arxiv.org/abs/2102.05242][Patterns, predictions, and actions: A story about machine learning]]. ~ Moritz Hardt, Benjamin Recht. #eBook #MachineLearning
+ [[http://mathcentral.uregina.ca/RR/database/RR.09.95/grzesina1.html][A geometric view of the square root algorithm]]. ~ A. Grzesina. #Math #Algorithms

*** 16-Feb-21
+ [[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9348915][Study of Isabelle/HOL on formal algorithm analysis and code generation]]. ~ Haitao Wang, Lihua Song. #ITP #IsabelleHOL
+ [[https://www.researchgate.net/profile/Christoph-Benzmueller/publication/349061647_Cantor's_Theorem_without_Reductio_Ad_Absurdum/links/601e41a592851c4ed54fa746/Cantors-Theorem-without-Reductio-Ad-Absurdum.pdf][Cantor’s theorem without reductio ad absurdum]]. ~ Christoph Benzmüller, David Fuenmayor. #ITP #IsabelleHOL #Logic #Math

*** 15-Feb-21
+ [[https://plato.stanford.edu/entries/fallacies/][#SEP: Fallacies]]. ~ Hans Hansen. #Logic
+ [[https://plato.stanford.edu/entries/algebra-logic-tradition/][#SEP: The algebra of logic tradition]]. ~ Stanley Burris, Javier Legris. #Logic

*** 14-Feb-21
+ [[https://kaygun.tumblr.com/post/643010859143151616/kruskals-algorithm-implemented-in-clojure][Kruskal’s algorithm implemented in Clojure]]. ~ Atabey Kaygun (@Atabey_Kaygun). #Clojure #Algorithms
+ [[https://kaygun.tumblr.com/post/643088741013012480/kruskals-algorithm-in-common-lisp][Kruskal’s algorithm in Common Lisp]]. ~ Atabey Kaygun (@Atabey_Kaygun). #CommonLisp #Algorithms

*** 13-Feb-21
+ [[https://www.researchgate.net/profile/Christoph-Benzmueller/publication/349027173_Value-oriented_Legal_Argumentation_in_IsabelleHOL/links/601b90b5299bf1cc26a00e9a/Value-oriented-Legal-Argumentation-in-Isabelle-HOL.pdf][Value-oriented legal argumentation in Isabelle/HOL]]. ~ Christoph Benzmüller, David Fuenmayor. #ITP #IsabelleHOL
+ [[https://hal.inria.fr/hal-03136002/document][Unsolvability of the quintic formalized in dependent type theory]]. ~ Sophie Bernard, Cyril Cohen, Assia Mahboubi, Pierre-Yves Strub. #ITP #Coq #Math
+ [[https://tel.archives-ouvertes.fr/tel-03107626/document/][Machine-checked computer-aided mathematics]]. ~ Assia Mahboubi. #ITP #Coq #Math
+ [[https://academic.oup.com/logcom/advance-article/doi/10.1093/logcom/exab006/6129486][A study of continuous vector representations for theorem proving]]. ~ StanisŁaw PurgaŁ, Julian Parsert, Cezary Kaliszyk. #ATP #MachineLearning
+ [[https://www.quantamagazine.org/mathematician-solves-computer-science-conjecture-in-two-pages-20190725/][Decades-old computer science conjecture solved in two pages]]. ~ Erica Klarreich (@EricaKlarreich). #Math #CompSci

*** 12-Feb-21
+ [[https://github.com/leanprover-community/mathlib/blob/72141fdc94feec6f394b95c9310687f517bb4d02/src/combinatorics/hall.lean][Hall's Marriage Theorem in Lean]]. ~ Alena Gusakov, Bhavik Mehta, Kyle Miller. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/2f566202f1bbefee115b5b45b48a7127133309c7/src/data/real/liouville.lean][Liouville's theorem in Lean]]. ~ Jujian Zhang. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/983cb905e2468a820d833263bd537686b549267a/archive/imo/imo1987_q1.lean][Formalization in Lean of IMO (International Mathematical Olympiads) 1987, Q1]]. ~ Yury Kudryashov. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2102.05945][A formal proof of modal completeness for provability logic]]. ~ Marco Maggesi, Cosimo Perini Brogi. #ITP #HOL_Light #Logic
+ [[https://youtube.com/playlist?list=PLguYJK7ydFE4aS8fq4D6DqjF6qsysxTnx][HaskellRank: HackerRank in Haskell]]. ~ @tsoding. #Haskell #FunctionalProgramming
+ [[https://blog.ch3m4.org/2021/02/09/evaluacion-perezosa-en-python-parte-2/][Evaluación perezosa en Python - Parte 2: Secuencias infinitas]]. ~ Chema Cortés (@chemacortes). #Python #Programming

*** 11-Feb-21
+ [[https://www.isa-afp.org/entries/Laws_of_Large_Numbers.html][The laws of large numbers (in Isabelle/HOL)]]. ~ Manuel Eberl (@pruvisto). #ITP #IsabelleHOL #Math
+ [[https://xenaproject.wordpress.com/2021/02/10/formalising-mathematics-workshop-4/][Formalising mathematics: workshop 4 (topology)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2102.05547][Learning equational theorem proving]]. ~ Jelle Piepenbrock, Tom Heskes, Mikoláš Janota, Josef Urban. #ATP #MachineLearning
+ [[https://arxiv.org/abs/2102.05616][An algebra of properties of binary relations]]. ~ Jochen Burghardt. #Logic #Math #ATP #Eprover

*** 10-Feb-21
+ [[https://github.com/leanprover-community/mathlib/blob/fdbd4bffdc00b53b0b337ff308378a448b069f7e/archive/imo/imo2013_q1.lean][IMO 2013 Q1 in Lean]]. ~ David Renshaw. #ITP #LeanProver #Math

*** 09-Feb-21
+ [[https://arxiv.org/abs/2102.02679][Certifying differential equation solutions from computer algebra systems in Isabelle/HOL]]. ~ Thomas Hickman, Christian Pardillo Laursen, Simon Foster. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2102.03529][Vampire with a brain is a good ITP hammer]]. ~ Martin Suda. #Vampire #ATP #ITP #MachineLearning
+ [[https://users.utcluj.ro/~agroza/puzzles/maloga/preface.html][Modelling puzzles in First Order Logic]]. ~ Adrian Groza. #Logic #ATP #Prover9
+ [[https://blog.ch3m4.org/2021/02/08/evaluacion-perezosa-en-python-parte-1/][Evaluación perezosa en Python]]. Parte 1: Introducción a la evaluación perezosa. ~ Chema Cortés (@chemacortes). #Python #Programming
+ [[https://www.galoisrepresentations.com/2019/07/17/the-ramanujan-machine-is-an-intellectual-fraud/][The Ramanujan Machine is an intellectual fraud]]. #AI #Math

*** 08-Feb-21
+ [[https://arxiv.org/abs/2102.03003][A verified decision procedure for univariate real arithmetic with the BKR algorithm]]. ~ Katherine Cordwell, Yong Kiam Tan, André Platzer. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2102.02901][A formal proof of the independence of the continuum hypothesis]]. ~ Jesse Michael Han, Floris van Doorn. #ITP #LeanProver #Logic #Math
+ [[https://www.philipzucker.com/javascript-automated-proving/][Automated propositional sequent proofs in your browser with Tau Prolog]]. Philip Zucker (@SandMouth). #ATP #Logic #Prolog #LogicProgramming
+ [[https://fosdem.org/2021/schedule/event/open_research_emacs_orgmode/][Emacs and org-mode for reproducible research]]. (Organize your research in plain text!). ~ Thibault Lestang. #Emacs #OrgMode
+ [[https://www.hhyu.org/posts/literate_config/][Writing the Emacs configuration script in org-mode: a simple example of literate programming]]. ~ Hsin-Hao Yu (@HsinHaoYu). #Emacs

*** 07-Feb-21
+ [[https://www.haskellforall.com/2021/02/folds-are-constructor-substitution.html][Folds are constructor substitution]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming

*** 06-Feb-21
+ [[https://arxiv.org/abs/2102.00378][Model-based testing of networked applications]]. ~ Yishuai Li, Benjamin C. Pierce, Steve Zdancewic. #ITP #Coq
+ [[https://arxiv.org/abs/2102.01167][Verifying the Hashgraph consensus algorithm]]. ~ Karl Crary. #ITP #Coq
+ [[https://www.nature.com/articles/d41586-021-00304-8][AI maths whiz creates tough new problems for humans to solve]]. ~ Davide Castelvecchi. #AI #Math #ITP
+ [[https://www.ramanujanmachine.com/][The Ramanujan Machine (an algorithmic approach to discover new mathematical conjectures)]]. #AI #Math
+ [[https://arxiv.org/abs/1907.00205][The Ramanujan Machine: automatically generated conjectures on fundamental constants]]. ~ Gal Raayoni, Shahar Gottlieb, George Pisha, Yoav Harris, Yahel Manor, Uri Mendlovic, Doron Haviv, Yaron Hadad, Ido Kaminer. #AI #Math
+ [[https://takenobu-hs.github.io/downloads/haskell_ghc_reading_guide.pdf][GHC reading guide (Exploring entrances and mental models to the source code)]]. ~ Takenobu Tani. #Haskell #FunctionalProgramming
+ [[https://cscx.org/][Computer Science by Example]]. #CompSci #Programming

*** 05-Feb-21
+ [[https://arxiv.org/abs/2102.02627][Formalising a Turing-complete choreographic language in Coq]]. ~ Luís Cruz-Filipe, Fabrizio Montesi, Marco Peressotti. #ITP #Coq
+ [[https://arxiv.org/abs/2102.02600][A formalization of Dedekind domains and class groups of global fields]]. ~ Anne Baanen, Sander R. Dahmen, Ashvni Narayanan, Filippo A. E. Nuccio Mortarino Majno di Capriglio. #ITP #LeanProver #Math
+ [[https://alexey.kuleshevi.ch/blog/2021/01/29/random-interface/][New random interface]]. ~ Alexey Kuleshevich. #Haskell #FunctionalProgramming

*** 04-Feb-21
+ [[https://xenaproject.wordpress.com/2021/02/04/formalising-mathematics-workshop-3/][Formalising mathematics: Workshop 3 (Limits of sequences)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://xenaproject.wordpress.com/2018/08/04/what-is-a-filter-how-some-computer-scientists-think-about-limits/][What is a filter? How some computer scientists think about limits]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://xenaproject.wordpress.com/2018/08/05/what-is-a-uniform-space-how-some-computer-scientists-think-about-completions/][What is a uniform space? How some computer scientists think about completions]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://www.researchgate.net/profile/Marco_Bonatto/publication/348662657_Superconnected_left_quasigroups_and_involutory_quandles/links/6009d8bea6fdccdcb86fc158/Superconnected-left-quasigroups-and-involutory-quandles.pdf][Superconnected left quasigroups and involutory quandles]]. ~ Marco Bonatto. #ATP #Prover9 #Math
+ [[https://zacwood.me/posts/haskell-type-application/][Haskell's @ symbol - Type application]]. ~ Zac Wood. #Haskell #FunctionalProgramming

*** 03-Feb-21
+ [[https://jonascarpay.com/posts/2021-01-28-haskell-project-template.html][The working programmer’s guide to setting up Haskell projects]]. ~ Jonas Carpay (@jonascarpay). #Haskell #FunctionalProgramming
+ [[https://www.microsiervos.com/archivo/seguridad/cifrado-monjes-cistercienses.html][El cifrado de los monjes cistercienses: de 0000 a 9999 con «símbolos raros»]]. ~ @Alvy. #Matemáticas

*** 02-Feb-21
+ [[https://www.isa-afp.org/browser_info/current/AFP/IsaGeoCoq/document.pdf][Tarski's parallel postulate implies the 5th postulate of Euclid, the postulate of Playfair and the original parallel postulate of Euclid]]. ~ Roland Coghetto. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Blue_Eyes.html][Solution to the xkcd Blue Eyes puzzle (in Isabelle/HOL)]]. ~ Jakub Kądziołka. #ITP #IsabelleHOL
+ [[https://thma.github.io/posts/2021-01-30-How-QuickCheck-destroyed-my-favourite-theory.html][Proving me wrong (How QuickCheck destroyed my favourite theory)]]. ~ Thomas Mahler. #Haskell #FunctionalProgramming #QuickCheck

*** 01-Feb-21
+ [[https://people.mpi-sws.org/~beta/papers/jlamp20.pdf][Verification of dynamic bisimulation theorems in Coq]]. ~ R Fervari, F Trucco, B Ziliani. #ITP #Coq
+ [[https://arxiv.org/abs/2101.11320v1][Tutorial on implementing Hoare logic for imperative programs in Haskell]]. ~ Boro Sitnikovski. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2101.11421v1][Deriving monadic quicksort (Declarative Pearl)]]. ~ Shin-Cheng Mu, Tsung-Ju Chiang. #Haskell #FunctionalProgramming

** Enero de 2021

*** 31-Ene-21
+ [[https://www.bbc.com/mundo/noticias-55815156][Paul Cohen, el matemático que por resolver un problema terminó creando dos mundos]]. ~ Dalia Ventura. #Matemáticas

*** 30-Ene-21
+ [[https://kilthub.cmu.edu/ndownloader/files/26180729][HELIX: From math to verified code]]. ~ Vadim Zaliva. #PhD_Thesis #ITP #Coq #Math
+ [[https://repository.tudelft.nl/islandora/object/uuid:54b01377-1f79-4758-b79b-4859df05dbd6][Implementing the decomposition of soundness proofs of abstract interpreters in Coq]]. ~ Jens de Waard. #MSc_Thesis #ITP #Coq
+ [[https://arxiv.org/abs/2101.09699][Longest segment of balanced parentheses: an exercise in program inversion in a segment problem (Functional Pearl)]]. ~ Shin-Cheng Mu, Tsung-Ju Chiang. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2101.09700][A greedy algorithm for dropping digits (Functional Pearl)]]. ~ Richard Bird, Shin-Cheng Mu. #Haskell #FunctionalProgramming

*** 29-Ene-21
+ [[https://xenaproject.wordpress.com/2021/01/28/formalising-mathematics-workshop-2][Formalising mathematics: Workshop 2 (Groups and subgroups)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://mjj.io/2021/01/26/building-a-passphrase-generator-in-haskell/][Building a passphrase generator in Haskell]]. ~ Mathias Jean Johansen. #Haskell #FunctionalProgramming
+ [[https://youtu.be/g2--VL2SkMo][What do we mean by equality?]] ~ Kevin Buzzard (@XenaProject). #Logic #Math
+ [[https://youtu.be/ehlXpfFuLvI][¿Cuántos infinitos existen?️ El teorema de Cantor]]. ~ Urtzi Buijs (@UrtziBuijs). #Matemáticas

*** 28-Ene-21
+ [[https://github.com/leanprover-community/mathlib/blob/6585eff99deca6bb21ae0c84c5c7b609c0406189/archive/imo/imo2013_q5.lean][IMO 2013 Q5 in Lean]]. ~ David Renshaw. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2101.11501][Evolution of artificial intelligence languages, a systematic literature review]]. ~ Emmanuel Adetiba, Temitope John, Adekunle Akinrinmade, Funmilayo Moninuola, Oladipupo Akintade, Joke Badejo. #AI #Programming
+ [[https://tecdigital.tec.ac.cr/revistamatematica/Libros/LaTeX/LaTeX_2018.pdf][Edición de textos científicos con LaTeX]]. (Composición, gráficos, Inkscape, Tikz y presentaciones Beamer). ~ Alexánder Borbón, Walter Mora. #LaTeX

*** 27-Ene-21
+ [[https://github.com/leanprover-community/mathlib/blob/1eb1293706c569ef94776d63fd4900923cc66270/archive/imo/imo2011_q3.lean][IMO 2011 Q3 in Lean]]. ~ David Renshaw. #ITP #LeanProver #Math

*** 26-Ene-21
+ [[https://dl.acm.org/doi/pdf/10.1145/3437992.3439910][Teaching algorithms and data structures with a proof assistant]]. ~ Tobias Nipkow. #ITP #IsabelleHOL
+ [[https://lmcs.episciences.org/7124/pdf][2-Adjoint equivalences in Homotopy Type Theory]]. ~ Daniel Carranza, Jonathan Chang, Krzysztof Kapulkin, Ryan Sandford. #ITP #LeanProver #HoTT
+ [[https://arxiv.org/abs/2101.10166][The Agda universal algebra library and Birkhoff's theorem in Martin-Löf dependent type theory]]. ~ William DeMeo. #ITP #Agda #Math
+ [[https://dl.acm.org/doi/pdf/10.1145/3437992.3439924][Formal verification of authenticated, append-only skip lists in Agda]]. ~ Victor Cacciari Miraldo, Harold Carr, Mark Moir, Lisandra Silva, Guy L. Steele Jr. #ITP #Agda
+ [[https://atcm.mathandtech.org/EP2020/invited/21810.pdf][A Haskell implementation of the Lyness-Moler’s numerical differentiation algorithm]]. ~ Weng Kin Ho, Chu Wei Lim. #Haskell #FunctionalProgramming #Math
+ [[https://cacm.acm.org/magazines/2021/2/250078-lets-not-dumb-down-the-history-of-computer-science/fulltext][Let's not dumb down the history of computer science]]. ~ Donald E. Knuth, Len Shustek. #CompSci

*** 25-Ene-21
+ [[https://xenaproject.wordpress.com/2021/01/24/formalising-mathematics-workshop-1][Formalising mathematics: workshop 1]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math

*** 24-Ene-21
+ [[https://www.johndcook.com/blog/2021/01/23/sums-of-consecutive-reciprocals/][Sums of consecutive reciprocals]]. ~ John D. Cook (@JohnDCook). #Math
+ [[https://republicaweb.es/podcast/descubriendo-la-programacion-funcional-lisp-con-diego-sevilla/][Descubriendo la programación funcional: Lisp con Diego Sevilla (@diegosevilla)]]. #Lisp #CommonLisp #ProgramaciónFuncional12

*** 23-Ene-21
+ [[https://youtu.be/4d6B1C0wuaE][Las bases matemáticas de la programación funcional]]. ~ Héctor Iván Patricio Moreno. #ProgramaciónFuncional
+ [[https://arxiv.org/abs/2101.06759][Proceedings of the 2020 Scheme and Functional Programming Workshop]]. #FunctionalProgramming
+ [[https://arxiv.org/abs/2101.06317][Machine-learning mathematical structures]]. ~ Yang-Hui He. #MachineLearning #Math
+ [[https://www.nature.com/articles/d41586-021-00075-2][Ten computer codes that transformed science]]. ~ Jeffrey M. Perkel. #CompSci via @vardi
+ [[https://notxor.nueva-actitud.org/2021/01/22/tablas-para-calculos-en-org-mode.html][Tablas para cálculos en org-mode]]. #Emacs #OrgMode

*** 22-Ene-21
+ [[https://www.lambdabytes.io/posts/teachinghaskell/][Teaching Haskell means teaching important concepts]]. ~ Jonathan Thaler (@JonathanThaler). #Haskell #FunctionalProgramming

*** 21-Ene-21
+ [[https://xenaproject.wordpress.com/2021/01/21/formalising-mathematics-an-introduction/][Formalising mathematics: an introduction]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://maksbotan.github.io/posts/2021-01-20-callstacks.html][Capturing call stack with Haskell exceptions]]. ~ Maxim Koltsov (@maksbotan). #Haskell #FunctionalProgramming
+ [[https://lispcookbook.github.io/cl-cookbook][The Common Lisp Cookbook [in EPUB and PDF format]]]./#download-in-epub #eBook #CommonLisp
+ [[https://www.gaussianos.com/el-numero-de-dottie/][El número de Dottie]]. ~ M.A. Morales (@gaussianos). #Matemáticas

*** 20-Ene-21
+ [[https://raw.githubusercontent.com/DSLsofMath/DSLsofMath/master/L/snapshots/DSLsofMathBook_snapshot_2021-01-17.pdf][Domain-specific languages of Mathematics [Draft of January 17, 2021]]]. ~ Patrik Jansson (@patrikja), Cezar Ionescu, Jean-Philippe Bernardy. #Haskell #FunctionalProgramming #Math
+ [[https://github.com/DSLsofMath/DSLsofMath][DSLsofMath: Domain-specific languages of Mathematics [Repo]]]. ~ Patrik Jansson (@patrikja) et als. #Haskell #FunctionalProgramming #Math

*** 19-Ene-21
+ [[https://youtu.be/S4xl0CtJIb4][A novice-friendly induction tactic for Lean]]. ~ Jannis Limperg. #ITP #LeanProver
+ [[https://bor0.wordpress.com/2021/01/18/towards-hoare-logic-for-a-small-imperative-language-in-haskell/][Towards Hoare logic for a small imperative language in Haskell]]. ~ Boro Sitnikovski (@BSitnikovski). #Haskell #FunctionalProgramming
+ [[https://www.informatics-europe.org/images/ECSS/ECSS2009/slides/Gottlob.pdf][Computer Science as the continuation of Logic by other means]]. ~ Georg Gottlob. #Logic #CompSci

*** 18-Ene-21
+ [[https://leanprover-community.github.io/lt2021/slides/thomas-LT2021-Galois-Theory.pdf][Formalizing Galois Theory in Lean [Slides]]]. ~ Thomas Browning, Patrick Lutz. #ITP #LeanProver #Math
+ [[https://youtu.be/-6z6qTD_vv8][Formalizing Galois Theory in Lean [Vídeo]]]. ~ Thomas Browning, Patrick Lutz. #ITP #LeanProver #Math
+ [[https://bit.ly/2XPH8Iq][Las Matemáticas son suficientes para mí]]. ~ Juan Arias de Reyna. #Matemáticas
+ [[https://alhassy.github.io/org-special-block-extras][org-special-block-extras (A unified interface for special blocks and links: defblock)]]. ~ Musa Al-hassy./#Judgements-Inference-rules-and-proof-trees #Emacs #OrgMode

*** 16-Ene-21
+ [[https://youtu.be/pMCZFrii4lA][Model theory in Lean]]. ~ Vaibhav Karve. #ITP #LeanProver #Logic
+ [[http://people.rennes.inria.fr/Assia.Mahboubi/assia_hdr_thesis.pdf][Machine-checked computer-aided mathematics]]. ~ Assia Mahboubi. #ITP #Coq #Math
+ [[https://martin.desharnais.me/public/documents/cpp2021-Dyn-Inca-Ubx.pdf][Towards efficient and verified virtual machines for dynamic languages]]. ~ Martin Desharnais, Stefan Brunthaler. #ITP #IsabelleHOL
+ [[https://youtu.be/wOQuW6QFdos][From Aristotle to the iPhone]]. ~ Moshe Y. Vardi (@vardi). #Logic #CompSci

*** 15-Ene-21
+ [[https://vaibhavkarve.github.io/leanteach_2020.html][Axiomatic Geometry in Lean]]. ~ Vaibhav Karve, Lawrence Zhao, Edward Kong, Alex Dolcos, Nicholas Phillips. #ITP #LeanProver #Math
+ [[https://youtu.be/K-kLck8BvDM][Axiomatic Geometry in Lean [Video]]]. ~ Vaibhav Karve. #ITP #LeanProver #Math
+ [[https://github.com/vaibhavkarve/leanteach2020][Axiomatic Geometry in Lean [Code]]]. ~ Vaibhav Karve, Lawrence Zhao, Edward Kong, Alex Dolcos, Nicholas Phillips. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2101.05678][Lebesgue integration]]. (Detailed proofs to be formalized in Coq). ~ François Clément, Vincent Martin. #ITP #Coq #Math
+ [[https://juliu.is/permutate-parsers/][Permutate parsers, don't validate]]. ~ Ju Liu (@arkh4m). #Haskell #FunctionalProgramming
+ [[https://youtu.be/9zuAsGk9xoM][An introduction to ghc-debug: precise memory analysis for Haskell programs]]. ~  Matthew Pickering. #Haskell #FunctionalProgramming
+ [[https://tek.brick.do/a6d9388a-208e-4b18-a219-85457faf69aa][Why exactly I want Boring Haskell to happen]]. ~ Artyom Kazak (@availablegreen). #Haskell #FunctionalProgramming
+ [[https://medium.com/cantors-paradise/beginners-guide-to-mathematical-constructivism-4015ca66825d][Beginner’s guide to mathematical constructivism]]. ~ Jan Gronwald. #Math
+ [[https://interstices.info/en-toute-logique-une-origine-de-lordinateur/][En toute logique: une origine de l’ordinateur]]. ~ Frédéric Prost. #Logic #CompSci
+ [[https://notxor.nueva-actitud.org/2021/01/13/publicar-html-con-org-mode.html][Publicar HTML con Org-Mode]]. #Emacs #OrgMode

*** 14-Ene-21
+ [[http://cl-informatik.uibk.ac.at/software/fortissimo/cpp2021/paper.pdf][A verified decision procedure for the first-order theory of rewriting for linear variable-separated rewrite systems]]. ~ Alexander Lochmann, Aart Middeldorp, Fabian Mitterwallner, Bertram Felgenhauer. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/1911.00385][A formal proof of PAC learnability for decision stumps]]. ~ Joseph Tassarotti, Koundinya Vajjha, Anindya Banerjee, Jean-Baptiste Tristan. #ITP #LeanProver
+ [[https://github.com/leanprover-community/mathlib/blob/1509c2950946374803b265830452880816e0f0c1/archive/100-theorems-list/83_friendship_graphs.lean][The friendship theorem in Lean]]. ~ Aaron Anderson. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2009.11403][CertRL: Formalizing convergence proofs for value and policy iteration in Coq]]. ~ Koundinya Vajjha, Avraham Shinnar, Vasily Pestun, Barry Trager, Nathan Fulton. #ITP #Coq
+ [[https://github.com/math-comp/Abel][Abel-Ruffini Theorem as a Mathematical Component]]. ~ Sophie Bernard, Cyril Cohen, Assia Mahboubi, Pierre-Yves Strub. #ITP #Coq #Math
+ [[https://cronokirby.com/posts/2021/01/making-an-io/][Making an IO]]. ~ Lúcás Meier (@cronokirby). #Haskell #FunctionalProgramming

*** 13-Ene-21
+ [[https://www.cs.au.dk/~birke/papers/2021-ms-queue.pdf][Contextual refinement of the Michael-Scott queue (Proof pearl)]]. ~ Simon Friis Vindum, Lars Birkedal. #ITP #Coq
+ [[https://cs.au.dk/~birke/papers/2021-monotone.pdf][Reasoning about monotonicity in separation logic]]. ~ Amin Timany, Lars Birkedal. #ITP #Coq
+ [[https://www-verimag.imag.fr/~monin/Publis/Docs/datalog-cpp21.pdf][Developing and certifying Datalog optimizations in Coq/MathComp]]. ~ Pierre-Léo Bégay, Pierre Crégut, Jean-François Monin. #ITP #Coq
+ [[http://cl-informatik.uibk.ac.at/isafor/papers/cpp2021.pdf][An Isabelle/HOL formalization of AProVE's termination method for LLVM IR]]. ~ Max W. Haslbeck, René Thiemann. #ITP #IsabelleHOL #Haskell
+ [[https://link.springer.com/article/10.1007/s10817-020-09584-7][Certified quantum computation in Isabelle/HOL]]. ~ Anthony Bordg, Hanna Lachnitt, Yijun He. #ITP #IsabelleHOL

*** 12-Ene-21
+ [[http://alexjbest.github.io/talks/lean-generalisation][Automatically generalising theorems using typeclasses in Lean [Slides]]]. ~ Alex  J. Best./#/#ITP #LeanProver #Math
+ [[https://bostonu.zoom.us/rec/play/yPZ5hwU7T5C2wwAUYMKEwed7Y83lsvPEci6CP-AiIel8A9u05OHbOLcAy-mi__tqgg3vBDvhXc4wVY_p.B9N6zDkf2SMpf2Nh?startTime=1609940780000][Automatically generalising theorems using typeclasses in Lean [Video]]]. ~ Alex J. Best. #ITP #LeanProver #Math
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2020.4.pdf][Implementation of two layers type theory in Dedukti and application to Cubical Type Theory]]. ~ Bruno Barras, Valentin Maestracci. #ITP #Dedukti
+ [[https://xenaproject.wordpress.com/2021/01/12/lean-together-2021/][Lean Together 2021]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2005.07059][Formalizing category theory in Agda]]. ~ Jason Z.S. Hu, Jacques Carette. #ITP #Agda #CategoryTheory #Math
+ [[https://shemesh.larc.nasa.gov/people/amd/publications/CPP2021-SAS_RA-draft.pdf][Formal verification of semi-algebraic sets and real analytic functions]]. ~ J. Tanner Slagel, Lauren White, Aaron Dutle. #ITP #PVS #Math
+ [[https://www.dropbox.com/s/q1whqz0v2c0falm/CPP2021-Kolmogorov-complexity.pdf?dl=0][On the formalisation of Kolmogorov complexity]]. ~ Elliot Catt, Michael Norrish. #ITP #HOL4
+ [[https://melkornemesis.medium.com/haskell-explained-3f91658a67d3][Haskell: (.) . (.) explained (Let’s get a grasp of composition equivalences in Haskell)]]. #Haskell #FunctionalProgramming

*** 11-Ene-21
+ [[https://youtu.be/k-YncL7Cd4Q][Formalizing the ring of Witt vectors]]. ~ Robert Y. Lewis. #ITP #LeanProver #Math
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2020.1.pdf][Mechanisation of model-theoretic conservative extension for HOL with ad-hoc overloading]]. ~ Arve Gengelbach, Johannes Åman Pohjola, Tjark Weber. #ITP #HOL4
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2020.2.pdf][Object-level reasoning with logics encoded in HOL Light]]. ~ Petros Papapanagiotou, Jacques Fleuriot. #ITP #HOL_Light #Logic
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2020.3.pdf][Deductive systems and coherence for skew prounital closed categories]]. ~ Tarmo Uustalu, Niccolò Veltri, Noam Zeilberger. #ITP #Agda
+ [[https://www.foxhound.systems/blog/why-haskell-for-production/][Why Haskell is our first choice for building production software systems]]. ~ Christian Charukiewicz (@charukiewicz). #Haskell #FunctionalProgramming

*** 10-Ene-21
+ [[https://github.com/mhk119/fibonacci_squares][144 is the largest square in the Fibonacci Sequence (A formalisation of Cohn's Proof)]]. ~ Harun Khan #ITP #LeanProver #Math via @XenaProject
+ [[https://github.com/Lix0120/eudoxus/][The Eudoxus real numbers in Lean]]. ~ Xiang Li. #ITP #LeanProver #Math via @XenaProject
+ [[http://wwwf.imperial.ac.uk/~buzzard/xena/pdfs/Set_theory_Type_Theory_and_the_future_of_Proof_verification_software.pdf][Set theory, type theory and the future of proof verification software]]. ~ James Palmer. #ITP #LeanProver #Math via @XenaProject
+ [[https://github.com/mdickinson/snippets/blob/master/proofs/isqrt/src/isqrt.lean][A formal proof of correctness of a recursive integer square root algorithm]]. ~ Mark Dickinson. #ITP #LeanProver #Math

*** 09-Ene-21
+ [[https://arxiv.org/abs/2101.02602][Schemes in Lean]]. ~ Kevin Buzzard, Chris Hughes, Kenny Lau, Amelia Livingston, Ramon Fernández Mir, Scott Morrison. #ITP #LeanProver #Math
+ [[https://user.informatik.uni-bremen.de/fritjof/pdfs/performance-aspects-of-correctness-oriented-synthesis-flows.pdf][Performance aspects of correctness-oriented synthesis flows]]. ~ F. Bornebusch, C. Lüth, R. Wille, R. Drechsler. #ITP #Coq
+ [[https://hal.archives-ouvertes.fr/hal-03096253/document][An anti-locally-nameless approach to formalizing quantifiers]]. ~ Olivier Laurent. #ITP #Coq
+ [[https://arxiv.org/abs/2009.13761][Formal verification of arithmetic RTL: Translating Verilog to C++ to ACL2]]. ~ David M. Russinoff. #ITP #ACL2
+ [[http://www.cs.ru.nl/~freek/100][Formalizing 100 theorems]]. ~ Freek Wiedijk. #ITP #Math
+ [[https://leanprover-community.github.io/100.html][Formalizing 100 theorems in Lean]]. #ITP #Math #LeanProver
+ [[https://github.com/effectfully/sketches/tree/master/trouble-in-paradise-fibonacci][Trouble in paradise: Fibonacci]]. #Haskell #FunctionalProgramming
+ [[https://oleg.fi/gists/posts/2021-01-08-indexed-optics-dilemma.html][Indexed optics dilemma]]. ~ Oleg Grenrus (@phadej). #Haskell #FunctionalProgramming
+ [[https://jsannemo.se/aps.pdf][Algorithmic problem solving]]. ~ Johan Sannemo. #eBook #Programming #Algorithms
+ [[https://www.gaussianos.com/la-saga-del-infinito-de-mates-mike/][La saga del infinito, de Mates Mike]]. ~ M.A. Morales (@gaussianos). #Matemáticas

*** 08-Ene-21
+ [[https://youtu.be/eSXiClL4COw][LeanStep: a dataset and environment for (interactive) neural theorem proving [Video]]]. ~ Jason Rute. #ITP #Leanprover #MachineLearning
+ [[https://docs.google.com/presentation/d/1poOu2gP9mSGAdAFvOupHvf4tpgD33jACQLJAVcphA1g/edit?usp=sharing][LeanStep: a dataset and environment for (interactive) neural theorem proving [Slides]]]. ~ Jason Rute. #ITP #Leanprover #MachineLearning
+ [[https://arxiv.org/abs/2101.02690][Theorem proving and algebra]]. ~ Joseph A. Goguen. #eBook #ITP #Math
+ [[https://www.michaelpj.com/blog/2021/01/02/elementary-programming.html][Elementary programming]]. ~ Michael Peyton Jones. #Haskell #Programming
+ [[https://well-typed.com/blog/2021/01/first-look-at-hi-profiling-mode/][A first look at info table profiling]]. ~ Matthew Pickering, David Eichmann. #Haskell #FunctionalProgramming
+ [[https://oleg.fi/gists/posts/2021-01-07-discrimination-benchmarks.html][Benchmarks of discrimination package]]. ~ Oleg Grenrus (@phadej).  #Haskell #FunctionalProgramming
+ [[https://www.metalevel.at/prolog/clpz][CLP(FD) and CLP(ℤ): Prolog integer arithmetic]]. ~ Markus Triska (@MarkusTriska). #Prolog #LogicProgramming #CLP
+ [[https://eclipseclp.org/doc/tutorial.pdf][ECLIPSE (A tutorial introduction)]]. ~ Andrew M. Cheadle et als. #Prolog #LogicProgramming #CLP
+ [[https://www.cs.us.es/~jalonso/cursos/d-pl-03/temas/tema-8.pdf][Programación lógica con restricciones]]. #Prolog #CLP
+ [[https://www.cs.us.es/~jalonso/apuntes/Soluciones_logicas_de_problemas_logicos/Tema_2.html][Soluciones lógicas de problemas lógicos]]. #Prolog #ProgramaciónLógica #CLP

*** 07-Ene-21
+ [[https://www.cs.utexas.edu/users/moore/publications/acl2-induction-heuristics.pdf][ACL2 induction heuristics]]. ~ J Strother Moore. #ITP #ACL2
+ [[https://youtu.be/cLuEaAsUvL4][Word problem for one-relator groups]]. ~ Chris Hughes. #ITP #LeanProver #Math
+ [[https://github.com/gihanmarasingha/mth1001_tutorial][A Lean introduction to pure mathematics]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Logic #Math
+ [[https://github.com/gihanmarasingha/mth1001_sphinx][MTH1001 (Mathematical structures) in Lean]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Logic #Math
+ [[https://github.com/gihanmarasingha/ems_reals][EMS reals (A project for investigating the real number system via the interactive theorem prover Lean)]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Logic #Math
+ [[https://people.mpi-sws.org/~eva/papers/cpp2021.pdf][Lassie: HOL4 tactics by example]]. ~ Heiko Becker et als.. #ITP #HOL4
+ [[https://gupea.ub.gu.se/bitstream/2077/67193/1/gupea_2077_67193_1.pdf][Formalizing domain models of the typed and the untyped lambda calculus in Agda]]. ~ David Lidell. #MSc_Thesis #ITP #Agda

*** 06-Ene-21
+ [[https://www.cs.rice.edu/~vardi/papers/SATSolvers21.pdf][On the unreasonable effectiveness of SAT Solvers]]. ~ Vijay Ganesh, Moshe Y. Vardi. #Logic #ATP #SAT_Solvers
+ [[https://github.com/bhgomes/lean-riemann-hypothesis][Riemann Hypothesis in Lean]]. ~ Brandon H. Gomes (@brandonhgomes), Alex Kontorovich. #ITP #LeanProver #Math
+ [[https://leanprover-community.github.io/lt2021/slides/Macbeth-slides.pdf][An example of a manifold [Slides]]]. ~ Heather Macbeth. #ITP #LeanProver #Math
+ [[https://youtu.be/deppJ2q_5a0][An example of a manifold [Video]]]. ~ Heather Macbeth. #ITP #LeanProver #Math
+ [[http://maude.cs.illinois.edu/w/images/7/70/Maude-tapas.pdf][Symbolic computation in Maude: Some tapas]]. ~ José Meseguer. #ITP #Maude
+ [[https://serokell.io/blog/compile-time-evaluation-haskell][Compile-time evaluation in Haskell]]. ~ Vladislav Zavialov. #Haskell #FunctionalProgramming
+ [[https://rjlipton.wordpress.com/2021/01/05/predictions-for-2021/][Predictions for 2021]]. | Gödel’s Lost Letter and P = NP. ~ R.J. Lipton & K.W. Regan. #CompSci

*** 05-Ene-21
+ [[https://arxiv.org/abs/2101.00127][Formalizing Hall's Marriage Theorem in Lean]]. ~ Alena Gusakov, Bhavik Mehta, Kyle A. Miller. #ITP #LeanProver #Math
+ [[https://doisinkidney.com/pdfs/masters-thesis.pdf][Finiteness in cubical type theory]]. ~ Donnacha Oisín Kidney (@oisdk). #MSc_Thesis #ITP #Agda #HoTT
+ [[https://youtu.be/UeGvhfW1v9M][An overview of Lean 4]]. ~ Leonardo de Moura, Sebastian Ullrich. #ITP #LeanProver
+ [[https://leanprover-community.github.io/lt2021/slides/floris-measure.pdf][Measure theory in Lean [slides]]]. ~ Floris van Doorn. #ITP #LeanProver #Math
+ [[https://youtu.be/yH3-zE0bYCU][Measure theory in Lean [video]]]. ~ Floris van Doorn. #ITP #LeanProver #Math
+ [[https://www.haskellforall.com/2021/01/the-visitor-pattern-is-essentially-same.html][The visitor pattern is essentially the same thing as Church encoding]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming
+ [[http://www.cs.nott.ac.uk/~pszgmh/123.pdf][Functional Pearl: It’s easy as 1,2,3]]. ~ Graham Hutton. #Haskell #FunctionalProgramming
+ [[https://iokasimov.github.io/posts/2021/01/composable-monad-transformers][Trying to compose non-composable: monads]]. ~ Murat Kasimov. #Haskell #FunctionalProgramming
+ [[https://youtu.be/l13D-CcwM5A][Learning TypeFamilies together! ~  Flavio Corpa (@FlavioCorpa)]]. #Haskell #FunctionalProgramming

*** 04-Ene-21
+ [[http://ceur-ws.org/Vol-2710/paper21.pdf][Tautology checkers in Isabelle and Haskell]]. ~ Jørgen Villadsen. #Logic #ITP #IsabelleHOL #Haskell #FunctionalProgramming
+ [[http://ceur-ws.org/Vol-2710/paper13.pdf][Theorem proving for Lewis logics of counterfactual reasoning]]. ~ Marianna Girlando, Bjoern Lellmann, Nicola Olivetti, Stefano Pesce, Gian Luca Pozzato. #ATP #Logic #Prolog #LogicProgramming
+ [[https://github.com/leanprover-community/mathlib/blob/384ba88bf56209e52a0bed1b7176805c09b05c9a/src/computability/DFA.lean][Deterministic Finite Automata (DFA) in Lean]]. ~ Fox Thomson. #ITP #LeanProver
+ [[https://github.com/leanprover-community/mathlib/blob/384ba88bf56209e52a0bed1b7176805c09b05c9a/src/computability/NFA.lean][Nondeterministic Finite Automata (NFA) in Lean]]. ~ Fox Thomson. #ITP #LeanProver
+ [[https://blog.poisson.chat/posts/2021-01-03-iterative-categories.html][Theory of iteration and recursion]]. ~ Li-yao Xia (@lysxia). #Haskell #FunctionalProgramming
+ [[https://bindthegap.news/issues/02dec2020.html][Bind the gap (Monthly digital functional programming magazine) [Issue 2, Dec 2020]]]. #Haskell #FunctionalProgramming
+ [[https://www.parsonsmatt.org/2020/02/04/mirror_mirror.html https://www.parsonsmatt.org/2020/02/04/mirror_mirror.html][Mirror mirror: Reflection and encoding via]]. ~ Matt Parsons (@mattoflambda). #Haskell #FunctionalProgramming
+ [[https://wespiser.com/posts/2021-01-03-Lessons-Learned-From-A-Year-Of-Haskell.html][Lessons learned from a year of writing Haskell]]. ~ Adam Wespiser (@wespiser). #Haskell #FunctionalProgramming
+ [[https://oleg.fi/gists/posts/2021-01-04-coindexed-optics.htm][Coindexed optics]]. ~ Oleg Grenrus (@phadej).l#Haskell #FunctionalProgramming

*** 03-Ene-21
+ [[https://github.com/leanprover-community/mathlib/blob/04f8fd744a1d8e9f5aec9fd8d4809d4345365916/src/group_theory/dihedral.lean][Dihedral groups in Lean]]. ~ Shing Tak Lam. #ITP #LeanProver #Math

*** 02-Ene-21
+ [[https://arxiv.org/abs/2012.14133v1][Verifying C11-style weak memory libraries]]. ~ Sadegh Dalvandi, Brijesh Dongol. #ITP #IsabelleHOL
+ [[https://leanprover.github.io/lean4/doc/whatIsLean.html][Lean 4 manual]]. #Lean4 #FunctionalProgramming #ITP
+ [[https://www.mdpi.com/2227-7390/9/1/38/pdf][Formalization of the equivalence among completeness theorems of real number in Coq]]. ~ Yaoshun Fu, Wensheng Yu. #ITP #Coq #Math
+ [[https://www.lri.fr/~keller/Documents-recherche/Publications/cpp21.pdf][A Coq formalization of data provenance]]. Véronique Benzaken et als. #ITP #Coq
+ [[https://www.ps.uni-saarland.de/~kirst/downloads/talk_TSEM_20.pdf][Synthetic undecidability proofs in Coq]]. ~ Dominik Kirst. #ITP #Coq

*** 01-Ene-21
+ [[https://schooloffp.co/2020/12/27/two-reasons-why-you-found-learning-haskell-hard.html][Two reasons why you found learning haskell hard]]. ~ School of FP (@schooloffp). #Haskell #FunctionalProgramming
+ [[https://tek.brick.do/64693fb8-39b4-40a5-8762-768009eeed91][Learn just enough about linear types]]. ~ Artyom Kazak (@availablegreen). #Haskell #FunctionalProgramming

* Lecturas anteriores
+ [[./Lecturas del año 2020.org][Lecturas del año 2020]]
+ [[./Lecturas del año 2019.org][Lecturas del año 2019]]
+ [[./Lecturas del año 2018.org][Lecturas del año 2018]]
+ [[./Lecturas del año 2017.org][Lecturas del año 2017]]
+ [[./Lecturas del año 2016.org][Lecturas del año 2016]]
+ [[./Lecturas del año 2010 al 2015.org][Lecturas del año 2010 al 2015]]
