#+TITLE: Lecturas del Grupo de Lógica Computacional
#+OPTIONS: ^:nil

Este repositorio es una recopilación de lecturas compartidas en la lista
de correo del [[http://www.glc.us.es][grupo de lógica computacional]]. La recopilación está
ordenada por la fecha de su publicación en la lista. Al final de cada
artículo se encuentra etiquetas relativas a los sistemas que usa o a su
contenido.

* Contenido                                                             :TOC:
- [[#lecturas-del-año-2020][Lecturas del año 2020]]
  - [[#enero-de-2020][Enero de 2020]]
  - [[#febrero-de-2020][Febrero de 2020]]
  - [[#marzo-de-2020][Marzo de 2020]]
  - [[#abril-de-2020][Abril de 2020]]
  - [[#mayo-de-2020][Mayo de 2020]]
  - [[#junio-de-2020][Junio de 2020]]
- [[#lecturas-anteriores][Lecturas anteriores]]

* Lecturas del año 2020

** Enero de 2020

*** 01-Ene-20
+ [[http://www.eds.yildiz.edu.tr/AjaxTool/GetArticleByPublishedArticleId?PublishedArticleId=3936][Introduction to HOL4 theorem prover]]. ~ K. Aksoy, S. Tahar, Y. Zeren. #ITP #HOL4
+ [[https://t.co/8IZttMkU33][Design and verification of parity checking circuit using HOL4 theorem proving]]. ~ E. Deni̇z, K. Aksoy, S. Tahar, Y. Zeren. #ITP #HOL4
+ [[http://save.seecs.nust.edu.pk/pubs/2020/SAC_2020_1.pdf][Proof searching in HOL4 with genetic algorithm]]. ~ M.Z. Nawaz et als #ITP #HOL4

*** 02-Ene-20
+ [[https://blog.sigplan.org/2019/12/30/defunctionalization-everybody-does-it-nobody-talks-about-it/][Defunctionalization: Everybody does it, nobody talks about it]]. ~ James Koppel. #FunctionalProgramming #Haskell
+ [[https://arxiv.org/abs/1804.05495][Constructive reverse mathematics]]. ~ Hannes Diener. #Logic #Math
+ [[https://tqft.net/web/research/students/YimingXu/thesis.pdf][Formalizing modal logic in HOL]]. ~ Yiming Xu. #PhD_Thesis #ITP #HOL #Logic

*** 03-Ene-20
+ [[https://arxiv.org/abs/1909.07479][On correctness of an n queens program]]. ~ Włodzimierz Drabent. #LogicProgramming #Prolog #Verification
+ [[https://www.simplehaskell.org/][The simple Haskell initiative]]. #Haskell #FunctionalProgramming
+ [[https://cacm.acm.org/news/241912-a-computer-made-from-dna-can-compute-the-square-root-of-900/fulltext][A computer made from DNA can compute the square root of 900]]. #CompSci
+ [[https://her.esy.fun/posts/0010-Haskell-Now/index.html][Learn Haskell now!]] ~ Yann Esposito (@yogsototh). #Haskell #FunctionalProgramming

*** 04-Ene-20
+ [[https://artagnon.com/articles/leancoq#main][Lean versus Coq: The cultural chasm]]. ~ Ramkumar Ramachandra. #ITP #LeanProver #Coq

*** 05-Ene-20
+ [[https://github.com/gelisam/typelevel-rewrite-rules][Type-level rewrite rules]]. ~ Samuel Gélineau. #Haskell #FunctionalProgramming
+ [[https://jaspervdj.be/posts/2020-01-04-mandelbrot-lovejoy-rain.html][Mandelbrot & Lovejoy's rain fractals]]. ~ Jasper Van der Jeugt (@jaspervdj). #Haskell #FunctionalProgramming
+ [[https://dl.acm.org/doi/pdf/10.1145/3371121?download=true][Kind inference for datatypes]]. ~ N. Xie, R.A. Eisenberg, B.C.d.S. Oliveira. #Haskell #FunctionalProgramming

*** 06-Ene-20
+ [[https://mmhaskell.com/blog/2020/1/6/organizing-our-package][Organizing our package!]] ~ James Bowen (@james_OWA). #Haskell #Cabal #FunctionalProgramming

*** 07-Ene-20
+ [[https://www.isa-afp.org/entries/Hybrid_Logic.html][Formalizing a Seligman-style tableau system for hybrid logic in Isabelle/HOL]]. ~ Asta Halkjær. #ITP #IsabelleHOL #Logic
+ [[http://www.ams.org/journals/notices/202001/rnoti-p77.pdf][Different problems, common threads: Computing the difficulty of mathematical problems]]. ~ Karen Lange.  #Math #CompSci
+ [[https://www.johndcook.com/blog/2020/01/06/smooth-numbers/][Estimating the proportion of smooth numbers]]. ~ John D. Cook (@JohnDCook). #Math #Programming #Python
+ [[https://agentultra.github.io/lean-for-hackers/][Lean 3 for hackers]]. ~ J Kenneth King. #LeanProver #FunctionalProgramming

*** 08-Ene-20
+ [[https://gist.github.com/mightybyte/6c469c125eb50e0c2ebf4ae26b5adfff][Haskell language extension taxonomy]]. ~ Doug Beardsley. #Haskell #FunctionalProgramming

*** 09-Ene-20
+ [[https://arxiv.org/abs/1912.06611][A formal proof of the irrationality of ζ(3)]]. ~ Assia Mahboubi, Thomas Sibut-Pinote. #ITP #Coq #Math
+ [[http://www21.in.tum.de/~nipkow/pubs/cpp20.pdf][Proof pearl: Braun trees]]. ~ T. Nipkow, T. Sewell. #ITP #Isabelle

*** 10-Ene-20
+ [[https://www.isa-afp.org/entries/Gauss_Sums.html][Gauss sums and the Pólya–Vinogradov inequality]]. ~ R. Raya, M. Eberl. #ITP #IsabellleHOL #Math
+ [[https://www.isa-afp.org/entries/Bicategory.html][Bicategories in Isabelle/HO: ~ Eugene W]]. Stark. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Zeta_3_Irrational.html][The irrationality of ζ(3) in Isabelle/HOL]]. ~ Manuel Eberl. #ITP #IsabellleHOL #Math
+ [[https://www.isa-afp.org/entries/Skip_Lists.html][Skip lists in Isabelle/HOL]]. ~ M.W. Haslbeck, M. Eberl. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2001.02657][Motivated proofs: what they are, why they matter and how to write them]]. ~ Rebecca Lea Morris. #Math
+ [[https://www.logicmatters.net/2020/01/09/programming-with-categories/][Programming with categories]]. ~ Peter Smith. #Programming #CategoryTheory
+ [[https://dixonary.co.uk/blog/haskell/small][Generating small binaries in Haskell]]. ~ Alex Dixon (@dixonary_). #Haskell #FunctionalProgramming
+ [[https://github.com/saurabhkukade/Haskell_Study][Collections of papers and books about Haskell, type theory and category theory]]. ~ Saurabh Kukade. #Haskell #TypeTheory #CategoryTheory 

*** 11-Ene-20
+ [[https://jfr.unibo.it/article/view/9757][LF+ in Coq for "fast and loose" reasoning]]. ~ F. Alessi. #ITP #Coq
+ [[https://github.com/bolt12/master-thesis][Selective applicative functors & probabilities]]. ~ Armando Santos (@_bolt12). #MSc_Thesis #Haskell #FunctionalProgramming #Math
+ [[https://github.com/bolt12/laop][Linear algebra of programming - Algebraic matrices in Haskell]]. ~ Armando Santos (@_bolt12). #FunctionalProgramming #Math 
+ [[https://cswithbaddrawings.wordpress.com/2020/01/10/gain-confidence-with-haskell/][Gain confidence with Haskell!]] ~ Brandon Chinn. #Haskell #FunctionalProgramming

*** 12-Ene-20
+ [[http://lisp-univ-etc.blogspot.com/2020/01/programming-algorithms-approximation.html][Programming algorithms: approximation]]. ~ Vsevolod Dyomkin. #CommonLisp #Algorithms 
+ [[https://williamyaoh.com/posts/2020-01-11-road-to-proficient.html][The road to proficient Haskell]]. ~ William Yao (@williamyaoh). #Haskell #FunctionalProgramming
+ [[https://www.logicmatters.net/wp-content/uploads/2019/12/TeachYourselfLogic2020.pdf][Teach yourself Logic 2020: A study guide]]. ~ Peter Smith. #Logic
+ [[https://github.com/salmans/rusty-razor][Rusty Razor is a tool for constructing finite models for first-order theories]]. ~ Salman Saghafi. #Logic
+ [[https://digitalcommons.wpi.edu/cgi/viewcontent.cgi?article=1457&context=etd-dissertations][A framework for exploring finite models]]. ~ Salman Saghafi. #PhD_Thesis #Logic #Haskell

*** 13-Ene-20
+ [[http://www.informatics-europe.org/images/ECSS/ECSS2009/slides/Gottlob.pdf][Computer Science as the continuation of Logic by other means]]. ~ Georg Gottlob. #Logic #CompSci #WorldLogicDay
+ [[https://arxiv.org/abs/1802.03292][Mathematical Logic in Computer Science]]. ~ Assaf Kfoury. #Logic #CompSci #WorldLogicDay
+ [[https://www.cs.upc.edu/~roberto/EffectivenessOfLogic.pdf][On the unusual effectiveness of Logic in Computer Science]]. ~ J.Y. Halpern et als. #Logic #CompSci #WorldLogicDay
+ [[http://www.ru.is/faculty/luca/SLIDES/logic-and-cs.pdf][Computer Science and Logic (a match made in heaven)]]. ~ Luca Aceto. #Logic #CompSci #WorldLogicDay
+ [[http://www.cs.cornell.edu/courses/cs4860/2019fa/lectures/L2-A-Story-of-Logic.pdf][The story of Logic]]. ~ Robert L. Constable. #Logic #CompSci #WorldLogicDay
+ [[http://www.cl.cam.ac.uk/~jrh13/papers/joerg.pdf][History of interactive theorem ]].proving. ~ J. Harrison, J. Urban, F. Wiedijk. #ITP #Logic #CompSci #WorldLogicDay
+ [[https://www.cadeinc.org/Data/HerbrandAwardSlidesConstable.pdf][Automated reasoning: From bold dreams to Computer Science methodology]]. ~ Robert L. Constable. #ATP #CompSci #WorldLogicDay
+ [[https://www.cs.ru.nl/~herman/ictopen.pdf][Can the computer really help us to prove theorems? ~ Herman Geuvers]]. #ITP #Logic #CompSci #WorldLogicDay

*** 14-Ene-20
+ [[https://www.taut-logic.com/index.html][TAUT: A website that contains randomly-generated, self-correcting logic excercises]]. ~ Ariel Roffé. #Logic
+ [[https://www.conicet.gov.ar/taut-el-software-desarrollado-por-un-filosofo-del-conicet-para-ensenar-logica/][TAUT: el software desarrollado por un filósofo del CONICET para enseñar Lógica]]. #Lógica #WorldLogicDay
+ [[http://dailynous.com/2018/11/20/randomly-generated-self-correcting-logic-exercises-site/][Randomly generated and self-correcting logic exercises site]]. ~ Justin Weinberg. #Logic #WorldLogicDay
+ [[https://blog.jle.im/entry/foldl-adjunction.html][Adjunctions in the wild: foldl]]. ~ Justin Le (@mstk). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/1910.12863][Computer-supported exploration of a categorical axiomatization of modeloids]]. ~ L. Tiemens, D.S. Scott, C. Benzmüller, M. Benda. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/1910.08955][Computer-supported analysis of positive properties, ultrafilters and modal collapse in variants of Gödel's ontological argument]]. ~ C. Benzmüller, D. Fuenmayor. #ITP #IsabelleHOL #Logic
+ [[https://arxiv.org/abs/2001.04457][A verified packrat parser interpreter for parsing expression grammars]]. ~ C. Blaudeau, N. Shankar. #ITP #PVS
+ [[https://mmhaskell.com/blog/2020/1/13/using-cabal-on-its-own][Using Cabal on its own]]. ~ James Bowen (@james_OWA). #Haskell #Cabal
+ [[https://vrom911.github.io/blog/common-stanzas][Common stanzas]]. ~ Veronika Romashkina (@vronnie911). #Haskell #Cabal

*** 15-Ene-20
+ [[https://www.isa-afp.org/entries/Closest_Pair_Points.html][Closest pair of points algorithms]]. ~ M. Rau, T. Nipkow. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2001.02981][Automatic generation and verification of test-stable floating-point code]]. ~ L. Titolo, M. Moscato, C.A. Muñoz. #ITP #PVS
+ [[https://kwarc.info/people/mkohlhase/submit/tetrapod-survey.pdf][The space of mathematical software systems]]. ~ J. Carette, W.M. Farmer, Y. Sharoda. #ATP #ITP #Math #CompSci
+ [[https://www.cs.rit.edu/~mtf/student-resources/20191_huang_mscourse.pdf][A mechanized formalization of the WebAssembly specification in Coq]]. ~ X. Huang. #ITP #Coq
+ [[http://brendanfong.com/programmingcats_files/C4P-chapter1.pdf][Is Haskell a category?]] ~ B. Fong, B. Milewski, D. Spivak. #Haskell #FunctionalProgramming #CategoryTheory 

*** 16-Ene-20
+ [[https://medium.com/@cdsmithus/your-students-could-have-invented-the-pythagorean-theorem-438db433aec5][Your students could have invented ... the Pythagorean theorem]]. ~ Chris Smith (@cdsmithus). #Math #Teaching
+ [[http://brendanfong.com/programmingcats_files/cats4progs-DRAFT.pdf][Programming with categories (Draft)]]. ~ B. Fong, B. Milewski, D.I. Spivak.  #FunctionalProgramming #Haskell #CategoryTheory
+ [[https://www.isa-afp.org/entries/Approximation_Algorithms.html][Verified approximation algorithms in Isabelle/HOL]]. ~ R. Eßmann, T. Nipkow, S. Robillard. #ITP #IsabelleHOL 
+ [[https://www.bbvaopenmind.com/tecnologia/innovacion/la-magia-del-orden-de-los-datos][La magia del orden (de los datos)]]. ~ Alejandro Serrano (@trupill). #Algoritmos
+ [[https://www.tweag.io/posts/2020-01-16-data-vs-control.html][A tale of two functors (or: how I learned to stop worrying and love Data and Control)]]. ~ Arnaud Spiwack. #Haskell #FunctionalProgramming
+ [[https://www.youtube.com/playlist?list=PLlF-CfQhukNkWwZt45vkNfWfuO-tBBqPN][Talks from the formal methods in Mathematics / Lean together 2020 workshop]]. #ITP #LeanProver #IsabelleHOL #Coq

*** 17-Ene-20
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_cohen.pdf][Generating mathematical structure hierarchies using Coq-ELPI]]. ~ C. Cohen, K. Sakaguchi, E. Tassi. #ITP #Coq #Math
+ [[https://github.com/math-comp/hierarchy-builder][High level commands to declare a hierarchy based on packed classes]]. ~ C. Cohen, K. Sakaguchi, E. Tassi. #ITP #Coq #Math
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_gouezel.pdf][On a mathematician's attempts to formalize his own research in proof assistants]]. ~ Sébastien Gouëzel. #ITP #IsabelleHOL #LeanProver #Math
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_eberl.pdf][Automating asymptotics in a theorem prover]]. ~ Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_strickland.pdf][Using Lean for new research]]. ~ Neil Strickland. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/1907.07801][Iterated chromatic localisation]]. ~ Neil Strickland, Nicola Bellumat. #ITP #LeanProver #Math
+ [[https://github.com/NeilStrickland/itloc][Lean code formalising many of the proofs from the paper "Iterated chromatic localisation"]]. ~ Neil Strickland, Nicola Bellumat. #ITP #LeanProver #Math
+ [[https://github.com/NeilStrickland/lean_primes][Proof in Lean that there are infinitely many primes]]. ~ Neil Strickland. #ITP #LeanProver #Math
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_li.pdf][Reasoning with non-linear formulas in Isabelle/HOL]]. ~ Wenda Li. #ITP #IsabelleHOL #Math
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_immler.pdf][ODEs and the Poincaré-Bendixson theorem in Isabelle/HOL]]. ~ Fabian Immler, Yong Kiam Tan. #ITP #IsabelleHOL #Math
+ [[https://www.hpcwire.com/2020/01/14/julia-programmings-dramatic-rise-in-hpc-and-elsewhere/][Julia programming’s dramatic rise in HPC and elsewhere]]. ~ John Russell. #JuliaLang
+ [[https://www.isa-afp.org/entries/Complex_Geometry.html][Complex geometry in Isabelle/HOL]]. ~ F. Marić, D. Simić. #ITP #IsabelleHOL #Math

*** 18-Ene-20
+ [[https://www.isa-afp.org/entries/Poincare_Disc.html][Poincaré disc model in Isabelle/HOL]]. ~ D. Simić, F. Marić, P. Boutry. #ITP #IsabelleHOL #Math
+ [[https://alexnixon.github.io/2020/01/14/static-types-are-dangerous.html][Static types are dangerously interesting]]. ~ Alex Nixon (@alexnixon_uk). #Haskell #FunctionalProgramming
+ [[https://deontologician.com/wiki/lenses/][Digging into Lenses]]. ~ Josh Kuhn (@deontologician). #Haskell #FunctionalProgramming
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_massot.pdf][Formalizing a sophisticated definition]]. ~ Patrick Massot, Kevin Buzzard, Johan Commelin. #ITP #LeanProver #Math

*** 19-Ene-20
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_boldo.pdf][A Coq formalization of Lebesgue integration of nonnegative functions]]. ~ Sylvie Boldo et als. #ITP #Coq #Math
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_lisitsa.pdf][First-order theorem (dis)proving for reachability problems in verification and experimental mathematics]]. ~ Alexei Lisitsa. #ATP #Prover9 #Mace4 #Math
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_keller.pdf][SMTCoq: Coq automation and its application to formal mathematics]]. ~ Chantal Keller. #ITP #Coq #SMT #Math
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_carneiro.pdf][Metamath Zero (or: how to verify a verifier)]]. ~ Mario Carneiro. #ITP #MetamathZero
+ [[http://flownet.com/gat/jpl-lisp.html][Lisping at JPL]]. ~ Ron Garret. #Programming #CommonLisp
+ [[https://www.microsiervos.com/archivo/matematicas/numeros-primos-que-son-imagenes.html][Números primos que son imágenes]]. ~ @Alvy #Matemáticas
+ [[https://swmath.org][swMATH: an information service for mathematical software]]. #Math #CompSci
+ [[https://www.encyclopediaofmath.org][The Encyclopedia of Mathematics wiki is an open access resource designed specifically for the mathematics community]]. #Math
+ [[http://www.encyclopediaofmath.org/index.php?title=Theorem_prover&oldid=31805][Theorem prover]]. ~ Encyclopedia of Mathematics. #ATP #ITP #Math
+ [[https://dlmf.nist.gov/][NIST digital library of mathematical functions]]. #Math
+ [[https://oeis.org][The On-Line Encyclopedia of Integer Sequences (OEIS)]]. #Math
+ [[https://books.google.es/books?id=0el8pO27BPoC&lpg=PP1][A modern perspective on type theory: From its origins until today]]. ~ Fairouz Kamareddine, Twan Laan, and Rob Nederpelt. #eBook #TypeTheory

*** 20-Ene-20
+ [[http://www.andrew.cmu.edu/user/avigad/meetings/fomm2020/slides/fomm_buzzard.pdf][The future of Mathematics?]] ~ Kevin Buzzard. #Math #ITP
+ [[https://arxiv.org/abs/2001.04314][Formal specification of a security framework for smart contracts]]. ~ M. Mandrykin et als. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2001.04301][Tabled typeclass resolution]]. ~ D. Selsam, S. Ullrich, L. de Moura. #ITP #LeanProver
+ [[https://www.isa-afp.org/entries/Mersenne_Primes.html][Mersenne primes and the Lucas–Lehmer test in Isabelle/HOL]]. ~ Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://mmhaskell.com/blog/2020/1/20/nicer-package-organization-with-stack][Nicer package organization with Stack!]] ~ James Bowen (@james_OWA). #Haskell #Stack
+ [[https://blog.sigplan.org/2020/01/20/a-small-matter-of-programming/][A small matter of programming]]. ~ Jeremy Gibbons. #AI #Programming

*** 21-Ene-20
+ [[https://richardzach.org/2020/01/19/adding-online-exercises-with-automated-grading-to-any-logic-course-with-carnap/][Adding online exercises with automated grading to any logic course with Carnap]]. ~ Richard Zach (@RrrichardZach). #Logic #Teaching
+ [[https://youtu.be/Rt2OrG3IHkU][Three equivalent ordinal notation systems in cubical Agda]]. ~ Fredrick Nordvall Forsberg. #ITP #Agda #Math
+ [[https://youtu.be/8542Cw7DdYY][Undecidability of higher-order unification formalised in Coq]]. ~ Simon Spies. #ITP #Coq
+ [[https://youtu.be/F35yA6EHrAo][A functional proof pearl: Inverting the Ackermann heirarchy]]. ~ Linh Tran. #ITP #Coq
+ [[https://arxiv.org/abs/1202.3670][Euclid's theorem on the infinitude of primes: a historical survey of its proofs (300 B]].C.--2017) and another new proof. ~ Romeo Meštrović. #Math #History
+ [[http://tedsider.org/teaching/higher_order_20/higher_order_crash_course.pdf][Crash course on higher-order logic, type theory, etc]]. ~ Theodore Sider. #Logic via @RrrichardZach

*** 22-Ene-20
+ [[https://youtu.be/HKrIMvC4xTA][Verified programming of Turing machines in Coq]]. ~ Fabian Kunze. #ITP #Coq
+ [[https://youtu.be/EipOEWKlSBQ][Proof pearl: Braun trees]]. ~ Tobias Nipkow. #ITP #IsabelleHOL
+ [[https://blog.ploeh.dk/2020/01/20/algebraic-data-types-arent-numbers-on-steroids/][Algebraic data types aren't numbers on steroids]]. Mark Seemann (@ploeh). #Haskell #FunctionalProgramming
+ [[http://eprints.whiterose.ac.uk/155734/1/hybrid_kat.pdf][Differential Hoare logics and refinement calculi for hybrid systems with Isabelle/HOL]]. ~ Simon Foster, Jonathan Julián Huerta y Munive, and Georg Struth. #ITP #IsabelleHOL
+ [[https://niccoloveltri.github.io/cpp20.pdf][Formalizing π-calculus in Guarded Cubical Agda]]. ~ Niccolò Veltri, Andrea Vezzosi. #ITP #Agda

*** 23-Ene-20
+ [[https://argumatronic.com/posts/1970-01-01-beginners.html][For beginners]]. ~ Julie Moronuki (@argumatronic). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2001.08133][Drawing Prolog search trees: A manual for teachers and students of logic programming]]. ~ Johan Bos. #Prolog #LogicProgramming

*** 24-Ene-20
+ [[https://is.muni.cz/th/vhz48/thesis.pdf][Coinductive formalization of SECD machine in Agda]]. ~ Adam Krupička. #MsC_Thesis #ITP #Agda
+ [[https://typeclasses.com/phrasebook/folding-lists][Folding lists]]. ~ Chris Martin (@chris__martin), Julie Moronuki (@argumatronic). #Haskell #FunctionalProgramming
+ [[https://mutable.jle.im/][Beautiful mutable values]]. ~ Justin Le (@mstk). #Haskell #FunctionalProgramming
+ [[http://www.stephendiehl.com/posts/decade.html][Haskell problems for a new decade]]. ~ Stephen Diehl (@smdiehl). #Haskell #FunctionalProgramming
+ [[https://cvlad.info/profunctor/][The Functor family: Profunctor]]. ~ Vladimir Ciobanu. #Haskell #FunctionalProgramming

*** 25-Ene-20
+ [[https://ruor.uottawa.ca/bitstream/10393/39994/1/Lu_Weiyun_2019_thesis.pdf][Formally verified code obfuscation in the Coq Proof Assistant]]. ~ Weiyun Lu. #PhD_Thesis #ITP #Coq
+ [[https://www.ps.uni-saarland.de/~gaeher/files/3SATClique.pdf][A formalised polynomial-time reduction from 3SAT to Clique]]. ~ Lennard Gäher. #ITP #Coq
+ [[https://serokell.io/blog/haskell-in-production-centralapp][Haskell in production: CentralApp]]. ~ Ashesh Ambasta (@AsheshAmbasta), Gints Dreimanis. #Haskell #FunctionalProgramming
+ [[https://www.microsiervos.com/archivo/matematicas/conjetura-merterns-relacion-numero-colosalmente-grande.html][La conjetura de Merterns y su relación con un número tan raro como extremada y colosalmente grande]]. ~ @Alvy. #Matemáticas
+ [[https://www.irif.fr/~emiquey/content/lmw19.pdf][The benefits of sequent calculus]]. ~ Étienne Miquey. #Logic #CompSci
+ [[https://www.irif.fr/~emiquey/content/imerl18.pdf][Curry-Howard: unveiling the computational content of proofs]]. ~ Étienne Miquey. #Logic #CompSci
+ [[https://www.irif.fr/~emiquey/content/banner.pdf][Realizabilidad clásica y efectos colaterales: Extendiendo la correspondencia de Curry-Howard]]. ~ Étienne Miquey. #Logic #CompSci
+ [[https://github.com/Coq-Andes-Summer-School/CASS2020/raw/master/assia-intro/slides.pdf][Introduction to Coq]]. ~ Assia Mahboubi. #ITP #Coq
+ [[https://cass.pleiad.cl/jscoq/examples/funext/lecture1.html][First steps with Coq]]. ~ Assia Mahboubi. #ITP #Coq 
+ [[https://github.com/Coq-Andes-Summer-School/CASS2020/raw/master/matthieu/depelim.pdf][Programming with dependent types in Coq: inductive families and dependent patter-matching]]. ~ Matthieu Sozeau. #ITP #Coq
+ [[https://github.com/Coq-Andes-Summer-School/CASS2020/raw/master/slides_tabareau.pdf][Homotopy Type Theory]]. ~ Nicolas Tabareau. #ITP #Coq #HoTT
+ [[https://github.com/Coq-Andes-Summer-School/CASS2020/raw/master/typesets.pdf][Set Theory vs. Type Theory]]. Alexandre Miquel. #Logic #CompSci

*** 26-Ene-20
+ [[https://arxiv.org/abs/2001.07488][Profunctor optics, a categorical update]]. ~ Bryce Clarke et als. #Haskell #FunctionalProgramming
+ [[https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/392353/1/Hossle_Nora.pdf][Multiple address spaces in a distributed capability system]]. ~ Nora Hossle. #MsC_Thesis #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2001.07655][Coherence via wellfoundedness]]. ~ Nicolai Kraus, Jakob von Raumer. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/1912.10961][Formalizing the Curry-Howard correspondence]]. ~ Juan Ferrer Meleiro, Hugo Luiz Mariano. #ITP #Idris #Logic
+ [[http://www.philipzucker.com/a-sketch-of-categorical-relation-algebra-combinators-in-z3py/][A sketch of categorical relation algebra combinators in Z3Py]]. ~ Philip Zucker (@SandMouth). #Z3 #SMT 
+ [[https://blog.adrianistan.eu/primeros-pasos-nix-linux-funcional][Primeros pasos con Nix: un Linux más funcional]]. ~ Adrián Arroyo Calle. #Nix #Linux #FunctionalProgramming
+ [[http://oleg.fi/gists/posts/2020-01-25-case-study-migration-from-lens-to-optics.html][Case study: migrating from lens to optics]]. ~ Oleg Grenrus (@phadej). #Haskell #FunctionalProgramming

*** 27-Ene-20
+ [[https://ruor.uottawa.ca/bitstream/10393/39876/1/Eaman_Amir_2019_thesis.pdf][TEpla: A certified type enforcement access-control policy language]]. ~ Amir Eaman. #PhD_Thesis #ITP #Coq
+ [[https://www.cambridge.org/core/journals/journal-of-functional-programming/article/elaborating-dependent-copattern-matching-no-pattern-left-behind/F13CECDAB2B6200135D45452CA44A8B3][Elaborating dependent (co)pattern matching: No pattern left behind]]. ~ Jesper Cockx, Andreas Abel. #ITP #Agda
+ [[https://homotopytypetheory.org/2020/01/26/the-cantor-schroder-bernstein-theorem-for-%e2%88%9e-groupoids/][The Cantor-Schröder-Bernstein theorem for ∞-groupoids]]. ~ Martin Escardo. #ITP #Agda #Math
+ [[https://arxiv.org/abs/2001.06702][FASiM: A framework for automatic formal analysis of simulink models of linear analog circuits]]. ~ Adnan Rashid, Ayesha Gauhar and Osman Hasan. #ITP #HOL_Light
+ [[https://tech.fpcomplete.com/blog/transformations-on-applicative-concurrent-computations][Transformations on applicative concurrent computations]]. ~ Román González. #Haskell #FunctionalProgramming
+ [[https://gup.ub.gu.se/file/208036][The beauty of abstraction in mathematics]]. ~ Thomas Lingefjärd, Russell Hatami. #Math

*** 28-Ene-20
+ [[https://arxiv.org/abs/2001.09715][Formalization of forcing in Isabelle/ZF]]. ~ Emmanuel Gunther, Miguel Pagano, Pedro Sánchez Terraf. #ITP #IsabelleZF #Logic 
+ [[https://arxiv.org/abs/1905.05970][HolPy: Interactive theorem proving in Python]]. ~ Bohua Zhan. #ITP #HolPy #Logic #Python 
+ [[https://bzg.fr/en/some-emacs-org-mode-features-you-may-not-know.html/][Org-mode features you may not know]]. ~ Bastien Guerry (@bzg2). #Emacs #OrgMode

*** 28-Ene-20
+ [[https://arxiv.org/abs/2001.09715][Formalization of forcing in Isabelle/ZF]]. ~ Emmanuel Gunther, Miguel Pagano, Pedro Sánchez Terraf. #ITP #IsabelleZF #Logic 
+ [[https://arxiv.org/abs/1905.05970][HolPy: Interactive theorem proving in Python]]. ~ Bohua Zhan. #ITP #HolPy #Logic #Python 
+ [[https://bzg.fr/en/some-emacs-org-mode-features-you-may-not-know.html/][Org-mode features you may not know]]. ~ Bastien Guerry (@bzg2). #Emacs #OrgMode

*** 30-Ene-20
+ [[https://arxiv.org/abs/2001.10834][Smart induction for Isabelle/HOL (System description)]]. ~ Yutaka Nagashima. #ITP #IsabelleHOL
+ [[https://stackoverflow.com/a/59719944/5157338][Show that a monic (injective) and epic (surjective) function has an inverse in Coq]]. ~ Arthur Azevedo De Amorim. #ITP #Coq #Math
+ [[https://blog.sigplan.org/2020/01/29/mechanized-proofs-for-pl-past-present-and-future/][Mechanized proofs for PL: Past, present, and future]]. ~ Talia Ringer. #ITP
+ [[https://golem.ph.utexas.edu/category/2020/01/profunctor_optics_the_categori.html][Profunctor optics: The categorical view]]. ~ Emily Pillmore and Mario Román. #Haskell #FunctionalProgramming #CategoryTheory
+ [[http://blog.ezyang.com/2020/01/vmap-in-haskell][vmap in Haskell]]. ~ Edward Z. Yang (@ezyang). #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/developing-ghc-for-a-living][Developing GHC for a Living: Interview with Vladislav Zavialov]]. ~ Denis Oleynikov. #Haskell #FunctionalProgramming
+ [[https://doisinkidney.com/posts/2020-01-29-terminating-tricky-traversals.html][Terminating tricky traversals]]. ~ Donnacha Oisín Kidney (@oisdk). #Haskell #Agda #FunctionalProgramming
+ [[https://www.tweag.io/posts/2020-01-30-haskell-profiling.html][Locating performance bottlenecks in large Haskell codebases]]. ~ Juan Raphael Diaz Simões. #Haskell #FunctionalProgramming

*** 31-Ene-20
+ [[https://hal.laas.fr/hal-02088529v2/document][A certificate-based approach to formally verified approximations]]. ~ Florent Bréhard, Assia Mahboubi, Damien Pous. #ITP #Coq #Math
+ [[http://www.staff.science.uu.nl/~swier004/publications/2020-msfp-submission.pdf][Combining predicate transformer semantics for effects: a case study in parsing regular languages]]. ~ Tim Baanen, Wouter Swierstra. #Agda #FunctionalProgramming
+ [[https://era.ed.ac.uk/bitstream/handle/1842/22936/Raggi2016.pdf][Searching the space of representations: reasoning through transformations for mathematical problem solving]]. ~ Daniel Raggi. #PhD_Thesis #ITP #IsabelleHOL
+ [[https://bor0.wordpress.com/2020/01/31/introduction-and-formalization-of-boolean-algebra/][Introduction and formalization of Boolean algebra]]. ~ Boro Sitnikovski (@BSitnikovski). #ITP #Metamath #Math
+ [[https://cs-syd.eu/posts/2020-01-28-property-testing-size][Property testing in depth: The size parameter]]. ~ Tom Sydney Kerckhove. #Haskell #FunctionalProgramming
+ [[https://bytes.yingw787.com/posts/2020/01/30/a_review_of_haskell/][A Pythonista's Review of Haskell]]. ~ Ying Wang. #Haskell #Python

** Febrero de 2020

*** 01-Feb-20
+ [[https://www.ps.uni-saarland.de/Publications/documents/ForsterKunze_2019_Certifying-extraction.pdf][A certifying extraction with time bounds from Coq to call-by-value λ-calculus]]. ~ Yannick Forster, Fabian Kunze. #ITP #Coq
+ [[https://www.ps.uni-saarland.de/Publications/documents/ForsterKunzeRoth_2019_wcbv-Reasonable.pdf][The weak call-by-value λ-calculus is reasonable for both time and space]]. ~ Yannick Forster, Fabian Kunze, Marc Roth. #ITP #Coq
+ [[https://www.ps.uni-saarland.de/Publications/documents/ForsterEtAl_2019_VerifiedTMs.pdf][Verified programming of Turing machines in Coq]]. ~ Yannick Forster, Fabian Kunze, Maximilian Wuttke. #ITP #Coq
+ [[http://www.ps.uni-saarland.de/~smolka/drafts/icl2019.pdf][Computational type theory and interactive theorem proving with Coq (Version of August 2, 2019)]]. ~ Gert Smolka. #eBook #ITP #Coq #Logic
+ [[https://www.sciencedirect.com/science/article/pii/S1571066103000215/pdf?md5=bcacb89b9fed98564eccf67546b89243&pid=1-s2.0-S1571066103000215-main.pdf][Towards a readable formalisation of category theory]]. ~ Greg O’Keefe. #ITP #IsabelleHOL #CategoryTheory
+ [[https://www.isa-afp.org/entries/Subset_Boolean_Algebras.html][A hierarchy of algebras for boolean subsets]]. ~ Walter Guttmann, Bernhard Möller. #ITP #IsabelleHOL #Math
+ [[https://mediatum.ub.tum.de/doc/1484146/1484146.pdf][Formal specification, monitoring, and verification of autonomous vehicles in Isabelle/HOL]]. ~ Albert Rizaldi. #PhD_Thesis #ITP #IsabelleHOL
+ [[http://kenta.blogspot.com/2020/02/ozjcrzwx-ulam-spirals.html][Ulam spirals]]. ~ Ken T Takusagawa. #Haskell #FunctionalProgramming
+ [[https://en.wikipedia.org/wiki/Karp%27s_21_NP-complete_problems][Karp's 21 NP-complete problems]]. #CompSci
+ [[https://www.win.tue.nl/~kbuchin/teaching/2IL15/Slides/AlgorithmsLecture_9.pdf][NP-completeness, part I]]. ~ Kevin Buchin. #CompSci 
+ [[https://www.win.tue.nl/~kbuchin/teaching/2IL15/Slides/AlgorithmsLecture_10.pdf][NP-completeness, part II]]. ~ Kevin Buchin. #CompSci 

*** 02-Feb-20
+ [[https://www.ps.uni-saarland.de/Publications/documents/ForsterEtAl_2019_Completeness.pdf][Completeness theorems for first-order logic analysed in constructive type theory]]. ~ Yannick Forster, Dominik Kirst, Dominik Wehr. #ITP #Coq #Logic
+ [[https://www.ps.uni-saarland.de/Publications/details/Larchey-WendlingForster:2019:H10_in_Coq.html][Hilbert's tenth problem in Coq]]. ~ Dominique Larchey-Wendling, Yannick Forster. #ITP #Coq #Math
+ [[https://arxiv.org/abs/2001.10490][Beyond notations: Hygienic macro expansion for theorem proving languages]]. ~ Sebastian Ullrich, Leonardo de Moura. #ITP #LeanProver
+ [[https://hal.inria.fr/hal-02457240/document][MOIN: A nested sequent theorem prover for intuitionistic modal logics (system description)]]. ~ Marianna Girlando, Lutz Straßburger. #ATP #Prolog #Logic

*** 03-Feb-20
+ [[https://arxiv.org/abs/2001.08983][A formal development cycle for security engineering in Isabelle]]. ~ Florian Kammüller. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2001.10512][Automated proof of Bell-LaPadula security properties]]. ~ Maximiliano Cristiá, Gianfranco Rossi. #ATP #SetLog
+ [[https://github.com/OpenLogicProject/OpenLogic/wiki/Other-Logic-Textbooks][List of open and free logic textbooks]]. ~ Richard Zach (@RrrichardZach). #Logic
+ [[https://chrispenner.ca/posts/kaleidoscopes][Intro to Kaleidoscopes: Optics for aggregating data through Applicatives]]. ~ Chris Penner (@chrislpenner). #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2020/2/3/nix-functional-package-management][Nix: Functional package management!]] ~ James Bowen (@james_OWA). #Nix 

*** 04-Feb-20
+ [[http://matryoshka.gforge.inria.fr/pubs/satur_report.pdf][A comprehensive framework for saturation theorem proving (Technical report)]]. ~ Uwe Waldmann, Sophie Tourret, Simon Robillard, Jasmin Blanchette. #ITP #IsabelleHOL #Logic
+ [[https://github.com/ejgallego/jscoq][jsCoq: A port of Coq to Javascript (Run Coq in your browser)]]. ~ Emilio Jesús Gallego Arias (@ejgallego). #ITP #Coq 
+ [[https://odone.io/posts/2020-02-03-monad-composes-sequentially.html][Why monad composes operations sequentially]]. ~ Riccardo Odone (@RiccardoOdone). #Haskell #FunctionalProgramming
+ [[https://francis.naukas.com/2020/02/03/los-primos-de-la-conjetura-de-collatz/][Los primos de la conjetura de Collatz]]. ~ Francisco R. Villatoro (@emulenews). #Matemáticas
+ [[https://danaernst.com/resources/free-and-open-source-textbooks/][Free and open-source textbooks]]. ~ Dana C. Ernst. #eBooks #Math
+ [[https://www.johnborwick.com/2019/02/13/org-mode-website.html][How I created my website with Org mode]]. ~ John Borwick (@borwick). #Emacs #OrgMode

*** 05-Feb-20
+ [[https://arxiv.org/abs/2001.11142][VERONICA: Expressive and precise concurrent information flow security (Extended version with technical appendices)]]. ~ Daniel Schoepe, Toby Murray, Andrei Sabelfeld. #ITP #IsabelleHOL
+ [[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8970457][A formal system of axiomatic set theory in Coq]]. ~ Tianyu Sun, Wensheng Yu. #ITP #Coq #Math
+ [[https://www.ps.uni-saarland.de/extras/fol-trakh/][Trakhtenbrot’s theorem in Coq (A constructive approach to finite model theory)]]. ~ Dominik Kirst, Dominique Larchey-Wendling. #ITP #Coq #Logic
+ [[https://github.com/aep/zz/blob/master/README.md][ZZ (drunk octopus) is a modern formally provable dialect of C, inspired by Rust]]. ~ Arvid E. Picciani. #ZZ #Programming #SMT #FormalVerification
+ [[https://slides.com/dervism/java-haskell?token=c5PXw4i][Java & Haskell: Similarities and differences]]. ~ Dervis Mansuroglu (@dervis_m). #Java #Haskell
+ [[https://www.cis.upenn.edu/~cis262/notes/proofslambda.pdf][Proofs, computability, complexity, and the lambda calculus (An introduction)]]. ~ Jean Gallier, Jocelyn Quaintance. #eBook #Logic #CompSci #LambdaCalculus
+ [[https://adamsheffer.wordpress.com/2020/02/04/an-algorithms-course-with-minimal-prerequisites/][An algorithms course with minimal prerequisites]]. ~ Adam Sheffer. #Algorithms

*** 06-Feb-20
+ [[https://www.researchgate.net/profile/Christoph_Benzmueller/publication/338829452_Computer-supported_Analysis_of_Arguments_in_Climate_Engineering/links/5e2d5775a6fdcc70a14bf745/Computer-supported-Analysis-of-Arguments-in-Climate-Engineering.pdf][Computer-supported analysis of arguments in climate engineering]]. ~ David Fuenmayor, Christoph Benzmüller. #ITP #IsabelleHOL.
+ [[https://soap.coffee/~lthms/posts/MiniHTTPServer/][Implementing and certifying a Web server in Coq]]. ~ Thomas Letan. #ITP #Coq 
+ [[https://github.com/finkel-lang/finkel ][Finkel: Haskell in S-expression]]. #Haskell #Lisp #Finkel_lang
+ [[https://www.tweag.io/posts/2020-02-06-safe-inline-java.html][Safe memory management in inline-java using linear types]]. ~ Facundo Dominguez. #Haskell #FunctionalProgramming
+ [[https://youtu.be/dDtZLm7HIJs][Functional or combinator parsing]]. ~ Graham Hutton (@haskellhutt). #Haskell #FunctionalProgramming
+ [[https://ericphanson.com/blog/2019/learning-algorithmic-techniques-dynamic-programming/][Learning algorithmic techniques: dynamic programming]]. ~ Eric P. Hanson. #Algorithms #Programming #JuliaLang

*** 07-Feb-20
+ [[https://arxiv.org/abs/2001.11560][Toward a mechanized compendium of gradual typing]]. ~ Jeremy G. Siek. #ITP #Agda
+ [[https://arxiv.org/abs/1911.00580][Introduction to univalent foundations of mathematics with Agda]]. ~ Martín Hötzel Escardó. #ITP #Agda #Math
+ [[https://staff.aist.go.jp/reynald.affeldt/fipc/main.pdf][Formalizing functional analysis structures in dependent type theory]]. ~ Reynald Affeldt et als. #ITP #Coq #Math
+ [[https://res.mdpi.com/d_attachment/electronics/electronics-09-00255/article_deploy/electronics-09-00255.pdf][A formal verification framework for security issues of blockchain smart contracts]]. ~ Tianyu Sun, Wensheng Yu. #ITP #Coq #Blockchain
+ [[https://serokell.io/blog/lorentz-implementing-smart-contract-edsl-in-haskell][Lorentz: Implementing smart contract eDSL in Haskell]]. ~ Kostya Ivanov. #Haskell #FunctionalProgramming

*** 08-Feb-20
+ [[https://thoughtbot.com/blog/thinking-in-types][Thinking in types]]. ~ Pat Brisbin. #Haskell #FunctionalProgramming
+ [[https://medium.com/heavenlyx/functional-programming-the-simple-version-63fe10678f6e][Functional programming: The simple version]]. ~ Muhammad Tabaza. #Haskell #FunctionalProgramming
+ [[https://medium.com/nmc-techblog/advanced-functional-programming-concepts-made-easy-2108d227b5ab][Advanced Functional Programming concepts made easy]]. ~ Tal Joffe. #FunctionalProgramming #JavaScript
+ [[https://byorgey.wordpress.com/2020/02/07/competitive-programming-in-haskell-primes-and-factoring/][Competitive Programming in Haskell: primes and factoring]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming

*** 09-Feb-20
+ [[https://www.cs.vu.nl/~jhl890/pub/hoelzl2013typeclasses.pdf][Type classes and filters for mathematical analysis in Isabelle/HOL]]. ~ Johannes Hölzl, Fabian Immler, Brian Huffman. #ITP #IsabelleHOL #Math
+ [[https://xenaproject.wordpress.com/2020/02/09/lean-is-better-for-proper-maths-than-all-the-other-theorem-provers/][Lean is better for proper maths than all the other theorem provers]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://xenaproject.wordpress.com/2020/02/09/where-is-the-fashionable-mathematics/][Where is the fashionable mathematics? ~ Kevin Buzzard (@XenaProject)]]. #Math #ITP #LeanProver #Coq #IsabelleHOL 
+ [[https://arxiv.org/abs/2002.00423][An experimental study of formula embeddings for automated theorem proving in first-order logic]]. ~ Ibrahim Abdelaziz et als. #ATP #MachineLearning
+ [[http://rg1-teaching.mpi-inf.mpg.de/autrea-ws19/script.pdf][Automated reasoning I]]. ~ Uwe Waldmann. #eBook #ATP #Logic
+ [[http://rg1-teaching.mpi-inf.mpg.de/autrea2-ss18/script.pdf ][Automated reasoning II]]. ~ Sophie Tourret, Uwe Waldmann. #eBook #ATP #Logic
+ [[https://www.colibri.udelar.edu.uy/jspui/bitstream/20.500.12008/23002/1/PI%c3%9119.pdf][Verificación de estructura de redes neuronales profundas en tiempo de compilación (Proyecto TensorSafe)]]. ~ Leonardo Piñeyro. #Haskell #DeepLearning 
+ [[http://cleilaclo2018.mackenzie.br/docs/SIESC/182970.pdf][MateFun: Functional Programming and Math with adolescents]]. ~ Alejandra Carboni et als. #Haskell #FunctionalProgramming #Math
+ [[https://www.colibri.udelar.edu.uy/jspui/bitstream/20.500.12008/23006/1/VAZ19.pdf][Mejoras al intérprete MateFun]]. ~ Nicolás Vázquez. #Haskell #FunctionalProgramming #Math
+ [[https://markkarpov.com/tutorial/th.html][Template Haskell tutorial]]. ~ Mark Karpov (@mrkkrp). #Haskell #FunctionalProgramming
+ [[https://vaibhavsagar.com/blog/2017/05/29/imperative-haskell/][Imperative Haskell]]. ~ Vaibhav Sagar. #Haskell #FunctionalProgramming
+ [[https://chrisdone.com/posts/data-typeable/][Typeable and Data in Haskell]]. ~ Chris Done (@christopherdone). #Haskell #FunctionalProgramming

*** 10-Feb-20
+ [[https://www.isa-afp.org/entries/Arith_Prog_Rel_Primes.html][Arithmetic progressions and relative primes]]. ~ José Manuel Rodríguez Caballero. #ITP #IsabelleHOL #Math
+ [[https://wdi.centralesupelec.fr/boulanger/Enseignement/TutoIsabelle][Tutoriel: types de données, fonctions et preuves en Isabelle]]. ~ Frédéric Boulanger. #ITP #IsabelleHOL  
+ [[https://wdi.centralesupelec.fr/boulanger/Enseignement/Niklaus][Cours: Sémantique des langages]]. ~ Frédéric Boulanger. #ITP #IsabelleHOL  
+ [[https://github.com/pedroabreu0/pedroabreu0.github.io/raw/master/docs/POPL20-poster.pdf][How small can we make a useful type theory?]] ~ Pedro Abreu (@etapedro). #ITP #Coq #Cedille #FunctionalProgramming
+ [[https://github.com/pedrotst/coquedille][Coquedille: A Coq to Cedille transpiler written in Coq]]. ~ Pedro Abreu (@etapedro). #ITP #Coq #Cedille #FunctionalProgramming
+ [[https://two-wrongs.com/how-laziness-works][How laziness works]]. #Haskell #FunctionalProgramming
+ [[https://blog.sumtypeofway.com/posts/introduction-to-recursion-schemes.html][An introduction to recursion schemes]]. ~ Patrick Thomson. #Haskell #FunctionalProgramming
+ [[https://blog.functorial.com/posts/2015-12-06-Counterexamples.html][Counterexamples of type classes]]. ~ Phil Freeman. #Haskell #Purescript #FunctionalProgramming
+ [[http://oleg.fi/gists/posts/2020-02-09-compiling-haskell-to-javascript.html][Compiling Haskell to JavaScript, not in the way you'd expect]]. ~ Oleg Grenrus (@phadej). #Haskell #FunctionalProgramming #JavaScript

*** 11-Feb-20
+ [[https://mmhaskell.com/blog/2020/2/10/converting-cabal-to-nix][Converting Cabal to Nix!]] ~ James Bowen (@james_OWA). #Haskell #Cabal #Nix
+ [[https://youtu.be/qhB1Q4v6TEA][Liquidate your assets (Reasoning about resource usage in Liquid Haskell)]]. ~ Niki Vazou (@nikivazou). #Haskell
+ [[http://www.cse.chalmers.se/~rjmh/tfp/proceedings/TFP_2020_paper_16.pdf][State will do]]. ~ Willem Seynaeve, Koen Pauwels and Tom Schrijvers. #Haskell #FunctionalProgramming
+ [[http://www.cse.chalmers.se/~rjmh/tfp/proceedings/TFP_2020_paper_7.pdf][PaSe: An extensible and inspectable DSL for micro-animations]]. ~ Ruben P. Pieters and Tom Schrijvers. #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/physics-history-haskell-interview][Physics, History and Haskell]]. (Interview with Rinat Stryungis). ~ Denis Oleynikov. #Haskell #FunctionalProgramming

*** 12-Feb-20
+ [[http://www.cse.chalmers.se/~rjmh/tfp/proceedings/TFP_2020_paper_17.pdf][A DSL for fluorescence microscopy]]. Birthe van den Berg, Peter Dedecker, Tom Schrijvers. #Haskell #FunctionalProgramming
+ [[http://www.cse.chalmers.se/~rjmh/tfp/proceedings/TFP_2020_paper_20.pdf][A proof assistant based formalisation of core Erlang]]. ~ Péter Bereczky, Dániel Horpácsi and Simon Thompson. #ITP #Coq #Erlang 
+ [[http://www.cse.chalmers.se/~rjmh/tfp/proceedings/TFP_2020_paper_2.pdf][An equational modeling of asynchronous concurrent programming]]. ~ David Janin. #Haskell #FunctionalProgramming
+ [[http://www.cse.chalmers.se/~rjmh/tfp/proceedings/TFP_2020_paper_9.pdf][BinderAnn: Automated reification of source annotations for monadic EDSLs]]. ~ Agustín Mista and Alejandro Russo. #Haskell #FunctionalProgramming  
+ [[https://www.mdpi.com/1996-1073/13/3/712/pdf][Formalization of cost and utility in Microeconomics]]. ~ Asad Ahmed, Osman Hasan, Falah Awwad, and Nabil Bastaki. #ITP HOL_Light
+ [[https://serokell.io/blog/haskell-in-industry-riskbook][Haskell in production: Riskbook (an interview with Jezen Thomas)]]. ~ Gints Dreimanis. #Haskell #FunctionalProgramming
+ [[https://andre.tips/wmh/generalized-algebraic-data-types-and-data-kinds/][Generalized Algebraic Data Types and Data Kinds]]. ~ Andre Popovitch (@PopovitchAndre). #Haskell #FunctionalProgramming
+ [[https://notxor.nueva-actitud.org/blog/2020/02/11/utilizacion-de-registros-en-emacs/][Utilización de registros en Emacs]]. #Emacs

*** 13-Feb-20
+ [[http://www.cse.chalmers.se/~rjmh/tfp/proceedings/TFP_2020_paper_8.pdf][Generating next step hints for task oriented programs using symbolic execution]]. ~ Nico Naus and Tim Steenvoorden. #Haskell #FunctionalProgramming
+ [[https://www.researchgate.net/publication/339129400_Mac_Lane%27s_Comparison_Theorem_for_the_Kleisli_Construction_Formalized_in_Coq][Mac Lane’s comparison theorem for the Kleisli construction formalized in Coq]]. ~ Burak Ekici, and Cezary Kaliszyk. #ITP #Coq
+ [[https://www.cs.cornell.edu/courses/cs3110/2020sp/textbook][Functional programming in OCaml]]. ~ Michael R. Clarkson. #eBook #OCaml #FunctionalProgramming
+ [[http://www.gigamonkeys.com/book/][Practical Common Lisp]]. ~ Peter Seibel. #eBook #CommonLisp

*** 15-Feb-20
+ [[https://www.slideshare.net/paulszulc/maintainable-software-architecture-in-haskell-with-polysemy][Maintainable software architecture in Haskell (with Polysemy)]]. ~ Paweł Szulc (@EncodePanda). #Haskell #FunctionalProgramming 
+ [[https://logiccourse.com/textbook/logic-course-adventure/][The Logic course adventure (An active learning textbook for formal logic)]]. ~ Ian Schnee. #eBook #Logic
+ [[https://github.com/coq-community/awesome-coq][Awesome Coq Awesome (A curated list of awesome Coq libraries, plugins, tools, and resources)]]. #ITP #Coq
+ [[https://armkeh.github.io/blog/EqualityOfFunctions.html][Equality of functions in Agda]]. ~ Mark Armstrong. #ITP #Agda #FunctionalProgramming via @armk_eh

*** 16-Feb-20
+ [[https://artagnon.com/articles/equality][Equality in mechanized mathematics]]. ~  Ramkumar Ramachandra. #ITP #Coq #Math
+ [[https://www.fosskers.ca/blog/rio-en.html][Porting to Rio]]. ~ Colin Woodbury (@fosskers). #Haskell #FunctionalProgramming
+ [[https://byorgey.wordpress.com/2020/02/15/competitive-programming-in-haskell-modular-arithmetic-part-1/][Competitive programming in Haskell: modular arithmetic, part 1]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming #Math
+ [[https://tidsskrift.dk/brics/article/view/21869/19296][There and Back Again (TABA)]]. ~ Olivier Danvy, and Mayer Goldberg. #Programming #Algoritms
+ [[https://doisinkidney.com/posts/2020-02-15-taba.html][Typing TABA (There and Back Again)]]. ~ Donnacha Oisín Kidney (@oisdk). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2001.07488][Profunctor optics, a categorical update]]. ~ Bryce Clarke, Derek Elkins, Jeremy Gibbons, Fosco Loregian, Bartosz Milewski, Emily Pillmore, and Mario Román. #Haskell #FunctionalProgramming
+ [[https://www.stackbuilders.com/tutorials/python/using-types-in-python-with-mypy/][How to start using Python type annotations with Mypy]]. ~ Carlos Villavicencio. #Python #Mypy  
+ [[http://logicae.usal.es/TICTTL/actas/JamesCaldwell.pdf][Teaching natural deduction as a subversive activity]]. ~ James Caldwell. #Logic

*** 17-Feb-20
+ [[https://tel.archives-ouvertes.fr/tel-01250842v1/document][Certifications of programs with computational effects]]. ~ Burak Ekici. #PhD_Thesis #ITP #Coq 
+ [[http://cl-informatik.uibk.ac.at/users/cek/docs/19/mfck-tableaux19.pdf][Certification of nonclausal connection tableaux proofs]]. ~ Michael Färber, and Cezary Kaliszyk. #ITP #HOL_Light
+ [[https://arxiv.org/abs/2002.06047][Flexible coinduction in Agda]]. ~ Luca Ciccone. #MSc_Thesis #ITP #Agda
+ [[http://dev.stephendiehl.com/hask/][What I wish I knew when learning Haskell (Version 2]].5). ~ Stephen Diehl (@smdiehl). #Haskell #FunctionalProgramming
+ [[http://www.philipzucker.com/categorical-combinators-for-graphviz-in-python/][Categorical combinators for Graphviz in Python]]. ~ Philip Zucker (@SandMouth). #Python
+ [[https://medium.com/swlh/how-to-make-mondrian-art-in-haskell-a1a5d430ac32][How to make mondrian art in Haskell (Unleash your inner functional artist)]]. ~ Marc Fichtel (@mc_razzy). #Haskell #FunctionalProgramming

*** 18-Feb-20
+ [[https://josephg.com/blog/3-tribes/][3 tribes of programming]]. ~ Joseph Gentle (@josephgentle). #Programming
+ [[https://hal.inria.fr/hal-02478907/document][Hierarchy builder: algebraic hierarchies made easy in Coq with Elpi]]. ~ Cyril Cohen, Kazuhiko Sakaguchi, and Enrico Tassi. #ITP #Coq
+ [[https://arxiv.org/abs/1902.00297][Signatures and induction principles for higher inductive-inductive types]]. ~ Ambrus Kaposi, and András Kovács. #ITP #Agda #Haskell #FunctionalProgramming
+ [[https://f.hypotheses.org/wp-content/blogs.dir/4029/files/2018/11/cardone_slides.pdf][From Curry to Haskell]]. ~ Felice Cardone. #Haskell #FunctionalProgramming #Logic
+ [[https://hal.inria.fr/hal-02477578/document][A Why3 proof of GMP algorithms]]. ~ Raphaël Rieu-Helft. #Why3 #FormalVerification
+ [[http://users.ece.utexas.edu/~gligoric/papers/JainETAL20mCoqTool.pdf][mCoq: Mutation analysis for Coq verification projects]]. ~ Kush Jain et als. #ITP #Coq

*** 19-Feb-20
+ [[https://youtu.be/Og847HVwRSI][Most popular programming languages 1965-2019]]. #Programming
+ [[http://lisp-univ-etc.blogspot.com/2020/02/programming-algorithms-compression.html][Programming algorithms: Compression]]. ~ Vsevolod Dyomkin. #Algorithms #CommonLisp 
+ [[https://www.tweag.io/posts/2020-02-19-linear-type-exception.html][On linear types and exceptions]]. ~ Arnaud Spiwack. #Haskell #FunctionalProgramming
+ [[https://leanpub.com/hy-lisp-python/read][A Lisp programmer living in Python-land: The Hy programming language]]. ~ Mark Watson. #eBook #Programing #Lisp #Python #Hy

*** 20-Feb-20
+ [[https://svhol.pbmichel.com/][Isabelle/HOL and Proof General reference [Isabelle/HOL support wiki]]]. #ITP #IsabelleHOL
+ [[https://whatisrt.github.io/dependent-types/2020/02/18/agda-vs-coq-vs-idris.html][Agda vs. Coq vs. Idris]]. #ITP #Agda #Coq #Idris

*** 21-Feb-20
+ [[https://serokell.io/blog/haskell-type-level-witness][Type witnesses in Haskell]]. ~ Sandeep Chandrika. #Haskell #FunctionalProgramming
+ [[https://paperswelove.org/]["Papers we love" is a repository of academic computer science papers and a community who loves reading them]]. @papers_we_love #CompSci
+ [[https://github.com/papers-we-love/papers-we-love][Papers from the computer science community to read and discuss]]. #CompSci
+ [[https://dspace.mit.edu/bitstream/handle/1721.1/5794/AIM-349.pdf][Scheme: An interpreter for extended lambda calculus (1975)]]. ~ Gerald J. Sussman, and Guy L. Steele. #Programming #Scheme #CompSci
+ [[https://www.aaai.org/ojs/index.php/aimagazine/article/view/1029][What is a knowledge representation?]]. ~ Randall Davis, Howard Shrobe, and Peter Szolovits (1993). #KR #AI
+ [[https://www.cs.cmu.edu/~crary/819-f09/Hoare69.pdf ][An axiomatic basis for computer programming]]. ~ C.A.R. Hoare (1969). #CompSci
+ [[http://www.mat.uc.cl/~cmartine/documents/WFP.pdf][Why functional programming matters]]. ~ John Hughes (1989). #FunctionalProgramming #CompSci 
+ [[http://www.cs.nott.ac.uk/~pszgmh/fold.pdf][A tutorial on the universality and expressiveness of fold]]. ~ Graham Hutton (1999). #FunctionalProgramming #Haskell
+ [[https://www.cs.tufts.edu/%7Enr/cs257/archive/john-hughes/quick.pdf][QuickCheck: Α lightweight tool for random testing of Haskell programs]]. ~ Koen Claessen and John Hughes (2000). #Haskell #FunctionalProgramming
+ [[https://www.irif.fr/~mellies/mpri/mpri-ens/articles/moggi-computational-lambda-calculus-and-monads.pdf][Computational lambda-calculus and monads]]. ~ Eugenio Moggi (1988). #CompSci 
+ [[https://www.cs.bham.ac.uk/~mhe/papers/exhaustive.pdf][Infinite sets that admit fast exhaustive search]]. ~ Martı́n Escardó (2007). #Haskell #FunctionalProgramming
+ [[https://repository.upenn.edu/cgi/viewcontent.cgi?article=1773&context=cis_papers][Monoids: Theme and variations (Functional Pearl)]]. ~ Brent A. Yorgey (2012). #Haskell #FunctionalProgramming
+ [[http://www.cs.um.edu.mt/~svrg/FormalMethods/2012-2013/QuickCheck.pdf][QuickCheck testing for fun and profit]]. ~ John Hughes (2007). #Haskell #FunctionalProgramming
+ [[https://www.cs.cmu.edu/afs/cs/user/crary/www/819-f09/Landin64.pdf][The mechanical evaluation of expressions]]. ~ P.J. Landin (1964). #CompSci
+ [[https://londmathsoc.onlinelibrary.wiley.com/doi/epdf/10.1112/plms/s2-42.1.230][On computable numbers, with an application to the Entscheidungsproblem]]. ~ A.M. Turing (1937). #CompSci #Math 
+ [[http://homepages.inf.ed.ac.uk/wadler/papers/propositions-as-types/propositions-as-types.pdf][Propositions as types]]. ~ Philip Wadler (2014). #Logic #CompSci
+ [[https://www.cs.cmu.edu/~crary/819-f09/McCarthy60.pdf][Recursive functions of symbolic expressions and their computation by machine, Part I]]. ~ John McCarthy (1960). #CompSci #Lisp 
+ [[http://www.cs.cmu.edu/~crary/819-f09/Strachey67.pdf][Fundamental concepts in programming languages]]. ~ Christopher Strachey (2000). #CompSci

*** 22-Feb-20
+ [[https://hal.archives-ouvertes.fr/hal-02316859v2/document][Graph theory in Coq: Minors, treewidth, and isomorphisms]]. ~ Christian Doczkal and Damien Pous. #ITP #Coq #Math
+ [[https://hal.archives-ouvertes.fr/hal-02333553v3/document][Completeness of an axiomatization of graph isomorphism via graph rewriting in Coq]]. ~ Christian Doczkal, and Damien Pous. #ITP #Coq #Math
+ [[https://www.cs.us.es/~jalonso/apuntes/Pensamientos_de_Machado.html][Pensamientos de Antonio Machado]]. ~ Guiomar Godoy. #Filosofía
+ [[http://www-sop.inria.fr/marelle/personnel/Laurent.Thery/math.html][A selected bibliography on formalised mathematics]]. ~ Laurent Théry. #ITP #Math
+ [[https://www.ps.uni-saarland.de/Publications/details/Doczkal:2016:PhDThesis.html][A machine-checked constructive metatheory of computation tree logic]]. ~ Christian Doczkal (2016). #PhD_Thesis #ITP #Coq #Logic 
+ [[http://people.rennes.inria.fr/Assia.Mahboubi//vu.html][Course: Machine-checked Mathematics]]. ~ Assia Mahboubi. #ITP #Coq #Math 

*** 23-Feb-20
+ [[https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/400029/2/phdthesis-acreto-online.pdf][On memory addressing]]. ~ Reto Achermann.  #PhD_Thesis #ITP #IsabelleHOL
+ [[https://kwarc.info/people/frabe/Research/KR_oafexp_20.pdf][Experiences from exporting major proof assistant libraries]]. ~ Michael Kohlhase, and Florian Rabe. #ITP #Coq #HOL_Light #IsabelleHOL #Mizar #PVS #MMT
+ [[https://arxiv.org/abs/2002.06047][Flexible coinduction in Agda]]. ~ Luca Ciccone. #MSc_Thesis #ITP #Agda
+ [[https://github.com/martinescardo/TypeTopology/][Various new theorems in constructive univalent mathematics written in Agda]]. ~ Martín Escardó. #ITP #Agda #Math 
+ [[https://arxiv.org/abs/2002.07079][The Cantor-Schröder-Bernstein Theorem for ∞-groupoids]]. ~ Martı́n Escardó. #ITP #Agda #Math 
+ [[https://github.com/drdo/logic-translation][Translation from FOL to LTL+Past and LTL, via separation of LTL+Past]]. ~ Daniel Oliveira. #Logic #Haskell #FunctionalProgramming
+ [[https://github.com/drdo/logic-translation/raw/master/doc/Thesis.pdf][Linear temporal logic: separation and translation]]. ~ Daniel Oliveira. #MSc_Thesis #Logic #Haskell #FunctionalProgramming
+ [[https://fenix.tecnico.ulisboa.pt/downloadFile/563568428791213/or-????-separation.pdf][Revisiting separation: Algorithms and complexity]]. ~ Daniel Oliveira, and João Rasga. #Logic #Haskell #FunctionalProgramming
+ [[https://notxor.nueva-actitud.org/blog/2019/01/05/sobre-listas-y-atoms/][Sobre listas y atoms]]. #Emacs #Elisp

*** 24-Feb-20
+ [[https://arxiv.org/abs/2002.09282][Isabelle/Spartan: A dependent type theory framework for Isabelle]]. ~ Joshua Chen. #ITP #IsabellleHOL #HoTT
+ [[https://www.isa-afp.org/entries/Goodstein_Lambda.html][Implementing the Goodstein function in λ-calculus]]. ~ Bertram Felgenhauer. #ITP #IsabelleHOL
+ [[https://blog.poisson.chat/posts/2020-02-24-quickcheck-higherorder.html][Testing higher-order properties with QuickCheck]]. ~ Li-yao Xia (@lysxia). #Haskell #FunctionalProgramming #QuickCheck
+ [[https://doisinkidney.com/posts/2020-02-20-final-bft.html][Another breadth-first traversal]]. ~ Donnacha Oisín Kidney (@oisdk). #Haskell #FunctionalProgramming
+ [[https://github.com/jrjohansson/scientific-python-lectures][Lectures on scientific computing with Python]]. ~ Robert Johansson (2017). #Python
+ [[https://arxiv.org/abs/2002.04803][Machine Learning in Python: Main developments and technology trends in data science, machine learning, and artificial intelligence]]. ~ Sebastian Raschka, Joshua Patterson, Corey Nolet. #MachineLearning #AI #Python
+ [[https://youtu.be/UwYLaGzhDb4][Category theory as a tool for thought]]. ~ Daniel Beskin. #CategoryTheory #FunctionalProgramming #Haskell
+ [[https://www.chronicle.com/article/The-Scientific-Paper-Is/248045][The scientific paper is outdated (For the sake of research, their careers, and their mental health, scientists should spend more time developing software)]]. ~ Ryan Abernathey. #

*** 25-Feb-20
+ [[https://arxiv.org/abs/2002.10212][A mechanised semantics for HOL with ad-hoc overloading]]. ~ Johannes Åman Pohjola, Arve Gengelbach. #ITP #HOL4

*** 26-Feb-20
+ [[https://www.isa-afp.org/entries/VeriComp.html][A generic framework for verified compilers in Isabelle/HOL]]. ~ Martin Desharnais. #ITP #IsabelleHOL
+ [[https://essay.utwente.nl/80680/1/Staal_BA_EEMCS.pdf][An analysis of programming paradigms in high-level synthesis tools]]. ~ Pieter Staal. #Haskell #FunctionalProgramming
+ [[https://iohk.io/en/research/library/papers/marloweimplementing-and-analysing-financial-contracts-on-blockchain/][Marlowe: implementing and analysing financial contracts on blockchain]]. ~ Pablo Lamela Seijas et als. #Haskell #ITP #IsabelleHOL #Blockchain #Cardano
+ [[https://www.comp.nus.edu.sg/~hobor/Publications/2020/CertifiedDijkstra.pdf][A machine-checked C implementation of Dijkstra’s shortest path algorithm]]. ~ Anshuman Mohan, Shengyi Wang, and Aquinas Hobor. #ITP #Coq
+ [[https://www.hindawi.com/journals/wcmc/2020/7346763/][Formal verification of hardware components in critical systems]]. ~ Wilayat Khan et als. #ITP #Coq
+ [[https://new.kwarc.info/people/frabe/Research/rabe_mmtsys_20.pdf][MMT: The Meta Meta Tool (system description)]]. ~ Florian Rabe. #ITP #MMT
+ [[https://youtu.be/JboZel47XU0][Type-based formal verification]]. ~ Alejandro Serrano (@trupill). #Haskell #Verification
+ [[https://www.tweag.io/posts/2020-02-26-monad-bayes-3.html][Probabilistic programming with monad‑bayes, Part 3: A bayesian neural network]]. ~ Siddharth Bhat, Simeon Carstens, Matthias Meschede. #Haskell #FunctionalProgramming

*** 27-Feb-20
+ [[https://hal.archives-ouvertes.fr/hal-02086931/document][Short proof of Menger's theorem in Coq (Proof Pearl)]]. ~ Christian Doczka. #ITP #Coq #Math

*** 28-Feb-20
+ [[https://raw.githubusercontent.com/jonaprieto/athena/master/pubs/paper/paper.pdf][Proof-reconstruction in type theory for propositional logic]]. ~ Jonathan Prieto-Cubides, Andrés Sicard-Ramírez. #ITP #Agda #Metis #Logic
+ [[https://github.com/jonaprieto/athena][Athena: a tool that translates Metis ATP proofs to the Agda programming language to check their correctness]]. ~ Jonathan Prieto-Cubides. #Haskell #ITP #Agda #Metis #Logic
+ [[https://github.com/jonaprieto/agda-prop][agda-prop: A library for classical propositional logic in Agda]]. ~ Jonathan Prieto-Cubides. #ITP #Agda #Logic 
+ [[https://github.com/jonaprieto/agda-metis][agda-metis: Metis prover reasoning for propositional logic in Agda]]. ~ Jonathan Prieto-Cubides. #ITP #Agda #Metis 
+ [[https://github.com/Alastair-Carr/Natural-Deduction-Pack/raw/master/Natural%20Deduction%20Pack.pdf][The natural deduction pack]]. ~ Alastair Carr. #Logic
+ [[https://www.ssrg.ece.vt.edu/papers/tacas20.pdf][Highly automated formal proofs over memory usage of assembly code]]. ~ Freek Verbeek et als. #ITP #IsabelleHOL
+ [[https://bartoszmilewski.com/2020/02/24/math-is-your-insurance-policy/][Math is your insurance policy]]. ~ Bartosz Milewski (@BartoszMilewski). #Programming
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ThEdu19.1][Automating the generation of high school geometry proofs using Prolog in an educational context]]. ~ Ludovic Font et als. #Prolog #LogicProgramming #Math 
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ThEdu19.3][A mobile application for self-guided study of formal reasoning]]. ~ David M. Cerna, Rafael P.D. Kiesel, Alexandra Dzhiganskaya. #Logic #Teaching #Android
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ThEdu19.4][Tools in term rewriting for education]]. ~ Sarah Winkler, Aart Middeldorp. #Logic #Teaching

*** 29-Feb-20
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ThEdu19.5][Teaching a formalized logical calculus]]. ~ Asta Halkjær From et als. #Logic #Teaching #ITP #IsabelleHOL
+ [[https://sicp.comp.nus.edu.sg/][Structure and interpretation of computer programs — JavaScript adaptation]]. #eBook #JavaScript #SICP
+ [[http://math.chapman.edu/~jipsen/structures/doku.php/][Mathematical structures]]. ~ Contributors of math.chapman.edu. #Math
+ [[https://rjlipton.wordpress.com/2020/02/28/reductions-and-jokes/][Reductions and jokes]]. ~ R.J. Lipton & K.W. Regan. #CompSci #Math
+ [[https://www.math.utah.edu/~cherk/mathjokes.html][Mathematical humor]]. ~ Andrej and Elena Cherkaev. #Math 

** Marzo de 2020

*** 01-Mar-20
+ [[http://www.cs.ucl.ac.uk/teaching/3C11/book/book.html][Programming with Miranda]]. ~ C. Clack, C. Myers, and E. Poon (1995). #eBook #Miranda #FunctionalProgramming 
+ [[http://www.cs.kent.ac.uk/people/staff/dat/ccount/click.php?id=4][Church's thesis and functional programming]]. ~ David Turner (2006). #Logic #FunctionalProgramming #Miranda
+ [[http://www.cs.kent.ac.uk/people/staff/dat/tfp12/tfp12.pdf][Some history of functional programming languages]]. ~ David Turner (2012). #FunctionalProgramming
+ [[https://dl.acm.org/doi/abs/10.1145/3377555.3377884][Postcondition-preserving fusion of postorder tree transformations]]. ~ Eleanor Davies, Sara Kalvala. #ITP #Coq
+ [[https://nbviewer.jupyter.org/github/Anabra/grin/blob/fd9de6d3b9c7ec5f4aa7d6be41285359a73494e3/papers/stcs-2019/article/tex/main.pdf][A modern look at GRIN, an optimizing functional language back end]]. ~ Csaba Hruska, Péter Dávid Podlovics, Andor Pénzes. #Haskell #FunctionalProgramming
+ [[http://perso.ens-lyon.fr/nicolas.brisebarre/M2R/CoqApprox][Course: Approximation theory and proof assistants: certified computations]]. ~ Nicolas Brisebarre, Damien Pous./#coqsessions #ITP #Coq #Math
+ [[http://perso.ens-lyon.fr/damien.pous/apmep/][First steps with Coq (for primary and secondary school teachers, APMEP, Grenoble, 2011)]]. ~ Damien Pous. #ITP #Coq

*** 02-Mar-20
+ [[https://medium.com/@cdsmithus/optimizing-a-maze-with-graph-theory-genetic-algorithms-and-haskell-e3702dd6439f][Optimizing a maze with graph theory, genetic algorithms, and Haskell]]. ~ Chris Smith (@cdsmithus). #Haskell #FunctionalProgramming #Math
+ [[https://www.researchgate.net/publication/220531947_Seventy-Five_Problems_for_Testing_Automatic_Theorem_Provers][Seventy-five problems for testing automatic theorem provers]]. ~ Francis Jeffry Pelletier (1986). #Logic
+ [[http://neilmitchell.blogspot.com/2020/03/how-to-get-haskell-job.html][How to get a Haskell job]]. ~ Neil Mitchell (@ndm_haskell). #Haskell #FunctionalProgramming

*** 03-Mar-20
+ [[https://github.com/norvig/paip-lisp][Lisp code for the textbook "Paradigms of Artificial Intelligence Programming"]]. ~ Peter Norvig. #CommonLisp #AI 
+ [[https://byorgey.wordpress.com/2020/03/03/competitive-programming-in-haskell-modular-arithmetic-part-2/][Competitive programming in Haskell: modular arithmetic, part 2]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming #Math

*** 04-Mar-20
+ [[http://users.ece.utexas.edu/~gligoric/papers/PalmskogETAL20Chip.pdf][Practical machine-checked formalization of change impact analysis]]. ~ Karl Palmskog, Ahmet Celik, Milos Gligoric. #ITP #Coq
+ [[https://scm.iis.sinica.edu.tw/pub/2020-monadic-sort.pdf][Declarative pearl: Deriving monadic quicksort]]. ~ Shin-Cheng Mu, Tsung-Ju Chiang. #Haskell #FunctionalProgramming
+ [[https://research.chalmers.se/publication/515535/file/515535_Fulltext.pdf][Automated derivation of random generators for algebraic data types]]. ~ Agustín Mista. #Haskell #FunctionalProgramming
+ [[https://lamport.azurewebsites.net/pubs/lamport-types.pdf][Should your specification language be typed?]]. ~ Leslie Lamport, Lawrence C. Paulson (1999). #ITP #FunctionalProgramming
+ [[https://arxiv.org/abs/2003.01422][The Prolog debugger and declarative programming]]. Examples. ~ Włodzimierz Drabent. #Prolog #LogicProgramming

*** 05-Mar-20
+ [[https://dmsm.github.io/scissors-congruence/][Scissors congruence (An interactive demonstration of the Wallace–Bolyai–Gerwien theorem)]]. ~ Dima Smirnov, Zivvy Epstein. #Math
+ [[https://www.michaelburge.us/2017/08/17/rolling-your-own-blockchain.html][Create blockchain in Haskell (Rolling your own blockchain in Haskell)]]. ~ Michael Burge (2017). #Haskell #Blockchain
+ [[https://arxiv.org/abs/2003.01935][Intuitionistic mathematics and logic]]. ~ Joan R. Moschovakis, Garyfallia Vafeiadou. #Logic #Math
+ [[https://www.tweag.io/posts/2020-03-05-peirce.html][Code is engineering, types are science]]. ~ Juan Raphael Diaz Simões. #Programming #Logic
+ [[https://research.smu.edu.sg/news/2020/feb/13/speak-math-not-code][Speak math, not code]]. (Writing algorithms in mathematics rather than code is not only more elegant but also more efficient, says 2013 Turing Award winner Leslie Lamport). #Math #Programming #CompSci

*** 06-Mar-20
+ [[https://free.cofree.io/2020/02/29/dsl/][Building a friendly and safe EDSL with IxState and TypeLits]]. #Haskell #FunctionalProgramming 
+ [[https://utdemir.com/posts/ann-distributed-dataset.html][distributed-dataset: A distributed data processing framework in Haskell]]. ~ Utku Demir. #Haskell #FunctionalProgramming
+ [[https://blog.shaynefletcher.org/2020/03/ghc-haskell-pats-and-lpats.html][GHC Haskell Pats and LPats]]. ~ Shayne Fletcher. #Haskell #FunctionalProgramming
+ [[http://philsci-archive.pitt.edu/16976/][Audience role in mathematical proof development]]. ~ Zoe Ashton. #Logic #Math #ITP

*** 07-Mar-20
+ [[https://apfelmus.nfshost.com/articles/lazy-eval-modular-code.html][Writing more modular code with lazy evaluation]]. ~ Heinrich Apfelmus. #Haskell #FunctionalProgramming
+ [[https://apfelmus.nfshost.com/articles/lazy-eval-intro.html][How does lazy evaluation work in Haskell?]] ~ Heinrich Apfelmus. #Haskell #FunctionalProgramming via @etorreborre
+ [[https://arxiv.org/abs/2003.00032][Declarative stream runtime verification (hLola)]]. ~ Martı́n Ceresa, Felipe Gorostiaga, César Sánchez. #Haskell #FunctionalProgramming

*** 08-Mar-20
+ [[https://www.type-driven.org.uk/edwinb/papers/idris2.pdf][Idris 2: Quantitative Type Theory in action]]. ~ Edwin Brady. #Idris #FunctionalProgramming

*** 09-Mar-20
+ [[http://www.philipzucker.com/naive-synthesis-of-sorting-networks-using-z3py/][Naive synthesis of sorting networks using Z3Py]]. ~ Philip Zucker (@SandMouth). #SMT #Z3
+ [[http://www.scottaaronson.com/papers/pnp.pdf][P =? NP]]. ~ Scott Aaronson (2002). #Logic #CompSci
+ [[https://www.jotdown.es/2020/03/el-coronavirus-y-la-leyenda-del-tablero-de-ajedrez/][El Coronavirus y la leyenda del tablero de ajedrez]]. ~ Carlos Pena y Juan José Gómez Cadenas. #Matemáticas
+ [[http://revue.sesamath.net/spip.php?article1168][Les algorithmes du programme 2019 de mathématiques de Seconde]]. ~ Benjamin Clerc. #Math #Programming #Python
+ [[http://informathix.tuxfamily.org/?q=node/65][Implémentations du problème du Duc de Toscane dans différents langages]]. ~ Guillaume Connan. #Math #Caml #Haskell #Scala #Python #Scilab
+ [[https://download.tuxfamily.org/mathypython/les_pdf/GraphesBeamer19.pdf][Algorithmes de graphes]]. ~ Guillaume Connan (2019). #Math #SageMath #Pythom
+ [[http://download.tuxfamily.org/tehessinmath/les%20pdf/PolyAnalyse16py.pdf][Au delà des réels: méthodes numériques en informatique]]. ~ Guillaume Connan (2016). #Math #Python
+ [[https://github.com/alhassy/CheatSheet][Easily making CheatSheets with Org-mode]]. ~ Musa Al-hassy. #Emacs #OrgMode
+ [[https://github.com/alhassy/PythonCheatSheet][PythonCheatSheet: Quick reference to a tremendously accessible high-level language - executable pseudocode!]] ~ Musa Al-hassy. #Python #OrgMode

*** 10-Mar-20
+ [[https://arxiv.org/abs/2003.03729][Formal verification of cyber-physical systems using theorem proving]]. ~ Adnan Rashid, Umair Siddique, Sofine Tahar. #ITP #HOL4 #HOL_Light #IsabelleHOL #Coq #PVS
+ [[https://github.com/gcv/julia-snail][Julia Snail: An Emacs development environment for Julia]]. #Emacs #JuliaLang
+ [[https://github.com/i-am-tom/holmes][Holmes: a library for computing constraint-solving problems]]. ~ Tom Harding. #Haskell #FunctionalProgramming

*** 11-Mar-20
+ [[https://www.quantamagazine.org/landmark-computer-science-proof-cascades-through-physics-and-math-20200304/][Landmark Computer Science proof cascades through Physics and Math]]. ~ Kevin Hartnett (@KSHartnett). #CompSci #Physics #Math
+ [[https://arxiv.org/abs/2003.04604][Hilbert's tenth problem in Coq]]. ~ Dominique Larchey-Wendling, Yannick Forster. #ITP #Coq #Math
+ [[https://serokell.io/blog/haskell-with-utf8][Haskell with UTF-8]]. ~ Kirill Elagin. #Haskell #FunctionalProgramming
+ [[http://www.cis.upenn.edu/~cis262/notes/proofslambda.pdf][Proofs, computability, undecidability, complexity, and the lambda calculus (An introduction)]]. ~ Jean Gallier, Jocelyn Quaintance. #eBook #Logic #CompsCi

*** 12-Mar-20
+ [[https://www.researchgate.net/publication/339499817_Mechanization_of_a_Type_System_for_Atomicity_Analysis_and_its_Type_Safety][Mechanization of a type system for atomicity analysis and its type safety]]. ~ Beatriz Ferreira et als. #ITP #Coq

*** 13-Mar-20
+ [[https://www.glc.us.es/~jalonso/exercitium/producto-de-fibonaccis-consecutivos/][#Exercitium: Soluciones de "Producto de Fibonaccis consecutivos"]]. #Haskell #ProgramaciónFuncional #Matemáticas #I1M2019 
+ [[https://www.glc.us.es/~jalonso/exercitium/distancia-esperada-entre-dos-puntos-de-un-cuadrado-unitario/][#Exercitium: Enunciado de "Distancia esperada entre dos puntos de un cuadrado unitario"]]. #Haskell #ProgramaciónFuncional #Matemáticas #I1M2019 

*** 14-Mar-20
+ [[http://nuprl.org/documents/Constable/The-Continuum.pdf][Computational complexity and Brouwer’s continuum]]. ~ Robert L. Constable. #Logic #Math #ITP #Nuprl
+ [[https://eccc.weizmann.ac.il/report/2020/034][On proof complexity of resolution over polynomial calculus]]. ~ Erfan Khaniki. #Logic #Math #CompSci
+ [[http://bit.ly/38SXjrs][El problema aritmético de Sylvester]]. ~ Juan Arias de Reyna. #Matemáticas
+ [[https://notxor.nueva-actitud.org/blog/2019/04/07/ventajas-del-texto-plano/][Ventajas del texto plano]]. #Emacs #OrgMode
+ [[https://www.logicmatters.net/2020/03/12/more-natural-deduction-exercises/][More natural deduction exercises]]. ~ Peter Smith. #Logic

*** 15-Mar-20
+ [[https://golem.ph.utexas.edu/category/2020/03/the_hardest_math_problem.html][The hardest Math problem]]. ~ John Baez (@johncarlosbaez). #Math
+ [[https://microship.com/lisp-comes-of-age/][LISP comes of age]]. ~ Steven K. Roberts (1980). #Lisp #Programming #AI
+ [[http://espejo-ludico.blogspot.com/2020/03/todas-las-revistas-cacumen.html][Todas las revistas Cacumen]]. #Matemáticas
+ [[https://theconversation.com/amp/matematicas-recreativas-ponga-a-prueba-su-destreza-resolviendo-enigmas-historicos-131946][Matemáticas recreativas: ponga a prueba su destreza resolviendo enigmas históricos]]. ~ Fernando Blasco (@fblascoxyz). #Matemáticas

*** 18-Mar-20
+ [[https://search.isabelle.in.tum.de][FindFacts: a search application to find formal theory content of Isabelle and the AFP]]. ~ Fabian Huch./#about #ITP #IsabelleHOL #AFP
+ [[https://personalpages.manchester.ac.uk/staff/hung.bui/ideal.pdf][The ideal mathematician]]. ~ Phillip J. David & Reuben Hersh (1981). #Math
+ [[https://arxiv.org/abs/2003.06458][QED at large: A survey of engineering of formally verified software]]. ~ Talia Ringer, Karl Palmskog, Ilya Sergey, Milos Gligoric, Zachary Tatlock. #ITP #FormalVerification
+ [[http://neilmitchell.blogspot.com/2020/03/the-pure-pattern.html][The <- pure pattern]]. ~ Neil Mitchell (@ndm_haskell). #Haskell #FunctionalProgramming

*** 20-Mar-20
+ [[http://www.cs.umd.edu/~mwh/papers/lh-typeclasses-draft.pdf][Verifying typeclasses with refinement types]]. ~ Yiyun Liu, James Parker, Michael Hicks, Niki Vazou. #Haskell #LiquidHaskell
+ [[https://www.theguardian.com/technology/2020/mar/19/can-computers-ever-replace-the-classroom][Can computers ever replace the classroom?]] ~ Alex Beard. #IA #Teaching

*** 21-Mar-20
+ [[https://cacm.acm.org/magazines/2020/4/243641-sel4-in-australia/fulltext][seL4 in Australia: From research to real-world trustworthy systems]]. ~ Gernot Heiser, Gerwin Klein, June Andronick. #ITP #IsabelleHOL
+ [[https://www.microsiervos.com/archivo/matematicas/mundo-matematicasx-mathigon.html][El Mundo de las Matemáticas de Mathigon]]. ~ @Alvy. #Matemáticas
+ [[https://mathigon.org/world/][World of Mathematics]]. #Math

*** 22-Mar-20
+ [[https://richardzach.org/2020/03/21/need-a-logic-course-fast/][Need a logic course, fast?]] ~ Richard Zach (@RrrichardZach). #Logic

*** 23-Mar-20
+ [[https://yannherklotz.com/blog/2020-02-15-nix-for-coq-development.html][Nix for Coq development]]. ~ Yann Herklotz (@ymherklotz). #ITP #Coq #Nix
+ [[https://mattpap.github.io/masters-thesis/html/src/groebner.html][Gröbner bases and their applications]]. ~ Mateusz Paprocki. #Math #Python
+ [[https://arxiv.org/abs/2003.09140][Tactic learning and proving for the Coq proof assistant]]. ~ Lasse Blaauwbroek, Josef Urban, Herman Geuvers. #ITP #Coq #MachineLearning
+ [[https://youtu.be/Y-vMHbH4vVI][Towards formally verified smart contracts with Haskell]]. ~ Allison Irvin, Nick Waywood. #Haskell #FunctionalProgramming
+ [[https://www.isa-afp.org/entries/Hello_World.html]["Hello World!" in Isabell/HOL (including a formal framework for reasoning about IO)]]. ~ Cornelius Diekmann and Lars Hupel. #ITP #IsabelleHOL #Monads

*** 24-Mar-20
+ [[https://mmhaskell.com/blog/2020/3/9/blaze-lightweight-html-generation][Blaze: Lightweight HTML generation]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://byorgey.wordpress.com/2020/03/23/data-structure-challenge-finding-the-rightmost-empty-slot/][Data structure challenge: finding the rightmost empty slot]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://youtu.be/ZF3CgNpkSTQ][Infinite patterns]]. ~ Cristóbal Vila. #Maths

*** 26-Mar-20
+ [[https://arxiv.org/abs/2003.11331][A formalization of SQL with nulls]]. ~ Wilmer Ricciotti, James Cheney. #ITP #Coq
+ [[https://www.finereport.com/en/data-analysis/taichi-a-brand-new-programming-language-frozen-in-99-lines-of-code.html][Taichi: A brand new programming language, “Frozen” in 99 lines of code]]. #Programming
+ [[https://www.well-typed.com/blog/2020/03/functions-in-compact-regions/][The problem with adding functions to compact regions]]. ~ Ömer Sinan Ağacan. #Haskell #FunctionalProgramming
+ [[https://www.isa-afp.org/entries/Relational-Incorrectness-Logic.html][An under-approximate relational logic in Isabelle/HOL]]. ~ Toby Murray. #ITP #IsabelleHOL

*** 27-Mar-20
+ [[https://www.isa-afp.org/entries/Furstenberg_Topology.html][Furstenberg's topology and his proof of the infinitude of primes in Isabelle/HOL]]. ~ Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2003.11838][Applying the Isabelle Insider framework to airplane security]]. ~ Florian Kammüller, Manfred Kerber. #ITP #IsabelleHOL
+ [[https://blog.patchgirl.io/haskell/2020/03/08/haskell-part-I.html][Building a web app with functional programming - Haskell - part I]]. ~ Iori Matsuhara (@Matsumonkie). #Haskell #FunctionalProgramming
+ [[https://jmorag.netlify.com/posts/zip-tree1/][Zipping Trees, Part 1]]. ~ Joseph Morag. #Haskell #FunctionalProgramming

*** 28-Mar-20
+ [[https://arxiv.org/abs/2003.09993][A trustful monad for axiomatic reasoning with probability and nondeterminism]]. ~ Reynald Affeldt, Jacques Garrigue, David Nowak, Takafumi Saikawa. #ITP #Coq
+ [[https://www.mdpi.com/2078-2489/11/3/167][Logic-based technologies for intelligent systems: State of the art and perspectives]]. ~ Roberta Calegari, Giovanni Ciatto, Enrico Denti, Andrea Omicini. #Logic #AI
+ [[https://www.sciencedirect.com/science/article/pii/S1571066120300050][Dual and axiomatic systems for constructive S4, a formally verified equivalence]]. ~ Lourdes del Carmen González HuescaFavio, E. Miranda-Perea, P. Selene Linares-Arévalo. #ITP #Coq

*** 31-Mar-20
+ [[https://github.com/adkelley/prolog-starter][A starter template for SWI-Prolog projects]]. ~ Alex Kelley. #Prolog #LogicProgramming 
+ [[https://www.cmpe.boun.edu.tr/sites/default/files/prolog_coding_guidelines.pdf][Some coding guidelines for Prolog]]. ~ Michael A. Covington (2002). #Prolog #LogicProgramming
+ [[https://irreal.org/blog/?p=8761][A repository for writing a Thesis with Org Mode]]. #Emacs #OrgMode
+ [[http://lisp-univ-etc.blogspot.com/2020/03/programming-algorithms-synchronization.html][Programming algorithms: Synchronization]]. ~ Vsevolod Dyomkin. #CommonLisp 
+ [[https://mmhaskell.com/blog/2020/3/16/lucid-another-html-option][Lucid: Another HTML option]]. ~ James Bowen (@james_OWA). #Haskell #FuncionalProgramming
+ [[http://www.sci.brooklyn.cuny.edu/~mate/heartofmath/thinkmath_notes.pdf][Thinking mathematically notes]]. ~ A. Máté. #Logic #Math 

** Abril de 2020

*** 01-Abr-20
+ [[https://humanreadablemag.com/issues/2/articles/theres-a-mathematician-in-your-compiler][There's a mathematician in your compiler]]. ~ James Phillips. #Logic #Math #CompSci #Scala #FunctionalProgramming via @FunctorFact
+ [[http://www.joachim-breitner.de/blog/768-Animations_in_Kaleidogen][Animations in Kaleidogen]]. ~ Joachim Breitner (@nomeata). #Haskell #FunctionalProgramming
+ [[https://youtu.be/psmu_VAuiag][Curried functions]]. ~ Graham Hutton (@haskellhutt). #Haskell #FunctionalProgramming
+ [[https://frasertweedale.github.io/blog-fp/posts/2020-03-31-quickcheck-hedgehog.html][Migrating from QuickCheck to Hedgehog: mixed results]]. ~ Fraser Tweedale (@hackuador). #Haskell #FunctionalProgramming

*** 02-Abr-20
+ [[http://www.lix.polytechnique.fr/Labo/Dale.Miller/papers/icdcit-2020.pdf][A distributed and trusted web of formal proofs]]. ~ Dale Miller. #ITP #Logic #Math #CompSci 
+ [[https://arxiv.org/abs/2004.00055][Explosive proofs of mathematical truths]]. ~ Scott Viteri, Simon DeDeo. #ITP #Coq

*** 03-Abr-20
+ [[https://github.com/blanchette/logical_verification_2020/raw/master/hitchhikers_guide.pdf][The Hitchhiker’s Guide to Logical Verification]]. ~ Anne Baanen, Alexander Bentkamp, Jasmin Blanchette, Johannes Hölzl. #eBook #ITP #LeanProver
+ [[https://staff.aist.go.jp/reynald.affeldt/documents/cproba_preprint.pdf][Reasoning with conditional probabilities and joint distributions in Coq]]. ~ Reynald Affeldt, Jacques Garrigue, Takafumi Saikawa. #ITP #Coq #Math
+ [[https://rubenpieters.github.io/assets/papers/JFP20-handlers.pdf][Generalized monoidal effects and handlers]]. ~ Ruben P. Pieters, Tom Schrijvers, Exequiel Rivas. #Haskell #FunctionalProgramming
+ [[http://h2.jaguarpaw.co.uk/posts/refactoring-neural-network/][Refactoring a neural network implementation in Haskell]]. ~ The H2 Wiki. #Haskell #FunctionalProgramming #NeuralNetwork
+ [[https://lispnews.wordpress.com/2020/04/02/acm-open-access-to-lfp/][ACM Open access to LFP (Conference on LISP and Functional Programming)]]. #Lisp #FunctionalProgramming
+ [[http://jackkelly.name/blog/archives/2020/04/03/the_power_of_tiny_dsls/index.html][The power of tiny DSLs]]. ~ Jack Kelly. #Haskell #CodeWorld

*** 04-Abr-20
+ [[https://dl.acm.org/doi/book/10.1145/2841316][Verified functional programming in Agda]]. ~ Aaron Stump.  #eBook #ITP #Agda
+ [[https://youtu.be/wvXZn4OdExU][El problema de Basilea]]. ~ Urtzi Buijs (@UrtziBuijs). #Matemáticas
+ [[https://www.bates.edu/mathematics/resources/latex-manual/][The Bates LaTeX Manual]]. #LaTeX

*** 06-Abr-20
+ [[https://github.com/fp-works/function-composition-cheatsheet][Composition of functions cheatsheet]]. #Haskell #FunctionalProgramming
+ [[https://ahelwer.ca/post/2020-04-05-lean-assignment/][Doing a math assignment with the Lean theorem prover]]. ~ Andrew Helwer (@ahelwer). #ITP #LeanProver #Math

*** 07-Abr-20
+ [[https://rgoswami.me/posts/jupyter-orgmode/][Replacing Jupyter with Orgmode]]. ~ Rohit Goswami (@rg0swami). #Emacs #OrgMode #Python

*** 08-Abr-20
+ [[https://www.mimuw.edu.pl/~lukaszcz/sauto.pdf][Practical proof search for Coq by type inhabitation]]. ~ Lukasz Czajka. #ITP #Coq
+ [[https://youtu.be/cHfZEdxtVjU][Haskell: Why monad composes operations sequentially]]. ~ Riccardo Odone (@RiccardoOdone). #Haskell #FunctionalProgramming
+ [[https://chrisdornan.com/posts/2020-04-06-pointless.html][Pointless style]]. ~ Chris Dornan (@CDornan). #Haskell #FunctionalProgramming
+ [[https://jessewarden.com/2020/03/write-unbreakable-python.html][Write unbreakable Python]]. ~ Jesse Warden (@jesterxl). #Python #FunctionalProgramming
+ [[https://chrisdornan.com/posts/2020-04-05-sr-Functor.html][Functor (expanded)]]. ~ Chris Dornan (@CDornan). #Haskell #FunctionalProgramming
+ [[https://www.freecodecamp.org/news/projecteuler100-coding-challenge-competitive-programming/][Introducing the #ProjectEuler100 challenge: the "dark souls" of coding achievements]]. ~ Quincy Larson (@ossia). #Programming #Math

*** 09-Abr-20
+ [[https://arxiv.org/abs/2004.03673][Maintaining a library of formal mathematics]]. ~ Floris van Doorn, Gabriel Ebner, Robert Y. Lewis. #ITP #LeanProver #Math

*** 10-Abr-20
+ [[https://www.youtube.com/playlist?list=PLvROQ_RldgC8KYmkQsF_zKqAXD_Xphr9n][Coursework: The power and limits of Logic]]. ~ Greg Restall (@consequently). #Logic
+ [[https://youtu.be/wA4WLJFjGrE][Key benefits of working in Haskell]]. ~ Sreenidhi Nair (@ersran9). #Haskell #FunctionalProgramming
+ [[http://people.irisa.fr/Jean-Christophe.Lechenet/files/IJCAR_2020.pdf][A fast verified liveness analysis in SSA form]]. ~ Jean-Christophe Léchenet, Sandrine Blazy, David Pichardie. #ITP #Coq
+ [[https://ilyasergey.net/papers/ceramist-draft.pdf][Certifying certainty and uncertainty in approximate membership query structures]]. ~ Kiran Gopinathan, Ilya Sergey. #ITP #Coq

*** 11-Abr-20
+ [[https://bit.ly/34tY6yH][The interplay between logic and computation]]. ~ Zena M. Ariola. #Logic #CompSci
+ [[https://joshbradley.me/understanding-the-power-of-lisp/][Understanding the power of LISP]]. ~ @josh_b_rad. #Lisp
+ [[https://www.isa-afp.org/entries/Saturation_Framework.html][A comprehensive framework for saturation theorem proving]]. ~ Sophie Tourret. #ITP #IsabelleHOL #Logic
+ [[https://www.youtube.com/playlist?list=PLIb_io8a5NB2DddFf-PwvZDCOUNT1GZoA][Esencia del álgebra lineal]]. #Matemáticas
  
*** 12-Abr-20
+ [[https://bit.ly/2UZum9I][Fundamentals of Artificial Intelligence]]. ~ K.R. Chowdhary. #AI #Logic 
+ [[https://arxiv.org/abs/2004.02983][Integrating Owicki-Gries for C11-style memory models into Isabelle/HOL]]. ~ Sadegh Dalvandi, Brijesh Dongol, Simon Doherty. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/1909.01743][Verifying the DPLL algorithm in Dafny]]. ~ Cezar-Constantin Andrici, Ştefan Ciobâcă. #Dafny #Verification
+ [[https://bit.ly/3c9CcmF][Herramientas de razonamiento automático en GeoGebra: qué son y para qué sirven]]. ~ M. Pilar Vélez, Tomás Recio, Steven Van Vaerenbergh. #Razonamiento_automático #GeoGebra
+ [[https://www.cambridge.org/core/services/aop-cambridge-core/content/view/CC82B2E79DC5CCAD57E0AC5DF0D43DEC/S0956796820000064a.pdf/div-class-title-heterogeneous-binary-random-access-lists-div.pdf][Functional Pearls: Heterogeneous binary random-access lists]]. ~ Wouter Swierstra. #Agda #FunctionalProgramming
+ [[https://youtu.be/czp3OUmcIYg][On beyond Prolog]]. ~ Anne Ogborn (@AnnieTheObscure). #Prolog #LogicProgramming
+ [[https://blog.josephmorag.com/posts/zip-tree1/][Zipping trees]]. Part 1. ~ Joseph Morag. #Haskell #FunctionalProgramming
+ [[https://blog.josephmorag.com/posts/zip-tree2/][Zipping trees]]. Part 2. ~ Joseph Morag. #Haskell #FunctionalProgramming

*** 13-Abr-20
+ [[https://www.isa-afp.org/entries/Sliding_Window_Algorithm.html][Formalization of an algorithm for greedily computing associative aggregations on sliding windows]]. ~ Lukas Heimes, Dmitriy Traytel, Joshua Schneider. #ITP #IsabelleHOL
+ [[https://williamyaoh.com/posts/2020-04-12-software-engineer-hangups.html][Things software engineers trip up on when learning Haskell]]. ~ William Yao (@williamyaoh). #Haskell #FuncionalProgramming
+ [[https://youtu.be/POHVMMG7pqE][10 minute Lean tutorial: proving logical propositions]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic
+ [[https://www.ideallearning.fi/index.php/blogi/95-chicken-jerky-flavoured-introduction-to-functional-programming-is-out-in-english][Doglike programming book (Chicken jerky flavoured introduction to functional programming)]]. ~ Juuso Vuorinen. #eBook #Haskell #FunctionalProgramming

*** 14-Abr-20
+ [[https://arxiv.org/abs/2004.05631][At the interface of algebra and statistics]]. ~ Tai-Danae Bradley. #PhD_Thesis #Math
+ [[https://haskellfortypescriptdevs.fission.codes/appendix/haskell-wizards][Haskell Wizards (Character illustrations of Haskell users)]]. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/1904.13203][Computable analysis and notions of continuity in Coq]]. ~ Florian Steinberg, Laurent Thery, Holger Thies. #ITP #Coq #Math
+ [[https://blog.poisson.chat/posts/2020-04-13-safe-head-tail.html][Programming totally with head and tail]]. ~ Li-yao Xia (@lysxia). #Haskell #FunctionalProgramming

*** 16-Abr-20
+ [[https://arxiv.org/abs/2004.06997][Prolog technology reinforcement learning prover]]. ~ Zsolt Zombori, Josef Urban, Chad E. Brown. #ATP #MachineLearning #Prolog
+ [[https://leanpub.com/progalgs/read][Programming algorithms]]. ~ Vsevolod Domkin #eBook #CommonLisp #Programming #Algorithms
+ [[https://golem.ph.utexas.edu/category/2020/04/online_seminar_lists.html][Online seminar lists]]. #Math #CompSci
+ [[https://blog.sumtypeofway.com/posts/fast-iteration-with-haskell.html][Towards faster iteration in industrial Haskell]]. ~ Patrick Thomson (@importantshock). #Haskell #FunctionalProgramming

*** 17-Abr-20
+ [[https://arxiv.org/abs/2004.07390][Trakhtenbrot's theorem in Coq, a constructive approach to finite model theory]]. ~ Dominik Kirst, Dominique Larchey-Wendling. #ITP #Coq #Math
+ [[https://www.tweag.io/posts/2020-04-16-exceptions-in-haskell.html][The three kinds of Haskell exceptions and how to use them]]. ~ Arnaud Spiwack. #Haskell #FunctionalProgramming
+ [[https://github.com/thma/WhyHaskellMatters][Why Haskell matters]]. ~ Thomas Mahler. #Haskell #FunctionalProgramming

*** 18-Abr-20
+ [[https://www21.in.tum.de/~traytel/papers/incompleteness/incompleteness.pdf][Distilling the requirements of Gödel’s Incompleteness theorems with a proof assistant]]. ~ Andrei Popescu, Dmitriy Traytel. #ITP #IsabelleHOL #Logic #Math
+ [[https://www.ps.uni-saarland.de/~gaeher/files/thesis-gaeher.pdf][Towards a formal proof of the Cook-Levin theorem]]. ~ Lennard Gäher. #ITP #Coq #Logic #Math
+ [[http://group-mmm.org/~ayamada/TBDHJY20.pdf][Formalizing the LLL basis reduction algorithm and the LLL factorization algorithm in Isabelle/HOL]]. ~ René Thiemann et als. #ITP #IsabelleHOL 

*** 19-Abr-20
+ [[https://hackernoon.com/what-is-haskell-who-uses-it-and-where-can-you-learn-to-code-it-7xme32d0][What Is Haskell, who uses it, and where can you learn to code it]]. ~ Alexander Sechin. #Haskell #FunctionalProgramming
+ [[https://youtu.be/mb-qDG5-05Y][The mechanization of Mathematics]]. ~ Jeremy Avigad. #ITP #Math
+ [[https://www.andrew.cmu.edu/user/avigad/Talks/mechanization_talk.pdf][The mechanization of Mathematics]]. ~ Jeremy Avigad. #ITP #Math
+ [[https://typeclasses.com/timeline][Great moments in Haskell history]]. ~ Chris Martin (@chris__martin), Julie Moronuki (@argumatronic). #Haskell #FunctionalProgramming
+ [[https://pauloedevilhena.com/wp-content/uploads/2020/03/de-vilhena-paulson-algebraically-closed-fields-2020.pdf][Algebraically closed fields in Isabelle/HOL]]. ~ Paulo Emı́lio de Vilhena, Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://youtu.be/qwAmiJ5M_zM][Introduction to relude an alternative Haskell prelude]]. ~ Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming

*** 21-Abr-20
+ [[https://www.isa-afp.org/entries/Lucas_Theorem.html][Lucas's theorem in Isabelle/HOL]]. ~ Chelsea Edmonds. #ITP #IsabelleHOL #Math
+ [[http://www.haskellforall.com/2020/04/blazing-fast-fibonacci-numbers-using.html][Blazing fast Fibonacci numbers using Monoids]]. ~ G. Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming #Math
+ [[https://arxiv.org/abs/2004.07761][Deep generation of Coq lemma names using elaborated terms]]. ~ Pengyu Nie, Karl Palmskog, Junyi Jessy Li, Milos Gligoric. #ITP #Coq #MachineLearning

*** 23-Abr-20
+ [[https://arxiv.org/abs/2004.10655][Formal verification of flow equivalence in desynchronized designs]]. ~ Jennifer Paykin, Brian Huffman, Daniel M. Zimmerman, Peter A. Beerel. #ITP #Coq
+ [[https://arxiv.org/abs/2004.10263][The Imandra automated reasoning system (system description)]]. ~ Grant Olneya Passmore et als. #ITP
+ [[https://www.tweag.io/posts/2020-04-23-deriving-isomorphically.html][Deriving isomorphically]]. ~ Hans Hoeglund. #Haskell #FunctionalProgramming

*** 25-Abr-20
+ [[http://wwwf.imperial.ac.uk/~buzzard/xena/computers.pdf][When will computers prove theorems?]] ~ Kevin Buzzard. #ITP #Math

*** 27-Abr-20
+ [[https://plato.stanford.edu/entries/recursive-functions/][Recursive functions]]. ~ Walter Dean. #Logic #Math
+ [[https://youtu.be/q5-pykbfViA][Is HoTT the way to do mathematics?]] ~ Kevin Buzzard. #Math #HoTT #ITP

*** 28-Abr-20
+ [[https://www.abc.es/ciencia/abci-metodo-moore-o-como-aprender-matematicas-estilo-tejano-202004270153_noticia.html][El método Moore o cómo aprender matemáticas al estilo tejano]]. ~ Pedro Alegría. #Matemáticas
+ [[https://scholarworks.gvsu.edu/books/20/][Active Prelude to Calculus]]. ~ Matthew Boelkins. #Math
+ [[https://scholarworks.gvsu.edu/books/18/][Active Calculus 2]].1. ~ Matthew Boelkins. #Math
+ [[https://scholarworks.gvsu.edu/books/19/][Active Calculus Multivariable: 2018 Edition]]. ~ Steve Schlicker, David Austin, Matt Boelkins. #Math
+ [[https://arxiv.org/abs/2004.12330][Detecting fake news for the new coronavirus by reasoning on the Covid-19 ontology]]. ~ Adrian Groza. #ATP #Racer
+ [[https://www.isa-afp.org/entries/Attack_Trees.html][Attack Trees in Isabelle for GDPR compliance of IoT healthcare systems]]. ~ Florian Kammüller. #ITP #IsabelleHOL
+ [[https://www.mdpi.com/1999-4893/13/5/106][Diagnosis in tennis serving technique]]. ~ Eugenio Roanes-Lozano et als. #KBS #CAS #GroebnerBases #Logic #Math #CompSci

*** 29-Abr-20
+ [[https://alvinalexander.com/downloads/scala-book/ScalaBook.pdf][Scala book (Learn Scala fastwith small, easy lessons)]]. ~ Alvin Alexander, et al. #eBook #Scala #FunctionalProgramming
+ [[https://guilhermehas.github.io/crypto-agda/thesis.pdf][A simplified version of Bitcoin, implemented in Agda]]. ~ Guilherme Horta Alvares da Silva. #ITP #Agda #FunctionalProgramming
+ [[https://gilmi.me/blog/post/2020/04/28/consider-haskell][Consider Haskell]]. ~ Gil Mizrahi (@_gilmi). #Haskell #FunctionalProgramming

*** 30-Abr-20
+ [[https://www.isa-afp.org/entries/Lambert_W.html][The Lambert W function on the reals]]. ~ Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://link.springer.com/book/10.1007/978-3-319-58487-4][Introduction to Artificial Intelligence]]. ~ Wolfgang Ertel. #eBook #Logic #AI
+ [[https://open.umn.edu/opentextbooks][Open Textbook Library]]: Open textbooks are textbooks that have been funded, published, and licensed to be freely used, adapted, and distributed. #eBooks
+ [[https://link.springer.com/book/10.1007/978-3-319-97298-5][Mathematical logic (On numbers, sets, structures, and symmetry)]]. ~ Romana Kossak. #eBook #Logic #Math
+ [[https://link.springer.com/book/10.1007/978-3-030-03255-5][Philosophical and mathematical logic]]. ~ Harrie de Swart. #eBook #Logic #Math
+ [[https://link.springer.com/book/10.1007/978-3-319-70790-7][Foundations of programming languages]]. ~ Kent D. Lee. #eBook #Programming #CompSci
+ [[https://xenaproject.wordpress.com/2020/04/30/the-invisible-map/][The invisible map]]. ~ Kevin Buzzard (@XenaProject). #Logic #Math #ITP #Lean
+ [[https://link.springer.com/book/10.1007/978-3-662-57265-8][Proofs from THE BOOK]]. ~ Martin Aigner, Günter M. Ziegler #FreeEbook #Math

** Mayo de 2020

*** 1-May-20
+ [[https://www.isa-afp.org/entries/Gaussian_Integers.html][Gaussian integers in Isabelle/HOL]]. ~ Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Power_Sum_Polynomials.html][Power sum polynomials and the Girard–Newton theorem in Isabelle/HOL]]. ~ Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/1907.00205][The Ramanujan Machine: Automatically generated conjectures on fundamental constants]]. ~ Gal Raayoni et als. #MachineLearning #Math
+ [[https://pages.cs.wisc.edu/~justhsu/teaching/current/cs538/calendar/][UWisconsin course on Haskell and Rust]]. #Haskell #Rust
+ [[https://iokasimov.github.io/posts/2020/04/waterflow][Learn to moonwalk with waterflow problem]]. ~ Murat Kasimov. #Haskell #FunctionalProgramming
+ [[https://cs-syd.eu/posts/2020-04-28-genvalidity-improvements][Property testing in depth: genvalidity's fixed-size type generators]]. ~ Tom Sydney Kerckhove. #Haskell #QuickCheck

*** 2-May-20
+ [[https://www.hcii.cmu.edu/news/2020/new-ai-enables-teachers-rapidly-develop-intelligent-tutoring-systems][New AI enables teachers to rapidly develop intelligent tutoring systems]]. #AI #Teaching
+ [[https://link.springer.com/content/pdf/10.1007%2F978-3-030-45190-5_24.pdf][Verified certification of reachability checking for timed automata]]. ~ Simon Wimmer, Joshua von Mutius. #ITP #IsabelleHOL 
+ [[https://link.springer.com/content/pdf/10.1007%2F978-3-030-45237-7_11.pdf][Formalized proofs of the infinity and normal form predicates in the first-order theory of rewriting]]. ~ Alexander Lochmann, Aart Middeldorp. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2004.12030][Formal proof of the group law for Edwards elliptic curves]]. ~ Thomas Hales, Rodrigo Raya. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2004.12713 ][Formal adventures in convex and conical spaces]]. ~ Reynald Affeldt, Jacques Garrigue, Takafumi Saikawa. #ITP #Coq #Math

*** 3-May-20
+ [[https://doisinkidney.com/posts/2020-05-02-more-random-access-lists.html][More random access lists]]. ~ Donnacha Oisín Kidney (@oisdk). #Haskell #FunctionalProgramming
+ [[https://escholarship.org/content/qt1623m1p3/qt1623m1p3.pdf ][History of Logo]]. ~ C. Solomon et als. #Logo #Programming
+ [[http://ojs.elte.hu/cejntrep/article/view/470/381][Interactive teaching of programming language theory with a proof assistant]]. ~ Horpácsi Dániel et als. #ITP #Coq 
+ [[http://ojs.elte.hu/cejntrep/article/view/399/386][A problem-based curriculum for algorithmic programming]]. ~ Nikházy László. #Programming
+ [[https://towardsdatascience.com/bye-bye-python-hello-julia-9230bff0df62][Bye-bye Python. Hello Julia!]] ~ Rhea Moutafis (@RheaMoutafis). #Python #JuliaLang #Programming

*** 4-May-20
+ [[https://techualization.blogspot.com/2020/05/design-by-contract-with-lean-theorem.html?m=0][Design by Contract with Lean theorem prover]]. ~ Nam Nguyen. #ITP #LeanProver #Programming

*** 5-May-20
+ [[https://www.mikulskibartosz.name/functional-programming-principles-vs-data-streaming/][Data flow - what functional programming and Unix philosophy can teach us about data streaming]]. ~ Bartosz Mikulski (@mikulskibartosz). #FunctionalProgramming
+ [[http://marcosh.github.io/post/2020/05/04/intervals-and-their-relations.html][Intervals and their relations]]. ~ Marco Perone (@marcoshuttle). #Haskell #FunctionalProgramming #Math
+ [[https://mmhaskell.com/blog/2020/4/20/frozen-lake-in-haskell][Frozen lake in Haskell]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming #AI
+ [[http://matt.might.net/articles/best-programming-languages/][Advanced programming languages]]. ~ Matt Might (@mattmight). #Haskell #Scala #SML #OCaml #Scheme #FunctionalProgramming
+ [[https://books.google.es/books?id=0dLQDwAAQBAJ&lpg=PP1&hl=es&pg=PP1#v=onepage&q&f=false][The age of algorithms]]. ~ Serge Abiteboul, Gilles Dowek. #eBook #Algorithms

*** 6-May-20
+ [[http://wwwf.imperial.ac.uk/~buzzard/xena/computers2.pdf][Proving theorems with computers]]. ~ Kevin Buzzard. #ITP #Math
+ [[https://www.isa-afp.org/entries/Forcing.html][Formalization of forcing in Isabelle/ZF]]. ~ Emmanuel Gunther, Miguel Pagano, Pedro Sánchez Terraf. #ITP #IsabelleZF #Logic
+ [[https://www.isa-afp.org/entries/Banach_Steinhaus.html][Banach-Steinhaus theorem in Isabelle/HOL]]. ~ Dominique Unruh, Jose Manuel Rodriguez Caballero. #ITP #IsabelleHOL #Math

*** 8-May-20
+ [[https://free.cofree.io/2020/05/06/string-types/][Eat Haskell String Types for Breakfast]]. ~ Ziyang Liu. #Haskell #FunctionalProgramming
+ [[https://tech.fretlink.com/environment-variables-parsing-for-free-applicatives/][Environment variables parsing for free (applicatives)]]. ~ Clément Delafargue. #Haskell #FunctionalProgramming
+ [[https://iceland_jack.brick.do/8c0bc94e-ed41-4db5-8de8-422fc800a061][Monoids as one-object categories, or not?]] ~ @Iceland_jack #Haskell #FunctionalProgramming #CategoryTheory
+ [[https://umazalakain.info/static/typing-linear-pi.pdf][π with leftovers: a mechanisation in Agda]]. ~ Uma Zalakain, Ornela Dardha. #ITP #Agda
+ [[http://chalmersfp.org/][The Chalmers Online Functional Programming Seminar Series]]. #FunctionalProgramming

*** 9-May-20
+ [[https://www.isa-afp.org/entries/LTL_Normal_Form.html][An efficient normalisation procedure for linear temporal logic: Isabelle/HOL formalisation]]. ~ Salomon Sickert. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Matrices_for_ODEs.html][Matrices for ODEs in Isabelle/HOL]]. ~ Jonathan Julian Huerta y Munive. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2005.02247][A linear algebra approach to linear metatheory]]. ~ James Wood, Robert Atkey. #ITP #Agda 
+ [[https://arxiv.org/abs/2005.01018][Certified semantics for relational programming]]. ~ Dmitry Rozplokhas, Andrey Vyatkin, Dmitry Boulytchev. #ITP #Coq
+ [[https://www.quora.com/Why-is-Lisp-not-as-popular-as-Python/answer/Jan-Meww][Why is Lisp not as popular as Python?]] ~ Jan Meww (@JanMeww). #Python #CommonLisp #Scheme #Clojure

*** 10-May-20
+ [[https://arxiv.org/abs/2005.02259][Learning programs by learning from failures]]. ~ Andrew Cropper, Rolf Morel. #ILP #MachineLearning #LogicProgramming

**** 11-May-20
+ [[https://youtu.be/KJ8uZiWpomg][Clean vs. defaulty representations in Prolog]]. ~ Markus Triska (@MarkusTriska). #Prolog #LogicProgramming
+ [[https://pp.ipd.kit.edu/uploads/publikationen/himmel20bachelorarbeit.pdf][Diagram chasing in interactive theorem proving]]. ~ Markus Himmel. #BsC_Thesis #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2005.01917][Learning selection strategies in Buchberger's algorithm]]. ~ Dylan Peifer, Michael Stillman, Daniel Halpern-Leistner. #MachineLearning #Math 
+ [[https://arxiv.org/abs/2005.04022][On the effect of learned clauses on stochastic local search]]. ~ Jan-Hendrik Lorenz, Florian Wörz. #ATP #SAT_solvers
+ [[https://lasciencepourtous.cafe-sciences.org/articles/lintelligence-artificielle-et-lapprentissage-profond/][L’intelligence artificielle et l’apprentissage profond]]. ~ Benjamin Bradu. #AI #DeepLearning
+ [[https://kowainik.github.io/posts/extensions][Extensions]]. ~ Veronika Romashkina (@vrom911). #Haskell #FunctionalProgramming
+ [[https://wespiser.com/posts/2020-05-06-IxMonad.html][Indexed monads: examples and discussion]]. ~ Adam Wespiser (@wespiser). #Haskell #FunctionalProgramming

*** 12-May-20
+ [[https://www.ias.edu/ideas/2014/voevodsky-origins][The origins and motivations of univalent foundations (A personal mission to develop computer proof verification to avoid mathematical mistakes)]]. ~ Vladimir Voevodsky (2014). #Logic #Math #ITP via @AngelikiKoutso1
+ [[https://www.iro.umontreal.ca/~monnier/hopl-4-emacs-lisp.pdf][Evolution of Emacs Lisp]]. ~ Stefan Monnier et als. #Emacs #Lisp
+ [[https://medium.com/better-programming/15-reasons-why-i-use-emacs-with-gifs-5b03c6608b61][15 reasons why I use Emacs, with GIFs]]. ~ Dominik Tarnowski. #Emacs
+ [[https://mmhaskell.com/blog/2020/4/27/blackjack-following-the-patterns][Blackjack: Following the patterns]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming #AI 

*** 14-May-20
+ [[https://www.isa-afp.org/entries/Recursion-Addition.html][Recursion theorem in ZF]]. ~ Georgy Dunaev. #ITP #IsabelleZF #Logic #Math
+ [[https://youtu.be/YS7DWacP55U][Haskell: Function application vs fmap vs sequential application vs bind]]. ~ Riccardo Odone (@RiccardoOdone). #Haskell #FunctionalProgramming
+ [[https://www.47deg.com/blog/science-behind-functional-programming/][The science behind functional programming]]. ~ Rafa Paradela. #CategoryTheory #FuncionalProgramming #Kotlin
+ [[https://www.isa-afp.org/entries/Irrational_Series_Erdos_Straus.html][Irrationality criteria for series by Erdős and Straus in Isabelle/HOL]]. ~ Angeliki Koutsoukou-Argyraki, Wenda Li. #ITP #IsabelleHOL #Math

*** 15-May-20
+ [[https://youtu.be/ZuNMo136QqI][A quick look at impredicativity]]. ~ Simon Peyton Jones. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2005.07059][Proof-relevant category theory in Agda]]. ~ Jason Z.S. Hu, Jacques Carette. #ITP #Agda #CategoryTheory
+ [[https://janet-lang.org][Janet: a functional and imperative programming language]]. #FunctionalProgramming #JanetLang
+ [[https://youtu.be/B5RRq1BJHEE][MathZero, the classification problem, and set-theoretic type theory]]. ~ David McAllester. #MachineLearning #TypeTheory
+ [[https://www.isa-afp.org/entries/Knuth_Bendix_Order.htmla][A formalization of Knuth–Bendix orders in Isabelle/HOL]]. ~ Christian Sternagel, René Thiemann. #ITP #IsabelleHOL

*** 16-May-20
+ [[http://wwwf.imperial.ac.uk/~buzzard/xena/pdfs/formalise_UG_maths.pdf][Formalising Mathematics in a theorem prover]]. ~ K. Buzzard. #ITP #Math
+ [[https://jesseevers.com/haskell-types/][Types vs. datatypes vs. typeclasses in Haskell]]. ~ Jesse Evers (@_jlevers). #Haskell #FunctionalProgramming
+ [[http://www.vstill.eu/publications/2020/hsExprTest.pdf][Automatic test generationfor Haskell programming assignments]]. ~ Vladimír Štill. #Haskell #FunctionalProgramming

*** 17-May-20
+ [[https://www.glc.us.es/~jalonso/vestigium/videos-de-las-clases-de-algoritmica-con-haskell/][Vídeos de las clases de algorítmica con Haskell]]. #Haskell #ProgramaciónFuncional #Algorítmica #I1M2019
+ [[https://www.glc.us.es/~jalonso/vestigium/videos-de-las-clases-de-razonamiento-automatico-con-isabelle-hol/ ][Vídeos de las clases de razonamiento automático con Isabelle/HOL]]. #Lógica #DAO #IsabelleHOL #LMF2019
+ [[https://arxiv.org/pdf/2005.04722.pdf][Dynamic IFC theorems for free!]] ~ Maximilian Algehed, Jean-Philippe Bernardy, Cătălin Hrit. #ITP #Agda #FunctionalProgramming
+ [[https://iris-project.org/pdfs/2020-actris2-submission.pdf][Machine-checked semantic session typing]]. ~ Jonas Kastberg Hinrichsen et als. #ITP #Coq
+ [[https://arxiv.org/abs/2005.05512][MathZero, the classification problem, and set-theoretic type theory]]. ~ David McAllester. #MachineLearning #TypeTheory
+ [[https://github.com/avesus/ATP_Proofs][Interesting ATP proofs]]. #ATP #Logic #Math 

*** 18-May-20
+ [[https://youtu.be/ya5SAmx-7QI][Automating Mathematics? ~ Siddhartha Gadgil]]. #ITP #Math
+ [[http://siddhartha-gadgil.github.io/ProvingGround/index.html][ProvingGround: Automated Theorem proving by learning]]. ~ Siddhartha Gadgil. #ATP #Math #HoTT

*** 19-May-20
+ [[https://doisinkidney.com/pdfs/purely-functional-data-structures-slides.pdf][Purely functional data structures and monoids]]. ~ Donnacha Oisín Kidney (@oisdk). #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2020/5/4/frozen-lake-with-q-learning][Frozen lake with Q-learning!]] ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming #MachineLearning
+ [[https://sites.google.com/view/berkeleyleanseminar/home][2020 Berkeley Lean Seminar]]. #ITP #LeanProver
+ [[https://youtu.be/dfZ94N0hS4I][Backtracking generators for random testing]]. ~ Benjamin Pierce. #ITP #Coq #FunctionalProgramming

*** 20-May-20
+ [[http://adam.chlipala.net/papers/KoikaPLDI20/KoikaPLDI20.pdf][The essence of Bluespec (A core language for rule-based hardware design)]]. Thomas Bourgeat et als. #ITP #Coq
+ [[https://arxiv.org/abs/2005.09452][PubSub implementation in Haskell with formal verification in Coq]]. ~ Boro Sitnikovski, Biljana Stojcevska, Lidija Goracinova-Ilieva, Irena Stojmenovska. #Haskell #FuncionalProgramming #ITP #Coq
+ [[https://youtu.be/eZ9FpG8May8][Why functors and applicatives compose but monads don't]]. ~ Alejandro Serrano (@trupill). #Haskell #FunctionalProgramming  
+ [[https://www.dropbox.com/s/1j828vngpm0yhja/fp-berlin-2020.pdf?dl=0][Why functors and applicatives compose but monads don't]]. [Slides]. ~ Alejandro Serrano (@trupill). #Haskell #FunctionalProgramming  
+ [[https://byorgey.wordpress.com/2020/05/19/competitive-programming-in-haskell-sorting-tree-shapes/][Competitive programming in Haskell: sorting tree shapes]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://towardsdatascience.com/galois-theory-for-non-mathematicians-3bc08cd40c4a][Galois theory for non-mathematicians]]. ~ Mikael Davidsson. #Math
+ [[https://www.isa-afp.org/entries/Stateful_Protocol_Composition_and_Typing.html][Stateful protocol composition and typing in Isabelle/HOL]]. ~ Andreas V. Hess, Sebastian Mödersheim, Achim D. Brucker. #ITP #IsabelleHOL

*** 21-May-20
+ [[https://emarzion.github.io/Cantor-Thm/][Visualizing Cantor's theorem on dense linear orders using Coq]]. ~ Evan Marzion. #ITP #Coq #Math

*** 22-May-20
+ [[https://www.twitch.tv/videos/627659597][The complex numbers are a ring]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://fpcomplete.com/how-to-build-with-stack/][How to build with Stack]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/how-to-script-with-stack/][How to script with Stack]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/how-to-play-with-stack/][How to play with Stack]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/profiling-and-performance/][Profiling and performance]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/monad-transformers/][Monad transformers]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/recommended-haskell-libraries/][Recommended Haskell libraries]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/string-types/][String types]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/synonyms-in-base/][Synonyms in base]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/lenses/][Lenses]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/safe-exception-handling/][Safe exception handling]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/data-types/][Data types]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/data-structures/][Data structures]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/common-typeclasses/][Common typeclasses]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/applied-haskell-101/][Applied Haskell 101 course]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/crash-course-to-applicative-syntax/][Crash course to applicative syntax]]. #Haskell #FunctionalProgramming
+ [[https://fpcomplete.com/all-about-strictness/][All about strictness]]. #Haskell #FunctionalProgramming
+ [[https://www.youtube.com/playlist?list=PLA66mD-6yK8yjlJCI0Ay2f2IvvmB9Ktga][European Lisp Symposium 2020 videos]]. #Lisp #Programming
+ [[https://github.com/junjihashimoto/sixel][SIXEL Library for Haskell: displaying images on ghci]]. ~ Junji Hashimoto. #Haskell #FunctionalProgramming
+ [[https://anthony.noided.media/blog/haskell/programming/2020/05/14/haskell-errors.html][Error messages in Haskell, and how to improve them]]. ~ Anthony Super. #Haskell #FunctionalProgramming

*** 23-May-20
+ [[https://medium.com/@fommil/simple-haskell-is-best-haskell-6a1ea59c73b][Simple Haskell is best Haskell]]. ~ Sam Halliday. #Haskell #FunctionalProgramming
+ [[https://byorgey.wordpress.com/2020/05/22/competitive-programming-in-haskell-building-unordered-trees/][Competitive programming in Haskell: building unordered trees]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://books.google.es/books?id=zz9wDBjsqlAC&lpg=PP1&hl=es&pg=PP][Sets, logic and maths for computing]]. ~ David Makinson.1#v=onepage&q&f=false #eBook #Logic #Math #CompSci

*** 24-May-20
+ [[https://arxiv.org/abs/2005.08396][A tutorial introduction to quantum circuit programming in dependently typed Proto-Quipper]]. ~ Peng Fu, Kohei Kishida, Neil J. Ross, Peter Selinger. #FuncionalProgramming #Haskell
+ [[https://leanprover-community.github.io/mathematics_in_lean/][Mathematics in Lean]]. ~ Jeremy Avigad, Kevin Buzzard, Robert Y. Lewis, Patrick Massot. #ITP #LeanProver #Math
+ [[https://maxfieldchen.com/posts/2020-05-23-Dynamically-Flunking-Code-Interview-Haskell.html][Dynamically flunking the coding interview (A gentle introduction to functional dynamic programming)]]. ~ Maxfield Chen. #Haskell #FunctionalProgramming  
+ [[https://xenaproject.wordpress.com/2020/05/23/the-complex-number-game/][The complex number game]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver
+ [[https://teh.id.au/posts/2017/03/13/accumulating-errors/][Accumulating independent errors]]. ~ Tim Humphries (@thumphriees). #Haskell #FunctionalProgramming
+ [[https://handwiki.org/wiki/Start][HandWiki: Online Encyclopedia of Science and Computing]]. 
+ [[https://arxiv.org/abs/2005.08856][How to generate random lambda terms?]] ~ Maciej Bendkowski. #Haskell #FunctionalProgramming

*** 25-May-20
+ [[https://kwarc.info/people/mkohlhase/papers/icms20-glf-jupyter.pdf][Prototyping controlled mathematical languages in Jupyter notebooks]]. ~ Jan Frederik Schaefer, Kai Amann, Michael Kohlhase. #MKM
+ [[https://hal-lirmm.ccsd.cnrs.fr/lirmm-02611153/document][Toward the formal verification of HILECOP: Formalization and implementation of synchronously executed Petri nets]]. ~ Vincent Iampietro, David Andreu, David Delahaye. #ITP #Coq
+ [[https://www.diva-portal.org/smash/get/diva2:1431287/FULLTEXT01.pdf][A proof and formalization of the initiality conjecture of dependent type theory]]. ~ Menno de Boer. #ITP #Coq
+ [[https://arxiv.org/abs/2005.11023][Symbolic reasoning about quantum circuits in Coq]]. ~ Wenjun Shi, Qinxiang Cao, Yuxin Deng, Hanru Jiang, Yuan Feng. #ITP #Coq

*** 26-May-20
+ [[https://splintah.gitlab.io/posts/2020-05-24-Simply-typed-lambda.html][Simply typed lambda calculus]]. ~  Splinter Suidman. #Haskell #FuncionalProgramming #LambdaCalculus
+ [[https://www.isa-afp.org/entries/Smith_Normal_Form.html][A verified algorithm for computing the Smith normal form of a matrix]]. ~ Jose Divasón. #ITP #IsabelleHOL #Math

*** 27-May-20
+ [[https://arxiv.org/abs/2005.12876][A survey of languages for formalizing mathematics]]. ~ Cezary Kaliszyk, Florian Rabe. #Logic #Math #ITP #MKM
+ [[https://jonascarpay.com/posts/2020-05-26-solver.html][Monoidal puzzle solving]]. ~ Jonas Carpay (@jonascarpay) #Haskell #FunctionalProgramming

*** 28-May-20
+ [[https://youtu.be/_3cYAsJClEg][Capítulo 1 de "Paradojas del nihilismo: La Academia": Desilusión]]. #Universidad
+ [[https://medium.com/syncedreview/new-latex-css-library-enables-websites-to-look-like-latex-docs-690a36e30f4b][New LaTeX.css library enables websites to look like LaTeX docs]]. #LaTeX #Math 

*** 29-May-20
+ [[https://arxiv.org/abs/1910.12320][Formalising perfectoid spaces]]. ~ Kevin Buzzard, Johan Commelin, Patrick Massot. #ITP #LeanProver #Math

*** 30-May-20
+ [[https://theorylunch.wordpress.com/2013/12/03/natural-numbers-with-addition-form-a-monoid/][Natural numbers with addition form a monoid]]. ~ James Chapman. #ITP #Agda #Math
+ [[https://assets.amazon.science/d0/de/cbec0b4547e3ae7ff077f8aa978f/code-level-model-checking-in-thesoftware-development-workflow.pdf][Code-level model checking in the software development workflow]]. ~ Nathan Chong et als. #FormalVerification #ModelChecking
+ [[https://www.amazon.science/blog/how-to-integrate-formal-proofs-into-software-development][How to integrate formal proofs into software development]]. ~ Daniel Schwartz-Narbonne. #FormalVerification
+ [[https://gist.github.com/Kazark/06acabbd25817ac9efc7fbe0493f23ff][Curry-Howard tutorial in literate Haskell]]. ~ Keith Pinson. #Haskell #FunctionalProgramming #Logic

*** 31-May-20
+ [[https://www.stephendiehl.com/posts/marketing.html][On marketing Haskell]]. ~ Stephen Diehl (@smdiehl) #Haskell #FunctionalProgramming
+ [[https://medium.com/@cdsmithus/a-calculator-with-reflex-and-codeworld-8f154b776f02][A calculator with Reflex and CodeWorld]]. ~ Chris Smith (@cdsmithus). #Haskell #CodeWorld
+ [[https://byorgey.wordpress.com/2020/05/30/competitive-programming-in-haskell-permutations/][Competitive programming in Haskell: permutations]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://youtu.be/n7QETok5hYI][Economic argument for functional programming]]. ~ Michael Snoyman (@snoyberg). #Haskell #FunctionalProgramming
+ [[https://www.snoyman.com/reveal/economic-argument-functional-programming][Economic argument for functional programming [Slides]]]. ~ Michael Snoyman (@snoyberg). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2005.11821][A proof assistant based formalisation of core Erlang]]. ~ Péter Bereczky, Dániel Horpácsi, Simon Thompson. #ITP #Coq #Erlang
+ [[https://www21.in.tum.de/~nipkow/pubs/ijcar20-closest.pdf][Verification of closest pair of points algorithms]]. ~ Martin Rau, Tobias Nipkow. #ITP #IsabelleHOL #Algorithms

** Junio de 2020

*** 01-Jun-20
+ [[https://emanuelpeg.blogspot.com/2020/05/breve-historia-de-haskell.html][Breve historia de Haskell]]. ~ Emanuel Goette (@emanuelpeg). #Haskell #ProgramaciónFuncional

*** 03-Jun-20
+ [[https://www.isa-afp.org/entries/Nash_Williams.html][The Nash-Williams partition theorem in Isabelle/HOL]]. ~ Lawrence C. Paulson. #ITP #IsabelleHOL
+ [[https://romainviallard.dev/en/blog/setting-up-a-haskell-development-environment-with-nix/][Setting up a Haskell development environment with Nix]]. ~ Romain Viallard. #Haskell #Nix
+ [[https://nottingham-repository.worktribe.com/preview/4475690/big_step_normalisation.pdf][Big step normalisation for type theory]]. ~ Thorsten Altenkirch, Colin Geniet. #ITP #Agda
+ [[https://techxplore.com/news/2020-06-carnegie-mellon-tool-automatically-math.html][Carnegie Mellon tool automatically turns math into pictures]]. #Math
+ [[http://penrose.ink/siggraph20.html][Penrose: from mathematical notation to beautiful diagrams]]. ~ Katherine Ye el als. #Math

*** 04-Jun-20
+ [[http://prooftheory.blog/2020/05/01/hello-world/][Welcome to The Proof Theory Blog! ~ Anupam Das]]. #Logic #Math
+ [[https://github.com/penrose/penrose][Penrose: Create beautiful diagrams just by typing mathematical notation in plain text]]. #Haskell #DSL #Math #Visualization 
+ [[https://wiki.alcidesfonseca.com/blog/lean-tutorial-mere-mortals/][Lean tutorial for mere mortals]]. ~ Alcides Fonseca. #ITP #LeanProver
+ [[https://www.isa-afp.org/entries/Safe_Distance.html][A formally verified checker of the safe distance traffic rules for autonomous vehicles]]. ~ Albert Rizaldi, Fabian Immler. #ITP #IsabelleHOL

*** 05-Jun-20
+ [[https://www.kestrel.edu/home/people/coglio/acl220i.pdf][Isomorphic data type transformations]]. ~ Alessandro Coglio, Stephen Westfold. #ITP #ACL2
+ [[https://lmcs.episciences.org/6518/pdf][Cellular cohomology in homotopy type theory]]. ~ Ulrik Buchholtz, Kuen-Bang Hou. #ITP #Agda #Math
+ [[https://download.clojure.org/papers/clojure-hopl-iv-final.pdf][A history of Clojure]]. ~ Rich Hickey. #Clojure #FunctionalProgramming
+ [[https://samtay.github.io/posts/refactoring-adventures][Adventures in refactoring]]. ~ Sam Tay. #Haskell #FunctionalProgramming
+ [[https://williamyaoh.com/posts/2020-05-31-reanimate-nqueens-tutorial.html][Reanimate: a tutorial on making programmatic animations]]. ~ William Yao (@williamyaoh). #Haskell #FunctionalProgramming

*** 06-Jun-20
+ [[https://jmtd.net/log/template_haskell/boilerplate/][Using Template Haskell to generate boilerplate]]. ~ Jonathan Dowland. #Haskell #FunctionalProgramming
+ [[https://oleg.fi/gists/posts/2020-06-02-simulated-annealing.html][Simulated annealing]]. ~ Oleg Grenrus (@phadej). #Haskell #FunctionalProgramming
+ [[https://www.fosskers.ca/en/blog/tolist][Trusting toList]]. ~ Colin Woodbury (@fosskers). #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/formal-verification-history][Formal verification: History and methods]]. ~ Danya Rogozin. #FormalVerification
+ [[https://www.redblobgames.com/][Red Blob Games: interactive visual explanations of math and algorithms, using motivating examples from computer games]]. ~ Amit Patel. #Algorithms
+ [[https://medium.com/@cdsmithus/toy-machine-learning-with-haskell-b18cd04fb9e1][Toy machine learning with Haskell]]. ~ Chris Smith (@cdsmithus). #Haskell #FunctionalProgramming #MachineLearning
+ [[https://xenaproject.wordpress.com/2020/06/05/the-sphere-eversion-project/][The sphere eversion project]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://books.google.es/books?id=toLoDwAAQBAJ&lpg=PR13&ots=OnJD33xm6P&pg=PP][Algorithm design with Haskell]]. ~ Richard Bird, Jeremy Gibbons.1#v=onepage&q&f=false #eBook #Haskell #FunctionalProgramming #Algorithms

*** 07-Jun-20
+ [[http://ayala.mat.unb.br/mf_PVS0.pdf][Formalization of the computational theory of a Turing complete functional language model]]. ~ TMF Ramos, AA Almeida, M Ayala-Rincón. #ITP #PVS
+ [[http://www.lix.polytechnique.fr/Labo/Dale.Miller/papers/tease-lp-2020.pdf][The proof-theoretic foundations of logic programming]]. ~ Dale Miller. #LogicProgramming

*** 08-Jun-20
+ [[https://medium.com/@getsmarter/what-is-mathematics-5f39b41a4db1][What is Mathematics?]] ~ Get Smarter. #Math
+ [[https://arxiv.org/abs/2006.03525][Formalizing text editors in Coq]]. ~ Boro Sitnikovski. #ITP #Coq
+ [[https://lukelau.me/haskell/posts/making-the-most-of-cabal/][Making the most of Cabal]]. ~ Luke Lau. #Haskell #FunctionalProgramming
+ [[https://dixonary.co.uk/blog/haskell/pain][The pain points of Haskell: A practical summary]]. ~ Alex Dixon (@dixonary_). #Haskell #FunctionalProgramming

*** 09-Jun-20
+ [[https://towardsdatascience.com/functional-programing-in-data-science-projects-c909c11138bb][Functional programming in data science projects]]. ~ Nathanael Weill. #FuncionalProgramming #DataScience

*** 10-Jun-20
+ [[https://medium.com/@cdsmithus/using-client-side-haskell-web-frameworks-in-codeworld-7d8661647191][Using client-side Haskell web frameworks in CodeWorld]]. ~ Chris Smith (@cdsmithus). #Haskell #CodeWorld
+ [[https://www.linuxlinks.com/excellent-free-books-learn-agda-type-theory/][4 excellent free books to learn Agda and type theory]]. ~ Erik Karlsson. #ITP #Agda #FunctionalProgramming #TypeTheory
+ [[https://github.com/disco-lang/disco/][Disco: Functional teaching language for use in a discrete mathematics course]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming #DSL #Math
+ [[http://neilmitchell.blogspot.com/2020/06/hoogle-searching-overview.html][Hoogle searching overview]]. ~ Neil Mitchell (@ndm_haskell). #Haskell #FunctionalProgramming 

*** 11-Jun-20
+ [[https://www.quantamagazine.org/the-useless-perspective-that-transformed-mathematics-20200609/][The ‘useless’ perspective that transformed mathematics]]. ~ Kevin Hartnett (@KSHartnett). #Math
+ [[https://rjlipton.wordpress.com/2020/06/04/the-truth/]["The truth: What is the truth?", at Gödel's Lost Letter and P=NP]]. ~ R.J. Lipton. #Logic #Math
+ [[https://youtu.be/PU9Gs-XRYEQ][Scripting in Haskell: Parsing command line arguments]]. ~ Riccardo Odone (@RiccardoOdone). #Haskell #FunctionalProgramming
+ [[https://jmtd.net/log/template_haskell/streamgraph/][Template Haskell and stream-processing programs]]. ~ Jonathan Dowland (@jmtd). #Haskell #FunctionalProgramming
+ [[https://patternsinfp.wordpress.com/2018/11/21/how-to-design-co-programs/][How to design co-programs]]. ~ Jeremy Gibbons. #Haskell #FunctionalProgramming
+ [[https://aperiodical.com/2020/06/conways-circle-theorem-a-proof-this-time-with-words/][Conway’s circle theorem: a proof, this time with words]]. ~ Colin Beveridge, Elizabeth A. Williams. #Math
+ [[https://github.com/affeldt-aist/monae][Monadic equational reasoning in Coq]]. ~ Reynald Affeldt. #ITP #Coq
+ [[http://www.math.mcgill.ca/triples/Barr-Wells-ctcs.pdf][Category theory for computing science]]. ~ Michael Barr, Charles Wells (1998). #eBook #CategoryTheory #Math #CompSci
+ [[https://math.mit.edu/~dspivak/teaching/sp18/7Sketches.pdf][Seven sketches in compositionality: An invitation to applied category theory]]. ~ Brendan Fong, David I. Spivak (2018). #eBook #CategoryTheory #Math #CompSci

*** 12-Jun-20
+ [[https://www.inner-product.com/posts/fp-what-and-why/][What functional programming is, what it isn't, and why it matters]]. ~ Noel Welsh. #FunctionalProgramming
+ [[https://github.com/zfoh/haskell-simple-install][Simple Haskell install instructions - ZuriHac 2020]]. #Haskell #FunctionalProgramming 
+ [[https://www.lemonde.fr/blog/binaire/2020/06/12/la-logique-un-instrument-theorique-pour-des-problemes-pratiques/][La logique: un instrument théorique pour des problèmes pratiques]]. ~ Franco Raimondi. #Logic #Math #CompSci

*** 13-Jun-20
+ [[https://romainviallard.dev/en/blog/deploying-your-app-with-nixos/][Deploying your application with NixOS]]. ~ Romain Viallard. #Nix #Haskell
+ [[https://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=B2E32B9A9303A9017662D564EB848FFE?doi=10.1.1.110.122&rep=rep1&type=pdf][An extended comparative study of language support for generic programming]]. ~ Ronald Garcia, Jaakko J Ärvi, Andrew Lumsdaine, Jeremy Siek, Jeremiah Willcock. #Cpp #SML #OCaml #Haskell #Eiffel #Java #Csharp #Cecil.
+ [[http://adam.chlipala.net/theses/zygi.pdf][Towards a verified first-stage bootloader in Coq]]. ~ Zygimantas Straznickas. #MsC_Thesis #ITP #Coq
+ [[https://arxiv.org/pdf/2006.04399.pdf][Completeness theorems for first-order logic analysed in constructive type theory]]. ~ Yannick Forster, Dominik Kirst, Dominik Weh. #ITP #Coq #Logic
+ [[http://www21.in.tum.de/~lammich/isabelle_llvm/paper_IJCAR2020.pdf][Efficient verified implementation of introsort and pdqsort]]. ~ Peter Lammich. #ITP #IsabelleHOL
+ [[https://youtu.be/x0R5h190Yts][(Programming Languages) in Agda = Programming (Languages in Agda)]]. ~ Philip Wadler. #ITP #Agda

*** 14-Jun-20
+ [[https://ttaylorr.com/publications/uw-thesis.pdf][Verifying strong eventual consistency in δ-CRDTs]]. Taylor Blau. #ITP #IsabelleHOL
+ [[https://dl.acm.org/doi/pdf/10.1145/3386336][The history of Standard ML]]. ~ David MacQueen, Robert Harper, John Reppy. #SML #FunctionalProgramming
+ [[https://youtu.be/y0GwxCDTJvA][Programación funcional: Próximamente en un lenguaje de programación cerca de usted]]. ~ Andrés Marzal. #ProgramaciónFuncional
+ [[https://andys8.github.io/awesome-haskell-videos/][Awesome Haskell videos (A collection of awesome Haskell videos)]]. ~ @_andys8 #Haskell #FunctionalProgramming

*** 15-Jun-20
+ [[https://splintah.gitlab.io/posts/2020-06-14-Type-inference.html][Type inference]]. ~ Splinter Suidman. #Haskell #FunctionalProgramming
+ [[https://www.mimuw.edu.pl/~lukaszcz/sauto.pdf][Practical proof search for Coq by type inhabitation]]. ~ Lukasz Czajka. #ITP #Coq
+ [[https://arxiv.org/abs/2002.00620][Validating mathematical structures]]. ~ Kazuhiko Sakaguchi. #ITP #Coq #math
+ [[https://hal.inria.fr/hal-02463336v2/document][Competing inheritance paths in dependent type theory: a case study in functional analysis]]. ~ Reynald Affeldt, Cyril Cohen, Marie Kerjean, Assia Mahboubi, Damien Rouhling and Kazuhiko Sakaguchi. #ITP #Coq #Math
+ [[https://www21.in.tum.de/~traytel/papers/ijcar20-qbnf/qbnf.pdf][Quotients of bounded natural functors]]. ~ Basil Fürer, Andreas Lochbihler, Joshua Schneider and Dmitriy Traytel. #ITP #IsabelleHOL
+ [[https://github.com/prathyvsh/formal-systems-in-biology][Application of formal systems to model biological systems]]. ~ @prathyvsh #Math #Biology

*** 16-Jun-20
+ [[http://pit-claudel.fr/clement/papers/fiat-to-facade.pdf][Extensible extraction of efficient imperative programs with foreign functions, manually managed memory, and proofs]]. ~ Clément Pit-Claudel, Peng Wang, Benjamin Delaware, Jason Gross and Adam Chlipala. #ITP #Coq
+ [[http://acl2-2020.info/slides/adventures-verifying-arithmetic.pdf][Adventures in verifying arithmetic]]. ~ John Harrison. #ITP #HOL_Light #Math
+ [[https://www21.in.tum.de/~traytel/papers/ijcar20-verimonplus/verimonplus.pdf][A formally verified, optimized monitor for metric first-order dynamic logic]]. ~ David Basin, Thibault Dardinier, Lukas Heimes, Srđan Krstić, Martin Raszyk, Joshua Schneider, Dmitriy Traytel. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/1910.03740.pdf][The resolution of Keller's conjecture]]. ~ Joshua Brakensiek, Marijn Heule, John Mackey, David Narvaez. ~ #ATP #SAT_Solver #Math
+ [[https://bartoszmilewski.com/2020/06/15/monoidal-catamorphisms/][Monoidal catamorphisms]]. ~ Bartosz Milewski (@BartoszMilewski). #Haskell #CategoryTheory
+ [[http://www.openculture.com/free-math-textbooks][Free Math Textbooks]]. #Math 
+ [[https://www.47deg.com/blog/io-haskell/][The power of IO in Haskell]]. ~ Alejandro Serrano (@trupill). #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2020/6/15/training-our-agent-with-haskell][Training our agent with Haskell!]] ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 17-Jun-20
+ [[https://www.cs.vu.nl/~tbn305/publicaties/2020-ring_exp.pdf][A Lean tactic for normalising ring expressions with exponents]]. ~ Anne Baanen. #ITP #LeanProver #Math
+ [[https://simon-robillard.net/content/essmann2020approximation.pdf][Verified approximation algorithms]]. ~ Robin Eßmann, Tobias Nipkow, Simon Robillard. #ITP #IsabelleHOL
+ [[https://emanuelpeg.blogspot.com/2020/06/analisis-de-texto-usando-funciones-de.html][Análisis de texto usando funciones de orden superior]]. ~ Emanuel Goette (@emanuelpeg). #Haskell #ProgramaciónFuncional
+ [[https://well-typed.com/blog/2020/06/th-for-static-data/][Using Template Haskell to generate static data]]. ~ Andreas Klebinger. #Haskell #FunctionalProgramming

*** 18-Jun-20
+ [[https://arxiv.org/abs/2006.09884][Computer-assisted proofs for Lyapunov stability via Sums of Squares certificates and Constructive Analysis]]. ~ Grigory Devadze, Victor Magron, Stefan Streif. #ITP #MinLog #Math
+ [[https://youtu.be/geV8F59q48E][Basic optics: lenses, prisms, and traversals in Haskell]]. ~ Alejandro Serrano (@trupill). #Haskell #FunctionalProgramming

* Lecturas anteriores
+ [[./Lecturas del año 2019.org][Lecturas del año 2019]]
+ [[./Lecturas del año 2018.org][Lecturas del año 2018]]
+ [[./Lecturas del año 2017.org][Lecturas del año 2017]]
+ [[./Lecturas del año 2016.org][Lecturas del año 2016]]
+ [[./Lecturas del año 2010 al 2015.org][Lecturas del año 2010 al 2015]]

  

