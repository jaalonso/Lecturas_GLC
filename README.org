#+OPTIONS: ^:nil
#+TITLE: Readings on computational logic, interactive theorem proving and functional programming

This repository is a collection of readings shared on [[https://twitter.com/Jose_A_Alonso][Twitter]] about
computational logic, interactive theorem proving and functional programming.

The collection is sorted by the date of its publication on [[https://twitter.com/Jose_A_Alonso][Twitter]].

At the end of each article you will find tags related to the systems it uses or
its content.

* Content                                                                      :TOC:
- [[#readings-of-the-year-2022][Readings of the year 2022]]
  - [[#diciembre-2022][Diciembre 2022]]
  - [[#noviembre-2022][Noviembre 2022]]
  - [[#octubre-2022][Octubre 2022]]
  - [[#septiembre-2022][Septiembre 2022]]
  - [[#agosto-2022][Agosto 2022]]
  - [[#julio-2022][Julio 2022]]
  - [[#june-2022][June 2022]]
  - [[#may-2022][May 2022]]
  - [[#april-2022][April 2022]]
  - [[#march-2022][March 2022]]
  - [[#february-2022][February 2022]]
  - [[#january-2022][January 2022]]
- [[#readings-of-the-year-2021][Readings of the year 2021]]
  - [[#december-2021][December 2021]]
  - [[#november-2021][November 2021]]
  - [[#october-2021][October 2021]]
  - [[#september-2021][September 2021]]
  - [[#august-2021][August 2021]]
  - [[#july-2021][July 2021]]
  - [[#june-2021][June 2021]]
  - [[#may-2021][May 2021]]
  - [[#april-2021][April 2021]]
  - [[#march-2021][March 2021]]
  - [[#february-2021][February 2021]]
  - [[#january-2021][January 2021]]
- [[#previous-readings][Previous readings]]

* Readings of the year 2022

** Diciembre 2022

*** 15-Dic-22
+ [[https://backend.orbit.dtu.dk/ws/portalfiles/portal/299069083/ACIIDS_2022.pdf][On verified automated reasoning in propositional logic]]. ~ Simon Tobias Lund, Jørgen Villadsen. #ITP #IsabelleHOL #Logic #Math
+ [[https://hal.inria.fr/hal-03891390/document][A computational Cantor-Bernstein and Myhill’s isomorphism theorem in constructive type theory]]. ~ Yannick Forster, Felix Jahn, Gert Smolka. #ITP #Coq #Math
+ [[https://hal.inria.fr/hal-03889276/document][A Coq formalization of Lebesgue induction principle and Tonelli’s theorem]]. ~ Sylvie Boldo, François Clément, Vincent Martin, Micaela Mayero, Houda Mouhcine. #ITP #Coq #Math
+ [[https://hal.inria.fr/tel-03891381/document][Proof of programs with effect handlers]]. ~ Paulo Emílio de Vilhena. #ITP #Coq
+ [[https://arxiv.org/abs/2212.04182v1][Computing cohomology rings in Cubical Agda]]. ~ Thomas Lamiaux, Axel Ljungström, Anders Mörtberg. #ITP #Agda #Math
+ [[https://webspace.science.uu.nl/~swier004/publications/2022-ifl-draft.pdf][Verified technology mapping in an Agda DSL for circuit design (Circuit refinement through gate and data concretisation)]]. ~ João Paulo Pizani Flor, Wouter Swierstra. #ITP #Agda
+ [[https://youtu.be/95rhCROOOdA][Level-p-complexity of boolean functions: Using thinning, memoization, and polynomials]]. ~ Patrik Jansson (@patrikja@types.pl). #Haskell #FunctionalProgramming #Math
+ [[https://www.diva-portal.org/smash/get/diva2:1717432/FULLTEXT01.pdf][Implementation of explanatory algorithm for logical models]]. ~ Rawand Saadoun. #Haskell #FunctionalProgramming #Logic #Math
+ [[https://www.youtube.com/live/DC160ivi-rQ?feature=share][El poder de los algoritmos]]. ~ Ricardo Peña. #Algoritmos
+ [[https://youtu.be/JI5Y0uzZ64k][5 demostraciones visuales que son pura magia]]. ~ Mike (@mike_mates). #Matemáticas
+ [[https://methodpoet.com/will-chatgpt-replace-programmers/][A new AI threat on horizon: ChatGPT to replace programmers?]] ~ Kristijan Kralj. #AI #ChatGPT #Programming

*** 14-Dic-22
+ [[https://lawrencecpaulson.github.io/2022/12/14/User_interfaces.html][Thoughts on user interfaces for theorem provers]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL
+ [[https://busy-beavers.tigyog.app/proofs-about-programs][Proofs about programs (An interactive tutorial)]]. ~ Jim Fisher. #ITP #LeanProver

*** 13-Dic-22
+ [[https://arxiv.org/abs/2212.05578][A formalization of Doob's martingale convergence theorems in mathlib]]. ~ Kexing Ying, Rémy Degenne. #ITP #LeanProver #Math
+ [[https://cacm.acm.org/news/267670-the-new-chatbots-could-change-the-world-can-you-trust-them/fulltext][The new chatbots could change the World]]. Can you trust them? #AI #ChatGPT

*** 12-Dic-22
+ [[https://www.philipzucker.com/datalog-theorem-harrop/][Datalog as a theorem prover: Harrop clauses-lite]]. ~ Philip Zucker (@SandMouth). #ATP #Prolog
+ [[https://www.vox.com/recode/2022/12/7/23498694/ai-artificial-intelligence-chat-gpt-openai][AI is finally good at stuff, and that’s a problem]]. ~ Rebecca Heilweil. #AI #ChatGPT

*** 11-Dic-22
+ [[https://hal.inria.fr/hal-03886685/document][Automated reasoning in the class]]. ~ Isabela Drămnesc, Erika Ábrahám, Tudor Jebelean, Gábor Kusper, Sorin Stratulat. #ATP #Logic
+ [[https://acatalepsie.fr/posts/overloading-lambda][Overloading the lambda abstraction in Haskell]]. ~ @baboum@mastodon.social. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2212.03551][Talking about large language models (LLMs)]]. ~ Murray Shanahan. #AI #LLM
+ [[https://blog.acthompson.net/2022/12/when-computers-write-code.html][When computers write code]]. ~ Alfred Thompson (@alfredtwo). #CompSci #Programming #Teaching
+ [[https://www.wired.com/story/openai-chatgpts-most-charming-trick-hides-its-biggest-flaw][ChatGPT’s most charming trick is also its biggest flaw]]. ~ Will Knight (@willknight). #ChatGPT #AI

*** 10-Dic-22
+ [[https://www.glc.us.es/~jalonso/vestigium/10-dic-22][Errores matemáticos en las respuestas de ChatGPT]]. #ChatGPT #Matemáticas
+ [[https://elpais.com/opinion/2022-12-10/chatgpt-no-todo-lo-que-rima-es-verdadero.html][ChatGPT: no todo lo que rima es verdadero]]. ~ Marta Peirano. #ChatGPT
+ [[https://www.nature.com/articles/d41586-022-04383-z][Are ChatGPT and AlphaCode going to replace programmers?]] #ChatGPT #AlphaCode
+ [[https://www.nytimes.com/2022/12/05/technology/chatgpt-ai-twitter.html][The brilliance and weirdness of ChatGPT]]. ~ Kevin Roose. #ChatGPT
+ [[https://www.listendata.com/2022/12/limitations-of-ChatGPT.html][ChatGPT isn't a smart analyst]]. ~  Deepanshu Bhalla. #ChatGPT
+ [[https://www.theguardian.com/commentisfree/2022/dec/08/the-guardian-view-on-chatgpt-an-eerily-good-human-impersonator][The Guardian view on ChatGPT: an eerily good human impersonator | Editorial]]. #ChatGPT

*** 09-Dic-22
+ [[https://project-archive.inf.ed.ac.uk/ug4/20223079/ug4_proj.pdf][Mechanizing lagrangian mechanics in Isabelle/HOL]]. ~ Dawson Silkenat. #ITP #IsabelleHOL
+ [[https://kclpure.kcl.ac.uk/portal/files/189846427/verified_SAT_plan.pdf][Formally verified SAT-based AI planning]]. ~ Mohammad Abdulaziz, Friedrich Kurz. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2212.01748][Differential testing of a verification framework for compiler optimizations (Experience paper)]]. ~ Mark Utting, Brae J. Webb, Ian J. Hayes. #ITP #IsabelleHOL
+ [[https://books.google.es/books?id=No2aEAAAQBAJ&printsec=frontcover&hl=es#v=onepage&q&f=false][Mathematical logic and computation]]. ~ Jeremy Avigad. #Logic #Math #CompSci

*** 07-Dic-22
+ [[https://arxiv.org/abs/2212.02902][A univalent formalization of affine schemes]]. ~ Anders Mörtberg, Max Zeuner. #ITP #Agda #Math
+ [[https://arxiv.org/abs/2205.07979][Budge: a programming language and a theorem prover]]. ~ Boro Sitnikovski. #Programming #TheoremProver
+ [[https://www.theatlantic.com/technology/archive/2022/12/chatgpt-ai-writing-college-student-essays/672371/][The college essay is dead]].. ~ Stephen Marche. #AI #ChatGPT 
+ [[https://www.engraved.blog/building-a-virtual-machine-inside/][Building a virtual machine inside ChatGPT]]. ~ Jonas Degrave. #ChatGPT

*** 06-Dic-22
+ [[https://www.isa-afp.org/browser_info/current/AFP/Birkhoff_Finite_Distributive_Lattices/document.pdf][Birkhoff's representation theorem for finite distributive lattices (in Isabelle/HOL)]]. ~ Matthew Doty. #ITP #IsabelleHOL #Math
+ [[https://repository.tudelft.nl/islandora/object/uuid:e1a0ae3a-df80-413c-b3b7-54efa6dfac17][Proving functional correctness of monadic programs using separation logic]]. ~ Liam Clark. #ITP #Coq
+ [[https://leanprover-community.github.io/blog/posts/this-month-in-mathlib-oct-and-nov-2022/][This month in mathlib (Oct and Nov 2022)]]. #ITP #LeanProver #MathLib #Math
+ [[http://mizar.uwb.edu.pl/fm/fm30-1/field_11.pdf][Artin’s theorem towards the existence of algebraic closures]]. ~ Christoph Schwarzweller. #ITP #Mizar #Math
+ [[http://mizar.uwb.edu.pl/fm/fm30-1/ndiff11.pdf][On implicit and inverse function theorems on euclidean spaces]]. ~ Kazuhisa Nakasho, Yasunari Shidama. #ITP #Mizar #Math
+ [[https://maxtaylor.dev/posts/2022/12/lisp-repl][A LISP REPL Inside ChatGPT]]. ~ Max Taylor. #CommonLisp #ChatGPT
+ [[http://www.randomhacks.net/2022/12/04/pair-programming-with-chatgpt/][Pair programming with ChatGPT: A simple dice roller]]. ~ Eric Kidd. #ChatGPT #Programming
+ [[https://notxor.nueva-actitud.org/2022/12/05/un-ejemplo-de-macro-de-org-mode.html][Un ejemplo de macro de org-mode]]. ~ Notxor. #Emacs #OrgMode

*** 05-Dic-22
+ [[https://arxiv.org/abs/2212.00857][A survey on GPT-3]]. ~ Mingyu Zong, Bhaskar Krishnamachari. #AI #MachineLearning #GPT3
+ [[https://www.theguardian.com/technology/2022/dec/04/ai-bot-chatgpt-stuns-academics-with-essay-writing-skills-and-usability][AI bot ChatGPT stuns academics with essay-writing skills and usability]]. ~ Alex Hern. #AI #MachineLearning #ChatGPT

*** 03-Dic-22
+ [[https://wjwh.eu/posts/2022-11-30-haskell-aoc-tricks.html][Some tips and tricks for doing Advent of Code with Haskell]]. ~ Wander Hillen. #Haskell #FunctionalProgramming

*** 02-Dic-22
+ [[https://www.isa-afp.org/browser_info/current/AFP/Multitape_To_Singletape_TM/document.pdf][A verified translation of multitape Turing machines into singletape Turing machines]]. ~ Christian Dalvit, René Thiemann. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/browser_info/current/AFP/Kneser_Cauchy_Davenport/document.pdf][Kneser's theorem and the Cauchy–Davenport theorem (in Isabelle/HOL)]]. ~ Mantas Bakšys, Angeliki Koutsoukou-Argyraki. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/browser_info/current/AFP/Turans_Graph_Theorem/document.pdf][Turán's graph theorem (in Isabelle/HOL)]]. ~ Nils Lauermann. #ITP #IsabelleHOL #Math

*** 01-Dic-22
+ [[https://lawrencecpaulson.github.io//2022/11/30/CTT_in_Isabelle-II.html][Martin-Löf type theory in Isabelle: examples]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2211.13513][Waterproof: educational software for learning how to write mathematical proofs]]. ~ Jelle Wemmenhove, Thijs Beurskens, Sean McCarren, Jan Moraal, David Tuin, Jim Portegies. #ITP #Coq #Math
+ [[https://www.cantorsparadise.com/why-ai-cant-match-humans-at-mathematics-yet-3416116d4d15][Why AI can’t match humans at mathematics (yet!) (The IMO Grand Challenge and the quest to achieve true creative problem solving ability)]]. ~ Russell Lim. #ITP #MachineLearning #Math
+ [[https://leanprover.github.io/functional_programming_in_lean/][Functional programming in Lean]]. ~ David Thrane Christiansen. #Lean4 #FunctionalProgramming
+ [[https://www.buzzsprout.com/758831/11784132][Historia de los lenguajes de programación]] (Entrevista a Manuel Rubio (@MRonErlang) por Camilo Chacón Sartori (@camilo_chacon_s)). #Podcast #Informática

** Noviembre 2022

*** 30-Nov-22
+ [[https://arxiv.org/abs/2211.15864][Peano: Learning formal mathematical reasoning]]. ~ Gabriel Poesia, Noah D. Goodman. #MachineLearning #Math
+ [[https://tarides.com/blog/2022-11-22-six-surprising-reasons-the-ocaml-programming-language-is-good-for-business][Six surprising reasons the OCaml programming language is good for business]]. ~ Isabella Leandersson. #OCaml #FunctionalProgramming
+ [[https://github.com/effectfully-ou/sketches/tree/master/mineunifier][Teaching GHC how to play Minesweeper]]. #Haskell #FunctionalProgramming
+ [[https://slott-softwarearchitect.blogspot.com/2022/11/functional-programming-and-finite-state.html][Functional programming and finite state automata (FSA)]]. ~ S. Lott. #Python #FunctionalProgramming

*** 29-Nov-22
+ [[https://youtu.be/-wj-eCGv1D4][Formalising algebraic geometry, lecture 1/4]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://youtu.be/cw_ujnB0Aao][Formalising algebraic geometry, lecture 2/4]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://youtu.be/WubvUHEhq1w][Formalising algebraic geometry, lecture 3/4]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/browser_info/current/AFP/Sauer_Shelah_Lemma/document.pdf][Sauer-Shelah Lemma (in Isabelle/HOL)]]. ~ Ata Keskin. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/browser_info/current/AFP/CHERI-C_Memory_Model/document.pdf][A formal CHERI-C memory model]]. ~ Seung Hoon Park. #ITP #IsabelleHOL
+ [[https://homepage.divms.uiowa.edu/~astump/papers/dc-rec-popl2023.pdf][A type-based approach to divide-and-conquer recursion in Coq]]. ~ Pedro Abreu et als. #ITP #Coq #FunctionalProgramming
+ [[https://people.irisa.fr/Aurele.Barriere/papers/fmjit.pdf][Formally verified native code generation in an effectful JIT (or: Turning the CompCert backend into a formally verified JIT compiler)]]. ~ A. Barrière, S. Blazy, D. Pichardie. #ITP #Coq
+ [[https://theses.liacs.nl/pdf/2021-2022-SchaapL.pdf][Formalised semantics of Lustre]]. ~ Lennard Schaap. #ITP #Agda
+ [[https://www.hhyu.org/posts/generator_and_continuation][Beautiful ideas in programming: generators and continuations]]. ~ Hsin-Hao Yu (@HsinHaoYu). #Python #Scheme

*** 26-Nov-22
+ [[https://project-archive.inf.ed.ac.uk/ug4/20223088/ug4_proj.pdf][Mechanising newtonian mechanics in Isabelle]]. ~ Lars Werne. #ITP #IsabelleHOL
+ [[https://jesper.sikanda.be/files/AIMXXXI-presentation.pdf][Connecting Agda to other theorem provers via EuroProofNet (or, how to implement an Agda backend)]]. ~ Jesper Cockx. #ITP #Agda #Dedukti
+ [[https://www.cambridge.org/core/services/aop-cambridge-core/content/view/6C2B03C7BCCD1DECC924E48BA3A2E43D/S0960129522000378a.pdf/a-dual-context-sequent-calculus-for-the-constructive-modal-logic-s4.pdf][A dual-context sequent calculus for the constructive modal logic S4]]. ~ Favio Ezequiel Miranda-Perea, Lourdes del Carmen González Huesca, Pilar Selene Linares Arévalo. #ITP #Coq #Logic #Math
+ [[https://burjcdigital.urjc.es/bitstream/handle/10115/20610/PRACTICAS-C.pdf][Programación Declarativa: colecciones de ejercicios y prácticas]]. ~ Ana Pradera. #Prolog #LogicProgramming
+ [[https://medium.com/@steveYeah/using-generics-in-python-99010e5056eb][Using Generics in Python]]. ~ SteveYeah. #Python #Mypy
+ [[https://notxor.nueva-actitud.org/2022/11/25/macros-en-org-mode.html][Macros en org-mode]]. ~ Notxor. #Emacs #OrgMode

*** 25-Nov-22
+ [[https://gitlab.com/umb-svl/turing/][The Turing project (Introduction to the Theory of Computation formalized in Coq)]]. ~ Tiago Cogumbreiro. #ITP #Coq #CompSci
+ [[https://youtu.be/wPV94aZIOGQ][Haskell Course: Lesson 9]]. Creating parameterized and recursive types. ~ Robertino Martínez (@_roberm_). #Haskell #FunctionalProgramming
+ [[https://youtu.be/p118LpI228s][Can machines think like humans?]] ~ Mateja Jamnik. #AI

*** 24-Nov-22
+ [[https://lawrencecpaulson.github.io//2022/11/23/CTT_in_Isabelle.html][Martin-Löf type theory in Isabelle: formalisation]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #TypeTheory
+ [[https://mathai2022.github.io/papers/17.pdf MachineLearning][Towards automating formalisation of theorem statements using large language models]]. ~ Siddhartha Gadgil et als. #Autoformalisation #ITP #LeanProver #Math
+ [[https://mathai2022.github.io/papers/20.pdf][ProofNet: A benchmark for autoformalizing and formally proving undergraduate-level mathematics problems]]. ~ Zhangir Azerbayev, Bartosz Piotrowski, Jeremy Avigad. #MachineLearning #Autoformalisation #ITP #LeanProver
+ [[https://github.com/bobatkey/CS316-2022][Course "Functional Programming"]]. ~ Bob Atkey. #Haskell #FunctionalProgramming

*** 23-Nov-22
+ [[https://cacm.acm.org/magazines/2022/12/266926-the-evolution-of-mathematical-software/abstract][The evolution of mathematical software]]. ~ Jack J. Dongarra. #Math #CompSci
+ [[https://blog.adrianistan.eu/optimizar-mudanza-proyecto-software-prolog][Optimizar una mudanza (o un proyecto de software) en Prolog]]. ~ Adrián Arroyo Calle. #Prolog #LogicProgramming

*** 22-Nov-22
+ [[https://jeannin.github.io/papers/kheterpal2022formalization.pdf][Towards a formalization of the active corner method for collision avoidance in PVS]]. ~ Nishant Kheterpal, Jean-Baptiste Jeannin. #ITP #PVS
+ [[https://hal.inria.fr/hal-03852060/document][A high-level separation logic for heap space under garbage collection]]. ~ Alexandre Moine, Arthur Charguéraud, François Pottier. #ITP #Coq 
+ [[https://julesjacobs.com/pdf/locks.pdf][Higher-order leak and deadlock free locks]]. ~ Jules Jacobs, Stephanie Balzer. #ITP #Coq
+ [[https://drive.google.com/file/d/15vTlQ1iHZECivKCEIWRZbf46TP0qMhQf/view][Machine learning and autoformalisation]]. ~ Anthony Bordg. #MachineLearning #Autoformalisation #ITP #Math
+ [[https://towardsdatascience.com/python-to-oop-or-to-fp-13ac79a43b16][Python: To OOP or to FP? (That is the question)]]. ~ Isaac Harris-Holt. (@IsaacHarrisHolt). #Python #FunctionalProgramming

*** 20-Nov-22
+ [[https://blog.adrianistan.eu/wc-en-prolog][Comando wc en Prolog]]. ~ Adrián Arroyo Calle (@aarroyoca). #Prolog #LogicProgramming
+ [[https://www.quantamagazine.org/computer-helps-prove-long-sought-fluid-equation-singularity-20221116/][Computer Proof ‘Blows Up’ Centuries-Old Fluid Equations]]. ~ Jordana Cepelewicz (@jordanacep). #Math #CompSci
+ [[https://youtu.be/5AvutGncFA0][Teorema de compacidad lógica: de Newton a Gödel]]. ~ Hugo Víctor García Martínez. #Lógica #Matemática

*** 19-Nov-22
+ [[https://www.ps.uni-saarland.de/extras/kirst-thesis/thesis_screen.pdf][Mechanised metamathematics (An investigation of first-order logic and set theory in constructive type theory)]]. ~ Dominik Kirst. #PhDThesis #ITP #Coq #Logic #Math
+ [[https://cs.adelaide.edu.au/~yval/pdfs/KuepperEGCSTWCCGWY23.pdf][CryptOpt: Verified compilation with random program search for cryptographic primitives]]. ~ Joel Kuepper et als. #ITP #Coq
+ [[https://arxiv.org/abs/2211.08671][LEMMA: Bootstrapping high-level mathematical reasoning with learned symbolic abstractions]]. ~ Zhening Li, Gabriel Poesia, Omar Costilla-Reyes, Noah Goodman, Armando Solar-Lezama. #MachineLearning #Math
+ [[https://camilocs.substack.com/p/en-busqueda-del-por-que][En búsqueda del «por qué»]]. ~ Camilo Chacón Sartori (@camilo_chacon_s). #Filosofía #Programación

*** 18-Nov-22
+ [[https://lawrencecpaulson.github.io/2022/11/16/automation_eng_in_math.html][Automation and engineering in mathematics]]. ~ Pedro Sánchez Terraf. #ITP #IsabelleHOL #Math
+ [[https://cs.famaf.unc.edu.ar/~pedro/conjunteoria/apunte_st.pdf][Conjunteoría (apuntes de teoría de conjuntos)]]. ~ Pedro Sánchez Terraf. #Math #SetTheory
+ [[https://cs.famaf.unc.edu.ar/~pedro/conjunteoria/][Curso de teoría de conjuntos]]. ~ Pedro Sánchez Terraf. #Math #SetTheory
+ [[https://cs.famaf.unc.edu.ar/~pedro/teornum.pdf][Apuntes de teoría de números (cómo cocinar un problema)]]. ~ Pedro Sánchez Terra. #Math
+ [[https://arxiv.org/abs/2211.07524][Towards a mathematics formalisation assistant using large language models]]. ~ Ayush Agrawal, Siddhartha Gadgil, Navin Goyal, Ashvni Narayanan, Anand Tadipatri. #ITP #LeanProver #Autoformalisation
+ [[https://www.isa-afp.org/entries/PAPP_Impossibility.html][The incompatibility of strategy-proofness and representation in party-approval multi-winner elections]]. ~ Théo Delemazure, Tom Demeulemeester, Manuel Eberl, Jonas Israel, Patrick Lederer. #ITP #IsabelleHOL
+ [[https://serokell.io/blog/datakinds-are-not-what-you-think][DataKinds are not what you think]]. ~ Vladislav Zavialov. #Haskell #FunctionalProgramming
+ [[https://wimvanderbauwhede.github.io/articles/decluttering-with-functional-programming/][Cleaner code with functional programming]]. ~ Wim Vanderbauwhede. #FunctionalProgramming #Python #Raku

*** 17-Nov-22
+ [[https://www.isa-afp.org/entries/Balog_Szemeredi_Gowers.html][The Balog–Szemerédi–Gowers theorem]]. ~ Angeliki Koutsoukou-Argyraki, Mantas Bakšys, Chelsea Edmonds. #ITP #IsabelleHOL #Math
+ [[https://github.com/hsinhaoyu/why_functional][Examples of John Hughes' "Why Functional Programming Matters" implemented in Python]]. ~ Hsin-Hao Yu. #Python #OrgMode #LiterateProgramming
+ [[https://hsinhaoyu.github.io/cont_frac][Understanding Bill Gosper's continued fraction arithmetic (implemented in Python)]]. ~ Hsin-Hao Yu./#org3062e9b #Python #OrgMode #LiterateProgramming
+ [[https://youtu.be/mAZC1w_VfEs][Haskell Course: Lesson 8: Creating non-parameterized types]]. ~ Robertino Martínez (@_roberm_). #Haskell #FunctionalProgramming

*** 16-Nov-22
+ [[https://masot.net/semiperm/wra_hatra22.pdf][A short survey of weak reasoning assistants]]. ~ Matthew Sotoudeh. #ITP #Math
+ [[https://arxiv.org/abs/2211.05700][Translating proofs from an impredicative type system to a predicative one]]. ~ Thiago Felicissimo, Frédéric Blanqui, Ashish Kumar Barnawal. #ITP
+ [[https://www.tweag.io/blog/2022-11-15-unrolling-with-typeclasses/][Staged programming with typeclasses]]. ~ Thomas Bagrel. #Haskell #FunctionalProgramming

*** 15-Nov-22
+ [[https://www.isa-afp.org/browser_info/current/AFP/Combinatorial_Enumeration_Algorithms/document.pdf][Combinatorial enumeration algorithms (in Isabelle/HOL)]]. ~ Paul Hofmeier, Emin Karayel. #ITP #IsabelleHOL #Math #Algorithms
+ [[https://youtu.be/-wj-eCGv1D4][Formalising algebraic geometry, lecture 1/4]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math

*** 14-Nov-22
+ [[https://camilocs.substack.com/p/la-informatica-subjetiva-bajo-el?r=3vd4r][La informática subjetiva: bajo el manto del «depende»]]. ~ Camilo Chacón Sartori (@camilo_chacon_s). #Informática #Programación #MétodosFormales

*** 13-Nov-22
+ [[https://camilocs.substack.com/p/la-claridad-es-la-cortesia-del-buen?sd=pf][La claridad es la cortesía del buen programador]]. Camilo Chacón Sartori (@camilo_chacon_s). #Programación
+ [[https://micromath.wordpress.com/2022/11/12/are-mathematicians-gifted-people/][Are mathematicians gifted people?]] ~ Alexandre Borovik. #Math
+ [[http://www.borovik.net/selecta/wp-content/uploads/2015/08/Borovik_Makers_and_Users__Prepublication_2017.pdf][Mathematics for makers and mathematics for users]]. ~ Alexandre Borovik. #Math
+ [[https://www.info.ucl.ac.be/~pvr/Peter.thesis/Peter.thesis.html][Can logic programming execute as fast as imperative programming?]] ~ Peter Lodewijk Van Roy (@PeterLodewijk). #Prolog #LogicProgramming

*** 12-Nov-22
+ [[https://pldb.com/posts/scottFalhmanInterview.html][A brief interview with Common Lisp creator Dr. Scott Fahlman]]. #CompSci

*** 10-Nov-22
+ [[https://youtu.be/ColY2dknvJs][Alternative by example: A typeclass for parsing, concurrency, logic programming]]. ~ Chris Penner. #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2022-11-10-learning-games-with-rllib/][Reinforcement learning for open games]]. ~ Georgios Karachalias, Noon van der Silk. #Haskell #FunctionalProgramming
+ [[https://youtube.com/playlist?list=PLBqWQH1MiwBTwo2wrwINAorzXRumxO41s][Videos from Haskell Love 2021]]. #Haskell #FunctionalProgramming
+ [[https://hacklewayne.com/one-recursion-for-all-catamorphism-step-by-step][One recursion for all! Catamorphism step by step]]. ~ Hackle Wayne (@hacklew). #Haskell #FunctionalProgramming

*** 09-Nov-22
+ [[https://lawrencecpaulson.github.io/2022/11/09/Hilbert-Isabelle.html][(Hilbert, Isabelle) and more universal pairs]]. ~ Marco David. #ITP #IsabelleHOL #Math
+ [[https://www.quantamagazine.org/deepmind-machine-learning-becomes-a-mathematical-collaborator-20220215/][Machine learning becomes a mathematical collaborator]]. ~ Kelsey Houston-Edwards. #Math #AI #MachineLearning
+ [[https://rebeccaskinner.net/posts/2021-08-25-introduction-to-type-level-programming.html][An introduction to type level programming]]. ~ Rebecca Skinner. #Haskell #FunctionalProgramming
+ [[https://youtu.be/dGNd0GmsYWU ~ Robertino Martínez (@_roberm_).][Haskell Course: Lesson 7: Intro to type classes]]. #Haskell #FunctionalProgramming
+ [[https://pybit.es/articles/tips-for-clean-code-in-python/][Tips for clean code in Python]]. ~ Bob Belderbos. #Python #Programming

*** 08-Nov-22
+ [[https://www.tweag.io/blog/2022-11-08-functional-programming-from-sets-and-functions/][Functional programming from sets and functions]]. ~ Marco Perone. #Haskell #FunctionalProgramming
+ [[https://www.youtube.com/playlist?list=PLyrlk8Xaylp5d8nboeHcddtF8VdF5Zqp0][Videos of talks from Scheme Workshop 2022]]. #Scheme #FunctionalProgramming
+ [[https://youtu.be/tSYL-ricWLg][Using emacs and org-mode to teach programming]]. ~ Daniel M German. #Emacs #OrgMode #Programming
+ [[https://www.lemonde.fr/blog/binaire/2022/11/06/ia-explicable-ia-interpretable-voyage-dans-les-archives-binaires/][IA explicable, IA interpretable: voyage dans les archives Binaires]]. ~ Marie-Agnès Enard, Pascal Guitton, Thierry Viéville. #AI #XAI via @Blog_Binaire

*** 07-Nov-22
+ [[https://blog.adrianistan.eu/acertijo-cebra][El acertijo de la cebra]]. ~ Adrián Arroyo Calle. #Prolog #LogicProgramming

*** 5-Nov-22
+ [[https://blog.plover.com/prog/haskell/numbers.html][A map of Haskell's numeric types]]. ~ Mark Dominus. #Haskell #FunctionalProgramming
+ [[https://kevin-da-silva.medium.com/one-problem-five-solutions-zip-function-ad1ed3bd1f16][One problem five solutions: Zip function]]. ~ Kevin Da Silva. #Haskell #Elixir #JavaScript #Python #Vlang
+ [[https://www.nature.com/articles/475166a][The unplanned impact of mathematics]]. ~ Peter Rowlett. #Math

*** 04-Nov-22
+ [[https://pythonspeed.com/articles/old-fashioned-software-optimized/][Good old-fashioned code optimization never goes out of style]]. ~ Itamar Turner-Trauring. #Python #Programming
+ [[https://bit.ly/3fDbv15][La hipótesis de Riemann y la Física]]. ~ Juan Arias de Reyna. #Matemáticas
+ [[https://arxiv.org/abs/1006.4131][A pedagogical history of compactness]]. ~ Manya Raman-Sundstrom. #Math
+ [[https://dl.acm.org/doi/pdf/10.1145/3563306][Data-driven lemma synthesis for interactive proofs]]. ~ Aishwarya Sivaraman et als. #ITP #Coq

*** 03-Nov-22
+ [[https://lawrencecpaulson.github.io/2022/11/02/crypto-protocols-NS.html][Verifying cryptographic protocols, II: a simple example]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL
+ [[https://www.vice.com/en/article/y3pezm/scientists-increasingly-cant-explain-how-ai-works][Scientists increasingly can’t explain how AI works]]. ~ Chloe Xiang (@chloexiang). #AI #XAI #DeepLearning
+ [[https://philarchive.org/archive/YAMUAI][Unexplainability and incomprehensibility of Artificial Intelligence]]. ~ Roman V. Yampolskiy. #AI #XAI #DeepLearning
+ [[https://towardsdatascience.com/a-gentle-introduction-to-branch-bound-d00a4ee1cad][A gentle introduction to branch & bound (The most fundamental integer and mixed-integer programming algorithm explained with Python)]]. ~ Bruno Scalia C. F. Leite. #Python #Math
+ [[https://www.johndcook.com/blog/2022/11/02/keplers-equation-python/][Python code to solve Kepler’s equation]]. ~ John D. Cook (@JohnDCook). #Python #Math

*** 02-Nov-22
+ [[https://www.cis.upenn.edu/~jean/math-deep.pdf][Algebra, topology, differential calculus, and optimization theory for computer science and machine learning]]. ~ Jean Gallier, Jocelyn Quaintance. #eBook #Math #CompSci #MachineLearning
+ [[https://www.reddit.com/r/haskell/comments/yjxfol/haskell_is_the_greatest_programming_language_of/][Haskell is the greatest programming language of all time]]. #Haskell #FunctionalProgramming

*** 01-Nov-22
+ [[https://cjquines.com/files/curryhoward.pdf][Curry–Howard by example]]. ~ Carl Joshua Quines. #Logic #CompSci via @FunctorFact
+ [[https://lovettsoftware.com/NaturalNumbers/TutorialWorld.lean.html][Natural numbers tutorial]]. ~ Chris Lovett et als. #ITP #Lean4 #Math
+ [[https://300.f22.matthewrobertballard.com/][HNRS: Transition to Advanced Mathematics (Thinking and communicating like a mathematician)]]. ~ Matthew Ballard. #ITP #LeanProver #Math
+ [[https://favonia.org/files/mugen.pdf][An order-theoretic analysis of universe polymorphism]]. ~ Kuen-Bang Hou, Carlo Angiuli, Reed Mullanix. #ITP #Agda
+ [[https://www.dylanamartin.com/2022/10/31/use-newtypes-for-typesafe-data-validation-with-aeson.html ][Data validation in Haskell with newtypes, smart constructors, and aeson]]. ~ Dylan Martin. #Haskell #FunctionalProgramming


** Octubre 2022

*** 31-Oct-22
+ [[https://arxiv.org/abs/2107.12908][Digital collections of examples in mathematical sciences]]. ~ James Harold Davenport. #Math

*** 30-Oct-22
+ [[https://leanprover.github.io/functional_programming_in_lean/title.htmlhttps://leanprover.github.io/functional_programming_in_lean/title.html][Functional programming in Lean]]. ~ David Thrane Christiansen. #Lean4 #FunctionalProgramming
+ [[https://arxiv.org/abs/2208.10492][Improving counterexample quality from failed program verification]]. ~ Li Huang, Bertrand Meyer, Manuel Oriol. #FormalVerification
+ [[https://github.com/jworr/happy][Implementation of a DSL (Domain Specific Language) using Happy]]. ~ J. Walker Orr. #Haskell #FunctionalProgramming

*** 29-Oct-22
+ [[https://macsphere.mcmaster.ca/bitstream/11375/28050/2/Ray_Lekhani_2022October_MSc.pdf][Formalization of biform theories in Isabelle]]. ~ Lekhani Ray. #ITP #IsabelleHOL
+ [[https://eprints.ucm.es/id/eprint/75214/1/Paula_Pastor_P%C3%A9rez%20(1).pdf][Verification of greedy algorithms in Dafny]]. ~ Paula Eugenia Pastor Pérez. #FormalVerification #Dafny
+ [[https://dependenttyp.es/pdf/oramproposal.pdf][Towards formally verified path ORAM in Coq]]. ~ Hannah Leung, Talia Ringer, Christopher W. Fletcher. #ITP #Coq

*** 28-Oct-22
+ [[http://comonad.com/reader/2022/internalized-guarded-recursion-for-equational-reasoning/][Internalized guarded recursion for equational reasoning]]. ~ Gershom Bazerma. #Haskell #FunctionalProgramming

*** 27-Oct-22
+ [[https://lawrencecpaulson.github.io//2022/10/26/Multiset-Ordering.html][Proving termination with multiset orderings]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2210.12283][Draft, sketch, and prove: Guiding formal theorem provers with informal proofs]]. ~ Albert Q. Jiang, Sean Welleck, Jin Peng Zhou, Wenda Li, Jiacheng Liu, Mateja Jamnik, Timothée Lacroix, Yuhuai Wu, Guillaume Lample. #ITP #IsabelleHOL
+ [[http://ceur-ws.org/Vol-3249/paper1-FOUST.pdf][Foundational ontologies meet automatic theorem provers]]. ~ Pawel Garbacz. #ATP #Prover9

*** 26-Oct-22
+ [[https://arxiv.org/abs/2210.11411v1][Holbert: Reading, writing, proving and learning in the browser]]. ~ Liam O'Connor, Rayhana Amjad. #ITP #Logic #Haskell #FunctionalProgramming
+ [[https://github.com/liamoc/holbert][Holbert: A graphical interactive proof assistant designed for education]]. ~ Liam O'Connor et als. #ITP #Logic #Haskell #FunctionalProgramming
+ [[https://www.proquest.com/openview/516ba6ed291ccabf00b79dcdb055e343/1.pdf?pq-origsite=gscholar&cbl=18750&diss=y][Formal verification of top-down parser interpreters]]. ~ Sam Lasser. #ITP #Coq #PhDThesis
+ [[https://memocode2022.github.io/images/paper4240.pdf][Mechanization of a large DSML: An experiment with AADL and Coq]]. ~ Jérôme Hugues, Lutz Wrage, John Hatcliff, Danielle Stewart. #ITP #Coq
+ [[https://youtu.be/sgwMndM0MZs][Cómo resolver problemas | Polya y el teorema de Desargues]]. ~ Urtzi Buijs (@UrtziBuijs). #Matemáticas

*** 25-Oct-22
+ [[https://topos.site/topos-colloquium/slides/2022-10-06.pdf][The new era of formalised mathematics and the Alexandria project]]. ~ Angeliki Koutsoukou-Argyraki (@AngelikiKoutso1) #ITP #IsabelleHOL #Math
+ [[https://spectrum.ieee.org/functional-programming][Why functional programming should be the future of software development]]. ~ Charles Scalfani. #FunctionalProgramming

*** 24-Oct-22
+ [[https://arxiv.org/abs/2205.08232][LogicSolver: Towards interpretable Math word problem solving with logical prompt-enhanced learning]]. ~ Zhicheng Yang, Jinghui Qin, Jiaqi Chen, Liang Lin, Xiaodan Liang. #DeepLearning #Math
+ [[https://arxiv.org/abs/2210.1215][Formalizing chemical theory using the Lean Theorem Prover]]. ~ Maxwell P. Bobbin, Samiha Sharlin, Parivash Feyzishendi, An Hong Dang, Catherine M. Wraback, Tyler R. Josephson.0# #ITP #LeanProver
+ [[https://arxiv.org/abs/2210.11820][A drag-and-drop proof tactic]]. ~ Pablo Donato, Pierre-Yves Strub, Benjamin Werner. #ITP #Logic

*** 23-Oct-22
+ [[https://people.mpi-sws.org/~bbb/papers/pdf/rtss22.pdf][From intuition to Coq: A case study in verified response-time analysis of FIFO scheduling]]. ~ Kimaya Bedarkar et als. #ITP #Coq
+ [[https://arxiv.org/abs/2210.09476v1][Contextuality in distributed systems]]. ~ Nasos Evangelou-Oost, Callum Bannister, Ian J. Hayes. #ITP #IsabelleHOL
+ [[http://www.fields.utoronto.ca/talks/Abstract-Formalities][Abstract formalities (Reflections on the Liquid Tensor Experiment)]]. ~ Johan Commelin. #ITP #LeanProver #Math
+ [[http://www.fields.utoronto.ca/talks/What-can-working-mathematician-expect-deep-learning][What can the working mathematician expect from deep learning?]] ~ Geordie Williamson. #DeepLearning #Math
+ [[http://www.fields.utoronto.ca/talks/mathematical-interest-just-matter-taste][Is mathematical interest just a matter of taste?]]. ~ Timothy Gowers. #ITP #Math
+ [[http://www.fields.utoronto.ca/talks/What-makes-proof-acceptable][What makes a proof acceptable?]]. ~ Andrew Granville. #ITP #Math
+ [[http://www.fields.utoronto.ca/talks/Varieties-Mathematical-Understanding][Varieties of mathematical understanding]]. ~ Jeremy Avigad. #Math
+ [[https://github.com/Youjack/thermodynamics.lean][Formalization of thermodynamics in Lean]]. ~ Youjack. #ITP #LeanProver
+ [[https://notxor.nueva-actitud.org/2022/10/23/control-de-versiones.html][Control de versiones]]. ~ Notxor. #Git
+ [[https://www.lemonde.fr/blog/binaire/2022/10/21/philosophie-de-linformatique/][Philosophie de ... l’informatique!]] #CompSci #Philosophy

*** 22-Oct-22
+ [[https://youtube.com/playlist?list=PLahUDl6AAwrjLvD5G4dZdkmXnGknydf8i][Vídeos de las charlas de PyConES 2022]]. #Python

*** 21-Oct-22
+ [[https://arxiv.org/abs/2006.01613][Classical set theory: Theory of sets and classes]]. ~ Taras Banakh. #Ebook #Logic #Math #SetTheory
+ [[https://youtube.com/playlist?list=PLyrlk8Xaylp4zxdY-QEh_g6CHlhkAsBya][Haskell Symposium 2022 recorded talks]]. #Haskell #FunctionalProgramming

*** 20-Oct-22
+ [[https://cs.famaf.unc.edu.ar/~pedro/forcing/independence_ch_isabelle.pdf][The formal verification of the ctm approach to forcing]]. ~ Emmanuel Gunther, Miguel Pagano, Pedro Sánchez Terraf, Matías Steinberg. #ITP #IsabelleZF #Logic #Math #SetTheory
+ [[http://cl-informatik.uibk.ac.at/teaching/ss22/itpIsa/slides/01x1.pdf][Interactive Theorem Proving using Isabelle/HOL (Session 1)]]. ~ René Thiemann. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2210.07693][Designing a general library for convolutions]]. ~ Floris van Doorn. #ITP #LeanProver #Math
+ [[https://youtu.be/2PGUt_dcHX0][[Haskell'22] Industrial strength laziness: What's next?]] ~ David Thrane Christiansen (@d_christiansen). #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2022/10/what-does-isomorphic-mean-in-haskell.html][What does "isomorphic" mean (in Haskell)?]] ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2022-10-20-bazel-example-servant-elm-1/][Converting a polyglot project build to Bazel: part 1]]. ~ Karol Czułkowski. #Haskell #FunctionalProgramming
+ [[https://cacm.acm.org/magazines/2019/5/236426-quantum-hype-and-quantum-skepticism/fulltext][Quantum hype and quantum skepticism]]. ~ Moshe Y. Vardi. #CompSci
+ [[https://inventwithpython.com/pythongently/][Python programming exercises, gently explained]]. ~ Al Sweigart. #eBook #Python

*** 19-Oct-22
+ [[https://lawrencecpaulson.github.io//2022/10/19/crypto-protocols.html][Verifying cryptographic protocols, I: Fundamentals]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #FormalVerification
+ [[https://blog.plover.com/prog/haskell/lazy-search.html][Tree search in Haskell]]. ~ Mark Dominus. #Haskell #FunctionalProgramming
+ [[https://elbear.com/functional-programming-principles-you-can-use-in-python.html][Functional programming principles you can use in Python]]. ~ Lucian Ursu. #Python #FunctionalProgramming

*** 18-Oct-22
+ [[https://www.tweag.io/blog/2022-10-18-monad-bayes-fellowship/][Improving the probabilistic programming language Monad-Bayes]]. ~ Reuben Cohn-Gordon. #Haskell #FunctionalProgramming
+ [[https://github.com/keithfancher/haskell-notes/blob/master/haskell-notes.md][Notes of a Haskell beginner]]. ~ keithfancher. #Haskell #FunctionalProgramming
+ [[https://doisinkidney.com/posts/2022-10-17-lazy-group-on.html][Lazily grouping in Haskell]]. ~ Donnacha Oisín Kidney (@oisdk). #Haskell #FunctionalProgramming
+ [[https://samgeo.codes/blog/python-types/][Musings on Python type hints]]. ~ Samuel Eisenhandler (@sgeisenh). #Python #MyPy

*** 17-Oct-22
+ [[https://arxiv.org/abs/2210.07746][Formalising the h-principle and sphere eversion]]. ~ Patrick Massot, Floris van Doorn, Oliver Nash. #ITP #LeanProver #Math
+ [[https://davidamos.dev/tree-traversals-and-anagrams-python/][Tree traversals and anagrams in Python]]. ~ David Amos. #Python
+ [[https://hal.archives-ouvertes.fr/hal-03648357/file/INDRUM2022_Bartzia_et_al.pdf][Proof assistants for undergraduate mathematics and computer science education: elements of a priori analysis]]. ~ Evmorfia Bartzia, Antoine Meyer, Julien Narboux. #ITP

*** 16-Oct-22
+ [[https://gdevanla.github.io/posts/write-a-parser-combinator-in-python.html][Minimal parser combinator in Python]]. ~ Guru Devanla. #Python

*** 15-Oct-22
+ [[https://leanprover-community.github.io/blog/posts/lte-examples/][Definitions in the liquid tensor experiment]]. ~ Adam Topaz. #ITP #LeanProver #Math
+ [[https://www.bbc.com/mundo/noticias-44085063][El enigma resuelto hace 300 años por el matemático Leonhard Euler que hoy nos permite acceder a internet]]. ~ Marcus du Sautoy. #Matemáticas

*** 14-Oct-22
+ [[https://leanprover-community.github.io/flt-regular/index.html][Fermat’s Last Theorem for regular primes]]. ~ Riccardo Brasca (@RiccardoBrasca) et als. #ITP #LeanProver #Math
+ [[https://leanprover-community.github.io/blog/posts/month-in-mathlib-sep-2022/][This month in mathlib (Sep 2022)]]. #ITP #LeanProver #MathLib
+ [[https://www.tweag.io/blog/2022-10-14-ltl-attacks/][Testing stateful systems, part two: Linear Temporal Logic]]. ~ Carl Hammann. #Haskell #FunctionalProgramming

*** 13-Oct-22
+ [[https://books.google.es/books?id=R5h-EAAAQBAJ&lpg=PP1&dq=Mathematical%20Logic%20through%20Python&hl=es&pg=PP][Mathematical Logic through Python]]. ~ Yannai A. Gonczarowski, Noam Nisan.1#v=onepage&q&f=false #Logic #Math #Python
+ [[https://static.miraheze.org/isacwiki/2/2f/Paper-Isabelle-WS22.pdf][Towards accessible formal mathematics with ISAC and Isabelle/VSCode]]. ~ Walther Neuper, Bernhard Stöger, Makarius Wenze. #ITP IsabelleHOL

*** 12-Oct-22
+ [[https://arxiv.org/abs/2210.05342][Formalizing May's Theorem]]. ~ Kwing Hei Li. #ITP #Coq #Math
+ [[https://arxiv.org/abs/2210.05225][A formalisation of a Fast Fourier Transform]]. ~ Laurent Théry. #ITP #Coq #Math
+ [[https://leanprover-community.github.io/blog/posts/month-in-mathlib-sep-2022/][This month in mathlib (Sep 2022)]]. #ITP #LeanProver #MathLib #Math
+ [[https://iwilare.com/msc-thesis.pdf][Counterpart semantics for quantified temporal logics: Sets, categories and Agda]]. ~ Andrea Laretto. #ITP #Agda #Logic #Math
+ [[https://www.researchgate.net/publication/364144547_A_Formalisation_of_the_Balog-Szemeredi-Gowers_Theorem_in_IsabelleHOL][A formalisation of the Balog-Szemerédi-Gowers theorem in Isabelle/HOL]]. ~ Angeliki Koutsoukou-Argyraki, Mantas Bakšys, Chelsea Edmonds. #ITP #IsabelleHOL #Math
+ [[https://mohittkr.github.io/SC_workshop_paper.pdf][Towards verified rounding-error analysis for stationary iterative methods]]. ~ Ariel Kellison et als. #ITP #Coq #Math
+ [[https://www.cs.princeton.edu/~appel/papers/arrays-with-concatenation.pdf][A solver for arrays with concatenation]]. ~ Qinshi Wang, Andrew W. Appel. #ITP #Coq
+ [[https://lawrencecpaulson.github.io/2022/10/12/verifying-distributed-systems-isabelle.html][Verifying distributed systems with Isabelle/HOL]]. ~ Martin Kleppmann. #ITP #IsabelleHOL
+ [[https://github.com/CMU-HoTT/scott][Selected Papers of Dana S]]. Scott. ~ Steve Awodey. #CompSci

*** 11-Oct-22
+ [[https://serokell.io/blog/haskell-in-production-caribou][Haskell in production: Caribou]]. #Haskell #FunctionalProgramming
+ [[https://monadic.systems/post7][Haskell Server Pages With Okapi]]. #Haskell #FunctionalProgramming
+ [[https://www.joachim-breitner.de/blog/796-rec-def__Minesweeper_case_study][rec-def: Minesweeper case study]]. ~ Joachim Breitner (@nomeata). #Haskell #FunctionalProgramming
+ [[https://youtu.be/mwKeVuOyZsU][Minmaxing Slay the Spire with Haskell]]. ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming

*** 09-Oct-22
+ [[https://www.researchgate.net/publication/364091557_Towards_Formalising_Schutz'_Axioms_for_Minkowski_Spacetime_in_IsabelleHOL][Towards formalising Schutz’ axioms for Minkowski spacetime in Isabelle/HOL]]. ~ Richard Schmoetten, Jake E. Palmer, Jacques D. Fleuriot. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Query_Optimization.html][Verification of query optimization algorithms (in Isabelle/HOL)]]. ~ Lukas Stevens, Bernhard Stöckl. #ITP #IsabelleHOL
+ [[https://jesper.sikanda.be/posts/agda2hs.html][Don't worry (about writing Haskell), be happy (writing Agda instead)! ~ Jesper Cockx (@agdakx)]]. #Agda #Haskell #FunctionalProgramming
+ [[https://pp.ipd.kit.edu/uploads/publikationen/b%C3%BClow22bachelorarbeit.pdf][Proof visualization for the Lean 4 theorem prover]]. ~ Niklas Fabian Bülow. #ITP #LeanProver
+ [[https://macsphere.mcmaster.ca/bitstream/11375/27914/2/Moore_Nicholas_CC_202209_PhD.pdf][An encoding of the clock cycle semantics of Bluespec System Verilog in PVS]]. ~ Nicholas Clifford Charles Moore. #ITP #PVS
+ [[https://mmhaskell.com/blog/2022/10/6/advent-of-code-seven-segment-logic-puzzle][Advent of Code: Seven segment logic puzzle]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://www.lavanguardia.com/vida/20221007/8557564/ia-deepmind-halla-nueva-forma-multiplicar-matrices-acelerar-calculos.html][Una IA de DeepMind halla una nueva forma de multiplicar números y acelerar los ordenadores]]. ~ Mayte Rius. #DeepLearning #Math
+ [[https://www.nature.com/articles/s41586-022-05172-4][Discovering faster matrix multiplication algorithms with reinforcement learning]]. ~ Alhussein Fawzi et als. #DeepLearning #Math

*** 05-Oct-22
+ [[https://youtu.be/Sh8kJ0ADmao][El Teorema de los 4 colores]]. ~ Urtzi Buijs (@UrtziBuijs).  #Matemáticas

*** 04-Oct-22
+ [[https://arxiv.org/abs/2209.14227][FV Time: a formally verified Coq library]]. ~ Ana de Almeida Borges, Mireia González Bedmar, Juan Conejero Rodríguez, Eduardo Hermo Reyes, Joaquim Casals Buñuel, Joost J. Joosten. #ITP #Coq
+ [[https://www.cambridge.org/core/services/aop-cambridge-core/content/view/CE55ACA989A03E9073540DCCEBA4E89C/S0956796822000107a.pdf/foldunfold_lemmas_for_reasoning_about_recursive_programs_using_the_coq_proof_assistant.pdf][Fold–unfold lemmas for reasoning about recursive programs using the Coq proof assistant]]. ~ Olivier Danv. #ITP #Coq
+ [[https://is.muni.cz/th/t7wl3/cheetah_bachelor__23__Archive.pdf][Categorical view of monads in Computer Science]]. ~ Vít Jelínek. #CategoryTheory #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2022/10/3/haskell-and-visual-studio][Haskell and Visual Studio]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 03-Oct-22
+ [[https://arxiv.org/abs/2209.15492][Formalized class group computations and integral points on Mordell elliptic curves]]. ~ Anne Baanen, Alex J. Best, Nirvana Coppola, Sander R. Dahmen. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2110.09290][The AI triplet: Computational, conceptual, and mathematical knowledge in AI education]]. ~ Maithilee Kunda. #AI

*** 02-Oct-22
+ [[https://www.isa-afp.org/entries/Undirected_Graph_Theory.html][Undirected graph theory (in Isabelle/HOL)]]. ~ Chelsea Edmonds. #ITP #IsabelleHOL #Math
+ [[https://www.ccs.neu.edu/home/pete/pub/fmcad-2022.pdf][Enumerative data types with constraints]]. ~ Andrew T. Walter, David Greve, Panagiotis Manolios. #ITP #ACL2

*** 01-Oct-22
+ [[https://www.isa-afp.org/entries/Maximum_Segment_Sum.html][Maximum segment sum (in Isabelle/HOL)]]. ~ Nils Cremer, Tobias Nipkow. #ITP #IsabelleHOL #Algorithms
+ [[https://books.google.es/books?id=wvuLEAAAQBAJ&lpg=PR5&ots=GZTivlm9jS&dq=%22logic%20Programming%22%20OR%20%22functional%20programming%22&lr&hl=es&pg=PP][Exploring formalisation: A primer in human-readable mathematics in Lean 3 with examples from simplicial topology]]. ~ Clara Löh.1#v=onepage&q&f=false #ITP #LeanProver #Math
+ [[https://macsphere.mcmaster.ca/bitstream/11375/27875/2/AaronCrightonThesisFinal.pdf][Explorations in p-adic model theory]]. ~ Aaron Crighton. #PhDThesis #ITP #IsabelleHOL #Math
+ [[https://www21.in.tum.de/~traytel/papers/ictac22-verimon/verimon.pdf][VeriMon: A formally verified monitoring tool]]. ~ David Basin et als. #ITP #IsabelleHOL
+ [[https://dl.acm.org/doi/pdf/10.1145/3564619][The tortoise and the hare algorithm for finite lists, compositionally]]. ~ Olivier Danvy. #ITP #Coq #Algorithms
+ [[https://www.logicmatters.net/2022/09/30/avigad-on-mathematical-logic-and-computation/][Avigad on Mathematical Logic and Computation]]. ~ Peter Smith. #Book #Logic #Math
+ [[https://bit.ly/3rjIQ3u][Mathematical Logic and Computation]]. ~ Jeremy Avigad. #Logic #Math
+ [[https://spectrum.ieee.org/floating-point-numbers-posits-processo][Posits, a new kind of number, improves the Math of AI]]. ~ Dina- Genkina.r#toggle-gdpr #CompSci #AI

** Septiembre 2022

*** 30-Sep-22
+ [[https://www.isa-afp.org/entries/Safe_Range_RC.html][Making arbitrary relational calculus queries safe-range]]. ~ Martin Raszyk, Dmitriy Traytel. #ITP #IsabelleHOL
+ [[https://youtu.be/tXg4nbPACPc][The logic languages of the TPTP World]]. ~ Geoff Sutcliffe. #ATP #TPTP #Logic
+ [[https://yairchu.github.io/posts/reduce-sharing-in-haskell][3 ways to reduce sharing in Haskell]]. ~ Yair Chuchem (@yairchu). #Haskell #FunctionalProgramming
+ [[https://www.bleepingcomputer.com/news/security/unpatched-15-year-old-python-bug-allows-code-execution-in-350k-projects/][Unpatched 15-year old Python bug allows code execution in 350k projects]]. ~ Ionut Ilascu. #Python
+ [[https://arxiv.org/abs/2209.14974][Greybox XAI: A neural-symbolic learning framework to produce interpretable predictions for image classification]]. ~ Adrien Bennetot, Gianni Franchi, Javier Del Ser, Raja Chatila, Natalia Diaz-Rodriguez. #XAI #DeepLearning #NeuralNetwork
+ [[https://notxor.nueva-actitud.org/2022/09/29/toda-la-ayuda-de-emacs.html][Toda la ayuda de Emacs]]. ~ Notxor. #Emacs

*** 29-Sep-22
+ [[https://lawrencecpaulson.github.io//2022/09/28/Cambridge_LCF.html][Memories: Edinburgh LCF, Cambridge LCF, HOL88]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP
+ [[https://arxiv.org/abs/2209.14133][Towards a verified prover for a ground fragment of set theory]]. ~ Lukas Stevens. #ITP #IsabelleHOL #Math #SetTheory
+ [[https://arxiv.org/abs/2209.13894][The Isabelle Community Benchmark]]. ~ Fabian Huch, Vincent Bode. #ITP #IsabelleHOL
+ [[https://bertrandmeyer.com/2022/09/28/introduction-theory-programming-languages-full-book-now-freely-available/][Introduction to the "Theory of Programming Languages": full book now freely available]]. ~ Bertrand Meyer. #Programming

*** 28-Sep-22
+ [[https://youtu.be/wTPfqpbFPQk][Basic concepts for functional programming]]. ~ Adolfo Neto (@adolfont). #FunctionalProgramming
+ [[https://youtu.be/saYk2hGb108][Basic concepts for functional programming 2: Arity and types]]. ~ Adolfo Neto (@adolfont). #FunctionalProgramming
+ [[https://github.com/adolfont/caes005-introduction-to-functional-programming][Introduction to functional programming]]. ~ Adolfo Neto (@adolfont). #FunctionalProgramming
+ [[https://youtu.be/sQPGN4b95DU][Haskell Course: Lesson 4: Pattern matching and case expressions ~ Robertino Martínez (@_roberm_)]]. #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/haskell-in-production-noredink][Haskell in production: NoRedInk]]. #Haskell #FunctionalProgramming

*** 27-Sep-22
+ [[https://ut3-toulouseinp.hal.science/hal-03782650/document][Bel-games: A formal theory of games of incomplete information based on belief functions in the Coq proof assistant]]. ~ Pierre Pomeret-Coquot, Hélène Fargier, Érik Martin-Dorel. #ITP #Coa
+ [[https://www.isa-afp.org/browser_info/current/AFP/Stalnaker_Logic/document.pdf][Stalnaker's epistemic logic (in Isabelle/HOL)]]. ~ Laura P. Gamboa Guzman. #ITP #IsabelleHOL #Logic
+ [[https://mmhaskell.com/blog/2022/9/26/using-ghcup][Using GHCup!]] ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://bit.ly/3E4JhWO][Conjetura de Fuglede]]. ~ Juan Arias de Reyna. #Matemáticas

*** 26-Sep-22
+ [[https://dl.acm.org/doi/10.1145/3543670][Formal verification of transcendental fixed- and floating-point algorithms using an automatic theorem prover]]. ~ Samuel Coward, Lawrence Paulson, Theo Drane, Emiliano Morini. #ITP #IsabelleHOL #Math
+ [[https://www.en.pms.ifi.lmu.de/publications/projektarbeiten/Jakob.Pippig/BA_Jakob.Pippig.pdf][An introduction to Answer Set Programming and its applications]]. ~ Jakob Pippig. #ASP #LogicProgramming
+ [[https://blog.drewolson.org/hello-world-haskell][Hello World Haskell]]. ~ Drew Olson. #Haskell #FunctionalProgramming

*** 25-Sep-22
+ [[https://www.cs.ru.nl/bachelors-theses/2022/Sander_Suverkropp___s1019051___Towards_a_Formalization_of_Lsharp_in_Coq.pdf][Towards a formalization of L# in Coq]]. ~ Sander Suverkropp. #ITP #Coq
+ [[https://repository.upenn.edu/edissertations/5376/][Testing by dualization]]. ~ Yishuai Li. #ITP #Coq
+ [[https://research.vu.nl/en/publications/implementation-of-higher-order-superposition][Implementation of higher-order superposition]]. ~ Petar Vukmirovic. #ATP #Logic
+ [[https://arxiv.org/abs/2209.09471][A tool for describing and checking natural semantics]]. ~ Georgian-Vlad Saioc, Hans Hüttel. #Haskell #FunctionalProgramming
+ [[https://yairchu.github.io/posts/a-simple-challenge-for-haskellers][A simple challenge for Haskellers]]. ~ Yair Chuchem (@yairchu). #Haskell #FunctionalProgramming

*** 24-Sep-22
+ [[https://wlp2022.dfki.de/data/papers/005.pdf][A Jupyter kernel for Prolog]]. ~ Anne Brecklinghaus, Philipp Körner. #Prolog #LogicProgramming #Jupyter
+ [[https://arxiv.org/abs/2209.07936][PA-Boot: A formally verified authentication protocol for multiprocessor secure boot]]. ~ Zhuoruo Zhang et als. #ITP #IsabelleHOL
+ [[https://wasp-lang.dev/blog/2022/08/26/how-and-why-i-got-started-with-haskell][How and why I got started with Haskell]]. ~ Shayne Czyzewski (@shayneczyzewski). #Haskell #FunctionalProgramming
+ [[https://repository.upenn.edu/edissertations/5111/][Mechanized reasoning about "how" using functional programs and embeddings]]. ~ Yao Li. #ITP #Coq
+ [[https://mathb.in/72823][MathB.in: A mathematics pastebin written in Common Lisp]]. ~ @susam  #Math #LaTeX #CommonLisp
+ [[https://notes.crmarsh.com/using-mypy-in-production-at-spring][Using Mypy in production at Spring]]. ~ Charlie Marsh (@charliermarsh). #Python #Mypy
+ [[https://blog.wolt.com/engineering/2021/09/30/professional-grade-mypy-configuration/][Professional-grade mypy configuration]]. ~ Jerry Pussinen. #Python #Mypy
+ [[https://repository.upenn.edu/edissertations/5348/][Executable denotational semantics with interaction trees]]. ~ Li-Yao Xia. #ITP #Coq
+ [[https://www.math.nagoya-u.ac.jp/~garrigue/papers/ml2022.pdf][Interpreting OCaml GADTs into Coq]]. ~ Jacques Garrigue,  Takafumi Saikawa. #ITP #Coq

*** 23-Sep-22
+ [[https://arxiv.org/abs/2209.10978][A first complete algorithm for real quantifier elimination in Isabelle/HOL]]. ~ Katherine Kosaian, Yong Kiam Tan, André Platzer. #ITP #IsabelleHOL #Math
+ [[https://ar5iv.labs.arxiv.org/html/2207.07499][Formalising Szemerédi’s regularity lemma and Roth’s theorem on arithmetic progressions in Isabelle/HOL]]. ~ Chelsea Edmonds, Angeliki Koutsoukou-Argyraki, Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://ar5iv.labs.arxiv.org/html/2207.12699][Teaching functional programmers logic and metatheory]]. ~ Frederik Krogsdal Jacobsen, Jørgen Villadsen. #ITP #IsabelleHOL #LogicMath #Teaching
+ [[https://ar5iv.labs.arxiv.org/html/1910.01697][A Henkin-style completeness proof for the modal logic S5]]. ~ Bruno Bentzen. #ITP #LeanProver #LogicMath
+ [[https://ar5iv.labs.arxiv.org/html/2103.03930][Logical foundations: Personal perspective]]. ~ Yuri Gurevich. #Logic
+ [[https://python-bloggers.com/2022/09/automatically-sort-python-module-imports-using-isort/][Automatically sort Python module imports using isort]]. ~ PyShark. #Python

*** 22-Sep-22
+ [[https://www.isa-afp.org/entries/Padic_Field.html][P-adic fields and p-adic semialgebraic sets]]. ~ Aaron Crighton. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2209.10278v1][An automatically verified prototype of the Android permissions system]]. ~ Maximiliano Cristiá, Guido De Luca, Carlos Luna. #ITP #Coq #Android
+ [[https://github.com/mvr/at][Effective algebraic topology in Haskell]]. ~ Mitchell Riley. #Haskell #FunctionalProgramming #Math
+ [[https://www.slideshare.net/ScottWlaschin/the-power-of-composition-ndc-oslo-2020][The power of composition]]. ~ Scott Wlaschin (@ScottWlaschin). #FunctionalProgramming
+ [[https://static1.squarespace.com/static/60a513af4c6b1805bccf3ffd/t/6315c09d8f71a31aac3005cd/1662369950629/Samuel+Frontull+Christina+Kohl+Fabian+Mitterwallner+Paradoxes+Essay.pdf][The lambda calculus: Historical developments]]. ~ Samuel Frontull, Christina Kohl, Fabian Mitterwallner. #LambdaCalculus

*** 21-Sep-22
+ [[https://yairchu.github.io/posts/leet-haskell-in-python][Leet Haskell-style lazy evaluation in Python]]. ~ Yair Chuchem (@yairchu). #Haskell #Python
+ [[https://blog.poisson.chat/posts/2022-09-21-quantified-constraint-trick.html][The quantified constraint trick]]. ~ Li-yao Xia (@lysxia). #Haskell #FunctionalProgramming

*** 20-Sep-22
+ [[https://www.researchgate.net/publication/363594933_Formalising_Basic_Topology_for_Computational_Logic_in_Simple_Type_Theory][Formalising basic topology for computational logic in simple type theory]]. ~ David Fuenmayor, Fabian Serrano. #ITP #IsabelleHOL #Math
+ [[https://www.mat.unb.br/ayala/TeoremaHall.pdf][Hall’s theorem for enumerable families of finite sets]]. ~ Fabián Fernando Serrano Suárez, Mauricio Ayala-Rincón, Thaynara Arielly de Lima. #ITP #IsabelleHOL #Math
+ [[https://perso.univ-rennes1.fr/sebastien.gouezel/articles/change_variables.pdf][A formalization of the change of variables formula for integrals in mathlib]]. ~ Sébastien Gouëzel. #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/browser_info/current/AFP/Implicational_Logic/document.pdf][Soundness and completeness of implicational logic (in Isabelle/HOL)]]. ~ Asta Halkjær From, Jørgen Villadsen. #ITP #IsabelleHOL #Logic #Math

*** 19-Sep-22
+ [[https://youtu.be/RldTMq1cOFw][Informal lecture on mathematical rigor and the Lean theorem prover]]. ~ Alex Kontorovich (@AlexKontorovich). #Math #ITP #LeanProver
+ [[https://leanprover.github.io/functional_programming_in_lean/type-classes.html][Functional programming in Lean: 3. Overloading and type classes]]. ~ David Thrane Christiansen. #ITP #LeanProver #FunctionalProgramming
+ [[https://youtu.be/G0XPELNZuws][Haskell Course: Lesson 3: Conditional & helper constructions]]. ~ Robertino Martínez (@_roberm_). #Haskell #FunctionalProgramming
+ [[https://iagoleal.com/posts/representable-memoize/][Memoization via representables]]. ~ Iago Leal de Freitas. #Haskell #FunctionalProgramming
+ [[https://www.scientificamerican.com/article/how-squishy-math-is-revealing-doughnuts-in-the-brain/][How squishy Math is revealing doughnuts in the brain (Topology, sometimes called rubber sheet geometry, is finding patterns in the brain, drugs and evolution)]]. ~ Kelsey Houston-Edwards. #Math

*** 18-Sep-22
+ [[https://gist.github.com/ttesmer/948df432cf46ec6db8c1e83ab59b1b21][Automatic Differentiation in 38 lines of Haskell]]. ~  Tammo Tesmer. #Haskell #FunctionalProgramming #Math
+ [[https://woodrush.github.io/blog/lambdalisp.html][LambdaLisp: A Lisp interpreter that runs on lambda calculus]]. ~ Hikaru Ikuta (@woodrush924). #Lisp #LambdaCalculus

*** 17-Sep-22
+ [[https://www.cs.ru.nl/bachelors-theses/2022/Marten_Straatsma___1041007___Towards_Formalising_the_Isoperimetric_Theorem.pdf][Towards formalising the isoperimetric theorem]]. ~ Marten Straatsma. #ITP #HOL_Light #Math
+ [[https://i.cs.hku.hk/~bruno/papers/aplas22recursive.pdf][A calculus with recursive types, record concatenation and subtyping]]. ~ Yaoda Zhou, Bruno C. d. S. Oliveira, Andong Fan. #ITP #Coq

*** 16-Sep-22
+ [[https://serokell.io/blog/dependent-types-with-david-christiansen][Functional futures: Dependent types with David Christiansen]]. ~ Jonn Mostovoy. #FunctionalProgramming
+ [[https://wasp-lang.dev/blog/2022/09/02/how-to-get-started-with-haskell-in-2022][How to get started with Haskell in 2022 (the straightforward way)]]. ~ Martin Šošić (@MartinSosic). #Haskell #FunctionalProgramming
+ [[https://well-typed.com/blog/2022/09/lockstep-with-quickcheck-dynamic/][Lockstep-style testing with quickcheck-dynamic]]. ~ Edsko de Vries. #Haskell #FunctionalProgramming

*** 15-Sep-22
+ [[https://vikraman.org/files/qcont22.pdf][Scheme Pearl: Quantum continuations]]. ~ Vikraman Choudhury, Borislav Agapiev, Amr Sabry. #Scheme #FunctionalProgramming
+ [[https://realpython.com/replace-string-python/][How to replace a string in Python]]. ~ Ian Currie. #Python

*** 14-Sep-22
+ [[https://www.isa-afp.org/entries/Separation_Logic_Unbounded.html][Unbounded separation logic (in Isabelle/HOL)]]. ~ Thibault Dardinier. #ITP #IsabelleHOL
+ [[https://lawrencecpaulson.github.io/2022/09/14/Libraries.html][Porting libraries of mathematics between proof assistants]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #HOL_Light #IsabelleHOL
+ [[https://semantic.org/post/monadology-0-1/][Monadology 0.1]]. ~ Ashley Yakeley. #Haskell #FunctionalProgramming
+ [[https://stopa.io/post/269][What Gödel discovered]]. ~ Stepan Parunashvili (@stopachka). #Logic #Math #Lisp #Programming

*** 13-Sep-22
+ [[https://arxiv.org/abs/2209.00840][FOLIO: Natural language reasoning with first-order logic]]. ~ Simeng Han et als. #NL #Logic
+ [[https://youtu.be/RABzYje2d2A][Haskell course: Lesson 2: Data types, signatures, and polymorphism]]. ~ Robertino Martínez (@_roberm_). #Haskell #FunctionalProgramming
+ [[https://studenttheses.uu.nl/bitstream/handle/20.500.12932/42740/Jort_Thesis_Paper.pdf][Generic incremental computation for regular datatypes in Haskell]]. ~ Jort van Gorkum. #Haskell #FunctionalProgramming
+ [[https://blog.drewolson.org/easy-json][Easy JSON in Haskell]]. ~ Drew Olson. #Haskell #FunctionalProgramming
+ [[https://www.sicara.fr/blog-technique/mypy-remove-python-bugs][Mypy: get rid of Python bugs with static type-checking!]] ~ Achille Huet. #Python #Mypy
+ [[https://propertybasedtesting.com/learn-python/property-based-testing-intro-python-short/][Intro to property based testing (with Python Hypothesis)]]. ~ Shai Geva. #Python #Hypothesis
+ [[https://spdskatr.github.io/misc/pbt_presentation_short.pdf][Property-based testing: Getting computers to test your code for you]]. ~ Tunan Shi. #Python #Hypothesis #PBT
+ [[https://www.genbeta.com/desarrollo/antes-que-se-impusiera-python-estos-fueron-lenguajes-que-se-desarrollaba-inteligencia-artificial-1][Antes de que se impusiera Python, estos fueron los lenguajes con los que se desarrollaba inteligencia artificial]]. ~ Marcos Merino (@MarcosMerino_B). #IA #Lisp #Prolog

*** 12-Sep-22
+ [[https://xenaproject.wordpress.com/2022/09/12/beyond-the-liquid-tensor-experiment/][Beyond the Liquid Tensor Experiment]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://leanprover-community.github.io/blog/posts/month-in-mathlib-aug-2022/][This month in mathlib (Aug 2022)]]. #ITP #LeanProver #MathLib
+ [[https://dropbox.tech/application/our-journey-to-type-checking-4-million-lines-of-python][Our journey to type checking 4 million lines of Python]]. ~ Jukka Lehtosalo. #Python
+ [[https://fernand0.github.io/dropbox-python-comprobacion-tipos/][Dropbox, Python y la comprobación de tipos]]. ~ Fernando Tricas (@fernand0). #Python
+ [[https://youtu.be/18nZ5xMeGno][Getting started with mypy and type checking]]. ~ Jukka Lehtosalo (@JukkaLeh). #Python

*** 11-Sep-22
+ [[https://arxiv.org/abs/2209.01886v1][A formal theory of choreographic programming]]. ~ Luís Cruz-Filipe, Fabrizio Montesi, Marco Peressotti. #ITP #Coq
+ [[https://arxiv.org/abs/2209.01259][Category theory for programming]]. ~ Benedikt Ahrens, Kobe Wullaert. #CategoryTheory #Haskell #FunctionalProgramming
+ [[https://eprints.ost.ch/id/eprint/1067/1/NicolasKarrer-HaskellAndWebAssembly.pdf][Haskell and WebAssembly (An introduction based on Asterius)]]. ~ Nicolas Karrer. #Haskell #FunctionalProgramming

*** 10-Sep-22
+ [[https://arxiv.org/abs/2209.02345][Measure construction by extension in dependent type theory with application to integration]]. ~ Reynald Affeldt, Cyril Cohen. #ITP #Coq #Math
+ [[https://www.osti.gov/servlets/purl/1884906][Software Verification Toolkit (SVT): Survey on available software verification tools and future direction]]. ~ Nickolas A. Davis et als. #FormalVerification #ITP #Coq #HOL #LeanProver #IsabelleHOL
+ [[http://ceur-ws.org/Vol-3204/paper_22.pdf][Efficient theorem proving for conditional logics with conditional excluded middle]]. ~ Nikola Panic, Gian Luca Pozzato. #ATP #Prolog #LogicProgramming #Logic
+ [[http://ceur-ws.org/Vol-3204/paper_12.pdf][Logic programming library for machine learning: API design and prototype]]. ~ Giovanni Ciatto, Matteo Castigliò, Roberta Calegari. #MachineLearning #LogicProgramming
+ [[https://dnikolovv.github.io/practical-haskell-bits-initiative/][The "Practical Haskell Bits" initiative]]. ~ Dobromir Nikolov. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2208.14755][Python type hints are Turing complete]]. ~ Ori Roth. #Python #Programming
+ [[https://notxor.nueva-actitud.org/2022/09/09/lenguajes-repelentes.html][Lenguajes repelentes]]. ~ Notxor. #Programación #Smalltalk #Lisp #Clojure #Erlang #TclTk #Python #JuliaLang #Haskell

*** 09-Sep-22
+ [[https://www.isa-afp.org/entries/SCC_Bloemen_Sequential.html][Correctness of a set-based algorithm for computing strongly connected components of a graph]]. ~ Stephan Merz, Vincent Trélat. #ITP #IsabelleHOL
+ [[https://typista.org/lean-for-scala-programmers/][Lean for Scala programmers - Part 1]]. ~ Juan Pablo Romero Méndez (@1jpablo1). #ITP #LeanProver #Scala
+ [[https://typista.org/lean-for-scala-programmers-2/][Lean for Scala programmers - Part 2]]. ~ Juan Pablo Romero Méndez (@1jpablo1). #ITP #LeanProver #Scala
+ [[https://stackoverflow.com/questions/73655347/haskell-style-recursive-lazy-list-in-python][Haskell-style recursive lazy list in Python]]. #Haskell #Python
+ [[https://mmhaskell.com/blog/2022/9/8/dijkstra-with-monads][Dijkstra with monads! ~ James Bowen (@james_OWA)]]. #Haskell #FunctionalProgramming
+ [[https://sonatsuer.github.io/linear-combinations-of-applicatives.html][Linear combinations of applicatives]]. ~ Sonat Süer (@sonatsuer). #Haskell #FunctionalProgramming
+ [[https://www.microsiervos.com/archivo/ordenadores/75-anos-primer-bug-informatico.html][75 años de la primera localización fehaciente de un bug informático]]. ~ @Wicho. #Informática

*** 08-Sep-22
+ [[https://www.ma.imperial.ac.uk/~buzzard/xena/pdfs/AITP_2022_FLT_talk.pdf][Formalising Fermat]]. ~ Kevin Buzzard (@XenaProject). #ITP #Math
+ [[https://www.isa-afp.org/browser_info/current/AFP/Khovanskii_Theorem/document.pdf][Khovanskii's theorem (in Isabelle/HOL)]]. ~ Angeliki Koutsoukou-Argyraki (@AngelikiKoutso1), Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/browser_info/current/AFP/Number_Theoretic_Transform/document.pdf][Number theoretic transform (in Isabelle/HOL)]]. ~ Thomas Ammer, Katharina Kreuzer. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/browser_info/current/AFP/Hales_Jewett/document.pd][The Hales–Jewett theorem (in Isabelle/HOL)]]. ~ Ujkan Sulejmani, Manuel Eberl (@pruvisto), Katharina Kreuzer.f#ITP #IsabelleHOL #Math
+ [[https://www.tweag.io/blog/2022-09-08-fp1-typopaedia-pythonica/][Functional Python, part I: Typopædia pythonica]]. ~ Christopher Harrison. #Python #FunctionalProgramming

*** 07-Sep-22
+ [[https://lawrencecpaulson.github.io//2022/09/07/Ackermann-not-PR-II.html][Ackermann's function is not primitive recursive, II]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #Logic #Math
+ [[https://dl.acm.org/doi/pdf/10.1145/3547621][Beyond Relooper: Recursive translation of unstructured control flow to structured control flow (Functional pearl)]]. ~ Norman Ramsey. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2208.14724][Monadic expressions and their derivatives]]. ~ Samira Attou et als. #Haskell #FunctionalProgramming
+ [[https://medium.com/galileo-onwards/logic-puzzle-2-74e0166a4176][Two fun ways to solve a logic puzzle]]. ~ Vijay Lakshminarayanan #Prolog #Z3
+ [[https://slc.openlogicproject.org/][Sets, logic, computation (An open introduction to metalogic)]]. ~ Richard Zach. #eBook #Logic #Math

*** 06-Sep-22
+ [[https://www3.risc.jku.at/publications/download/risc_6584/proceedings-CICM2022-informal.pd][Formalising the Krull Topology in Lean]]. ~ Sebastian Monnet.f#page=36 #ITP #LeanProver #Math
+ [[https://www3.risc.jku.at/publications/download/risc_6584/proceedings-CICM2022-informal.pd][Setting up set-theoretical foundations in Naproche]]. ~ Marcel Schütz, Adrian De Lon, Peter Koepke.f#page=58 #ITP #Naproche #IsabelleHOL #Math
+ [[https://www3.risc.jku.at/publications/download/risc_6584/proceedings-CICM2022-informal.pd][A parallel corpus for natural language machine translation to Isabelle]]. ~ Anthony Bordg, Yiannos Stathopoulos, Lawrence Paulson.f#page=7 #ITP #IsabelleHOL #Math #Automating_formalisation
+ [[https://mmhaskell.com/blog/2022/9/5/dijkstra-comparison-looking-at-the-library-function][Dijkstra comparison: Looking at the library function]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://www.johndcook.com/blog/2022/09/05/literate-programming/][Literate programming to reduce errors]].~ John D. Cook (@JohnDCook). #Emacs #OrgMode #Programming
+ [[https://irreal.org/blog/?p=10784][Emacs shortcuts]]. #Emacs
+ [[https://github.com/VernonGrant/emacs-keyboard-shortcuts][Emacs keyboard shortcuts]]. ~ Vernon Grant (@Vernon_GR). #Emacs

*** 05-Sep-22
+ [[https://arxiv.org/abs/2208.13731][Independence of the continuum hypothesis: An intuitive introduction]]. ~ Serafim Batzoglou. #Logic #Math #SetTheory
+ [[https://plato.stanford.edu/entries/settheory-alternative/][Alternative axiomatic set theories]]. ~ M. Randall Holmes. #Logic #Math #SetTheory

*** 04-Sep-22
+ [[https://www.joachim-breitner.de/blog/792-More_recursive_definitions][More recursive definitions]]. ~ Joachim Breitner (@nomeata). #Haskell #FunctionalProgramming
+ [[https://www.cs.us.es/cursos/lm/apuntes-2012.pdf][Lógica matemática]]. ~ Alejandro Fernández Margarit (2012). #Libro #Lógica #Matemática
+ [[https://www.cs.us.es/cursos/tconj-2007/notas-tc10.pdf][Teoría de conjuntos]]. ~ Alejandro Fernández Margarit (2010). #Libro #Lógica #Matemática
+ [[https://www.cs.us.es/cursos/tmo-2007/notas-tm09.pdf][Teoría de modelos]]. ~ Alejandro Fernández Margarit (2009). #Libro #Lógica #Matemática
+ [[https://github.com/jaalonso/Libros_de_Logica/blob/main/README.org][Libros de lógica matemática]]. #Book #Logic #Math

*** 03-Sep-22
+ [[https://arxiv.org/abs/2208.13428v1][Constructive many-one reduction from the halting problem to semi-unification]]. ~ Andrej Dudenhefner. #ITP #Coq
+ [[https://arxiv.org/abs/2208.14260v1][Program equivalence in an untyped, call-by-value lambda calculus with uncurried recursive functions]]. ~ Dániel Horpácsi, Péter Bereczky, Simon Thompson. #ITP #Coq
+ [[https://eprint.iacr.org/2022/1116.pdf][Automatic certified verification of cryptographic programs with CoqCryptoLine]]. ~ Ming-Hsien Tsai et als. #ITP #Coq
+ [[https://link.springer.com/chapter/10.1007/978-3-031-15707-3_33][QMaxSATpb: A certified MaxSAT solver]]. ~ Dieter Vandesande, Wolf De Wulf, Bart Bogaerts. #SAT_Solver
+ [[https://youtu.be/H1vbUKMKvnM][Intro to the Haskell course]]. ~ Robertino Martínez (@_roberm_). #Haskell #FunctionalProgramming
+ [[https://github.com/input-output-hk/haskell-course][Haskell course]]. ~ Robertino Martínez (@_roberm_). #Haskell #FunctionalProgramming
+ [[https://youtu.be/pkU8eiNZipQ][Haskell course: Lesson 1: Intro to Haskell and tools]]. ~ Robertino Martínez (@_roberm_). #Haskell #FunctionalProgramming

*** 02-Sep-22
+ [[http://philsci-archive.pitt.edu/21118/][Formal verification, scientific code, and the epistemological heterogeneity of computational science]]. ~ Cyrille Imbert, Vincent Ardourel. #FormalVerification
+ [[https://mmhaskell.com/blog/2022/9/1/dijkstra-in-a-2d-grid][Dijkstra in a 2D grid]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://markm208.github.io/cljbook/][An animated introduction to Clojure]]. ~ Mark Mahoney. #Clojure #FunctionalProgramming

*** 01-Sep-22
+ [[https://kwarc.info/teaching/CICM21WS/dp1.pdf][Structure in theorem proving: Analyzing and improving the Isabelle Archive of Formal Proofs]]. ~ Fabian Huch. #ITP #IsabelleHOL
+ [[https://fse.studenttheses.ub.rug.nl/28482/1/BSc_Thesis_final.pdf][Formalization of modal logic S5 in the Coq proof assistant]]. ~ Lubor Budaj. #ITP #Coq #Logic
+ [[https://youtu.be/yRVjR9XcuPU][How to make a Haskell program 5x faster with 16 lines of code]]. ~ Alexis King (@lexi_lambda). #Haskell #FunctionalProgramming
+ [[https://youtu.be/ohp2uRM9n0o][Universal and existential quantification in Haskell]]. ~ Stepan Prudnikov. #Haskell #FunctionalProgramming

** Agosto 2022

*** 31-Ago-22
+ [[https://lawrencecpaulson.github.io/2022/08/31/Ackermann-not-PR-I.html][Ackermann's function is not primitive recursive, I]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math
+ [[https://kwarc.info/teaching/CICM21WS/fmm7.pdf][Verified optimization (work in progress)]]. ~ Alexander Bentkamp, Jeremy Avigad. #ITP #LeanProver #Math
+ [[https://kwarc.info/teaching/CICM21WS/fmm8.pdf][Elements of differential geometry in Lean (A report for mathematicians)]]. ~ Anthony Bordg, Nicolò Cavalleri. #ITP #LeanProver #Math
+ [[https://sympa.inria.fr/sympa/arc/coq-club/2022-08/msg00038.html][New release of Software Foundations]]. #ITP #Coq
+ [[https://kwarc.info/teaching/CICM21WS/fmm6.pdf][Formalization of prime representing polynomial in Mizar]]. ~ Karol Pąk. #ITP #Mizar #Math
+ [[https://kwarc.info/teaching/CICM21WS/natfom3.pdf][Formal mathematics for the masses]]. ~ William M. Farmer. #ITP #Math
+ [[https://serokell.io/blog/haskell-in-production-mercury][Haskell in production: Mercury]]. #Haskell #FunctionalProgramming
+ [[https://notxor.nueva-actitud.org/2022/08/31/programacion-literaria-y-la-configuracion-de-emacs.html][Programación literaria y la configuración de Emacs]]. ~ Notxor. #Emacs

*** 30-Ago-22
+ [[https://kwarc.info/teaching/CICM21WS/fmm5.pdf][Formalizing Fibonacci squares]]. ~ Muhammad Harun Ali Khan1. #ITP #LeanProver #Math
+ [[https://kwarc.info/teaching/CICM21WS/fmm1.pdf][Computing the border array in Isabelle/HOL]]. ~ Štěpán Holub. #ITP #IsabelleHOL
+ [[https://kwarc.info/teaching/CICM21WS/fmm2.pdf][Producing symmetrical facts for lists induced by the list reversal mapping in Isabelle/HOL]]. ~ Martin Raška1, Štěpán Starosta. #ITP #IsabelleHOL
+ [[https://kwarc.info/teaching/CICM21WS/fmm4.pdf][Formalization of gambler’s ruin problem in Isabelle/HOL]]. ~ Zibo Yang. #ITP #IsabelleHOL #Math
+ [[https://mmhaskell.com/blog/2022/8/29/dijkstra-with-type-families][Dijkstra with type families]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 29-Ago-22
+ [[https://github.com/TikhonJelvis/Simple-Prolog/blob/master/src/Prolog/Interpreter.hs][A simple Prolog interpreter]]. ~ Tikhon Jelvis (@tikhonjelvis). #Haskell #FunctionalProgramming #Prolog

*** 28-Ago-22
+ [[https://www.haskellforall.com/2022/08/incrementally-package-haskell-program.html][Incrementally package a Haskell program using Nix]]. ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming #Nix

*** 27-Ago-22
+ [[https://hal.archives-ouvertes.fr/hal-03756335/document][A Coq library for mechanised first-order logic]]. ~ Dominik Kirst et als. #ITP #Coq #Logic
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16914/pdf/LIPIcs-COSIT-2022-29.pdf][Representing computational relations in knowledge graphs using functional languages]]. ~ Yanmin Qi et als. #Haskell #FunctionalProgramming
+ [[https://dfpedia.com/en/Haskell][Haskell: Functional programming language]]. #Haskell #FunctionalProgramming
+ [[https://stevelosh.com/blog/2022/08/depending-in-common-lisp/][Depending in Common Lisp]]. ~ Steve Losh (@stevelosh). #CommonLisp
+ [[https://dfpedia.com/en/Prolog][Prolog: Programming language that uses first order logic]]. #Prolog #LogicProgramming
+ [[https://algoritmo.buzzsprout.com/758831/10621931-jose-cifuentes-educacion-e-informatica-e-85][Educación e informática]] (Entrevista a José Cifuentes por Camilo Chacón Sartori (@camilo_chacon_s)). #Podcast #Matemáticas #Informática

*** 26-Ago-22
+ [[https://obsidian.systems/blog/haskell-lazy-language-put-to-work][Haskell: How a lazy language was put to work]]. ~ Obsidian Systems (@obsidian_llc). #Haskell #FunctionalProgramming
+ [[https://cs-syd.eu/posts/2022-08-22-how-to-deal-with-money-in-software][How to deal with money in software]]. ~ Tom Sydney Kerckhove (@kerckhove_ts). #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2022/8/25/generalizing-dijkstras-algorithm][Generalizing Dijkstra's algorithm]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://stackabuse.com/big-o-notation-and-algorithm-analysis-with-python-examples/][Big O notation and algorithm analysis with Python examples]]. ~ Usman Malik (@usman_malikk). #Algorithms #Python

*** 23-Ago-22
+ [[https://www.isa-afp.org/entries/Nano_JSON.html][Nano JSON: Working with JSON formatted data in Isabelle/HOL and Isabelle/ML]]. ~ Achim D. Brucker. #ITP #IsabelleHOL
+ [[https://aip.scitation.org/doi/abs/10.1063/5.0093175][The effect of the theorem prover Isabelle]]. ~ Fumiya Iwama, Tadashi Takahashi. #ITP #IsabelleHOL
+ [[https://escholarship.org/content/qt9cd41151/qt9cd41151.pdf][Ensuring correctness of modern software systems by example]]. ~ Aishwarya Sivaraman. #PhDThesis #ITP #Coq
+ [[https://scholarship.tricolib.brynmawr.edu/bitstream/handle/10066/24499/2022AronsonS.pdf?sequence=1&isAllowed=y][Understanding functional and equational programming techniques on graph-based problems]]. ~ Sam Aronson. #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2022/8/22/dijkstras-algorithm-in-haskell][Dijkstra's algorithm in Haskell]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 22-Ago-22
+ [[https://blog.jle.im/entry/lenses-products-prisms-sums.html][Lenses embody products, prisms embody sums]]. ~ Justin Le (@mstk). #Haskell #FunctionalProgramming
+ [[https://xenaproject.wordpress.com/2018/03/24/no-confusion-over-no_confusion/][No confusion over no_confusion]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver
+ [[https://www.andrew.cmu.edu/user/avigad/mathematical_logic_and_computation_toc.pdf][Mathematical logic and computation]]. ~ Jeremy Avigad. #Logic #Math #CompSci

*** 20-Ago-22
+ [[https://www.diva-portal.org/smash/get/diva2:1686693/FULLTEXT01.pdf][Formalisation of polynomials in cubical type theory using Cubical Agda]]. ~ Carl Åkerman Rydbeck. #ITP #Agda
+ [[https://medium.com/@janburse_2989/learn-prolog-now-as-a-dogelog-notebook-ab28957f66be][Learn Prolog Now! as a Dogelog Notebook]]. #Prolog
+ [[https://github.com/GavinMendelGleason/OWL/][OWL in Agda]]. ~ Gavin Mendel-Gleason. #ITP #Agda #OWL

*** 19-Ago-22
+ [[https://blog.ch3m4.org/2021/10/17/dataclasses-en-python/][Dataclasses en Python]]. ~ Chema Cortés (@chemacortes). #Python
+ [[https://blog.ch3m4.org/2021/02/08/evaluacion-perezosa-en-python-parte-1/][Evaluación perezosa en Python]]. ~ Chema Cortés (@chemacortes). #Python

*** 18-Ago-22
+ [[https://arxiv.org/abs/2208.08070][Proof engineering with predicate transformer semantics]]. ~ Christa Jenkins, Mark Moir, Harold Carr. #ITP #Agda
+ [[https://arxiv.org/abs/2208.07775][SAT-inspired higher-order eliminations]]. ~ Jasmin Blanchette, Petar Vukmirović. #SATSolvers #ITP #ATP

*** 17-Ago-22
+ [[https://xenaproject.wordpress.com/2022/08/16/the-future-of-interactive-theorem-proving/][The future of interactive theorem proving? ~ Zhangir Azerbayev]]. #ITP #LeanProver #Math
+ [[https://homes.cs.aau.dk/~srba/files/SSST:FMCAD:22.pdf][Differential testing of pushdown reachability with a formally verified oracle]]. ~ A. Schlichtkrull, M.K. Schou, J. Srba, D. Traytel. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Commuting_Hermitian.html][Simultaneous diagonalization of pairwise commuting hermitian matrices (in Isabelle/HOL)]]. ~ Mnacho Echenim. #ITP #IsabelleHOL #Math

*** 16-Ago-22
+ [[https://arxiv.org/abs/2208.06879][Who finds the short proof? An exploration of variants of Boolos' curious Inference using higher-order automated theorem provers]]. ~ Christoph Benzmüller, David Fuenmayor, Alexander Steen, Geoff Sutcliffe. #ITP #HOL
+ [[https://www.uv.es/coslloen/Arxiu/Fitxers/TFG/2022Momblona.pdf][Type theory and theorem proving in Lean]]. ~ Raúl Momblona Rodríguez. #ITP #LeanProver #TypeTheory #LambdaCalculus
+ [[https://www.isa-afp.org/entries/Involutions2Squares.html][From the BOOK: Two squares via involutions (in Isabelle/HOL)]]. ~ Maksym Bortin. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2207.05617][Mechanizing refinement types (extended)]]. ~ Michael Borkowski, Niki Vazou, Ranjit Jhala. #ITP #Haskell #FunctionalProgramming #LiquidHaskell
+ [[https://arxiv.org/abs/2208.06823][Simply logical (Intelligent reasoning by example (Fully interactive online edition))]]. ~ Peter Flach, Kacper Sokol. #AI #Prolog
+ [[https://www.btbytes.com/talks/2018-05-indypy-proptesting/presentation.pdf][Property based testing]]. ~ Pradeep Gowda (@btbytes). #Python #Hypothesis

*** 15-Ago-22
+ [[https://files.sketis.net/Isabelle_Workshop_2022/Isabelle_2022_paper_1.pdf][Automating kantian ethics in Isabelle: A case study]]. ~ Lavanya Singh. #ITP #IsabelleHOL
+ [[https://media.suub.uni-bremen.de/bitstream/elib/6068/3/Dissertation_Robert_Sachtleben.pdf][An approach for the verification and synthesis of complete test generation algorithms for finite state machines]]. ~ Robert Sachtleben. #PhDThesis #ITP #IsabelleHOL
+ [[https://www.johndcook.com/blog/2022/08/15/org-table-python/][Keeping data and code together with org-mode]]. ~ John D. Cook (@JohnDCook). #Emacs #OrgMode #Python
+ [[http://save.seecs.nust.edu.pk/wp-content/uploads/2022/07/CICM_2022.pdf][On the formalization of the heat conduction problem in HOL]]. ~ Elif Deniz, Adnan Rashid, Osman Hasan, Sofiène Tahar. #ITP #HOL_Light
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16737/pdf/LIPIcs-ITP-2022-28.pdf][Deeper shallow embeddings]]. ~ Jacob Prinz, G. A. Kavvos, Leonidas Lampropoulos. #Agda #FunctionalProgramming
+ [[https://www.pnas.org/doi/full/10.1073/pnas.2123433119 ][A neural network solves, explains, and generates university math problems by program synthesis and few-shot learning at human level]]. ~ Iddo Drori et als. #MachineLearning #Math

*** 14-Ago-22
+ [[https://files.sketis.net/Isabelle_Workshop_2022/Isabelle_2022_paper_13.pdf][On termination for hybrid tableaux]]. ~ Asta Halkjær From. #ITP #IsabelleHOL #Logic
+ [[https://files.sketis.net/Isabelle_Workshop_2022/Isabelle_2022_paper_9.pdf][Lessons of teaching formal methods with Isabelle]]. ~ Frederik Krogsdal Jacobsen, Jørgen Villadsen. #ITP #IsabelleHOL #Teaching
+ [[https://files.sketis.net/Isabelle_Workshop_2022/Isabelle_2022_paper_12.pdf][Gale-Shapley verified]]. ~ Tobias Nipkow. #ITP #IsabelleHOL
+ [[https://files.sketis.net/Isabelle_Workshop_2022/Isabelle_2022_paper_5.pdf][From P != NP to monotone circuits of super-polynomial size]]. ~ René Thiemann. #ITP #IsabelleHOL

*** 13-Ago-22
+ [[https://files.sketis.net/Isabelle_Workshop_2022/Isabelle_2022_paper_11.pdf][Transfer and reversal of lists]]. ~ Martin Raška, Štěpán Holub. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Solidity.html][Isabelle/Solidity: A deep embedding of Solidity in Isabelle/HOL]]. ~ Diego Marmsoler, Achim D. Brucker. #ITP #IsabelleHOL
+ [[https://files.sketis.net/Isabelle_Workshop_2022/Isabelle_2022_paper_6.pdf][Oracle integration of floating-point solvers with Isabelle]]. ~ Olle Torstensson, Tjark Weber. #ITP #IsabelleHOL #SMT
+ [[https://files.sketis.net/Isabelle_Workshop_2022/Isabelle_2022_paper_2.pdf][A verified implementation of B-trees in Isabelle/HOL]]. ~ Niels Mündler, Tobias Nipkow. #ITP #IsabelleHOL
+ [[https://sketis.net/isabelle/isabelle-workshop-2022][On axiomatic systems for classical propositional logic]]. ~ Agnes Moesgård Eschen, Jørgen Villadsen. #ITP #IsabelleHOL #Logic
+ [[https://readerunner.wordpress.com/2021/09/13/diagrams-for-penrose-tiles/][Diagrams for Penrose tiles]]. ~ Chris Reade. #Haskell #FunctionalProgramming #Math
+ [[https://readerunner.wordpress.com/2022/01/06/graphs-kites-and-darts/][Graphs, kites and darts]]. ~ Chris Reade. #Haskell #FunctionalProgramming #Math

*** 12-Ago-22
+ [[https://files.sketis.net/Isabelle_Workshop_2022/Isabelle_2022_paper_10.pdf][Auxiliary tools for combinatorics on words]]. ~ Štěpán Holub, Štěpán Starosta, Martin Raška. #ITP #IsabelleHOL
+ [[https://github.com/leanprover-community/mathlib/blob/af8760ccc4c03bbdff0b140e6f7bd047b0eecbeb/archive/100-theorems-list/54_konigsberg.lean][The Königsberg bridges problem (in Lean)]]. ~ Kyle Miller. #ITP #LeanProver #Math
+ [[https://jesper.sikanda.be/files/reasonable-agda-is-correct-haskell.pdf][Reasonable Agda is correct Haskell: Writing verified Haskell using agda2hs]]. ~ Jesper Cockx et als. #ITP #Agda #Haskell #FunctionalProgramming
+ [[https://dschrempf.github.io/coding/2022-06-28-sample-from-a-posterior-using-markov-chain-monte-carlo-algorithms-and-haskell/][Parameter inference using Markov chain Monte Carlo algorithms and Haskell]]. ~ Dominik Schrempf (@fazky). #Haskell #FunctionalProgramming
+ [[https://sonatsuer.github.io/optics-and-representable-functors.html][Optics and representable functors]]. ~ Sonat Süer. #Haskell #FunctionalProgramming
+ [[https://sonatsuer.github.io/schroder-bernstein.html][Schröder-Bernstein via Eilenberg-Mazur in Haskell]]. ~ Sonat Süer. #Haskell #FunctionalProgramming #Math #SetTheory

*** 11-Ago-22
+ [[https://www.isa-afp.org/entries/FSM_Tests.html][Verified complete test strategies for finite state machines]]. ~ Robert Sachtleben. #ITP #IsabelleHOL
+ [[https://leanprover-community.github.io/blog/posts/month-in-mathlib-jul-2022/][This month in mathlib (Jul 2022)]]. #ITP #LeanProver #MathLib #Math
+ [[https://thma.github.io/posts/2022-08-07-dependency-validation-of-haskell-applications.html][Dependency validation of a Haskell application]]. ~ Thomas Mahler. #Haskell #FunctionalProgramming
+ [[https://topos.site/blog/2022/08/computation-and-category-theory/][Computation and category theory]]. ~ Joshua Meyers. #CompSci #CategoryTheory

*** 10-Ago-22
+ [[https://youtu.be/prYaTrZUces][Automated mathematical proofs]]. ~ Thorsten Altenkirch. #ITP #LeanProver #Math
+ [[https://lawrencecpaulson.github.io//2022/08/10/Nonstandard_Analysis.html][The formalisation of nonstandard analysis]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math

*** 09-Ago-22
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16714/pdf/LIPIcs-ITP-2022-5.pdf][A complete, mechanically-verified proof of the Banach-Tarski theorem in ACL2(R)]]. ~ Jagadish Bapanapally, Ruben Gamboa. #ITP #ACL2 #Math
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16722/pdf/LIPIcs-ITP-2022-13.pdf][Verifying a sequent calculus prover for first-order logic with functions in Isabelle/HOL]]. ~ Asta Halkjær From, Frederik Krogsdal Jacobsen. #ITP #IsabelleHOL #Logic #Math
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16716/pdf/LIPIcs-ITP-2022-7.pdf][The Zoo of lambda-calculus reduction strategies, and Coq]]. ~ Małgorzata Biernacka, Witold Charatonik, Tomasz Drab. #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16718/pdf/LIPIcs-ITP-2022-9.pdf][Formalising Szemerédi’s regularity lemma in Lean]]. ~ Yaël Dillies, Bhavik Mehta. #ITP #LeanProver #Math
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16732/pdf/LIPIcs-ITP-2022-23.pdf][Formalizing the divergence theorem and the Cauchy integral formula in Lean]]. ~ Yury Kudryashov. #ITP #LeanProver #Math
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16777/pdf/LIPIcs-TYPES-2021-8.pdf][A succinct formalization of the completeness of first-order logic]]. ~ Asta Halkjær From. #ITP #LeanProver #Logic #Math
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16724/pdf/LIPIcs-ITP-2022-15.pdf][A verified cyclicity checker (For theories with overloaded constants)]]. ~ Arve Gengelbach, Johannes Åman Pohjola. #ITP #HOL4
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16717/pdf/LIPIcs-ITP-2022-8.pdf][Seventeen provers under the hammer]]. ~ Martin Desharnais, Petar Vukmirović, Jasmin Blanchette, Makarius Wenzel. #ITP #IsabelleHOL
+ [[https://www.ps.uni-saarland.de/extras/iel-ext/paper.pdf][Constructive and mechanised meta-theory of IEL and similar modal logics]]. ~ Christian Hagemeier, Dominik Kirst. #ITP #Coq #Logic #Math
+ [[https://michel.steuwer.info/files/publications/2022/Haskell-2022.pdf][Investigating magic numbers: Improving the inlining heuristic in the Glasgow Haskell Compiler]]. ~  Celeste Hollenbeck,  Michael O'Boyle, Michel Steuwer. #Haskell #FunctionalProgramming
+ [[https://easychair.org/smart-program/FLoC2022/IJCAR-2022-08-08.html#talk:200548][The pleasures of proof]]. ~ Natarajan Shankar #Logic #Math #ITP
+ [[https://kodimensional.dev/space-leak][Avoiding space leaks at all costs]]. ~ Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming

*** 08-Ago-22
+ [[https://www.glc.us.es/~jalonso/exercitium/media-aritmetica-de-tres-numeros/][Functional programming in Lean: 2. Hello, World!]] ~ David Thrane Christiansen. #ITP #LeanProver #FunctionalProgramming
+ [[https://leanprover-community.github.io/blog/posts/classification-of-one-dimensional-isocrystals/][Classification of one-dimensional isocrystals]]. ~ Robert Y. Lewis, Heather Macbeth. #ITP #LeanProver

*** 07-Ago-22
+ [[https://www3.risc.jku.at/publications/download/risc_6530/paper.pdf][Learning to reason assisted by automated reasoning]]. ~ Wolfgang Windsteiger. #ITP #Theorema #Teaching #Logic
+ [[https://github.com/IPDSnelting/tba-2022][Slides and exercises of the Lean 4 course "Theorem prover lab: applications in programming languages" at the KIT, Summer 2022]]. ~ Jakob von Raumer, Sebastian Ullrich. #ITP #LeanProver

*** 06-Ago-22
+ [[https://www.researchgate.net/publication/362295495_A_Formalization_of_SQL_with_Nulls][A formalization of SQL with nulls]]. ~ Wilmer Ricciotti, James Cheney. #ITP #Coq
+ [[https://github.com/wricciot/nullSQL][Mechanising the metatheory of SQL with nulls]]. ~ Wilmer Ricciotti, James Cheney. #ITP #Coq
+ [[http://cl-informatik.uibk.ac.at/iwc/iwc2022.pd][Development closed critical pairs: Towards a formalized proof]]. ~ Christina Kohl, Aart Middeldorp.f#page=6 #ITP #IsabelleHOL
+ [[http://cl-informatik.uibk.ac.at/iwc/iwc2022.pd][Formalized signature extension results for equivalence]]. ~ Alexander Lochmann, Fabian Mitterwallner, Aart Middeldorp.f#page=46 #ITP #IsabelleHOL
+ [[http://cl-informatik.uibk.ac.at/iwc/iwc2022.pd][Proving confluence with CONFident (short version)]]. ~ Raúl Gutiérrez, Miguel Vítores, Salvador Lucas.f#page=52 #Haskell #FunctionalProgramming
+ [[http://zenon.dsic.upv.es/confident/][CONFident: Confluence checker for conditional rewrite systems]]. ~ Salvador Lucas, Miguel Vítores, Raúl Gutiérrez #Haskell #FunctionalProgramming
+ [[https://infoscience.epfl.ch/record/295386][Scaling language features for program verification]]. ~ Georg Stefan Schmid. #PhDThesis #Scala #FunctionalProgramming #SMT
+ [[http://cl-informatik.uibk.ac.at/iwc/iwc2022.pd][Checking confluence of rewrite rules in Haskell]]. ~ Makoto Hamana, Faustin Yao Date.f#page=41 #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2207.14502][Language models can teach themselves to program better]]. ~ Patrick Haluptzok, Matthew Bowers, Adam Tauman Kalai. #MachineLearning #Python #Programming

*** 05-Ago-22
+ [[https://arxiv.org/abs/2207.04779][Mathematical proof between generations]]. ~ Jonas Bayer, Christoph Benzmüller, Kevin Buzzard, Marco David, Leslie Lamport, Yuri Matiyasevich, Lawrence Paulson, Dierk Schleicher, Benedikt Stock, Efim Zelmanov. #ITP #ATP #Math
+ [[https://www.haskell.org/ghc/blog/20220805-make-to-hadrian.html][Migrating from Make to Hadrian (for packagers)]]. ~ Sam Derbyshire. #Haskell #FunctionalProgramming
+ [[https://www.pythonforbeginners.com/basics/remove-a-character-from-a-string-in-python][Python for beginners: Remove a character from a string in Python]]. ~ Aditya Raj. #Python #Programming

*** 04-Ago-22
+ [[https://drops.dagstuhl.de/opus/frontdoor.php?source_opus=16720][Formalising Fisher’s inequality: Formal linear algebraic proof techniques in combinatorics]]. ~ Chelsea Edmonds, Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://leapyear.io/resources/blog-posts/how-to-haskell-sharing-data-types-is-tight-coupling/][How to Haskell: Sharing data types is tight coupling]]. ~ Brandon Chinn. #Haskell #FunctionalProgramming
+ [[https://www.jjinux.com/2022/08/python-my-favorite-python-tricks-for.html][Python: My favorite Python tricks for LeetCode questions]]. ~ jjinux. #Python #LeetCode
+ [[https://learnpython.com/blog/python-match-case-statement/][How to use a match case statement in Python 3]].10. ~ Luke Hande. #Python #Programming
+ [[https://www.pythonforbeginners.com/basics/count-occurrences-of-each-character-in-string-python][Count occurrences of each character in a string in Python]]. #Python #Programming
+ [[https://mathspp.com/blog/how-to-create-a-python-package-in-2022][How to create a Python package in 2022]]. ~ Rodrigo Girão Serrão (@mathsppblog). #Python #Programming
+ [[https://www.johndcook.com/blog/2022/08/03/inline-org-babel/][Inline computed content in org-mode]]. ~ John D. Cook (@JohnDCook). #Emacs #OrgMode
+ [[https://abakcus.com/70-best-math-books-to-learn-writing-mathematical-proofs/][70 best math books to learn writing mathematical proofs]]. #Math

*** 03-Ago-22
+ [[https://lawrencecpaulson.github.io/2022/08/03/Small-Challenges-I.html][A few small formalisation challenges]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #Math
+ [[https://link.springer.com/epdf/10.1007/11541868_16?sharing_token=-VgLLU4gNyriZpBc_TVqQ_e4RwlQNchNByi7wbcMAY6Dg1JCXsUYa51AsLf88ckSFulrWdO8p1BhOAmyG9EqNt_5XxuJM4RoKJrixemCDfy0HOgwdxhkPjhM46EVsSJ9CIcsAGGOSs8QiO1Tej13bg==][Essential incompleteness of arithmetic veriﬁed by Coq]]. ~ Russell O’Connor. #ITP #Cog #Logic #Math
+ [[https://galois.com/blog/2022/07/public-tech-talk-secure-system-composition-and-type-checking-using-cryptographic-proofs-by-dani-barrack/][Secure system composition and type checking using cryptographic proofs]]. ~ Dani Barrack.
+ [[https://youtu.be/h8LTEFNLZ6M][Scratch? Python? C? Kernighan on languages for kids coding]]. #Programming #Teaching

*** 01-Ago-22
+ [[https://github.com/leanprover-community/mathlib/blob/7b2ae37ebfdf71b6c8cd9dc0f5444696893e3daf/src/number_theory/bertrand.lean][Bertrand's postulate (in Lean)]]. ~ Patrick Stevens, Bolton Bailey. #ITP #LeanProver #Math

** Julio 2022

*** 31-Jul-22
+ [[https://youtu.be/cvTIJpllXik][Dependent type programming in Coq theorem prover]]. ~ Mukesh Tiwari. #ITP #Coq
+ [[https://richardzach.org/2022/07/an-epimorphism-between-fine-and-fergusons-matrices-for-angells-ac/][An epimorphism between Fine and Ferguson’s matrices for Angell’s AC]]. ~ Richard Zach. #Logic

*** 30-Jul-22
+ [[https://xenaproject.wordpress.com/2022/07/29/teaching-formalisation-to-mathematics-undergraduates/][Teaching formalisation to mathematics undergraduates]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://leanprover-community.github.io/blog/posts/mathlib-changelog/][Introducing mathlib changelog]]. ~ David Chanin. #ITP #LeanProver #MathLib #Math
+ [[https://realpython.com/python-type-checking/][Python type checking (Guide)]]. ~ Geir Arne Hjelle. #Python #Programming

*** 29-Jul-22
+ [[http://philsci-archive.pitt.edu/20979/][What we talk about when we talk about mathematics]]. ~ Jeremy Avigad. #Math #Philosophy
+ [[https://arxiv.org/abs/2103.03930][Logical foundations: Personal perspective]]. ~ Yuri Gurevich. #Logic
+ [[https://books.google.es/books?id=bZVkEAAAQBAJ&lpg=PP1&hl=es&pg=PP][Mathematical logic (Exercises and solutions)]]. ~ László Csirmaz, Zalán Gyenis.1#v=onepage&q&f=false #LogicMath
+ [[https://nachivpn.me/nfmc.pdf][Normalization for Fitch-style modal calculi (Draft)]]. ~ Nachiappan Valliappan, Fabian Ruch, Carlos Tomé Cortiñas. #ITP #Agda #Logic
+ [[https://arxiv.org/abs/2207.11350][CoqQ: Foundational verification of quantum programs]]. ~ Li Zhou, Gilles Barthe, Pierre-Yves Strub, Junyi Liu, Mingsheng Ying. #ITP #Coq #QuantumProgramming
+ [[https://ar5iv.labs.arxiv.org/html/1807.08588][Automating verification of state machines with reactive designs and Isabelle/UTP]]. ~ Simon Foster, James Baxter, Ana Cavalcanti, Alvaro Miyazawa, Jim Woodcock. #ITP #IsabelleHOL
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?TFPIE2021.6][Engaging, large-scale functional programming education in physical and virtual space]]. ~ Kevin Kappelmann, Jonas Rädle and Lukas Stevens. #Haskell #FunctionalProgramming #Teaching
+ [[https://www21.in.tum.de/teaching/fpv/WS20/assets/slides.pdf][Functional programming and verification]]. ~ Tobias Nipkow. #Haskel #FunctionalProgramming
+ [[https://vadosware.io/post/how-and-why-haskell-is-better/][How and why Haskell is better (than your favorite $LANGUAGE)]]. ~ @vadosware #Haskell #FunctionalProgramming
+ [[https://decomposition.al/blog/2022/07/20/my-flops-2022-keynote-talk-adventures-in-building-reliable-distributed-systems-with-liquid-haskell/][Adventures in building reliable distributed systems with Liquid Haskell]]. ~ Lindsey Kuper (@lindsey). #Haskell #FunctionalProgramming #LiquidHaskell
+ [[https://blog.galowicz.de/2022/03/20/unique-heterogeneous-typelists/][Filtering unique items from heterogeneous lists at compile time]]. ~ Jacek Galowicz (@jgalowicz). #Haskell #FunctionalProgramming
+ [[https://sol.sbc.org.br/index.php/wei/article/download/20850/20676][NADIA (Natural DeductIon proof Assistant)]]. ~ Davi Romero de Vasconcelos, Robson Teixeira Paula, Maria Viviane Menezes. #Logic #Teaching
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?TFPIE2021.3][Teaching programming to novices using the codeBoot online environment]]. ~ Marc Feeley and Olivier Melançon. #Programming #Teaching
+ [[https://artemis-platform.readthedocs.io/en/latest/][Artemis: Interactive learning with individual feedback]]. #Programming #Teaching

*** 28-Jul-22
+ [[https://github.com/leanprover-community/mathlib/blob/696542631b3fb81ebe0340e3b63263fd8879e44f/src/computability/ackermann.lean][The Ackermann function isn't primitive recursive function (in Lean)]]. ~ Violeta Hernández Palacios. #ITP #LeanProver
+ [[https://youtu.be/C6vPGBD37BQ][Ordinals (in Lean)]]. ~ Violeta Hernández Palacios. #ITP #LeanProver #Math #SetTheory
+ [[https://www.micahcantor.com/blog/monad-confusion/][Monad confusion and the blurry line between data and computation]]. ~ Micah Cantor (@micah_cantor). #Haskell #FunctionalProgramming
+ [[https://yairchu.github.io/posts/python-print-in-haskell][Python's print in Haskell]]. ~ Yair Chuchem (@yairchu) #Haskell #FunctionalProgramming
+ [[https://youtu.be/AIYGy0Rguq8][Most common mistakes in Haskell]]. ~ Constantine Ter-Matevosian. #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2022-07-28-timestats/][Profiling non-CPU time in Haskell]]. ~ Facundo Domínguez. #Haskell #FunctionalProgramming
+ [[https://www.jjj.de/fxt/fxtbook.pdf][Matters computational (Ideas, algorithms, source code)]]. ~ Jörg Arndt. #Algorithms #Programming

*** 27-Jul-22
+ [[https://arxiv.org/abs/2207.12699][Teaching functional programmers logic and metatheory]]. ~ Frederik Krogsdal Jacobsen, Jørgen Villadsen. #ITP #IsabelleHOL #LogicMath #Teaching

*** 26-Jul-22
+ [[https://arxiv.org/abs/2207.12039][Isabelle/HOL/GST: A formal proof environment for generalized set theories]]. ~ Ciarán Dunne, J. B. Wells. #ITP #IsabelleHOL #Math
+ [[https://math.hawaii.edu/~bjoern/NID_JLC.pdf][Interpolating between the Jaccard distance and an analogue of the normalized information distance]]. ~ Bjørn Kjos-Hanssen. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2207.09854][Auto-active verification of graph algorithms, written in OCaml]]. ~ Daniel Castanho, Mário Pereira. #OCaml #FunctionalProgramming

*** 25-Jul-22
+ [[https://karthinks.com/software/latex-input-for-impatient-scholars][LaTeX input for impatient scholars]]. ~ Karthik Chikmagalur. #LaTeX #Emacs #Math

*** 24-Jul-22
+ [[https://www.lightbluetouchpaper.org/2022/07/22/formal-cheri/][Formal CHERI: rigorous engineering and design-time proof of full-scale architecture security properties]]. ~ Peter Sewell (@peter_sewell_). #ITP #IsabelleHOL
+ [[https://damast93.github.io/blog/jekyll/update/2021/01/31/invisible-strength.html][Invisible strength: From monads to alpha-conversion]]. ~ damast93. #Haskell #FunctionalProgramming
+ [[https://github.com/damast93/ordinals][A quick calculator for ordinal numbers in Cantor Normal Form]]. ~ damast93. #Haskell #FunctionalProgramming #Math #SetTheory
+ [[https://youtu.be/RLb4VvvX9zY][The Mathematics of Artificial Intelligence]]. ~ Gitta Kutyniok (@GittaKutyniok). #AI #Math

*** 23-Jul-22
+ [[https://malv.in/2022/AiML2022-basic-modal-interpolation-lean.pdf][A verified proof of Craig interpolation for basic modal logic via tableaux in Lean]]. ~ Malvin Gattinger. #ITP #LeanProver #Logic
+ [[https://arxiv.org/abs/2012.09388][Formalization of PAL⋅S5 in proof assistant]]. ~ Jiatu Li. #ITP #LeanProver #Logic
+ [[https://ljt12138.github.io/files/logic/logic.pdf][A quick introduction to mathematical logic]]. ~ Jiatu Li. #LogicMath
+ [[https://arxiv.org/abs/1910.01697][A Henkin-style completeness proof for the modal logic S5]]. ~ Bruno Bentzen. #ITP #LeanProver #LogicMath
+ [[https://johnnzhou.github.io/files/Interactive_Theorem_Provers_Final_Report.pdf][How do people learn to use interactive theorem provers?]] ~ Audrey Seo, Yadi Wang, Zhennan Zhou. #ITP #Coq #Teaching
+ [[https://sol.sbc.org.br/index.php/wbl/article/download/20704/20531][Coq formalization of a tableau for the classical-intuitionistic propositional fragment of ecumenical logic]]. ~ Renato R. Leme, Giorgio Venturi, Bruno Lopes. #ITP #Coq #Logic
+ [[https://hal.archives-ouvertes.fr/hal-03722203/document][Formally verified 32- and 64-bit integer division using double-precision floating-point arithmetic]]. ~ David Monniaux, Alice Pain. #ITP #Coq
+ [[http://essay.utwente.nl/92054/1/Christiano_BA_EEMCS.pdf][Formalization of tangle and tangle learning algorithm]]. ~ Bonifacius Geraldo Christiano. #ITP #IsabelleHOL
+ [[https://link.springer.com/article/10.1007/s10817-022-09637-z][Six decades of automated reasoning: Papers in memory of Larry Wos]]. ~ Maria Paola Bonacina. #ATP #AutomatedReasoning
+ [[https://medium.com/axiomzenteam/functor-applicative-and-why-8a08f1048d3d][Functor, Applicative, and why]]. ~ Leo Zhang. #Haskell #FunctionalProgramming
+ [[https://gist.github.com/lsmor/bb632565cd96be9da589b6e91f80f9ba][Set up a Haskell development environment in three steps]]. ~ Lsmor. #Haskell #FunctionalProgramming
+ [[https://github.com/jltabara/Julia-y-las-Matematicas][Apuntes de aplicación del lenguaje Julia a las matemáticas]]. ~ Jose Luis Tabara Carbajo. #JuliaLang #Matemáticas

*** 22-Jul-22
+ [[https://archive.org/details/conventi-soppressi-c.-i.-2616 via @internetarchive][Liber Abaci]]. ~ Leonardo Fibonacci (1202). #Math
+ [[https://archive.org/details/laurence-sigler-fibonaccis-liber-abaci-2003 via @internetarchive][Fibonacci's Liber Abaci]]. ~ Laurence Sigler. #Math
+ [[https://course.fast.ai/][Course: Practical Deep Learning]]. ~ Jeremy Howard (@jeremyphoward). #DeepLearning
+ [[https://course.fast.ai/Resources/book.html][Deep Learning for coders with Fastai and PyTorch (AI applications without a PhD)]]. ~ Jeremy Howard, Sylvain Gugger. #DeepLearning
+ [[https://arxiv.org/abs/2207.10424][A linter for Isabelle: Implementation and evaluation]]. ~ Yecine Megdiche, Fabian Huch, Lukas Stevens. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2207.10152][Automated kantian ethics: A faithful implementation]]. ~ Lavanya Singh. #ITP #IsabelleHOL
+ [[https://www.morrowm.com/posts/2022-07-19-kinds.html][One of a kind: An introduction to kinds in Haskell]]. ~  MorrowM. #Haskell #FunctionalProgramming
+ [[https://notxor.nueva-actitud.org/2022/07/21/algoritmo-de-cifrado-rsa.html][Algoritmo de cifrado RSA]]. ~ Notxor. #RSA
+ [[https://lucidmanager.org/productivity/ricing-org-mode/][Ricing Org Mode: A beautiful writing environment]]. ~ Peter Prevos (@lucidmanager). #Emacs #OrgMode
+ [[https://www.sagemath.org/es/Introduccion_a_SAGE.pdf][Matemáticas elementales con Sage]]. ~ J.L. Tábara. #Sage #Matemáticas

*** 21-Jul-22
+ [[https://gilkalai.wordpress.com/2022/07/17/icm-2022-kevin-buzzard-the-rise-of-formalism-in-mathematics/][ICM 2022. Kevin Buzzard: The rise of formalism in Mathematics]]. ~ Gil Kalai. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2207.09486][Formalising the Krull topology in Lean]]. ~ Sebastian Monnet. #ITP #LeanProver #Math
+ [[https://link.springer.com/chapter/10.1007/978-981-19-2456-9_21][A formalization of topological spaces in Coq]]. ~ Sheng Yan, Yaoshun Fu, Dakai Guo, and Wensheng Yu. #ITP #Coq #Math
+ [[https://www.math.md/files/csjm/v30-n2/v30-n2-(pp170-186).pdf][Identities and generalized derivatives of quasigroups]]. ~ G. Horosh, N. Malyutina, A. Scerbacova, V. Shcherbacov. #ATP #Prover9 #Math
+ [[https://www.tweag.io/blog/2022-07-21-lh-introspection/][A dialog with Liquid Haskell]]. ~ Facundo Domínguez. #Haskell #FunctionalProgramming
+ [[https://studenttheses.uu.nl/bitstream/handle/20.500.12932/41775/thesis-final.pdf][Investigating the performance of the implementations of embedded languages in Haskell]]. ~ Bart Wijgers. #Haskell #FunctionalProgramming
+ [[http://www.macs.hw.ac.uk/~ek19/vehicle.pdf][Vehicle: A high-level language for embedding logical specifications in neural networks]]. ~ Matthew L. Daggitt, Wen Kokke, Robert Atkey, Luca Arnaboldi, Ekaterina Komendantskaya. #ITP #Agda #NeuralNetwork

*** 20-Jul-22
+ [[https://coq.discourse.group/t/coq-community-survey-2022-results-part-i/173][Coq Community Survey 2022 Results: Part I]].0#coq-community-survey-2022-results-part-i-1 #ITP #Coq
+ [[https://nikivazou.github.io/static/Haskell22/equality.pdf][How to safely use extensionality in Liquid Haskell]]. ~ Niki Vazou (@nikivazou), Michael Greenberg. #Haskell #FunctionalProgramming

*** 19-Jul-22
+ [[http://essay.utwente.nl/91950/1/Huisma_BA_EEMCS.pdf][Recursive island parsing: Monadic lake parser combinators]]. ~ Gerk-Jan Huisma. #Haskell #FunctionalProgramming
+ [[https://ink.library.smu.edu.sg/cgi/viewcontent.cgi?article=8186&context=sis_research#page=75][Towards mechanised proofs in double-pushout graph transformation]]. ~ Robert Söldner, Detlef Plump. #ITP #IsabelleHOL
+ [[https://ps.uni-saarland.de/~mueck/bachelor/thesis.pdf][The arithmetical hierarchy, oracle computability, and Post's theorem in synthetic computability]]. ~ Niklas Mück. #ITP #Coq #Logic #Math
+ [[https://typeset.io/pdf/solving-and-verifying-the-boolean-pythagorean-triples-vv35rinj1q.pdf][Solving and verifying the boolean Pythagorean Triples problem via Cube-and-Conquer]]. ~ Marijn J. H. Heule, Oliver Kullmann, Victor W. Marek. #SATSolvers #Logic #Math
+ [[https://arxiv.org/abs/1909.12582][Towards Coq-verified Esterel semantics and compiling]]. ~ Gérard Berry, Lionel Rieg. #ITP #Coq
+ [[https://iagoleal.com/posts/calculus-symbolic-ode/][The lazy way to solve differential equations]]. ~ Iago Leal de Freitas. #Haskell #FunctionalProgramming #Math
+ [[https://serokell.io/blog/universal-and-existential-quantification][Universal and existential quantification in Haskell]]. ~ Stepan Prudnikov. #Haskell #FunctionalProgramming

*** 18-Jul-22
+ [[https://arxiv.org/abs/2207.07499][Formalising Szemerédi's regularity lemma and Roth's theorem on arithmetic progressions in Isabelle/HOL]]. ~ Chelsea Edmonds, Angeliki Koutsoukou-Argyraki, Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://bit.ly/3OhtGVk][Funciones modulares y ceros de polinomios: una conexión sorprendente]]. ~ Juan Arias de Reyna y Sara Arias de Reyna. #Matemáticas

*** 17-Jul-22
+ [[https://golem.ph.utexas.edu/category/2022/07/conversations.html][Conversations on Mathematics]]. ~ John Baez. #Math
+ [[https://awainverse.github.io/mc2022-Lean/][Lean at MC2022 (Release 0.1)]]. ~ Aaron Anderson, Apurva Nakade, Jalex Stark. #ITP #LeanProver #Math

*** 16-Jul-22
+ [[https://www.ma.imperial.ac.uk/~buzzard/xena/pdfs/lftcm22_schemes.pdf][Towards algebraic geometry (in Lean)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://leanprover-community.github.io/blog/posts/lte-final/][Completion of the Liquid Tensor Experiment]]. ~ Mathlib community. #ITP #LeanProver #Math
+ [[http://moka.labunix.uqam.ca/~villemaire_r/Articles/rvLogTeach22.pdf][Undergraduate Logic teaching in computing: Why, what, how?]] ~ Roger Villemaire. #Logic #CompSci #Teachingy
+ [[https://arxiv.org/abs/1507.03686][Logic modelling]]. ~ Roger Villemaire. #Logic #CompSci #Teaching
+ [[https://arxiv.org/abs/2207.03880][Constrained training of neural networks via theorem proving]]. ~ Mark Chevallier, Matthew Whyte, Jacques D. Fleuriot. #ITP #IsabelleHOL #NeuralNetwork
+ [[http://essay.utwente.nl/91705/1/Bleumink_BA_EEMC.pdf][Verifying the rewrite rules of VerCors using interactive theorem provers]]. ~ Connor Bleumink. #ITP #Coq
+ [[https://arxiv.org/abs/2207.05610][Abstraction Logic: A new foundation for (computer) mathematics]]. ~ Steven Obua. #Logic #Math #CompSci
+ [[https://leanprover.github.io/papers/do.pdf]['do' unchained: Embracing local imperativity in a purely functional language (Functional Pearl)]]. ~ Sebastian Ullrich, Leonardo de Moura. #FunctionalProgramming #ITP #LeanProver

*** 15-Jul-22
+ [[https://www.tweag.io/blog/2022-07-14-taming-unix-with-nix/][Nix – taming Unix with functional programming]]. ~ Valentin Gagarin. #Nix #FunctionalProgramming
+ [[https://www.quantamagazine.org/how-do-mathematicians-know-their-proofs-are-correct-20220713/][How do mathematicians know their proofs are correct?]] ~ Melanie Matchett Wood, Steven Strogatz. #Math
+ [[https://blog.softwaremill.com/persistent-data-structures-in-functional-programming-c5e5061bade3][Persistent data structures in functional programming]]. ~ Krzysztof Atłasik. #Haskell #FunctionalProgramming
+ [[https://brandonchinn178.github.io/blog/2022/07/11/writing-a-ghc-plugin-and-preprocessor-for-the-first-time.html][Writing a GHC plugin + preprocessor for the first time]]. ~ Brandon Chinn. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2207.06755][Verification of sigmoidal artificial neural networks using iSAT]]. ~ Dominik Grundt, Sorin Liviu Jurj, Willem Hagemann, Paul Kröger, Martin Fränzle. #AI #NeuralNetwork #SMT
+ [[https://arxiv.org/abs/2207.06679][Learning to prove trigonometric identities]]. ~ Zhou Liu, Yujun Li, Zhengying Liu, Lin Li, Zhenguo Li. #AI #MachineLearning #Math #ATP
+ [[https://www.microsiervos.com/archivo/matematicas/wolfram-alpha-castellano.html][Wolfram Alpha ya está disponible en castellano]]. ~ @Alvy. #WolframAlpha #Math

*** 14-Jul-22
+ [[https://nikivazou.github.io/static/Haskell22/coinduction.pdf][Coinduction inductively (Mechanizing coinductive proofs in Liquid Haskell)]]. ~ Lykourgos Mastorou, Nikolaos Papaspyrou, Niki Vazou. #Haskell #FunctionalProgramming
+ [[http://funes.uniandes.edu.co/14748/1/Conejo2019La.pdf][La demostración matemática y los libros de texto de Bachillerato: evolución a través de las leyes educativas]]. ~ Laura Conejo Garrote, Matías Arce Sánchez, Tomás Ortega del Rincón. #Matemáticas #Enseñanza
+ [[https://link.springer.com/content/pdf/10.1007/978-94-007-2129-6.pdf][Proof and proving in mathematics education (The 19th ICMI study)]]. ~ Gila Hanna, Michael de Villiers. #Math #Teaching
+ [[https://researchgate.net/publication/277969625_La_demostracion_en_las_matematicas_Un_ejemplo_de_aplicacion_en_el_aula_con_alumnos_de_3_ESO][La demostración en las matemáticas]]. Un ejemplo de aplicación en el aula con alumnos de 3.º ESO. ~ Enrique Sánchez Freire y Juan Antonio Gil Pascual. #Matemáticas #Enseñanza
+ [[http://funes.uniandes.edu.co/8476/][El lamento de un matemático]]. ~ Paul Lockhart. #Matemáticas #Enseñanza
+ [[https://maa.org/sites/default/files/pdf/devlin/LockhartsLament.pdf][A mathematician’s lament]]. ~ Paul Lockhart. #Math #Teaching

*** 13-Jul-22
+ [[https://lawrencecpaulson.github.io//2022/07/13/Isabelle_influences.html][How Isabelle emerged from the trends of the 1980s]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL
+ [[https://hrmacbeth.github.io/computations_in_lean/index.html][Algebraic computations in Lean]]. ~ Heather Macbeth. #ITP #Lean #Math
+ [[https://github.com/readme/featured/functional-programming][Functional programming is finally going mainstream]]. ~ Klint Finley. #FunctionalProgramming H/T @GabriellaG439

*** 12-Jul-22
+ [[https://refubium.fu-berlin.de/bitstream/handle/fub188/35426/dissertation_kirchner.pdf][Computer-verified foundations of metaphysics and an ontology of natural numbers in Isabelle/HOL]]. ~ Daniel Kirchner. #ITP #IsabelleHOL
+ [[https://github.com/leanprover-community/mathlib/blob/353634719596e403980214ae6534df84d2c2d113/src/combinatorics/set_family/harris_kleitman.lean][Harris-Kleitman inequality (in Lean)]]. ~ Yaël Dillies. #ITP #LeanProver #Math
+ [[https://morazanm.github.io/fsm/index.html][FSM: a Domain Specific Language (DSL) designed to construct and manipulate state machines and their grammars]]. #CompSci
+ [[https://arxiv.org/pdf/1412.4878.pdf][Functional automata (Formal languages for computer science students)]]. ~ Marco T. Morazán, Rosario Antunez. #CompSci
+ [[https://www.eduhk.hk/cte2017/doc/CTE2017%20Proceedings.pd][Integrating computational thinking into discrete mathematics]]. ~ Kwong-cheong Wong.f#page=138 #Math #CompSci #Teaching
+ [[https://wiki.tfpie.science.ru.nl/images/7/75/Farrugia-Roberts_and_Sondergaard_TFPIE_2022_extended_abstract.pdf][Teaching simple constructive proofs with Haskell programs]]. ~ Matthew Farrugia-Roberts, Harald Søndergaard. #Haskell #FunctionalProgramming
+ [[https://www.infedu.vu.lt/journal/INFEDU/article/420/file/pdf][A survey on teaching and learning recursive programming]]. ~ Christian Rinderknecht. #CompSci #Teaching
+ [[https://arxiv.org/abs/2207.00852][On structuring functional programs with monoidal profunctors]]. ~ Alexandre Garcia de Oliveira, Mauro Jaskelioff, Ana Cristina Vieira de Melo. #Haskell #FunctionalProgramming #CategoryTheory
+ [[https://www4.di.uminho.pt/~jno/ps/wadt22sl.pdf][Why adjunctions matter]]. ~ J.N. Oliveira. #CompSci #Math
+ [[https://culturacientifica.com/2018/12/05/el-teorema-de-ducci/][El teorema de Ducci]]. ~ Marta Macho Stadler (@MartaMachoS). #Matemáticas

*** 11-Jul-22
+ [[http://outlace.com/Lean_part_2.html][Learning Lean (Part 2)]]. ~ Brandon Brown. #ITP #LeanProver
+ [[https://www.isa-afp.org/entries/Weighted_Arithmetic_Geometric_Mean.html][Pólya’s proof of the weighted arithmetic–geometric mean inequality]]. ~ Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/IMP_Compiler_Reuse.html][A reuse-based multi-stage compiler verification for language IMP]]. ~ Pasquale Noce. #ITP #IsabelleHOL
+ [[https://felixspringer.xyz/homepage/blog/singletonsInHaskell][Singletons in Haskell]]. ~ Felix Springer. #ITP #Haskell #FunctionalProgramming
+ [[https://richarde.dev/papers/2012/singletons/paper.pdf][Dependently typed programming with singletons]]. ~ Richard A. Eisenberg, Stephanie Weirich. #Haskell #FunctionalProgramming
+ [[https://comentarista.emol.com/2323095/22523269/Maria-Isabel-Cortez.html][Conjetura de Van der Waerden: Cómo las matemáticas se cocinan a fuego lento]]. ~ María Isabel Cortez. #Matemáticas
+ [[https://www.nature.com/articles/d41586-022-01878-7][How to find, read and organize papers]]. ~ Maya Gosztyla. #Research

*** 10-Jul-22
+ [[https://github.com/leanprover-community/mathlib/blob/8a38a697305292b37a61650e2c3bd3502d98c805/src/combinatorics/simple_graph/hasse.lean][The Hasse diagram as a graph]]. ~ Yaël Dillies. #ITP #LeanProver #Math
+ [[https://en.wikipedia.org/wiki/Freiman's_theore][Ruzsa's covering lemma]].m#Ruzsa_covering_lemma #Math
+ [[https://github.com/leanprover-community/mathlib/blob/1a54e4da89933de2e761a2cb90397060c43e4eea/src/combinatorics/additive/ruzsa_covering.lean][Ruzsa's covering lemma (in Lean)]]. ~ Yaël Dillies. #ITP #LeanProver #Math
+ [[https://softwaremill.com/functional-programming-for-kids/][Functional programming for kids? ~ Adam Warski]]. #FunctionalProgramming
+ [[https://www.johndcook.com/blog/2022/07/10/ducci-sequences/][Ducci sequences]]. ~ John D. Cook (@JohnDCook). #Math #Python #Programming

*** 09-Jul-22
+ [[https://arxiv.org/abs/2207.01094v1][A Prolog assisted search for new simple Lie algebras]]. ~ David Cushing, George W. Stagg, David I. Stewart. #Prolog #LogicProgramming #Math
+ [[https://www.ma.imperial.ac.uk/~buzzard/xena/pdfs/BuzzardICM2022talk.pdf][The rise of formalism in mathematics (Slides)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://youtu.be/SEID4XYFN7o][The rise of formalism in mathematics (Video)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://www.scientificamerican.com/article/should-machines-replace-mathematicians/][Should machines replace mathematicians?]] ~ John Horgan. #AI #ITP #Math
+ [[http://clqr.boundp.org/][Common Lisp Quick Reference]]. ~ Bert Burgemeister. #CommonLisp

*** 08-Jul-22
+ [[https://repository.tudelft.nl/islandora/object/uuid:5ca6e6f3-1242-4b86-8307-4ac4f4489951/datastream/OBJ/download][Mechanizing Hoare style proof outlines for imperative programs in Agda]]. ~ Olav de Haas. #ITP #Agda
+ [[https://www.cs.princeton.edu/~appel/papers/VerifiedODE.pdf][Verified numerical methods for ordinary differential equations]]. ~ Ariel E. Kellison, Andrew W. Appel. #ITP #Coq #Math
+ [[https://leanprover.github.io/functional_programming_in_lean/][Functional programming in Lean]]. ~ David Thrane Christiansen. #ITP #LeanProver
+ [[https://medium.com/pragmatic-programmers/haskell-safety-e7c8db58f542][Haskell safety (A quick take on Haskell’s strengths and challenges)]]. ~ Rebecca Skinner (@cercerilla). #Haskell #FunctionalProgramming
+ [[http://www.teaching.math.rs/vol/tm2517.pdf][Teaching abstract algebra through programming]]. ~ Natalia Saealle, Lauri Tart, Indrek Zolk. #Math #Programming

*** 07-Jul-22
+ [[https://arxiv.org/abs/2207.02728][Formalising Fisher's inequality: Formal linear algebraic proof techniques in combinatorics]]. ~ Chelsea Edmonds, Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://github.com/ATOMSLab/LeanChemicalTheories][Chemical theories in Lean]]. #ITP #LeanProver #Chemical
+ [[https://lawrencecpaulson.github.io//2022/07/06/Turing_Machines.html][On Turing machines]]. ~ Lawrence C. Paulson (@LawrPaulson). #CompSci
+ [[https://www.lucacambiaghi.com/posts/discovering-org-roam.html][Discovering org-roam]]. ~ #Emacs #OrgMode #OrgRoam
+ [[https://hugocisneros.com/blog/my-org-roam-notes-workflow/][My org roam notes workflow (Organizing my thoughts and knowledge into a web)]]. ~ Hugo Cisneros (@cisne_hug). #Emacs #OrgMode #OrgRoam
+ [[https://blog.jethro.dev/posts/how_to_take_smart_notes_org/][How to take smart notes with org-mode]]. ~ Jethro Kuan (@jethroksy). #Emacs #OrgMode #OrgRoam

*** 06-Jul-22
+ [[https://drive.google.com/file/d/1L7wLDYyDCNfSCvnNA8jWZiMb3BRLy14k/view][50 years of theoretical computer science]]. #CompSci
+ [[https://notxor.nueva-actitud.org/blog/2020/07/17/tomar-notas-con-org-roam/][Tomar notas con org-roam]]. ~ Notxor. #Emacs

*** 05-Jul-22
+ [[https://www.quantamagazine.org/can-computers-be-mathematicians-20220629/][Can computers be mathematicians?]] ~ Steven Strogatz (@stevenstrogatz), Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/73d15d772e8b97c511da46925888ea7ac040679b/src/number_theory/wilson.lean][Wilson's theorem (in Lean)]]. ~ John Nicol. #ITP #LeanProver #Math
+ [[http://outlace.com/Lean_part_1.html][Numbers in Lean (Part 1)]]. ~ Brandon Brown. #ITP #Lean4 #FunctionalProgramming #Math
+ [[https://www.isa-afp.org/entries/Boolos_Curious_Inference.html][Boolos's curious inference in Isabelle/HOL]]. ~ Jeffrey Ketland. #ITP #IsabelleHOL #LogicMath
+ [[https://serokell.io/blog/lexing-with-alex][Parsing with Haskell (Part 1): Lexing with Alex]]. ~ Heitor Toledo Lassarote de Paula. #Haskell #FunctionalProgramming
+ [[https://youtu.be/D5P57fMWPVo][Why is Haskell Haskell?]] ~ Cazim Hysi. #Haskell #FunctionalProgramming

*** 04-Jul-22
+ [[https://youtu.be/-NHWF4ntc1I][Correct code by construction]]. ~ Walter Schulze (@awalterschulze), Paul Cadman (@paulcadman). #ITP #Coq
+ [[https://www.slideshare.net/pjschwarz/sum-and-product-types-the-fruit-salad-fruit-snack-example-from-f-to-haskell-scala-and-java][Sum and product types (The fruit salad & fruit snack example (from F# to Haskell, Scala and Java))]]. ~ Philip Schwarz (@philip_schwarz). #Haskell #FunctionalProgramming #Scala #Fsharp #Java
+ [[http://hakank.org/common_cp_models/][Common constraint programming problems]]. ~ Hakan Kjellerstrand (@hakank). #CLP #Prolog #LogicProgramming
+ [[https://www.genbeta.com/actualidad/esta-nueva-ia-google-capaz-resolver-problema-matematico-paso-a-paso-asi-minerva][Esta nueva IA de Google es capaz de resolver un problema matemático paso a paso: así es Minerva]]. ~ José Alberto Lizana (@Josealberto1813). #IA #Matemáticas
+ [[https://ai.googleblog.com/2022/06/minerva-solving-quantitative-reasoning.html][Minerva: Solving quantitative reasoning problems with language models]]. ~ Ethan Dyer, Guy Gur-Ari. #AI #Math
+ [[https://arxiv.org/abs/2206.14858][Solving quantitative reasoning problems with language models]]. ~ Aitor Lewkowycz et als. #AI #Math
+ [[https://minerva-demo.github.io][Minerva sample explorer]]. #AI #Math

*** 03-Jul-22
+ [[https://youtu.be/Ku9-hmf1Qkw][Namespaced De Bruijn indices (Video)]]. ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2021/08/namespaced-de-bruijn-indices.html][Namespaced De Bruijn indices]]. ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming

*** 02-Jul-22
+ [[https://www.glc.us.es/~jalonso/vestigium/pfh-la-semana-en-exercitium-1-de-julio-de-2022/][#PFH: La semana en Exercitium (1 de julio de 2022)]]. #Haskell #ProgramaciónFuncional #Matemáticas
+ [[https://www.cs.princeton.edu/~appel/papers/FECVerification.pdf][Verified erasure correction in Coq with MathComp and VST]]. ~ Joshua M. Cohen, Qinshi Wang, Andrew W. Appel. #ITP #Coq
+ [[https://kurser.math.su.se/pluginfile.php/105616/mod_folder/content/0/2022/2022_gustav_sahlin.pdf][A formal proof of Karatsuba’s algorithm in Agda]]. ~ Gustav Sahlin. #ITP #Agda #FunctionalProgramming
+ [[https://www.colibri.udelar.edu.uy/jspui/bitstream/20.500.12008/32410/1/ROD22.pdf][Representación de estructuras de datos con invariantes en Haskell]]. ~ Marco N. Rodríguez Alvariza. #Haskell #ProgramaciónFuncional

*** 01-Jul-22
+ [[https://www.glc.us.es/~jalonso/exercitium/numeros-autodescriptivos/][#Exercitium: Números autodescriptivos]]. #Haskell #Programación_funcional #Matemáticas
+ [[https://www.isa-afp.org/entries/Real_Time_Deque.html][Real-time double-ended queue]]. ~ Balazs Toth, Tobias Nipkow. #ITP #IsabelleHOL
+ [[https://kodimensional.dev/cps][Using a 50-years old technique for solving modern issues]]. ~ Dmirtrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2022/6/27/catching-before-production-assert-statements-in-haskell][Catching before production: Assert statements in Haskell]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://www.quora.com/Which-is-the-best-functional-programming-language-1 ][Which is the best functional programming language?]] ~ Aaron Christianson. #FunctionalProgramming
+ [[https://serokell.io/blog/10-reasons-to-use-haskell][10 reasons to use Haskell]]. ~ Vladislav Zavialov. #Haskell #FunctionalProgramming

** June 2022

*** 30-Jun-22
+ [[https://arxiv.org/abs/2010.10296][Definitional quantifiers realisel semantic reasoning for proof by induction]]. ~ Yutaka Nagashima. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2111.06368][Should type theory replace set theory as the foundation of mathematics]]. ~ Thorsten Altenkirch. #Logic #Math
+ [[https://serokell.io/blog/how-to-learn-haskell-in-10-minutes][15 Resources to Help You Learn Haskell in 2022]]. #Haskell #FunctionalProgramming

*** 29-Jun-22
+ [[https://github.com/leanprover-community/mathlib/blob/00c17d657767c048b3c4623c37e8ed28b7e983ea/src/algebra/ring/boolean_ring.lean][Boolean rings in Lean]]. ~ Bryan Gin-ge Chen, Yaël Dillies. #ITP #LeanProver #Math

*** 28-Jun-22
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16280/pdf/lipics-vol228-fscd2022-complete.pd][Certified decision procedures for two-counter machines]]. ~ Andrej Dudenhefner.f#page=309 #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/16280/pdf/lipics-vol228-fscd2022-complete.pd][An analysis of Tennenbaum’s theorem in constructive type theory]]. ~ Marc Hermes, Dominik Kirst.f#page=167 #ITP #Coq #Logic #Math

*** 27-Jun-22
+ [[https://www.haskellforall.com/2022/06/defaultable-map-applicative-wrapper-for.html][defaultable-map: An Applicative wrapper for Maps]]. ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming

*** 26-Jun-22
+ [[https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/553221/thesis.pdf?sequence=1][Efficient, expressive, and verified temporal query evaluation]]. ~ Martin Raszyk. #PhD_Thesis #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2206.08714][Relaxing safety for metric first-order temporal logic via dynamic free variables ~ Jonathan Julian Huerta y Munive]]. #ITP #IsabelleHOL
+ [[https://www.cs.ox.ac.uk/people/hugo.paquet/lazyppl.pdf][LazyPPL: Monads and laziness for Bayesian modelling]]. ~ Swaraj Dash, Younesse Kaddar, Hugo Paquet, Sam Staton. #Haskell #FunctionalProgramming

*** 25-Jun-22
+ [[https://www.isa-afp.org/entries/IsaNet.html][IsaNet: Formalization of a verification framework for secure data plane protocols]]. ~ Tobias Klenze, Christoph Sprenger. #ITP #IsabelleHOL
+ [[https://mat.unb.br/~ayala/FormEuclideanDomains.pdf][Formalizing factorization on euclidean domains and abstract euclidean algorithms]]. ~ Thaynara Arielly de Lima, Andréia Borges Avelar, André Luiz Galdino, Mauricio Ayala-Rincón. #ITP #PVS #Math
+ [[https://repository.tudelft.nl/islandora/object/uuid:7288099e-1fd4-4d9a-a2f9-7b3e108419d4/datastream/OBJ/download][Practical verification of a free monad instance]]. ~ Luka Janjić. #ITP #Agda
+ [[https://repository.tudelft.nl/islandora/object/uuid:241b1dde-302d-4aae-8891-f328c36e2b36/datastream/OBJ/download][Practical verification of infinite structures in agda2hs]]. ~ Remco Schrijver. #ITP #Agda #Haskell #FunctionalProgramming
+ [[https://www.irisa.fr/prive/talpin/papers/cav22.pdf][End-to-end mechanized proof of an eBPF virtual machine for micro-controllers]]. ~ Shenghao Yuan et als. #ITP #Coq

*** 22-Jun-22
+ [[https://lawrencecpaulson.github.io/2022/06/22/Why-formalise.html][What is the point of formalising mathematics? ~ Lawrence C]]. Paulson (@LawrPaulson). #ITP #Math

*** 21-Jun-22
+ [[https://zulip-uploads.s3.amazonaws.com/3121/pCswxBQoZGDwat6pjKL3gMCV/talk_schemes.pdf?AWSAccessKeyId=AKIAIEVMBCAT2WD3M5KQ&Signature=AX5jPfMYqVk%2BVFn879vHTETpioU%3D&Expires=1655824635][How to do maths without dependent types]]. ~ Anthony Bordg, jww Larry Paulson, Wenda Li. #ITP #IsabelleHOL #Math
+ [[https://codeberg.org/martianh/lingva.el][lingva: Access Google Translate via lingva]]. #Emacs

*** 20-Jun-22
+ [[https://idus.us.es/bitstream/handle/11441/134391/1/Mar%C3%ADa%20Dolores%20Mateo%20Ceballos.pdf?sequence=1][Lógica computacional desde el punto de vista de la programación funcional: eliminación de cuantificadores]]. ~ María Dolores Mateo Ceballos. #TFG #LógicaComputacional #OCaml #ProgramaciónFuncional

*** 19-Jun-22
+ [[https://types22.inria.fr/files/2022/06/TYPES_2022_paper_70.pdf][A datatype of planar graphs]]. ~ Malin Altenmüller, Conor McBride. #ITP #Agda
+ [[https://people.ciirc.cvut.cz/~janotmik/IJCAR_AIMLEAP_Camera_Ready.pdf][Guiding an automated theorem prover with neural rewriting]]. ~ Jelle Piepenbrock, Tom Heskes, Mikoláš Janota, Josef Urban. #ATP #Prover9 #MachineLearning
+ [[https://types22.inria.fr/files/2022/06/TYPES_2022_paper_53.pdf][Myhill isomorphism theorem and a computational Cantor-Bernstein theorem in constructive type theory]]. ~ Yannick Forster, Felix Jahn, Gert Smolka. #ITP #Coq #Math
+ [[https://github.com/leanprover-community/mathlib/blob/100975e9629d5aa006042797ecafcf8cebb15597/src/geometry/euclidean/inversion.lean][Inversion in an affine space]]. ~ Yury G. Kudryashov. #ITP #LeanProver #Math

*** 18-Jun-22
+ [[https://types22.inria.fr/files/2022/06/TYPES_2022_paper_26.pdf][Towards a formalization of affine schemes in Cubical Agda]]. ~ Anders Mörtberg, Max Zeuner. #ITP #Agda #Math
+ [[https://leanprover-community.github.io/blog/posts/the-ring-of-integers-of-a-cyclotomic-field/][The ring of integers of a cyclotomic field]]. ~ Riccardo Brasca. #ITP #LeanProver #Math
+ [[https://www21.in.tum.de/~traytel/papers/explanator2/expl2.pdf][Explainable online monitoring of metric temporal logic]]. ~ Leonardo Lima, Andrei Herasimau, Martin Raszyk, Dmitriy Traytel, Simon Yuan. #ITP #IsabelleHOL
+ [[https://types22.inria.fr/files/2022/06/TYPES_2022_paper_40.pdf][Verification techniques for smart contracts in Agda]]. ~ Fahad F. Alhabardi, Arnold Beckmann, Bogdan Lazar, Anton Setzer. #ITP #Agda
+ [[https://types22.inria.fr/files/2022/06/TYPES_2022_paper_12.pdf][The 4th homotopy group of the 3-sphere in Cubical Agda]]. ~ Axel Ljungström, Anders Mörtberg. #ITP #Agda #Math
+ [[https://types22.inria.fr/files/2022/06/TYPES_2022_paper_32.pdf][Monsters: Programming and reasoning]]. ~ Venanzio Capretta, Christopher Purdy. #Haskell #FunctionalProgramming

*** 17-Jun-22
+ [[https://mmhaskell.com/blog/2022/6/16/just-catching-a-few-things][Just catching a few things]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 16-Jun-22
+ [[https://www21.in.tum.de/~traytel/papers/pds/pds.pdf][Differential testing of pushdown reachability with a formally verified oracle]].  ~ Anders Schlichtkrull, Morten Konggaard Schou, Jirí Srba, Dmitriy Trayte. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Finite_Fields.html][Finite fields (in Isabelle/HOL)]]. ~ Emin Karayel. #ITP #IsabelleHOL #Math
+ [[https://investigacion.unirioja.es/documentos/62a3392253455d640810a6e0/f/62a6e5c2a659e14253bf8d74.pdf][A formalization of the Smith normal form in higher-order logic]]. ~ Jose Divasón, René Thiemann. #ITP #IsabelleHOL #Math
+ [[https://benjaminselfridge.github.io/posts/2022-06-15-model-checking-2.html][Model checking in Haskell (Part 2: From programs to transition systems)]]. ~ Ben Selfridge. #Haskel #FunctionalProgramming #ModelChecking
+ [[https://deepsource.io/blog/monadic-parser-combinators/][Monadic parser combinators in Haskell]]. ~ Srijan Paul. #Haskell #FunctionalProgramming
+ [[https://discourse.haskell.org/t/hatlab-a-wip-library-inspired-by-matlab-and-numpy/4673][Hatlab: a WIP-library inspired by Matlab and NumPy]]. ~ Humr Druhý. #Haskel #FunctionalProgramming

*** 15-Jun-22
+ [[https://loeh.app.uni-regensburg.de/mapa/main.pdf][Exploring formalisation (A primer in human-readable mathematics in Lean 3 with examples from simplicial topology)]]. ~ Clara Löh. #ITP #LeanProver #Math
+ [[https://lawrencecpaulson.github.io//2022/06/15/Ramsey-2.html][Formalising Ramsey theory, II]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math
+ [[https://digama0.github.io/mm0/thesis-slides.pdf][Metamath Zero (From logic, to proof assistant, to verified compiler) [Slides]]]. ~ Mario Carneiro. #ITP #MetamathZero
+ [[https://hal.inria.fr/hal-03689027/document][Towards corecursion without corecursion in Coq]]. ~ Vlad Rusu, David Nowak. #ITP #Coq
+ [[https://leanprover-community.github.io/blog/posts/month-in-mathlib-may-2022/][This month in mathlib (May 2022)]]. #ITP #LeanProver #MathLib #Math

*** 14-Jun-22
+ [[https://mmhaskell.com/blog/2022/6/13/exception-type-details][Exception type details]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://serras.github.io/zurihac-workshop][Haskell (The Legend of DSLs)]]. ~ Alejandro Serrano (@trupill). #Haskell #FunctionalProgramming

*** 13-Jun-22
+ [[https://rjlipton.wpcomstaging.com/2022/06/13/sorting-and-proving/][Sorting and proving]]. ~ R.J. Lipton & K.W. Regan. #Algorithms
+ [[https://www.michaelpj.com/blog/2022/06/12/lenses-for-tree-traversals-redux.html][Lenses for Tree Traversals Redux]]. ~ Michael Peyton Jones (@mpeytonjones). #Haskell #FunctionalProgramming

*** 12-Jun-22
+ [[https://www.ps.uni-saarland.de/Publications/documents/HostertEtAl_2022_Undecidability.pdf][Undecidability of dyadic first-order logic in Coq]]. ~ Johannes Hostert, Andrej Dudenhefner, Dominik Kirst. #ITP #Coq #Logic
+ [[https://www.ps.uni-saarland.de/~kirst/downloads/TYPES_2022_paper_16.pdf][Strong, synthetic, and computational proofs of Gödel’s first incompleteness theorem]]. ~ Benjamin Peters, Dominik Kirst. #ITP #Coq #Logic #Math

*** 11-Jun-22
+ [[https://www.math.elte.hu/thesisupload/thesisfiles/2022bsc_mat3y-qd3fmf.pdf][Theorem Proving with Deep Learning]]. ~ Szabó Kristóf. #ATP #DeepLearning
+ [[http://denisevellachemla.eu/f02-2203-16344.pdf][Formaliser l'anneau des adèles d'un corps global]]. ~ María Inés de Frutos-Fernández. #ITP #LeanProver #Math
+ [[https://lmcs.episciences.org/9655/pdf][Quotients, inductive types, & quotient inductive types]]. ~ Marcelo P. Fiore, Andrew M. Pitts, S. C. Steenkamp. #ITP #Agda
+ [[https://raw.githubusercontent.com/pfandzelter/thesis-tips/main/thesis.pdf][Writing a Computer Science Thesis]]. ~ Tobias Pfandzelter, Martin Grambow, Trever Schirmer,  David Bermbach. #PhDThesis #CompSci

*** 10-Jun-22
+ [[https://leanprover.github.io/functional_programming_in_lean/][Functional programming in Lean]]. ~ David Thrane Christiansen (@d_christiansen). #ITP #LeanProver #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2022/6/9/try-ing-it-out-first]["Try"-ing it out first]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://haskle.net/][Haskle: a wordle-like game where you have to guess a function from the Haskell Prelude]]. ~ Clément Delafargue. #Haskell #FunctionalProgramming

*** 09-Jun-22
+ [[https://www.researchgate.net/publication/361149832_A_Comprehensive_Framework_for_Saturation_Theorem_Proving][A comprehensive framework for saturation theorem proving]]. ~ Uwe Waldmann, Sophie Tourret, Simon Robillard, Jasmin Christian Blanchette. #ITP #IsabelleHOL
+ [[https://www.researchgate.net/publication/360907950_Concept_learning_consistency_under_three-way_decision_paradigm][Concept learning consistency under three-way decision paradigm]]. ~ Gonzalo A. Aranda-Corral, Joaquín Borrego-Díaz, Juan Galán-Páez. #MachineLearning #FormalConceptAnalysis
+ [[https://swi-prolog.discourse.group/t/forall-2-foreach-2-double-negation-relational-division-and-sql/5458][Forall/2, foreach/2, double negation, relational division and SQL]]. #Prolog #LogicProgramming #SQL

*** 08-Jun-22
+ [[https://lawrencecpaulson.github.io/2022/06/08/baby-descriptions.html][Dealing with descriptions in Isabelle/HOL: least, greatest, whatever]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL
+ [[https://siddhartha-gadgil.github.io/automating-mathematics/posts/formalizing-gardam-disproof-kaplansky-conjecture/][Formalizing Gardam's disproof of Kaplansky's Unit Conjecture]]. ~ Siddhartha Gadgil (@SidGadgil). #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2206.03358][Towards a Coq formalization of a quantified modal logic]]. ~ Ana de Almeida Borges. #ITP #Coq #Logic
+ [[https://digama0.github.io/mm0/thesis.pdf][Metamath Zero (From logic, to proof assistant, to verified compilation)]]. ~ Mario Carneiro. #ITP #MetamathZero #Logic
+ [[https://ana-borges.gitlab.io/QRC1-Coq/v0.1.0/Summary.html][QRC1 in Coq]]. ~ Ana de Almeida Borges. #ITP #Coq #Logic
+ [[https://youtu.be/Yy0UM5nAl5c][SKI combinator calculus in Haskell]]. ~ Michael Gilliland. #Haskell #FunctionalProgramming
+ [[https://youtu.be/ZV6FLGTTzdc][Getting started with Lean programming language in Visual Studio Code]]. ~ Chris Lovett. #ITP #LeanProver

*** 07-Jun-22
+ [[https://arxiv.org/abs/2206.02169][Formally verified solution methods for infinite-horizon Markov decision processes]]. ~ Maximilian Schäfeller, Mohammad Abdulaziz. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/browser_info/current/AFP/DPRM_Theorem/document.pdf][Diophantine equations and the DPRM theorem]]. ~ Jonas Bayer, Marco David, Benedikt Stock, Abhik Pal, Yuri Matiyasevich, Dierk Schleicher. #ITP #IsabelleHOL #Math
+ [[https://nikolai-kosmatov.eu/publications/blatter_kpl_ifm_2022.pdf][Certified verification of relational properties]]. ~ Lionel Blatter et als. #ITP #Coq
+ [[https://mmhaskell.com/blog/2022/6/6/catching-what-weve-thrown][Catching what we’ve thrown]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/haskell-in-production-haskoin][Haskell in production: Haskoin]]. #Haskell #FunctionalProgramming
+ [[https://youtu.be/ZDOBpEuvfVE][Introducción a Emacs (para novatos)]]. ~ Dario Rodriguez. #Emacs

*** 06-Jun-22
+ [[https://www.isa-afp.org/entries/Rewrite_Properties_Reduction.html][Reducing rewrite properties to properties on ground terms]]. ~ Alexander Lochman. #ITP #IsabelleHOL
+ [[https://www.saurabhnanda.in/2022/03/24/dhall-a-gateway-drug-to-haskell/][Dhall: A gateway drug to Haskell]]. ~ Saurabh Nanda (@saurabhnanda). #Haskell #FunctionalProgramming

*** 04-Jun-22
+ [[https://cogumbreiro.github.io/assets/turing-types22.pdf][Towards a mechanized theory of computation for education]]. ~ Tiago Cogumbreiro, Yannick Forster. #ITP #Coq #CompSci
+ [[https://gitlab.com/umb-svl/turing][Introduction to the theory of computation]]. ~ Tiago Cogumbreiro. #ITP #Coq
+ [[https://hal.inria.fr/hal-03372247v2/document][Efficient extensional binary tries]]. ~ Andrew Appel, Xavier Leroy. #ITP #Coq
+ [[https://kclpure.kcl.ac.uk/portal/files/174142954/FSCD_2022.pdf][A certified algorithm for AC-unification]]. ~ Mauricio Ayala-Rincón, Maribel Fernández, Gabriel Ferreira Silva, Daniele Nantes Sobrinho. #ITP #PVS
+ [[https://repositorioaberto.uab.pt/bitstream/10400.2/9925/1/TD_IvoRobert.pdf][ProverX – Rewriting and extending Prover9]]. ~ Ivo Robert. #PhDThesis #ATP #Prover9 #ProverX
+ [[http://www.proverx.com/doc/][ProveX: an extension of Prover9 (an automated theorem prover for first-order and equational logic) with a scripting language]]. Furthermore, a GUI running as a Web App was aded to the project with some extra functionality. #ATP #ProverX #Prover9
+ [[https://arxiv.org/abs/2205.14343v1][Varieties of lazy magmas characterized by forbidden substructure theorems]]. ~ João Araújo, Fernando Maia Ferreira, Michael Kinyon. #ATP #ProverX #Math
+ [[https://link.springer.com/book/10.1007/978-3-030-97645-3 ][OCaml scientific computing (Functional programming in data science and artificial intelligence)]]. ~ Liang Wang, Jianxin Zhao, Richard Mortier. #OCaml #FunctionalProgramming
+ [[https://www.quantamagazine.org/what-is-the-langlands-program-20220601][What is the Langlands program?]] ~ Alex Kontorovich. #Math
+ [[https://youtu.be/_bJeKUosqoY][The Langlands Program, explained]]. ~ Alex Kontorovich. #Math
+ [[http://revue.sesamath.net/spip.php?article1523][L’Histoire des mathématiques, une porte d’entrée dans une culture vaste, diverse et authentique? ~G]]. Kuntz. #Math #History
+ [[https://hist-math.fr][Histoires de Mathématiques]]. #Math #History

*** 03-Jun-22
+ [[https://www.glc.us.es/~jalonso/exercitium/descomposiciones-con-sumandos-1-o-2/][#Exercitium: Descomposiciones con sumandos 1 ó 2]]. #Haskell #Programación_funcional #Matemáticas
+ [[https://www.haskellforall.com/2022/06/the-appeal-of-bidirectional-type.html][The appeal of bidirectional type-checking]]. ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming

*** 02-Jun-22
+ [[https://github.com/siddhartha-gadgil/Polylean/tree/main/Polylean][Formalization: Gardam's disproof of the Kaplansky Unit Conjecture]]. ~ Siddhartha Gadgil (@SidGadgil). #ITP #LeanProver #Math
+ [[https://github.com/arthurpaulino/lean4-metaprogramming-book][A Lean 4 metaprogramming book]]. ~ Arthur Paulino, Damiano Testa, Edward Ayers, Henrik Böving, Jannis Limperg, Siddhartha Gadgil, Siddharth Bhat. #ITP #LeanProver
+ [[https://raw.githubusercontent.com/siraben/coq-wigderson/main/paper.pdf][Building graph theory using Coq: Verification of Wigderson’s graph coloring algorithm]]. ~ Siraphob (Ben) Phipathananunth, Jamison Homatas. #ITP #Coq #Math
+ [[https://www.tweag.io/blog/2022-06-02-haskell-stack-nix-shell/][Smooth, non-invasive Haskell Stack and Nix shell integration]]. ~ Julien Debon. #Haskell #FunctionalProgramming #Nix
+ [[https://www.lemonde.fr/blog/binaire/2022/05/06/linteroperabilite-des-systemes-de-preuve/][L’interopérabilité des systèmes de preuve]]. ~ Frédéric Blanqui. #ITP #EuroProofNet
+ [[https://mmhaskell.com/blog/2022/6/2/throwing-exceptions-the-basics][Throwing exceptions: The basics]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[http://philsci-archive.pitt.edu/20705/][Logical foundations of physics]]. Resolution of classical and quantum paradoxes in the finitistic paraconsistent logic NAFL. ~ Radhakrishnan Srinivasan. #Logic #Physics
+ [[https://notxor.nueva-actitud.org/2022/06/02/abreviaturas-en-emacs.html][Abreviaturas en Emacs]]. ~ Notxor. #Emacs
+ [[https://openaccesstexts.com/math/][Open textbooks for undergraduate mathematics]]. #eBook #Math
+ [[https://marktomforde.com/academic/mathmajors/textbook-suggestions.html][Mathematics textbooks for self study (A guide for the autodidact)]]. ~ Mark Tomforde. #Math

*** 01-Jun-22
+ [[https://lawrencecpaulson.github.io//2022/06/01/Formalising-Incompleteness-III.html][Formalising Gödel's incompleteness theorems, III: Coding and bound variables]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #Logic #Math
+ [[https://mmhaskell.com/blog/2022/5/30/unit-testing-user-interactions][Unit testing user interactions]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2022/05/generate-web-forms-from-pure-functions.html][Generate web forms from pure functions]]. ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming
+ [[https://vishpat.github.io/lisp-rs-wasm/][Lisp interpreter in a browser using WASM]]. ~ Vishal Patil. #CommonLisp #RustLang


** May 2022

*** 31-May-22
+ [[https://simon.peytonjones.org/assets/pdfs/triemaps-that-match.pdf][Triemaps that match]]. ~ Simon Peyton Jones, Richard A. Eisenberg, Sebastian Gra. #Haskell #FunctionalProgramming
+ [[https://bor0.wordpress.com/2022/05/30/recursion-from-first-principles/][Recursion from first principles]]. ~ Boro Sitnikovski  (@BSitnikovski). #Logic #Math #CompSci
+ [[https://frasertweedale.github.io/blog-fp/posts/2022-05-31-ghc-test-suite.html][Writing tests for GHC]]. ~ Fraser Tweedale (@hackuador). #Haskell #FunctionalProgramming
+ [[https://youtu.be/M0a4-tfuiao][Haskell: Advantages, community and ecosystem]]. ~ Andres Löh. #Haskell #FunctionalProgramming

*** 30-May-22
+ [[https://www.isa-afp.org/entries/Pluennecke_Ruzsa_Inequality.html][The Plünnecke-Ruzsa inequality]]. ~ Angeliki Koutsoukou-Argyraki, Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2205.14071][A mechanically assisted examination of vacuity and question begging in Anselm's ontological argument]]. ~ John Rushby. #ITP #PVS
+ [[https://www.philipzucker.com/hashlog-1/][Hashlog: A simple datalog in OCaml]]. ~ Philip Zucker (@SandMouth). #OCaml #Datalog

*** 28-May-22
+ [[https://www.isa-afp.org/entries/Package_logic.html][Formalization of a framework for the sound automation of magic wands]]. ~ Thibault Dardinier. #ITP #IsabelleHOL #Logic
+ [[https://arxiv.org/abs/2205.11491][HyperTree proof search for neural theorem proving]]. ~ Guillaume Lample, Marie-Anne Lachaux, Thibaut Lavril, Xavier Martinet, Amaury Hayat, Gabriel Ebner, Aurélien Rodriguez, Timothée Lacroix. #ITP #LeanProver #Metamath #MachineLearning
+ [[https://blog.poisson.chat/posts/2022-05-27-formalizing-finite-sets.html][Formalizing finite sets]]. ~ Li-yao Xia (@lysxia). #ITP #Coq #Math
+ [[https://arxiv.org/abs/2205.11709v1][Hardware/software co-assurance using the Rust programming language and ACL2]]. ~ David Hardin. #ITP #ACL2 #Rust

*** 27-May-22
+ [[https://devel.isa-afp.org/browser_info/current/AFP/Irrationals_From_THEBOOK/document.pdf][Irrational numbers from THE BOOK]]. ~ Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2205.12615][Autoformalization with large language models]]. ~ Yuhuai Wu, Albert Q. Jiang, Wenda Li, Markus N. Rabe, Charles Staats, Mateja Jamnik, Christian Szegedy. #ITP #IsabelleHOL #MachineLearning
+ [[https://arxiv.org/abs/2205.11694][All prime numbers have primitive roots]]. ~ Ruben Gamboa, Woodrow Gamboa. #ITP #ACL2
+ [[https://arxiv.org/abs/2205.13347][A formalization of finite group theory]]. ~ David M. Russinoff. #ITP #ACL2 #Math

*** 26-May-22
+ [[https://lawrencecpaulson.github.io//2022/05/25/Formalising-Incompleteness-II.html][Formalising Gödel's incompleteness theorems, II: Σ-formulas]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #Logic #Math
+ [[https://arxiv.org/abs/2205.11699][A free group of rotations of rank 2]]. ~ Jagadish Bapanapally, Ruben Gamboa. #ITP #ACL2 #Math
+ [[https://arxiv.org/abs/2205.11698][VWSIM: A circuit simulator]]. ~ Warren A. Hunt Jr., Vivek Ramanathan, J Strother Moore. #ITP #ACL2
+ [[https://arxiv.org/abs/2205.11697][A mechanized proof of bounded convergence time for the distributed perimeter surveillance system (DPSS) algorithm A]]. ~ David Greve, Jennifer Davis, Laura Humphrey. #ITP #ACL2
+ [[https://arxiv.org/abs/2205.11695][Using ACL2 to teach students about software testing]]. ~ Ruben Gamboa, Alicia Thoney. #ITP #ACL2

*** 25-May-22
+ [[http://leanprover.github.io/talks/NFM2022.pdf][Lean 4 tutorial (NASA formal methods 2022)]]. ~ Leonardo de Moura, Sebastian Ullrich. #ITP #LeanProver
+ [[https://arxiv.org/abs/2205.11704][ACL2s systems programming]]. ~ Andrew T. Walter, Panagiotis Manolios. #ITP #ACL2
+ [[https://arxiv.org/abs/2205.11703][Verified implementation of an efficient term-rewriting algorithm for multiplier verification on ACL2]]. ~ Mertcan Temel. #ITP #ACL2
+ [[https://arxiv.org/abs/2205.11700][Modeling asymptotic complexity using ACL2]]. ~ William D. Young. #ITP #ACL2
+ [[https://arxiv.org/abs/2205.08095][Reasoning about vectors using an SMT theory of sequences]]. ~ Ying Sheng et als. #SMT

*** 24-May-22
+ [[https://hal.inria.fr/hal-03671876/document][Defining corecursive functions in Coq using approximations]]. ~ Vlad Rusu, David Nowak. #ITP #Coq
+ [[https://chester-beard.medium.com/why-i-am-learning-haskell-d95d1e5212f3][Why I am learning Haskell (The language for the Cardano blockchain)]]. ~ C. L. Beard. #Haskell #FunctionalProgramming
+ [[https://hal.inria.fr/hal-03671598/document][A formal correctness proof for an EDF scheduler implementation]]. ~ Florian Vanhems, Vlad Rusu, David Nowak, Gilles Grimaud. #ITP #Coq
+ [[https://lmcs.episciences.org/9570/pdf][Formalizing the face lattice of polyhedra]]. ~ Xavier Allamigeon, Ricardo D. Katz, Pierre-Yves Strub. #ITP #Coq #Math
+ [[https://arxiv.org/abs/2205.08718v1][An approach to translating Haskell programs to Agda and reasoning about them]]. ~ Harold Carr, Christa Jenkins, Mark Moir, Victor Cacciari Miraldo, Lisandra Silva. #ITP #Agda #Haskell #FunctionalProgramming

*** 23-May-22
+ [[https://mmhaskell.com/blog/2022/5/23/using-binary-mode-in-haskell][Using binary mode in Haskell]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 21-May-22
+ [[https://arxiv.org/abs/2205.06841v1][From logic to functional logic programs]]. ~ Michael Hanus. #LogicProgramming #FunctionalProgramming
+ [[https://www.cambridge.org/core/services/aop-cambridge-core/content/view/3A5329B6E3639879301A6D44346FD1DD/S1471068422000102a.pdf/fifty-years-of-prolog-and-beyond.pdf][Fifty years of Prolog and beyond]]. ~ P. Körner et als. #Prolog #LogicProgramming
+ [[http://www.csci.viu.ca/~wesselsd/courses/csci330/code/prolog/][(SWI-)prolog examples and discussion]]. ~ David Wessels. #Prolog #LogicProgramming

*** 19-May-22
+ [[https://arxiv.org/abs/2205.08628][Mechanized analysis of Anselm's modal ontological argument]]. ~ John Rushby. #ITP #PVS #Logic
+ [[https://mmhaskell.com/blog/2022/5/19/interactive-io][Interactive IO]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://www.microsiervos.com/archivo/ordenadores/leslie-lamport-matematico-revoluciono-informatica.html][El matemático que revolucionó la informática antes de que existiera la profesión de informático como tal]]. ~ @Alvy #Matemáticas #Computación

*** 18-May-22
+ [[https://jaalonso.github.io/materias/PLconProlog/temas/tema-5.html][#PLconProlog Tema 5: Programación lógica de orden superior]]. #Prolog #ProgramaciónLógica
+ [[https://lawrencecpaulson.github.io/2022/05/18/Formalising-Incompleteness-I.html][Formalising Gödel's incompleteness theorems, I]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #Logic #Math
+ [[https://arxiv.org/abs/2205.08354][Constructive analysis in the Agda proof assistant]]. ~ Zachary Murray. #ITP #Agda #Math

*** 17-May-22
+ [[https://link.springer.com/content/pdf/10.1007/s11023-022-09603-z.pdf][Explainable Artificial Intelligence in Data Science (From foundational issues towards socio-technical considerations)]]. ~ Joaquín Borrego-Díaz, Juan Galán-Páez. #AI #XAI #DataScience
+ [[https://benjaminselfridge.github.io/posts/2022-05-10-model-checking-1.html][Model checking in Haskell (Part 1: Transition systems and invariants)]]. ~ Ben Selfridge. #Haskell #FunctionalProgramming #ModelChecking
+ [[https://arxiv.org/abs/2205.05728v1][Abductive reasoning in intuitionistic propositional logic via theorem synthesis]]. ~ Paul Tarau. #Prolog #LogicProgramming #Logic
+ [[https://jship.github.io/posts/2022-05-17-announcing-monad-logger-aeson/][Announcing monad-logger-aeson: Structured logging in Haskell for cheap]]. ~ Jason Shipman (@jship_). #Haskell #FunctionalProgramming
+ [[https://www.quantamagazine.org/computing-expert-says-programmers-need-more-math-20220517][How to write software with mathematical perfection]]. ~ Sheon Han. #Math #CompSci
+ [[https://youtu.be/rkZzg7Vowao][The man who revolutionized computer science with math]]. #CompSci #Math

*** 16-May-22
+ [[https://arxiv.org/abs/2205.06391][PVS embeddings of propositional and quantified modal logic]]. ~ John Rushby. #ITP #PVS #Logic
+ [[https://arxiv.org/abs/2205.06590][Scalable SAT solving in the cloud]]. ~ Dominik Schreiber, Peter Sanders. #Logic #SATSolvers

*** 14-May-22
+ [[https://florisvandoorn.com/talks/sphere_eversion22.pdf][Lessons Learned from formalizing local convex integration]]. ~ Floris van Doorn. #ITP #LeanProver #Math
+ [[https://youtu.be/Evru5QHt-KU][Formalising local convex integration in Lean [Video]]]. ~ Floris van Doorn. #ITP #LeanProver #Math
+ [[https://youtu.be/QBLL48Z8gcg][Formalized mathematics and differential topology [Video]]]. ~ Patrick Massot. #ITP #LeanProver #Math
+ [[https://www.ssrg.ece.vt.edu/papers/pldi22.pdf][Formally verified lifting of C-compiled x86-64 binaries]]. ~ F. Verbeek, J. Bockenek, Z. Fu, B. Ravindran. #ITP #IsabelleHOL

*** 13-May-22
+ [[https://webusers.imj-prg.fr/~riccardo.brasca/files/pres.pdf][Fermat's Last Theorem for regular primes in Lean]]. ~ Riccardo Brasca. #ITP #LeanProver #Math
+ [[https://iagoleal.com/posts/calculus-symbolic-ad/][Let’s program a calculus student II (Turning symbolic differentiation automatic)]]. ~ Iago Leal de Freitas. #Haskell #FunctionalProgramming #Math
+ [[https://wjwh.eu/posts/2022-05-06-haskell-conduit-bots.html][Making type-safe internet bots with Haskell]]. ~ Wander Hillen. #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2022-05-12-strict-vs-lazy/][Comparing strict and lazy]]. ~ Arnaud Spiwack. #Haskell #OCaml #FunctionalProgramming

*** 12-May-22
+ [[https://lawrencecpaulson.github.io//2022/05/11/jEdit-tricks.html][Getting started: basic Isabelle/jEdit tricks]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL
+ [[https://serokell.io/blog/untyped-lambda-calculus][A brief look at untyped lambda calculus]]. ~ Nikolay Yakimov. #LambdaCalculus #FunctionalProgramming

*** 10-May-22
+ [[https://www.isa-afp.org/entries/Digit_Expansions.html][Digit expansions (in Isabelle/HOL)]]. ~ Jonas Bayer, Marco David, Abhik Pal, Benedikt Stock. #ITP #IsabelleHOL #Math
+ [[https://www.ndss-symposium.org/wp-content/uploads/NDSS2022Poster_paper_40.pdf][PA-Boot: A formally verified processor authentication protocol for SMP secure boot]]. ~ Zhuoruo Zhang, Rui Chang, Qinming Dai, Ku Ren. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2205.03659][A theorem prover and countermodel constructor for provability logic in HOL Light]]. ~ Marco Maggesi, Cosimo Perini Brogi. #ITP #HOL_Light #Logic

*** 09-May-22
+ [[https://arxiv.org/abs/2205.03159][Wetzel: Formalisation of an undecidable problem linked to the continuum hypothesis]]. ~ Lawrence C Paulson. #ITP #IsabelleHOL #Math

*** 08-May-22
+ [[https://arxiv.org/abs/2205.00787][More programming than programming: teaching formal methods in a software engineering programme]]. ~ James Noble, David Streader, Isaac Oscar Gariano, Miniruwani Samarakoon. #FormalMethods #Dafny
+ [[https://www.isa-afp.org/entries/Clique_and_Monotone_Circuits.html][Clique is not solvable by monotone circuits of polynomial size (in Isabelle/HOL)]]. ~ René Thiemann. #ITP #IsabelleHOL

*** 07-May-22
+ [[https://www.researchgate.net/profile/Ende-Jin/publication/360085224_A_Review_of_Algebraic-Style_Reasoning_for_Type_Theory/links/626161ac1b747d19c29c7091/A-Review-of-Algebraic-Style-Reasoning-for-Type-Theory.pdf][A review of algebraic-style reasoning for type theory]]. ~ Ende Jin. #ITP #Agda #FunctionalProgramming
+ [[https://mizar-jp.org/journal/MMA-WiP/2022/MMA-WiP_2022-4(1)_1-17.pdf][Highschool (Secondary School) trigonometry: Some exercices with Mizar]]. ~ Roland Coghetto. #ITP #Mizar #Math
+ [[https://hal.inria.fr/hal-03656144/file/MANUSCRIPT.pdf][Deep specification and proof preservation for the CoqTL transformation language]]. ~ Zheng Cheng, Massimo Tisi. #ITP #Coq
+ [[https://project-smart.uibk.ac.at/docs/22/spdcck-ijcai22.pdf][Learning higher-order logic programs from failures]]. ~ Stanisław J. Purgał, David M. Cerna, Cezary Kaliszyk. #MachineLearning #ILP #LogicProgramming
+ [[https://youtu.be/Qa8IfEeBJqk][Haskell in 100 seconds]].  #Haskell #FunctionalProgramming
+ [[https://www.microsiervos.com/archivo/ordenadores/lenguajes-programacion-videos-100-segundos.html][Cómo entender de qué van los lenguajes de programación (y otras técnicas) en vídeos de 100 segundos]]. ~ @Alvy #Programación

*** 06-May-22
+ [[https://mmhaskell.com/blog/2022/5/5/handling-files-more-easily][Handling files more easily]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2022-05-05-existential-optics/][Existential optics]]. ~ Marco Perone. #Haskell #FunctionalProgramming

*** 05-May-22
+ [[https://arxiv.org/abs/2205.01981][The Isabelle ENIGMA]]. ~ Zarathustra A. Goertzel, Jan Jakubův, Cezary Kaliszyk, Miroslav Olšák, Jelle Piepenbrock, Josef Urban. #ITP #IsabelleHOL #MachineLearning

*** 04-May-22
+ [[https://lawrencecpaulson.github.io/2022/05/04/baby-examples.html][Getting started with Isabelle: baby examples, cool proof methods]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math
+ [[https://www.haskellforall.com/2013/01/introduction-to-haskell-io.html][Introduction to Haskell IO]]. ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2022/05/why-does-haskells-take-function-accept.html][Why does Haskell's take function accept insufficient elements? ~ Gabriella Gonzalez (@GabriellaG439)]]. #Haskell #FunctionalProgramming
+ [[https://www.andres-loeh.de/LambdaPi/LambdaPi.pdf][A tutorial implementation of a dependently typed lambda calculus]]. ~ Andres Löh, Conor McBride, Wouter Swierstra. #Haskell #FunctionalProgramming #LambdaCalculus

*** 03-May-22
+ [[https://serokell.io/blog/top-software-written-in-haskell][11 companies that use Haskell in production]]. ~ Gints Dreimanis (@NaeosPsy). #Haskell #FunctionalProgramming
+ [[https://doisinkidney.com/posts/2022-05-03-depth-comonads.html][Depth comonads]]. ~ Donnacha Oisín Kidney (@oisdk). #Haskell #FunctionalProgramming
+ [[http://tilde.town/~ramin_hal9001/emacs-for-professionals/index.html][Emacs for professionals]]. ~ Ramin Honary. #Emacs

*** 02-May-22
+ [[https://arxiv.org/abs/2204.14191][FindFacts: A scalable theorem search]]. ~ Fabian Huch, Alexander Krauss. #ITP #IsabelleHOL
+ [[https://www.haskellforall.com/2022/05/introductory-resources-to-type-theory.html][Introductory resources to type theory for language implementers]]. ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming #TypeTheory

*** 01-May-22
+ [[https://www.isa-afp.org/browser_info/current/AFP/Fishers_Inequality/document.pdf][Fisher's inequality: Linear algebraic proof techniques for combinatorics]]. ~ Chelsea Edmonds, Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2204.12311][Formalizing a diophantine representation of the set of prime numbers]]. ~ Karol Pąk, Cezary Kaliszyk. #ITP #Mizar #Math
+ [[https://arxiv.org/abs/2204.10370][Passport: Improving automated formal verification using identifiers]]. ~ Alex Sanchez-Stern, Emily First, Timothy Zhou, Zhanna Kaufman, Yuriy Brun, Talia Ringer. #ITP #Coq #MachineLearning

** April 2022

*** 29-Abr-22
+ [[https://jonascarpay.com/posts/2022-04-26-calligraphy-tutorial.html][Calligraphy tutorial]]. ~ Jonas Carpay (@jonascarpay). #Haskell #FunctionalProgramming
+ [[https://danilafe.com/blog/haskell_catamorphisms/][Generalizing folds in Haskell]]. ~ Danila Fedorin. #Haskell #FunctionalProgramming
+ [[https://iagoleal.com/posts/calculus-symbolic/][Let’s program a calculus student]]. ~ Iago Leal de Freitas. #Haskell #FunctionalProgramming #Math
+ [[https://www.michaelpj.com/blog/2022/04/24/on-commenting-code.html][On commenting code]]. ~ Michael Peyton Jones (@mpeytonjones). #Programming

*** 28-Abr-22
+ [[https://gowers.wordpress.com/2022/04/28/announcing-an-automatic-theorem-proving-project/][Announcing an automatic theorem proving project]]. ~ Timothy Gowers (@wtgowers). #ATP #ITP #Math #AI
+ [[https://drive.google.com/file/d/1-FFa6nMVg18m1zPtoAQrFalwpx2YaGK4/view][How can it be feasible to find proofs?]] ~ W. T. Gowers (@wtgowers). #ATP #ITP #Math #AI
+ [[https://www.tandfonline.com/doi/full/10.1080/10586458.2022.2062073][Simple type theory is not too simple: Grothendieck’s schemes without dependent types]]. ~ Anthony Bordg, Lawrence Paulson, Wenda Li. #ITP #IsabelleHOL #Math
+ [[https://www.fpcomplete.com/blog/hidden-dangers-of-ratio/][The hidden dangers of Haskell's Ratio type]]. ~ Neil Mayhew. #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2022/4/28/traverse-fully-generalized-loops][Traverse: Fully generalized loops]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 27-Abr-22
+ [[https://lawrencecpaulson.github.io//2022/04/27/Wetzel.html][Wetzel's problem and the continuum hypothesis]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2204.12311][Formalizing a diophantine representation of the set of prime numbers]]. ~ Karol Pąk, Cezary Kaliszyk. #ITP #Mizar #Math
+ [[https://serokell.io/blog/haskell-typeclasses][Introduction to Haskell typeclasses]]. ~ Gints Dreimanis. #Haskell #FunctionalProgramming

*** 25-Abr-22
+ [[https://gilmi.me/blog/post/2022/04/24/learn-twain-bulletin-app][Building a bulletin board using twain and friends]]. ~ Gil Mizrahi (@_gilmi). #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2022/4/25/effectful-loops-sequence-and-mapm][Effectful loops: sequence and mapM]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[http://humbox.ac.uk/5497/][Logic Gallery]]. ~ David Marans. #Logic

*** 24-Abr-22
+ [[https://buzzsprout.com/758831/10473564][Optimización bi-nivel, matemáticas y Julia]]. ~ Jesús-Adolfo Mejía (@_jmejia) y Camilo Chacón Sartori (@camilo_chacon_s). #Podcast #Matemáticas #Programación #Informática #JuliaLang
+ [[https://youtu.be/xYClAk5LDyo][Platicando sobre "Historia de los lenguajes de programación" ~ Manuel Rubio (@MRonErlang)]]. #Programación H/T @camilo_chacon_s
+ [[https://ink.library.smu.edu.sg/cgi/viewcontent.cgi?article=8102&context=sis_research][Linear algebra for computer science]]. ~ M. Thulasidas. #eBook #Math

*** 23-Abr-22
+ [[https://lmcs.episciences.org/9362/pdf][Beyond notations: Hygienic macro expansion for theorem proving languages]]. ~ Sebastian Ullrich & Leonardo de Moura. #ITP #LeanProver
+ [[http://ryandoeng.es/petr4-parsers.pdf][Leapfrog: Certified equivalence for protocol parsers]]. ~ Ryan Doenges et als. #ITP #Coq
+ [[https://monadplus.pro/haskell/2022/04/19/free-interpreter/][Free monads in the real world]]. ~ Arnau Abella. #Haskell #FunctionalProgramming
+ [[https://www.tandfonline.com/doi/full/10.1080/0952813X.2022.2062456 ][A Prolog application for reasoning on maths puzzles with diagrams]]. ~ Riccardo Buscaroli, Federico Chesani, Giulia Giuliani, Daniela Loreti. & Paola Mello. #Prolog #LogicProgramming #Math
+ [[https://www.ams.org/journals/tran/1959-091-01/S0002-9947-1959-0102480-9/S0002-9947-1959-0102480-9.pdf][Recursive functionals and quantifiers of finite types I]].~ S. C. Kleene (1959). #Logic #Math  #CompSci
+ [[https://www.ams.org/journals/tran/1963-108-01/S0002-9947-1963-0153557-4/S0002-9947-1963-0153557-4.pdf][Recursive functionals and quantifiers of finite types II]].~ S. C. Kleene (1963). #Logic #Math  #CompSci

*** 22-Abr-22
+ [[https://www.isa-afp.org/entries/Multiset_Ordering_NPC.html][The generalized multiset ordering is NP-complete]]. ~ René Thiemann & Lukas Schmidinger. #ITP #IsabelleHOL
+ [[https://luctielen.com/posts/create_recursion_schemes_using_comonads/][Create recursion-schemes using comonads]]. ~ Luc Tielen (@luctielen). #Haskell #FunctionalProgramming
+ [[https://watch.softinio.com/w/tgDXLAUEAhGooiJiskwCFy][Namespaced DeBruijn indices]]. ~ Gabriella Gonzalez  (@GabriellaG439). #Haskell #FunctionalProgramming
+ [[https://medium.com/@alvaro3chess/why-should-you-try-elm-20f33607976f][Why should you try Elm? ~ Álvaro Sánchez (@Forensor)]]. #Elm #FunctionalProgramming
+ [[https://archive.org/details/BubliothecaMathematicaStephenColeKleeneIntroductionToMetamathematicsWoltersNoordhoffPublishing1971][Introduction to metamathematics]]. ~ Stephen Cole Kleene (1952). #eBook #Logic #Math via @internetarchive

*** 21-Abr-22
+ [[https://andraskovacs.github.io/pdfs/phdthesis_compact.pdf][Type-theoretic signatures for algebraic theories and inductive types]]. ~ András Kovács. #PhD_Thesis #ITP #Agda

*** 20-Abr-22
+ [[https://lawrencecpaulson.github.io//2022/04/20/Why-constructive.html][Why are you being constructive?]] ~ Lawrence C. Paulson (@LawrPaulson). #Logic #Math
+ [[http://perso.ens-lyon.fr/colin.riba/teaching/pp/notespp.pdf][Proofs and programs (Course notes)]]. ~ Colin Riba. #Logic #LambdaCalculus
+ [[https://swalla24.people.uic.edu/org-research/][Research notes with Org-Mode]]. ~ Sam Wallace #Emacs #OrgMode

*** 19-Abr-22
+ [[https://www.isa-afp.org/entries/Frequency_Moments.html][Formalization of randomized approximation algorithms for frequency moments (in Isabelle/HOL)]]. ~ Emin Karayel. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Prefix_Free_Code_Combinators.html][A combinator library for prefix-free codes (in Isabelle/HOL)]]. ~ Emin Karayel. #ITP #IsabelleHOL
+ [[https://serokell.io/blog/doctests-in-haskell][Introduction to doctests in Haskell]]. ~ Nurlan Alkuatov. #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2022/4/18/combining-ideas-mapaccum][Combining ideas: mapAccum]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://youtu.be/7NBAmkHHFS0][Functional programming: an (Emacs) Lisp view 2/n]]. ~ Jens Jensen. #Lisp #FunctionalProgramming #Emacs

*** 17-Abr-22
+ [[https://arxiv.org/abs/2204.07112][A formally certified end-to-end implementation of Shor's factorization algorithm]]. ~ Yuxiang Peng, Kesha Hietala, Runzhou Tao, Liyi Li, Robert Rand, Michael Hicks, Xiaodi Wu. #ITP #Coq #Quantum_computing

*** 16-Abr-22
+ [[http://sigtbd.csail.mit.edu/pubs/2022/sigtbd22-paper7.pdf][Country-Fried Coq: Overly-formalized nonstandard arithmetic (with applications to Computer Science research)]]. ~ Michael Coulombe. #ITP #Coq #Math
+ [[https://www.mat.unb.br/ayala/TeoremaHall.pdf][Hall’s theorem for enumerable finite sets]]. ~ Fabián Fernando Serrano Suárez, Mauricio Ayala-Rincón & Thaynara Arielly de Lima. #ITP #IsabelleHOL #Math

*** 15-Abr-22
+ [[https://mmhaskell.com/blog/2022/4/14/using-scans-to-accumulate][Using scans to accumulate]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 14-Abr-22
+ [[https://www.msoos.org/2022/04/proof-traces-for-sat-solvers/][Proof traces for SAT solvers]]. ~ Mate Soos (@SoosMate). #ATP #SATSolvers
+ [[https://felixspringer.xyz/homepage/blog/anInterfaceForAccessingEnvironmentVariables][An interface for accessing environment variables]]. ~ Felix Springer. #Haskell #FunctionalProgramming
+ [[https://wiki.tfpie.science.ru.nl/images/e/e7/Intro-Func-Objects-CS1.pdf][Introduction to functional classes in CS1]]. ~ Marco T. Morazán. #Racket #FunctionalProgramming
+ [[https://mindmatters.ai/2022/03/the-ai-illusion-state-of-the-art-chatbots-arent-what-they-seem/][The AI illusion: State-of-the-art chatbots aren’t what they seem]]. ~ Gary Smith (@ProfGarySmith). #AI

*** 13-Abr-22
+ [[https://lawrencecpaulson.github.io//2022/04/13/Sledgehammer.html][Sledgehammer: some history, some tips]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL
+ [[http://perso.eleves.ens-rennes.fr/people/romeo.la-spina/pdf/rapport-projet-La_Spina.pdf][Verification of a Just-In-Time compiler]]. ~ Roméo La Spina. #ITP #Coq
+ [[https://arxiv.org/abs/2204.05653v1][Functional Pearl: Dependent type inference via free higher-order unification]]. ~ Nikolai Kudasov. #Haskell #FunctionalProgramming #Logic #TypeTheory
+ [[https://wiki.tfpie.science.ru.nl/images/9/97/Functional_programming_learning_path.pdf][Functional programming learning path]]. ~ Lidia V. Gorodnyaya & Dmitry A. Kondratyev. #FunctionalProgramming
+ [[http://www.cas.mcmaster.ca/~anand/TFPIEStateDiagrams.pdf][Teaching interaction using state diagrams]]. ~ Padma Pasupathi et als. #Elm #FunctionalProgramming #Teaching

*** 12-Abr-22
+ [[https://hal.archives-ouvertes.fr/hal-03633318/document][Proof Pearl: Formalizing spreads and packings of the smallest projective space PG(3,2) using the Coq proof assistant]]. ~ Nicolas Magaud. #ITP #Coq #Math
+ [[https://arxiv.org/abs/2204.02643][Modular pre-processing for automated reasoning in dependent type theory]]. ~ Valentin Blot, Denis Cousineau, Enzo Crance, Louise Dubois de Prisque, Chantal Keller, Assia Mahboubi & Pierre Vial. #ITP #Coq #SMT
+ [[https://serokell.io/blog/whats-that-typeclass-monoid][What's that typeclass: Monoid]]. ~ Gints Dreimanis. #Haskell #FunctionalProgramming
+ [[https://wiki.tfpie.science.ru.nl/images/b/ba/TFPIE_2022_Jacobsen_Villadsen.pdf][Teaching functional programmers logic and metatheory]]. ~ Frederik Krogsdal Jacobsen & ørgen Villadsen. #ITP #Coq #Logic #Haskell #FunctionalProgramming

*** 11-Abr-22
+ [[https://bor0.wordpress.com/2022/04/10/implementing-a-formal-system-in-python/][Implementing a formal system in Python]]. ~ Boro Sitnikovski  (@BSitnikovski). #Python #Programming #Logic #Math

*** 09-Abr-22
+ [[https://blog.poisson.chat/posts/2022-04-07-pro-per-proper.html][The pro-PER meaning of "proper"]]. ~ Li-yao Xia (@lysxia). #ITP #Coq
+ [[https://sf.snu.ac.kr/publications/promising-seq-full.pdf][Sequential reasoning for optimizing compilers under weak memory concurrency]]. ~ M. Cho, S.H. Lee, D. Lee, C.K. Hur, O. Lahav. #ITP #Coq
+ [[https://arxiv.org/abs/2204.00076v1][Reachability logic for low-level programs]]. ~ Nico Naus, Freek Verbeek, Marc Schoolderman, Binoy Ravindran. #ITP #IsabelleHOL

*** 08-Abr-22
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LSFA2021.4][SeCaV: A sequent calculus verifier in Isabelle/HOL]]. ~ Asta Halkjær From, Frederik Krogsdal Jacobsen & Jørgen Villadsen. #ITP #IsabelleHOL #Logic
+ [[https://github.com/lexi-lambda/eff/blob/8c4df4bf54faf22456354be18095b14825be5e85/notes/semantics-zoo.md][The effect semantics zoo]]. ~ Alexis King (@lexi_lambda). #Haskell #FunctionalProgramming
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LSFA2021.6][GADTs, functoriality, parametricity: Pick two]]. ~ Patricia Johann, Enrico Ghiorzi & Daniel Jeffries. #Haskell #FunctionalProgramming
+ [[http://siek.blogspot.com/2022/04/using-agdas-inductionrecursion-library.html][Using Agda's induction/recursion library]]. ~ Jeremy Siek (@jeremysiek). #ITP #Agda #FunctionalProgramming

*** 07-Abr-22
+ "Lisp is worth learning for the profound enlightenment experience you will have when you finally get it; that experience will make you a better programmer for the rest of your days, even if you never actually use Lisp itself a lot." ~ Eric S. Raymond. #Quote #Programming #CompSci
+ [[https://www.glc.us.es/~jalonso/exercitium/elementos-de-una-matriz-con-algun-vecino-menor/][#Exercitium: Enunciado de "Elementos de una matriz con algún vecino menor"]]. #Haskell #ProgramaciónFuncional
+ [[https://youtu.be/_uOlyfzppVc][#Exercitium: Soluciones de "Familias de números con algún dígito en común"]]. #Haskell #ProgramaciónFuncional
+ [[https://www.glc.us.es/~jalonso/vestigium/pfh-ejercicios-con-acciones-io-entrada-salida/][#PFH: Ejercicios con acciones IO (entrada/salida)]]. #Haskell #ProgramaciónFuncional
+ [[https://lawrencecpaulson.github.io//2022/04/06/ZFC_in_HOL.html][Integrating Zermelo-Fraenkel set theory with higher-order logic]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL #SetTheory
+ [[https://well-typed.com/blog/2022/04/large-anon/][large-anon: Practical scalable anonymous records for Haskell]]. ~ Edsko de Vries (@EdskoDeVries). #Haskell #FunctionalProgramming
+ [[https://blog.bitsrc.io/learn-to-calculate-time-complexity-from-scratch-part-i-9fac637d9bba][How to calculate time complexity from scratch (Part 1: Everything a programmer needs to know about time complexity, from zero to hero)]]. ~ Stephen Jose. #Algorithms
+ [[https://bryceclarke.github.io/A_general_framework_for_cofunctors.pdf][A general framework for cofunctors]]. ~ Bryce Clarke (@8ryceClarke). #CategoryTheory

*** 06-Abr-22
+ [[http://reasonableapproximation.net/2022/04/02/variadic-hm.html][Variadic functions in Hindley Milner]]. ~ Sandy Maguire. #Haskell #FunctionalProgramming
+ [[https://bartoszmilewski.com/2022/04/05/teaching-optics-through-conspiracy-theories/][Teaching optics through conspiracy theories]]. ~ Bartosz Milewski (@BartoszMilewski). #Haskell #FunctionalProgramming #CategoryTheory
+ [[https://www.maths.ed.ac.uk/~tl/gt/gt.pdf][Galois theory]]. ~ Tom Leinster. #Math
+ [[https://youtu.be/8XUutFBbUrg][A tour of Prolog]]. ~ Markus Triska (@MarkusTriska). #Prolog #LogicProgramming

*** 05-Abr-22
+ [[https://archive.org/details/AnnalsOfMathematicalStudies6ChurchAlonzoTheCalculiOfLambdaConversionPrincetonUniversityPress1941][The calculi of lambda conversion]]. ~ Alonzo Church (1941). #eBook #Logic #CompSci via @internetarchive

*** 04-Abr-22
+ [[https://escholarship.org/content/qt8hb1w6js/qt8hb1w6js.pdf][Formalizing the beginnings of bayesian probability theory in the Lean theorem prover]]. ~ Rishikesh Hirendu Vaishnav. #MSc_Thesis #ITP #LeanProver #Math
+ [[https://hal.inria.fr/hal-03626860/document][Number notation dans Coq (démonstration)]]. ~ Pierre Roux. #ITP #Coq
+ [[https://hal.inria.fr/hal-03626792/document][Un Coq apprend à un bébé Colibri à flotter]]. ~ Arthur Correnson & François Bobot. #ITP #Coq
+ [[https://otee.dev/2022/04/03/understanding-tail-recursion.html][Understanding tail recursion]]. ~ Oitihjya Sen (@oteecodes). #Clojure #FunctionalProgramming

*** 03-Abr-22
+ [[https://fm.csl.sri.com/SSFT15/Timeline.pages.pdf][A timeline for logic, λ-calculus, and programming language theory]]. ~ Dana S. Scott. #History #Logic #LambdaCalculus #FunctionalProgramming
+ [[https://archive.org/details/combinatorylogic0001curr][Combinatory logic]]. ~ H. B. Curry and R. Feys (1958). #eBook #Logic via @internetarchive
+ [[https://dev.to/tamerlang/the-simple-guide-to-programming-paradigms-36o][The simple guide to programming paradigms]]. ~ Tamerlan Gudabayev. #Programming

*** 02-Abr-22
+ [[https://prg.is.titech.ac.jp/wp-content/uploads/2022/03/saito2022ppl.pdf][Practical aspects of monadic equational reasoning in Coq]]. ~ Ayumu Saito1, Reynald Affeldt. #ITP #Coq
+ [[https://link.springer.com/article/10.1007/s00607-022-01069-2][Formal model for inter-component communication and its security in Android]]. ~ Mohamed A. El-Zawawy, Parvez Faruki & Mauro Conti. #ITP #Coq
+ [[https://arxiv.org/abs/2203.14711][Towards formal verification of HotStuff-based Byzantine Fault Tolerant consensus in Agda: Extended version]]. ~ Harold Carr, Christopher Jenkins, Mark Moir, Victor Cacciari Miraldo & Lisandra Silva. #ITP #Agda
+ [[https://rjlipton.wpcomstaging.com/2022/04/01/an-ozone-hole-in-logic/][An ozone hole in Logic]]. ~ R.J. Lipton & K.W. Regan. #Logic #Programming #Scala #TypeTheory

*** 01-Abr-22
+ [[https://medium.com/pragmatic-programmers/pure-print-style-debugging-in-haskell-c4c5d4f39afa][Pure print-style debugging in haskell]]. ~ Rebecca Skinner. #Haskell #FunctionalProgramming
+ [[https://blog.ploeh.dk/2022/03/28/monads][Monads]]. ~ Mark Seemann (@ploeh). #Haskell #FunctionalProgramming
+ [[http://blog.vmchale.com/article/intern-identifiers][Names in Haskell compilers]]. ~ Vanessa McHale. #Haskell #FunctionalProgramming
+ [[https://dmitrytsepelev.dev/haskell-adventures-functors][Haskell adventures: Functors]]. ~ Dmitry Tsepelev (@dmitrytsepelev). #Haskell #FunctionalProgramming

** March 2022

*** 31-Mar-22
+ [[https://arxiv.org/abs/2203.16344][Formalizing the ring of adèles of a global field]]. ~ María Inés de Frutos-Fernández. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2203.16341][Primality tests and prime certificate]]. ~ Laurent Théry. #ITP #Coq #Math
+ [[https://lawrencecpaulson.github.io//2022/03/30/Quotienting.html][Equivalence classes and quotienting]]. ~ Lawrence C. Paulson (@LawrPaulson). #Logic #Math #ITP

*** 30-Mar-22
+ [[https://youtu.be/YOI743XVC3g][[London Learning Lean] Fourier series]]. ~ Heather Macbeth. #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/FOL_Seq_Calc3.html][A naive prover for first-order logic (in Isabelle/HOL)]]. ~ Asta Halkjær From. #ITP #IsabelleHOL #Logic #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2022/03/modeling-pluscal-in-haskell-using.html][Modeling PlusCal in Haskell using Cartesian products of NFAs]]. ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming #PlusCal

*** 29-Mar-22
+ [[https://www.isa-afp.org/entries/Dedekind_Real.html][Constructing the reals as Dedekind cuts of rationals]]. ~ Jacques D. Fleuriot, Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://www.scitepress.org/Papers/2022/108387/108387.pdf][Machine-checked verification of cognitive agents]]. ~ Alexander Birch Jensen. #ITP #IsabelleHOL
+ [[https://imada.sdu.dk/~lcf/pubs/paper58.pdf][Certifying choreography compilation]]. ~ Lúıs Cruz-Filipe, Fabrizio Montesi, Marco Peressotti. #ITP #Coq
+ [[https://introproofs.github.io/s22/][Course: Introduction to proofs]]. ~ Sina Hazratpour. #ITP #LeanProver #Logic

*** 28-Mar-22
+ [[https://arxiv.org/abs/2203.13604][Formal semantics and formally verified validation for temporal planning]]. ~ Mohammad Abdulaziz, Lukas Koller. #ITP #IsabelleHOL
+ [[http://philsci-archive.pitt.edu/20398/][Computer verification for historians of philosophy]]. ~ Landon Elkind. #ITP
+ [[https://tel.archives-ouvertes.fr/tel-03622012/document][Proof-oriented domain-specific language design for high-assurance software]]. ~ Denis Merigoux (@DMerigoux). #PhD_Thesis #Programme_verification #Formal_methods

*** 27-Mar-22
+ [[https://martin.kleppmann.com/2019/09/14/strange-loop-isabelle.html][Correctness proofs of distributed systems with Isabelle]]. ~ Martin Kleppmann. #ITP #IsabelleHOL

*** 26-Mar-22
+ [[https://matryoshka-project.github.io/pubs/mechanical.pdf][Mechanical mathematicians (A new generation of automatic theorem provers eliminate bugs in software and mathematics)]]. ~ Alexander Bentkamp et als. #ATP #ITP #Logic #Math
+ [[https://arxiv.org/abs/2203.11341][Binary codes that do not preserve primitivity]]. ~ Štěpán Holub, Martin Raška, Štěpán Starosta. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2201.05860v1][View-based Owicki-Gries reasoning for persistent x86-TSO (Extended version)]]. ~ Eleni Vafeiadi Bila, Brijesh Dongol, Ori Lahav, Azalea Raad, John Wickerson. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2203.11826][Reduction of register pushdown systems with freshness property to pushdown systems in LTL model checking]]. ~ Yoshiaki Takata, Ryoma Senda, Hiroyuki Seki. #ITP #Coq

*** 25-Mar-22
+ [[https://mmhaskell.com/blog/2022/3/24/making-your-own-monad][Making your own Monad]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://prophetlabs.de/posts/unsafeCoerceDict.html][Faking local instances with unsafeCoerce Dict]]. ~ Finn Schneider. #Haskell #FunctionalProgramming
+ [[https://dmitrytsepelev.dev/haskell-adventures][Haskell adventures: digging into the declarative approach]]. ~ Dmitry Tsepelev (@dmitrytsepelev). #Haskell #FunctionalProgramming

*** 24-Mar-22
+ [[https://www.isa-afp.org/entries/Ackermanns_not_PR.html?utm_source=dlvr.it&utm_medium=twitter][Ackermann's function is not primitive recursive]]. ~ Lawrence C. Paulson (@LawrPaulson). #ITP #IsabelleHOL
+ [[https://well-typed.com/blog/2022/03/large-records-without-the-quotes/][New large-records release: now with 100% fewer quotes]]. ~ Edsko de Vries. #Haskell #FunctionalProgramming
+ [[https://theconversation.com/leonardo-verne-y-las-inteligencias-multiples-artificiales-109015][Leonardo, Verne y las inteligencias múltiples artificiales]]. ~ Francisco Fernández de Vega. #IA

*** 23-Mar-22
+ [[https://lawrencecpaulson.github.io/2022/03/23/Locales.html][Type classes versus locales]]. ~ Lawrence C Paulson (@LawrPaulson). #ITP #IsabelleHOL
+ [[https://reasonablypolymorphic.com/blog/proof-carrying-code/index.html][Review: Proof-Carrying Code]]. ~ Sandy Maguire. #Agda #FunctionalProgramming #ITP
+ [[https://reasonablypolymorphic.com/blog/syntax-guided-synthesis/index.html][Review: Syntax-guided synthesis]]. ~ Sandy Maguire. #Agda #FunctionalProgramming #ITP

*** 22-Mar-22
+ [[https://serokell.io/blog/algebraic-data-types-in-haskell][Algebraic data types in Haskell]]. ~ Gints Dreimanis. #Haskell #FunctionalProgramming
+ [[https://www.buzzsprout.com/758831/10297185][Teoría de los lenguajes de programación]]. (Entrevista a Uma Zalakain (@typer_uma) por Camilo Chacón Sartori (@camilo_chacon_s)). #ProgramaciónFuncional

*** 21-Mar-22
+ [[https://mmhaskell.com/blog/2022/3/21/an-alternative-approach][An Alternative Approach]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 20-Mar-22
+ [[https://cacm.acm.org/magazines/2022/4/259398-explainable-ai/fulltext][Explainable AI]]. ~ By Veda C. Storey, Roman Lukyanenko, Wolfgang Maass, Jeffrey Parsons. #AI #XAI
+ [[https://cacm.acm.org/magazines/2022/4/259395-systems-abstractions/fulltext][Systems abstractions]]. ~ Peter J. Denning. #CompSci

*** 19-Mar-22
+ [[http://philsci-archive.pitt.edu/20355/1/talk_archive.pdf][What we talk about when we talk about mathematics]]. ~ Jeremy Avigad. #Math

*** 17-Mar-22
+ [[https://aarinc.org/Newsletters/135-2021-07.html#guest][The power of proof certificates]]. ~ Chantal Keller. #Automated_reasoning
+ [[https://aarinc.org/Newsletters/137-2022-03.html#guest][On how to improve cooperation between automated reasoning tools]]. ~ Pascal Fontaine. #Automated_reasoning
+ [[https://mmhaskell.com/blog/2022/3/17/cool-monad-combinators][Cool monad combinators]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 16-Mar-22
+ [[https://www.isa-afp.org/entries/Cotangent_PFD_Formula.html][A proof from THE BOOK: The partial fraction expansion of the cotangent]]. ~ Manuel Eberl (@pruvisto). #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2203.08016][Formalising decentralised exchanges in Coq]]. ~ Eske Hoy Nielsen, Danil Annenkov, Bas Spitters. #ITP #Coq
+ [[https://lawrencecpaulson.github.io//2022/03/16/Types_vs_Sets.html][Types versus sets (and what about categories?)]]. ~ Lawrence C Paulson (@LawrPaulson). #Logic #math #SetTheory #TypeTheory #LambdaCalculus

*** 15-Mar-22
+ [[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9733177][Formally verifying industry cryptography]]. ~ Mike Dodds. #ITP #FormalMethods #Cryptography
+ [[https://siddhartha-gadgil.github.io/automating-mathematics/posts/forward-reasoning-in-lean4/][Forward reasoning in Lean 4]]. ~ Siddhartha Gadgil. #ITP #LeanProver
+ [[https://github.com/siddhartha-gadgil/lean-loris][Experiments with some ways of automating reasoning in Lean 4]]. ~ Siddhartha Gadgil. #ITP #LeanProver
+ [[https://github.com/leanprover-community/mathzoo][Lean mathzoo: a collection of mathematical formalizations in the Lean theorem prover]]. #ITP #LeanProver #Math #IMO
+ [[https://arxiv.org/abs/2109.09665][A flexible proof format for SAT solver-elaborator communication]]. ~ Seulkee Baek, Mario Carneiro, Marijn J.H. Heule. #ATP #Satisfiability #SAT_solver
+ [[https://arxiv.org/abs/2203.04608][Modular probabilistic models via algebraic effects]]. ~ Minh Nguyen, Roly Perera, Meng Wang, Nicolas Wu. #Haskell #FunctionalProgramming #ProbabilisticProgramming
+ [[https://starsandspira.ls/docs/places22-draft.pdf][Replicate, reuse, repeat: Capturing non-linear communication via session types and graded modal types]]. ~ Daniel Marshall, Dominic Orchard. #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2022/3/14/does-your-monad-even-lift][Does your Monad even Lift?]] ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2203.06804][Infinite Wordle and the Mastermind numbers]]. ~ Joel David Hamkins. #Logic #Math
+ [[https://mihaiolteanu.me/books.html][A non-standard book list for software developers]]. ~ Mihai Olteanu. #Books #Math #CompSci
+ [[http://hojaynumeros.blogspot.com/2022/03/los-numeros-cuadrados-1.html][Los números cuadrados (1)]]. ~ Antonio Roldán (@Connumeros). #Matemáticas #Programación

*** 13-Mar-22
+ [[https://coot.me/posts/lazy-st.html][A remark on Lazy ST monad and MonadFix]]. ~ Marcin Szamotulski. #Haskell #FunctionalProgramming
+ [[https://reasonablypolymorphic.com/blog/generic-parallel-fp/index.html][Review: Generic parallel functional programming]]. ~ Sandy Maguire. #Haskell #FunctionalProgramming

*** 12-Mar-22
+ [[https://www.cambridge.org/core/elements/higherorder-logic-and-type-theory/1412809E9BB47277CD407882B3B6374B][Higher-Order logic and type theory]]. ~ John L. Bell. #Logic #TypeTheory
+ [[https://blog.adrianistan.eu/codigo-morse-prolog][Código Morse en Prolog]]. ~ Adrián Arroyo Calle (@aarroyoca). #Prolog #ProgramaciónLógica

*** 11-Mar-22
+ [[https://mmhaskell.com/blog/2022/3/10/shorter-run-functions][Shorter run functions]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://towardsdev.com/beginning-haskell-type-system-part-1-198b2bb42d9e][Beginning Haskell type system, part 1 (The basics of the Haskell type system)]]. ~ C. L. Beard. #Haskell #FunctionalProgramming
+ [[https://www.tomwells.org/blog/haskell_for_prototyping][Haskell for extreme idea brainstorming]]. ~ Tom Wells. #Haskell #FunctionalProgramming
+ [[https://youtube.com/playlist?list=PLw2QsPIp2pxtkNQRvnOlV2xFkrQ8mPqAb][Learn Haskell for Plutus (Cardano ADA Contracts)]]. ~ Jason Barhorst. #Haskell #FunctionalProgramming

*** 10-Mar-22
+ [[https://serokell.io/blog/how-to-learn-haskell-in-10-minutes][15 Resources to help you learn Haskell in 2022]]. ~ Gints Dreimanis. #Haskell #FunctionalProgramming

*** 09-Mar-22
+ [[https://lawrencecpaulson.github.io//2022/03/09/Quaternions.html][The quaterions—and type classes]]. ~ Lawrence C Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math

*** 08-Mar-22
+ [[https://hal.inria.fr/hal-03596267/document][Synthetic Kolmogorov complexity in Coq]]. ~ Yannick Forster,Fabian Kunze, Nils Lauermann. #ITP #Coq
+ [[https://people.eng.unimelb.edu.au/rizkallahc/theses/jack-drury-postgrad-project-report.pdf][Information flow aware languages (Kuifje emerges from the Shadows)]]. ~ Jack Drury. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2203.03054][Verification of Bitcoin's smart contracts in Agda using weakest preconditions for access control]]. ~ Fahad F. Alhabardi, Arnold Beckmann, Bogdan Lazar, Anton Setzer. #ITP #Agda #Blockchain #Cryptocurrency
+ [[https://leanprover-community.github.io/blog/posts/month-in-mathlib-feb-2022/][This month in mathlib (Feb 2022)]]. #ITP #LeanProver #Mathlib #Math
+ [[https://mmhaskell.com/blog/2022/3/7/running-with-monads][Running with monads]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://irreal.org/blog/?p=10373][Reading RSS with elfeed]]. #Emacs

*** 07-Mar-22
+ [[https://www.isa-afp.org/entries/ResiduatedTransitionSystem.html][Residuated transition systems (in Isabelle/HOL)]]. ~ Eugene W. Stark. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Independence_CH.html][The independence of the continuum hypothesis in Isabelle/ZF]]. ~ Emmanuel Gunther, Miguel Pagano, Pedro Sánchez Terraf, Matías Steinberg. #ITP #IsabelleZF #Math
+ [[https://youtu.be/lvYVuOmUVs8][OpenAI tackles Math: Formal mathematics statement curriculum learning]]. ~  Yannic Kilcher. #ITP #LeanProver #Math #IMO #AI
+ [[https://elbear.com/how-to-use-monads-without-understanding-them.html][How to use monads without understanding them]]. ~ Lucian Ursu. #Haskell #FunctionalProgramming
+ [[https://reasonablypolymorphic.com/blog/complexity-analysis/index.html][Review: Lightweight semiformal time complexity analysis for purely functional data structures]]. ~ Sandy Maguire. #Haskell #FunctionalProgramming
+ [[https://cuddly-octo-palm-tree.com/posts/2022-03-06-opt-clj-8/][Notes on optimizing Clojure code: Arrays]]. ~ Gary Verhaegen (@gaverhae). #Clojure #FunctionalProgramming

*** 06-Mar-22
+ [[https://bit.ly/3ChzBFP][Fantasmas en Matemáticas]]. ~ Juan Arias de Reyna. #Matemáticas

*** 05-Mar-22
+ [[https://lmcs.episciences.org/9148/pdf][Verified approximation algorithms]]. ~ Robin Eßmann, Tobias Nipkow, Simon Robillard, Ujkan Sulejmani. #ITP #IsabelleHOL
+ [[https://research.chalmers.se/publication/528615/file/528615_Fulltext.pdf][Theory exploration for programs and proofs]]. ~ Sólrún Halla Einarsdóttir. #ITP #IsabelleHOL #Haskell #FunctionalProgramming
+ [[https://hal.inria.fr/hal-03592675/document][Reliably reproducing machine-checked proofs with the Coq platform]]. ~ Karl Palmskog, Enrico Tassi, Théo Zimmermann. #ITP #Coq
+ [[https://arxiv.org/abs/2202.13823 ][Automatic test-case reduction in proof assistants: A case study in Coq]]. ~ Jason Gross, Théo Zimmermann, Miraya Poddar-Agrawal, Adam Chlipala. #ITP #Coq
+ [[https://lemonidas.github.io/pdf/TestingOcamlThroughCoq.pdf][Property-based testing for OCaml through Coq]]. ~ Paaras Bhandari, Leonidas Lampropoulos. #ITP #Coq #OCaml #FunctionalProgramming
+ [[https://youtu.be/O15dbvEDApg][[POPL'22] Panel 1: Proof assistants for PL and math]]. #ITP #CompSci #Math
+ [[https://arxiv.org/abs/2202.13771][Conceptual mathematics via literate programming]]. ~ Ian Benson, Jim Darby, Neil MacDonald, Jesse Sigal. #Math #Python #Haskell

*** 04-Mar-22
+ [[https://arxiv.org/abs/2202.13833][Formally verified asymptotic consensus in robust networks]]. ~ Mohit Tekriwal, Avi Tachna-Fram, Jean-Baptiste Jeannin, Manos Kapritsos, Dimitra Panagou. #ITP #Coq
+ [[https://arxiv.org/abs/2202.12662][VLSM: Validating labelled state transition and message production systems]]. ~ Vlad Zamfir, Mihai Calancea, Denisa Diaconescu, Brandon Moore, Karl Palmskog, Traian Florin Şerbănuţă, Michael Stay. #ITP #Coq
+ [[https://www.isa-afp.org/browser_info/current/AFP/Transitive_Models/document.pdf][Transitive models of fragments of ZFC (in Isabelle/HOL)]]. ~ Emmanuel Gunther, Miguel Pagano, Pedro Sánchez Terraf, Matías Steinberg. #ITP #IsabelleHOL #Math
+ [[https://wadler.blogspot.com/2022/03/optics-vs-lenses-operationally.html][Optics vs lenses, operationally]]. ~ Philip Wadler. #CategoryTheory #FunctionalProgramming

*** 03-Mar-22
+ [[https://arxiv.org/abs/2203.01173][Characteristics of de Bruijn's early proof checker Automath]]. ~ Herman Geuvers, Rob Nederpelt. #ITP #Automath
+ [[https://mmhaskell.com/blog/2022/3/3/using-either-as-a-monad][Using Either as a Monad]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 02-Mar-22
+ [[https://lawrencecpaulson.github.io//2022/03/02/Type_classes.html][Axiomatic type classes: some history, some examples]]. ~ Lawrence C Paulson (@LawrPaulson). #ITP #IsabelleHOL #FunctionalProgramming
+ [[https://www.haskellforall.com/2022/03/applicatives-should-usually-implement.html][Applicatives should usually implement Semigroup and Monoid]]. ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming
+ [[https://interstices.info/lavenement-de-la-synthese-de-programme/][L’avènement de la synthèse de programme]]. ~ Nathanaël Fijalkow. #Programming
+ [[https://plato.stanford.edu/entries/lambda-calculus/][The lambda calculus]]. ~ Jesse Alama, Johannes Korbmacher. #LambdaCalculus
+ [[https://pbrown.me/blog/functional-prolog-map-filter-and-reduce/][Functional Prolog: Map, filter and reduce]]. ~ Paul Brown. #Prolog #LogicProgramming #FunctionalProgramming H/T: @ThePrologClause
+ [[https://introajulia.org/][Introducción a la programación en Julia]]. ~ Ben Lauwens y Allen Downey. Traducido por Pamela Bustamante(@pambusf). #JuliaLang #Programación
+ [[https://algoritmo.buzzsprout.com/758831/10159734-pamela-bustamante-optimizacion-matematica-y-los-retos-de-la-inteligencia-artificial-e-77][Optimización matemática y los retos de la inteligencia artificial (Pódcast) ~ Pamela Bustamante (@pambusf) y Camilo Chacón Sartori (@camilo_chacon_s) en "Había una vez un algoritmo]]..." #JuliaLang #Programación

*** 01-Mar-22
+ [[https://hal.inria.fr/hal-03585618/document][A formalisation of algorithms for sorting network]]. ~ Laurent Théry. #ITP #Coq
+ [[https://mmhaskell.com/blog/2022/2/28/treating-strings-like-lists][Treating strings like lists]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://amodernist.com/texts/emacs-compat.html][Teaching old Emacsen new tricks]]. ~ Philip Kaludercic. #Emacs #Lisp

** February 2022

*** 28-Feb-22
+ [[https://www.haskellforall.com/2022/02/what-is-monad-morphism-in-haskell.html][What is a monad morphism (in Haskell)?]] ~ Gabriella Gonzalez (@GabriellaG439). #Haskell #FunctionalProgramming
+ [[https://reasonablypolymorphic.com/blog/review-sheafs/index.html][Review: A very elementary introduction to sheaves]]. ~ Sandy Maguire. #ITP #Agda #FunctionalProgramming #Math

*** 27-Feb-22
+ [[https://jappie.me/failing-in-haskell.html][Failing in Haskell]]. ~ Jappie Klooster (@jappieklooster). #Haskell #FunctionalProgramming

*** 26-Feb-22
+ [[https://www.cs.ru.nl/bachelors-theses/2022/Kimberley_Frings___1027103___Formalizing_and_proving_knights_and_knaves_puzzles_in_three_valued_logic_in_Coq.pdf][Formalizing and proving knights and knaves puzzles in three valued logic in Coq]]. ~ Kimberley Frings. #ITP #Coq
+ [[https://arxiv.org/abs/2202.10349][Certified verification of relational properties]]. ~ Lionel Blatter, Nikolai Kosmatov, Virgile Prevosto, Pascale Le Gall. #ITP #Coq
+ [[http://www.lix.polytechnique.fr/Labo/Samuel.Mimram/docs/mimram_div2.pdf][Division by two, in homotopy type theory]]. ~ Samuel Mimram, Émile Oleon. #ITP #Agda #HoTT
+ [[https://arxiv.org/abs/2202.09230][United monoids: Finding simplicial sets and labelled algebraic graphs in trees]]. ~ Andrey Mokhov. #Haskell #FunctionalProgramming

*** 25-Feb-22
+ [[https://dash.harvard.edu/handle/1/17463136][A foundational proof framework for cryptography]]. ~ Adam Petcher. #PhDThesis #ITP #Coq
+ [[https://blockscope.com/posts/2022-02-23-iffy-diffy.html][Conditional coding]]. ~ Phil de Joux (@philderbeast). #Haskell #FunctionalProgramming
+ [[https://dfithian.github.io/2021/02/18/database-implementation-part-2.html][Haskell database implementation, Part 2: Domain specific language and transactionality]]. ~ Dan Fithian. #Haskell #FunctionalProgramming
+ [[https://castillodel.github.io/aoc-haskell/][Learning Haskell during AOC]]. ~ Daniel del Castillo de la Rosa. #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2022/2/24/fusion-powered-strings][Fusion powered strings!]] ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://www.youtube.com/watch?v=l-luyVRgWVU][Programming Arduinos with Haskell and NASA's Copilot]]. ~ Joey Hess. #Haskell #FunctionalProgramming

*** 24-Feb-22
+ [[https://people.cs.umass.edu/~brun/pubs/pubs/First22icse.pdf][Diversity-driven automated formal verification]]. ~ Emily First, Yurity Brun. #ITP #Coq #MachineLearning
+ [[https://stefan-klinger.de/files/monadGuide.pdf][The Haskell programmer’s guide to the IO Monad (Don’t panic)]]. ~ Stefan Klinger (2005). #Haskell #FunctionalProgramming #CategoryTheory

*** 23-Feb-22
+ [[https://lawrencecpaulson.github.io/2022/02/23/Hereditarily_Finite.html][The hereditarily finite sets]]. ~ Lawrence C Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math

*** 22-Feb-22
+ [[https://arxiv.org/abs/2202.08017][Mechanization of LAGC semantics in Isabelle]]. ~ Niklas Heidler. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Universal_Hash_Families.html][Universal hash families (in Isabelle/HOL)]]. ~ Emin Karayel. #ITP #IsabelleHOL
+ [[https://ntnuopen.ntnu.no/ntnu-xmlui/bitstream/handle/11250/2980281/no.ntnu%3ainspera%3a79432288%3a34495681.pdf?sequence=1&isAllowed=y][Power quandles]]. ~ Torstein Vik. #ITP #LeanProver #Math
+ [[https://hal.inria.fr/hal-03580081/document][A constructive and synthetic theory of reducibility: Myhill's isomorphism theorem and Post's problem for many-one and truth-table reducibility in Coq]]. ~ Y. Forster, F. Jahn, G. Smolka. #ITP #Coq
+ [[https://lmcs.episciences.org/9100/pdf][Proof theory of Riesz spaces and modal Riesz spaces]]. ~ Christophe Lucas, Matteo Mio. #ITP #Coq #Logic
+ [[https://github.com/clucas26e4/Proof-Theory-of-Riesz-Spaces-and-Modal-Riesz-Spaces][Implementation of the hypersequent calculii HR and HMR introduced in the  article "Proof theory of Riesz spaces and modal Riesz spaces"]]. ~ Christophe Lucas. #ITP #Coq #Logic
+ [[https://github.com/nebhrajani-a/sicp][Structure and interpretation of computer programs notes]]. ~ Aditya Nebhrajani. #Racket #Programming #Emacs #OrgMode

*** 21-Feb-22
+ [[https://www.isa-afp.org/entries/Eval_FO.html][First-order query evaluation (in Isabelle/HOL)]]. ~ Martin Raszyk. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Wetzels_Problem.html][Wetzel's Problem and the Continuum Hypothesis (in Isabelle/HOL)]]. ~ Lawrence C Paulson. #ITP #IsabelleHOL #Math
+ [[https://github.com/goens/smf-ues-2022][Repositorio del minicurso "Demostración de teoremas interactiva asistida usando Lean"]]. ~ Andrés Goens. #ITP #LeanProver

*** 19-Feb-22
+ [[https://arxiv.org/abs/2202.05872][REST: Integrating term rewriting with program verification]]. ~ Zachary Grannan, Niki Vazou, Eva Darulova, Alexander J. Summers. #Haskell #LiquidHaskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2202.05959][Formalization of a stochastic approximation theorem]]. ~ Koundinya Vajjha, Barry Trager, Avraham Shinnar, Vasily Pestun. #ITP #Coq
+ [[https://arxiv.org/abs/2202.05587][Formal verification of iterative convergence of numerical algorithms]]. ~ Mohit Tekriwal, Joshua Miller, Jean-Baptiste Jeannin. #ITP #Coq
+ [[https://arxiv.org/abs/2202.06264][A simplified variant of Gödel's ontological argument]]. ~ Christoph Benzmüller. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2202.07329][The directed plump ordering]]. ~ Daniel Gratzer, Michael Shulman, Jonathan Sterling. #ITP #Agda

*** 18-Feb-22
+ [[https://medium.com/pragmatic-programmers/the-unreasonable-effectiveness-of-haskell-48d92c2fe266][The unreasonable effectiveness of Haskell (Reliability, resource management, and DSLs)]]. ~ Rebecca Skinner (@cercerilla). #Haskell #FunctionalProgramming
+ [[https://blog.adrianistan.eu/logtalk-prolog-orientado-objetos][Logtalk, Prolog orientado a objetos]]. ~ Adrián Arroyo Calle (@aarroyoca). #Prolog #Logtalk #LogicProgramming
+ [[https://johnwhitington.net/ocamlfromtheverybeginning/][OCaml from the very beginning]]. ~ John Whitington (@johnwhitington). #eBook #OCaml #FunctionalProgramming

*** 17-Feb-22
+ [[https://arxiv.org/abs/2202.08131][Natural language proof checking in introduction to proof classes - First experiences with Diproche]]. ~ Merlin Carl, Hinrich Lorenzen, Michael Schmitz. #ITP #Diproche #Math
+ [[https://reasonablypolymorphic.com/blog/ring-solving/index.html][Automatic ring solving]]. ~ Sandy Maguire. #ITP #Agda #Math
+ [[https://atareao.es/tutorial/reto-python/][Reto Python]]. ~ @atareao #Python #Programación
+ [[https://songlh.github.io/paper/survey.pdf][Learning and programming challenges of Rust: A mixed-methods study]]. ~ Shuofei Zhu et als. #RustLang
+ [[https://www.ams.org/journals/notices/202203/rnoti-p351.pdf][Calibrating computational complexity via definability: The work of Julia F]]. Knight. ~ Karen Lange. #Math #CompSci H/T: @AndresECaicedo1

*** 16-Feb-22
+ [[https://lawrencecpaulson.github.io/2022/02/16/Irrationals.html][A classical proof: exponentials are irrational]]. ~ Lawrence C Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2202.05040][Lebesgue induction and Tonelli's theorem in Coq]]. ~ Sylvie Boldo, François Clément, Vincent Martin, Micaela Mayero, Houda Mouhcine. #ITP #Coq #Math
+ [[https://youtu.be/Lf7ML_ErWvQ][Software can literally be perfect (How Formal Verification and Magmide could make provably correct code tractable for practicing software engineers)]]. ~ Blaine Hansen. #ITP #Coq #Magmide
+ [[https://www.uibk.ac.at/mathematik/algebra/staff/fritz-tobias/ct2021_course_projects/report_working_with_a_computer_proof_assistant.pdf][Working with a computer proof assistant]]. ~ Andrea Mair, Martin Fuchs. #ITP #LeanProver
+ [[https://libres.uncg.edu/ir/asu/f/Lapensee-Rankine_Samantha_December%202021_Thesis.pdf][Dynamic programming insights from programming contests]]. ~ Samantha Valentine Lapensée-Rankine. #MSc_Thesis #Programming

*** 15-Feb-22
+ [[https://www.isa-afp.org/entries/VYDRA_MDL.html][Multi-head monitoring of metric dynamic logic (in Isabelle/HOL)]]. ~ Martin Raszyk. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2202.05959][Formalization of a stochastic approximation theorem]]. ~ Koundinya Vajjha, Barry Trager, Avraham Shinnar, Vasily Pestun. #ITP #Coq #Math
+ [[https://luctielen.com/posts/analyses_are_arrows/][Analyses are arrows]]. ~ Luc Tielen (@luctielen). #Haskell #FunctionalProgramming
+ [[https://blog.cofree.coffee/2022-02-14-how-to-design-a-chat-bot/][How to design a chat bot]]. #Haskell #FunctionalProgramming
+ [[https://www.uibk.ac.at/mathematik/algebra/staff/fritz-tobias/ct2021_course_projects/category_theory.pdf][Monads in Computer Science]]. ~ Christina Kohl, Christina Schwaiger. #Haskell #FunctionalProgramming #CategoryTheory

*** 14-Feb-22
+ [[https://arxiv.org/abs/2202.05360][Formalized functional analysis with semilinear maps]]. ~ Frédéric Dupuis, Robert Y. Lewis, Heather Macbeth. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2004.00055][Explosive proofs of mathematical truths]]. ~ Scott Viteri, Simon DeDeo. #ITP #Coq #Math H/T: @LogicPractice
+ [[https://people.eecs.berkeley.edu/~bh/ss-toc2.html][Simply Scheme: Introducing Computer Science]]. ~ Brian Harvey, Matthew Wright (1999) #eBook #Scheme #FunctionalProgramming #CompSci

*** 13-Feb-22
+ [[https://cs.brown.edu/courses/cs1951x/][Course: Formal proof and verification]]. ~ Robert Y. Lewis. #ITP #LeanProver
+ [[https://arxiv.org/abs/2202.03159v1][L²-Betti numbers and computability of reals]]. ~ Clara Loeh, Matthias Uschold. #ITP #LeanProver #Math
+ [[http://ocramz.github.io/haskell/web/formlets/2022/02/12/formlets.html][Composable web forms with Applicative]]. ~ Marco Z (@ocramz_yo). #Haskell #FunctionalProgramming
+ [[https://docslib.org/doc/11446895/the-mathematical-origins-of-modern-computing][The mathematical origins of modern computing]]. ~ Mark Priestley. #Math #CompSci #History
+ [[https://www.elcorreogallego.es/galicia/lo-que-las-maquinas-no-nos-cuentan-PF10401187][Lo que las máquinas no nos cuentan]]. ~ Senén Barro Ameneiro. #AI #XAI #MachineLearning H/T: @manuel_de_leon
+ [[https://algoritmo.buzzsprout.com/758831/2592865-machine-learning-o-cuando-los-algoritmos-aprenden-de-los-datos-e8][Machine learning o cuando los algoritmos aprenden de los datos (Pódcast)]]. ~ Camilo Chacón Sartori (@camilo_chacon_s). #AI #MachineLearning #Programming
+ [[https://notxor.nueva-actitud.org/2022/02/13/trasteando-con-yasnippets.html][Trasteando con yasnippets]]. ~ Notxor. #Emacs

*** 12-Feb-22
+ [[https://www.amazon.science/blog/automated-reasonings-scientific-frontiers][Automated reasoning's scientific frontiers]]. ~ Byron Cook. #Automated_reasoning H/T: @jborrego
+ [[https://lmcs.episciences.org/9055/pdf][Fixed points theorems for non-transitive relations]]. ~ Jérémy Dubut, Akihisa Yamada. #ITP #IsabelleHOL
+ [[https://www.imperial.ac.uk/media/imperial-college/faculty-of-natural-sciences/public/schrodinger-scholars/virtual-exhibition-2022/poster.pdf][Formalising the GAGA theorem]]. ~ Jujian Zhang. #ITP #LeanProver #Math
+ [[https://www.tweag.io/blog/2020-04-23-deriving-isomorphically/][Deriving isomorphically]]. ~ Hans Hoeglund. #Haskell #FunctionalProgramming
+ [[https://web.engr.ship.edu/~chuo/papers/huo21.pdf][Getting lazy and pure in code contests by using Haskell]]. ~ Chen Huo. #Haskell #FunctionalProgramming

*** 11-Feb-22
+ [[https://www.researchgate.net/publication/358274541_A_Posthumous_Contribution_by_Larry_Wos_Excerpts_from_an_Unpublished_Column][A posthumous contribution by Larry Wos: Excerpts from an unpublished column]]. ~ Sophie Tourret, Christoph Weidenbach. #Automated_reasoning #History
+ [[https://github.com/mukeshtiwari/Formally_Verified_Verifiable_Group_Generator][Formally verified verifiable group generation]]. ~ Mukesh Tiwari (@mukesh_tiwari). #ITP #Coq #Math
+ [[https://www.isa-afp.org/entries/FO_Theory_Rewriting.html][First-order theory of rewriting (in Isabelle/HOL)]]. ~ Alexander Lochmann, Bertram Felgenhauer. #ITP #IsabelleHOL #Logic
+ [[https://reasonablypolymorphic.com/blog/review-codata/index.html][Review: Codata in action]]. ~ Sandy Maguire. #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/ihp-interview][IHP: A Haskell framework for type-safe Web applications]]. ~ Marc Scholten and Gints Dreimanis. #Haskell #FunctionalProgramming
+ [[https://dev.to/theclause/a-nicer-if-then-else-syntax-in-prolog-43o9][A nicer if-then-else syntax in Prolog]]. ~ Gilbert. #Prolog #LogicProgramming H/T: @ThePrologClause
+ [[http://hojaynumeros.blogspot.com/2022/02/numeros-admirables.html][Números admirables]]. ~ Antonio Roldán (@Connumeros). #Matemáticas #Programación #Excel

*** 10-Feb-22
+ [[https://arxiv.org/abs/2202.04192][An executable formal model of the VHDL in Isabelle/HOL]]. ~ Wilayat Khan, Zhe Hou, David Sanan, Jamel Nebhen, Yang Liu, Alwen Tiu. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2202.04330][Reflexive tactics for algebra, revisited]]. ~ Kazuhiko Sakaguchi. #ITP #Coq #Math

*** 09-Feb-22
+ [[https://arxiv.org/abs/2202.03566][Four geometry problems to introduce automated deduction in secondary schools]]. ~ Pedro Quaresma. #GATP #Math
+ [[https://arxiv.org/abs/2202.03567][Teaching intuitionistic and classical propositional logic using Isabelle]]. ~ Jørgen Villadsen, Asta Halkjær From, Patrick Blackburn. #Logic #Teaching #ITP #IsabellePure
+ [[https://lawrencecpaulson.github.io/2022/02/09/Ackermann-example.html][Fun with Ackermann's function]]. ~ Lawrence C Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math
+ [[https://www.cambridge.org/core/journals/bulletin-of-symbolic-logic/article/ackermanns-function-in-iterative-form-a-proof-assistant-experiment/98B10EF8E0503F91AA2E10F822A11D16][Ackermann’s function in iterative form: A proof assistant experiment]]. ~ Lawrence C Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2202.03565][Automated instantiation of control flow tracing exercises]]. ~ Clemens Eisenhofer, Martin Riener. #Programming #Teaching #SMT #Z3
+ [[https://amathr.org/software/][Software for Math Research]]. ~ @AMathRes #Math #CompSci
+ [[https://duplode.github.io/posts/every-distributive-is-representable.html][Every Distributive is Representable]]. ~ Daniel Mlot (@duplode). #Haskell #FunctionalProgramming

*** 08-Feb-22
+ [[https://dms.umontreal.ca/~andrew/PDF/AG.Musings.pdf][Do proofs yield objective truth, or are they culturally robust at best?]] ~ Andrew Granville. #Math #ITP #LeanProver
+ [[https://ww2.inf.ufg.br/~daniel/papers/coqpl22-final52.pdf][Towards a formalization of nominal sets in Coq]]. ~ Fabrício S. Paranhos, Daniel Ventura. #ITP #Coq
+ [[https://nautil.us/in-mathematics-mistakes-arent-what-they-used-to-be-3236/][In Mathematics, mistakes aren’t what they used to be (Computers can’t invent, but they’re changing the field anyway)]]. ~ Siobhan Roberts. #Math #ITP
+ [[https://arxiv.org/abs/2202.01629][Use and abuse of instance parameters in the Lean mathematical library]]. ~ Anne Baanen. #ITP #LeanProver #MathLib
+ [[https://www.cl.cam.ac.uk/~jrh13/papers/cacm.pdf][Formally verified Mathematics]]. ~ Jeremy Avigad, John Harrison (2014). #ITP #Math
+ [[https://www.cl.cam.ac.uk/~jrh13/papers/joerg.pdf][History of interactive theorem proving]]. ~ John Harrison, Josef Urban, Freek Wiedijk. #ITP #History
+ [[http://siek.blogspot.com/2012/08/how-to-prove-it.html][How to prove it]]. ~ Jeremy Siek. #Logic

*** 07-Feb-22
+ [[https://archive.org/details/mathematiciansap0000hard_u4z4][A mathematician's apology]]. ~ G.H. Hardy (1940). #Math via @internetarchive
+ [[https://www.isa-afp.org/entries/Equivalence_Relation_Enumeration.html][Enumeration of equivalence relations (in Isabelle/HOL)]]. ~ Emin Karayel. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/LP_Duality.html][Duality of linear programming (in Isabelle/HOL)]]. ~ René Thiemann. #ITP #IsabelleHOL #Math
+ [[https://leanprover-community.github.io/blog/posts/month-in-mathlib-jan-2022/][This month in mathlib (Jan 2022)]]. #ITP #LeanProver #MathLib #Math

*** 06-Feb-22
+ [[http://www.math.uni-bonn.de/ag/logik/teaching/2022SS/Beautiful_formalizations.pdf][Beautiful formalizations in Isabelle/Naproche]]. ~ Adrian De Lonr, Peter Koepker, Anton Lorenzen, Adrian Marti, Marcel Schütz, Erik Sturzenhecker. #ITP #IsabelleNaproche #Math
+ [[https://thma.github.io/posts/2022-02-05-Evaluating-SKI-combinators-as-native-Haskell-functions.html][Evaluating SKI combinators as native Haskell functions]]. ~ Thomas Mahler. #Haskell #FunctionalProgramming
+ [[https://reasonablypolymorphic.com/blog/bialgebras/index.html][Review: Sorting with bialgebras and distributive laws]]. ~ Sandy Maguire. #Haskell #FunctionalProgramming
+ [[https://www.cambridge.org/core/services/aop-cambridge-core/content/view/9D3E021A2B1717B186ABD500CD34AD75/S0956796822000028a.pdf/supernaturals.pdf][Functional Pearl: Super-naturals]]. ~ Ralf Hinze, Colin Runciman. #Haskell #FunctionalProgramming
+ [[https://www.hpl.hp.com/techreports/Compaq-DEC/PRL-RR-36.pdf][1983–1993: The wonder years of sequential Prolog implementation]]. ~ Peter Van Roy (1993). #Prolog #LogicProgramming via @notjfmc
+ [[https://www.cs.utexas.edu/users/EWD/transcriptions/EWD04xx/EWD480.html][Craftsman or scientist?]] ~ Edsger W. Dijkstra (1975). #CompSci #Teaching #Programming
+ [[https://en.wikipedia.org/wiki/How_to_Solve_It][How to solve it]]. ~ George Pólya (1945). #Problem_solving
+ [[https://archive.org/details/howtosolveitnewa00pl][How to solve it: a new aspect of mathematical method]]. ~ George Pólya (1945). #Polya
+ [[https://www.glc.us.es/~jalonso/vestigium/el-metodo-de-polya-para-resolver-problemas/][El método de Pólya para resolver problemas]]. #Polya
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/Haskell_craft/HowToProgIt.html][How to program it]]. ~ Simon Thompson. #Polya #Programming

*** 05-Feb-22
+ [[https://www.doc.ic.ac.uk/~rak/papers/algorithm%20=%20logic%20+%20control.pdf][Algorithm = Logic + Control]]. ~ Rober Kowalski (1979). #LogicProgramming #Prolog via @notjfmc
+ [[https://www.cambridge.org/core/journals/journal-of-functional-programming/article/solving-the-snake-cube-puzzle-in-haskell/D0C6BD42DB4BAD20F0866F162D723137][Solving the snake cube puzzle in Haskell]]. ~ Mark P. Jones (2013). #Haskell #FunctionalProgramming
+ [[https://www.cs.utexas.edu/users/EWD/transcriptions/EWD09xx/EWD924.html][Mathematicians and computing scientists: The cultural gap]]. ~ Edsger W.Dijkstra (1987). #CompSci #Math
+ [[https://royalsocietypublishing.org/doi/pdf/10.1098/rsta.1984.0073][Constructive mathematics and computer programming]]. ~ Per Martin-Löf (1984). #CompSci #Math
+ [[http://www-formal.stanford.edu/jmc/basis1/basis1.html][A basis for a mathematical theory of computation]]. ~ John McCarthy (1963). #CompSci #Math

*** 04-Feb-22
+ [[https://www.cs.utexas.edu/users/EWD/transcriptions/EWD04xx/EWD473.html][On the teaching of programming, i]].e. on the teaching of thinking. ~ Edsger W.Dijkstra (1975). #CompSci #Programming
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/15731/pdf/LIPIcs-CSL-2022-11.pdf][Synthetic integral cohomology in Cubical Agda]]. ~ Guillaume Brunerie, Axel Ljungström, Anders Mörtberg. #ITP #Agda #Math
+ [[https://drops.dagstuhl.de/opus/volltexte/2022/15734/pdf/LIPIcs-CSL-2022-14.pdf][Realising intensional S4 and GL modalities]]. ~ Liang-Ting Chen, Hsiang-Shang Ko. #ITP #Agda
+ [[https://youtu.be/QL5oGMxpmJI][[CPP'22] The seL4 verification: the art and craft of proof and the reality of commercial support]]. ~ June Andronick. #FormalVerification #ITP #IsabelleHOL
+ [[https://youtu.be/soinDToPFdY][[CPP'22] Structural embeddings revisited]]. ~ César Muñoz. #ITP #PVS
+ [[https://youtu.be/StQ40osfQTo][[CPP'22] Coq's vibrant ecosystem for verification engineering]]. ~ Andrew Appel. #ITP #Coq
+ [[https://youtu.be/MXyRZgWFI3M][[CPP'22] Formalising Lie algebras]]. ~ Oliver Nash. #ITP #LeanProver #Math
+ [[https://youtu.be/87jLyEj_xXI][[CPP'22] Undecidability, incompleteness, and completeness of second-order logic in Coq]]. ~ Mark Koch, Dominik Kirst. #ITP #Coq #Logic #Math
+ [[https://youtu.be/Q1vGBUyzGF8][[CPP'22] Applying formal verification to microkernel IPC at Meta]]. ~ Quentin Carbonneaux, Noam Zilberstein, Christoph Klee, Peter W. O'Hearn, Francesco Zappa Nardelli. #FormalVerification #ITP #Coq
+ [[https://youtu.be/UH_BNKk7cT8][[CPP'22] A machine-checked direct proof of the Steiner-Lehmus theorem]]. ~ Ariel Kellison. #ITP #Nuprl #Math
+ [[https://mat.unb.br/~ayala/mf_PVS0.pdf][Formalization of the computational theory of a Turing complete functional language model]]. ~ Thiago Mendonça Ferreira Ramos, Ariane Alves Almeida, Mauricio Ayala-Rincon. #ITP #PVS
+ [[https://arxiv.org/abs/2101.07758][A bi-directional extensible interface between Lean and Mathematica]]. ~ Robert Y. Lewis, Minchao Wu. #ITP #LeanProver #CAS #Mathematica
+ [[https://www.gaussianos.com/numero-1-de-la-revista-qed/][Número 1 de la revista QED]]. ~ Miguel Ángel Morales (@gaussianos). #Matemáticas
+ [[https://arxiv.org/abs/2202.01344][Formal mathematics statement curriculum learning]]. ~ Stanislas Polu, Jesse Michael Han, Kunhao Zheng, Mantas Baksys, Igor Babuschkin, Ilya Sutskever. #AI #MachineLearning #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/Youngs_Inequality.html][Young's inequality for increasing functions (in Isabelle/HOL)]]. ~ Lawrence C Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Quasi_Borel_Spaces.html ITP][Quasi-Borel spaces (in Isabelle/HOL)]]. ~ Michikazu Hirata, Yasuhiko Minamide, Tetsuya Sato. #IsabelleHOL

*** 03-Feb-22
+ [[https://lawrencecpaulson.github.io/2022/02/02/Formalising_Math_Set_theory.html][Formalising mathematics in set theory]]. ~ Lawrence C Paulson (@LawrPaulson). #Logic #Math #SetTheory #ITP #Mizar #IsabelleHOL
+ [[https://www.isa-afp.org/entries/FOL_Seq_Calc2.html][A sequent calculus prover for first-order logic with functions (in Isabelle/HOL)]]. ~ Asta Halkjær From, Frederik Krogsdal Jacobsen. #ITP #IsabelleHOL #Logic
+ [[https://arxiv.org/abs/2202.00891][Extracting efficient exact real number computation from proofs in constructive type theory]]. ~ Michal Konečný, Sewon Park, Holger Thies. #ITP #Coq #Math #Haskell #FunctionalProgramming
+ [[https://cdn.openai.com/papers/Formal_Mathematics_Statement_Curriculum_Learning__ICML_2022.pdf][Formal mathematics statement curriculum learning]]. ~ Stanislas Polu, Jesse Michael Han, Kunhao Zheng, Mantas Baksys, Igor Babuschkin, Ilya Sutskever. #AI #MachineLearning #ITP #LeanProver #Math
+ [[https://felixspringer.xyz/homepage/blog/derivingTrans][Showcase: deriving-trans]]. ~ Felix Springer. #Haskell #FunctionalProgramming
+ [[https://www.fosskers.ca/en/blog/haskell-software-dev][Software development languages: Haskell]]. ~ Colin Woodbury. #Haskell #FunctionalProgramming

*** 02-Feb-22
+ [[https://www.cs.utexas.edu/users/EWD/transcriptions/EWD03xx/EWD316.html][A short introduction to the art of programming]]. ~ Edsger W.Dijkstra (1971). #CompSci #Programming
+ [[https://youtu.be/MG66ZQ2680c][Modular forms, Eisenstein series and modularity conjecture]]. ~ Christopher Birkbeck. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2202.00343][IDP-Z3: a reasoning engine for FO(.)]] ~ Pierre Carbonnelle, Simon Vandevelde, Joost Vennekens, Marc Denecker. #AI #KRR #SMT #Z3
+ [[https://www.fpcomplete.com/blog/quickcheck-hedgehog-validity/][QuickCheck, Hedgehog, Validity]]. ~ Tom Sydney Kerckhove (@kerckhove_ts). #Haskell #FunctionalProgramming via @FPComplete
+ [[https://github.com/NorfairKing/validit][Validity and validity-based testing]]. ~ Tom Sydney Kerckhove (@kerckhove_ts).y#readme #Haskell #FunctionalProgramming
+ [[https://www.grammarly.com/blog/engineering/running-lisp-in-production/][Running Lisp in production]]. ~ Vsevolod Dyomkin. #CommonLisp #Programming #NLP #ML

*** 01-Feb-22
+ [[https://www.isa-afp.org/entries/Interpolation_Polynomials_HOL_Algebra.html][Interpolation polynomials (in HOL-Algebra)]]. ~ Emin Karayel. #ITP #IsabelleHOL #Math
+ [[https://serokell.io/blog/introduction-to-free-monads][Introduction to free monads]]. ~ Nikolay Yakimov. #Haskell #FunctionalProgramming
+ [[https://okmij.org/ftp/continuations/index.htm][Delimited control and breadth-first, depth-first, and iterative deepening search]].l#reify-search #Haskell #FunctionalProgramming
+ [[https://reasonablypolymorphic.com/blog/underline-bugs/][Underlining the bugs]]. ~ Sandy Maguire. #Haskell #Agda #FunctionalProgramming
+ [[http://asignatura.us.es/algbas][Curso: Álgebra básica]]. #Matemáticas
+ [[https://irreal.org/blog/?p=10276][Combining find and grep in Emacs]]. #Emacs

** January 2022

*** 31-Jan-22
+ [[https://www.isa-afp.org/entries/Irrationals_From_THEBOOK.html][Irrational numbers from THE BOOK (in Isabelle/HOL)]]. ~ Lawrence C Paulson (@LawrPaulson). #ITP #IsabelleHOL #Math
+ [[https://www.huffpost.com/entry/haskell-the-language-most_b_4242119][Haskell, the language most likely to change the way you think about programming]]. ~ Aaron Contorer (@Contorer). #Haskell #FunctionalProgramming
+ [[https://chester-beard.medium.com/why-i-am-learning-haskell-d95d1e5212f3][Why I am learning Haskell (The Language for the Cardano Blockchain)]]. ~ Chester Beard (@CBeardWrites). #Haskell #FunctionalProgramming
+ [[https://cuddly-octo-palm-tree.com/posts/2022-01-30-opt-clj-3/][Notes on optimizing Clojure code: Example]]. ~ Gary Verhaegen (@gaverhae). #Clojure #FunctionalProgramming

*** 30-Jan-22
+ [[https://www.cs.utexas.edu/users/EWD/ewd03xx/EWD360.pdf][Programming as a discipline of mathematical nature]]. ~ Edsger W.Dijkstra (1971). #CompSci #Programming #Math
+ [[https://www.cantorsparadise.com/the-beautiful-world-of-number-theory-the-queen-of-mathematics-72cda533cc7d][The beautiful world of number theory — The Queen of Mathematics]]. ~ Kasper Müller. #Math

*** 29-Jan-22
+ [[https://youtu.be/YqaZchFrH5k][[London Learning Lean] Group cohomology]]. ~ Amelia Livingston. #ITP #LeanProver #Math
+ [[https://dl.acm.org/doi/pdf/10.1145/3497775.3503679][Formally verified superblock scheduling]]. ~ Cyril Six, Léo Gourdin, Sylvain Boulmé, David Monniaux, Justus Fasse, Nicolas Nardino. #ITP #Coq via @johnregehr
+ [[https://slides.com/haskellbeginners2022/lecture-4][[Haskell Beginners 2022] Lecture 4: Monads and IO]]. ~ Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[http://lispcookbook.github.io/cl-cookbook/][The Common Lisp Cookbook (Diving into the programmable programming language)]]. ~ Vindarel. #eBook #CommonLisp #Programming
+ [[https://arxiv.org/abs/2201.09488][Comparative verification of the Digital Library of Mathematical Functions and computer algebra systems]]. ~ André Greiner-Petter, Howard S. Cohl, Abdou Youssef, Moritz Schubotz, Avi Trost, Rajen Dey, Akiko Aizawa, Bela Gipp. #Math #CAS #Maple #Mathematica
+ [[https://www.microsiervos.com/archivo/juegos-y-diversion/custom-wordle-crear-wordles-palabras-longitud-idioma.html][Custom Wordle: el creador definitivo de wordles con la palabra que quieras, de cualquier longitud e idioma]]. ~ @Alvy. #Wordle

*** 28-Jan-22
+ [[http://adam.chlipala.net/papers/AtlPOPL22/AtlPOPL22.pdf][Verified tensor-program optimization via high-level scheduling rewrites]]. ~ Amanda Liu, Gilbert Bernstein, Adam Chlipala, Jonathan Ragan-Kelley. #ITP #Coq via @johnregehr
+ [[https://arxiv.org/abs/2201.10816][50 Years of Prolog and beyond]]. ~ Philipp Körner, Michael Leuschel, João Barbosa, Vítor Santos Costa, Verónica Dahl, Manuel V. Hermenegildo, Jose F. Morales, Jan Wielemaker, Daniel Diaz, Salvador Abreu, Giovanni Ciatto. #Prolog #LogicProgramming
+ [[https://www.cambridge.org/core/elements/theoretical-computer-science-for-the-working-category-theorist/5F3499D1F326D2D77567AA1041627699][Theoretical Computer Science for the working category theorist]]. ~ Noson S. Yanofsky. #CategoryTheory #CompSci #Math
+ [[https://www.cambridge.org/core/elements/ontology-and-the-foundations-of-mathematics/9B135F6EEC71AD649AFB856321D2FE2D][Ontology and the foundations of mathematics (Talking past each other)]]. ~ Penelope Rush. #Math #Philosophy
+ [[https://espeon.social/2022/01/l-systems/ Lisp][L-Systems (in Lisp)]]. ~ Violet White. #Programming #Math
+ [[https://blog.acthompson.net/2022/01/what-do-computer-science-teachers-need.html][What do Computer Science teachers need for professional development? ~ Alfred Thompson (@alfredtwo)]]. #CompSci #Education

*** 27-Jan-22
+ [[https://arxiv.org/abs/2201.10280][The trusted computing base of the CompCert verified compiler]]. ~ David Monniaux, Sylvain Boulmé. #ITP #Coq
+ [[https://www.ias.ac.in/article/fulltext/sadh/034/01/0003-0025][Proof assistants: History, ideas and future]]. ~ H Geuvers #ITP
+ [[https://lawrencecpaulson.github.io//2022/01/26/Set_theory.html][Is Zermelo-Fraenkel set theory the foundation of mathematics? ~ Lawrence C]]. Paulson. #ITP #IsabelleHOL #Logic #Math #SetTheory
+ [[https://www.tweag.io/blog/2022-01-26-property-based-testing-of-monadic-code/][A case study on correctness and safety testing of stateful systems]]. ~ Victor Miraldo. #Haskell #FunctionalProgramming
+ [[https://bor0.wordpress.com/2022/01/24/the-computation-of-appending-lists-at-the-type-and-value-level/][The computation of appending lists at the type and value level]]. ~ Boro Sitnikovski (@BSitnikovski). #Haskell #Idris #FunctionalProgramming
+ [[https://www.quantamagazine.org/researchers-build-ai-that-builds-ai-20220125/][Researchers build AI that builds AI]]. ~ Anil Ananthaswam. #AI #DeepLearning
+ [[https://arxiv.org/abs/2201.10436][Safe AI: How is this possible?]] ~ Harald Rueß, Simon Burton. #AI
+ [[https://www.johndcook.com/blog/2022/01/25/non-equivalent-floating-point-numbers/][Non-equivalent floating point numbers]]. ~ John D. Cook (@JohnDCook). #CompSci #Programming #Math

*** 26-Jan-22
+ [[https://arxiv.org/abs/2201.10443][Certifying algorithms and relevant properties of Reversible Primitive Permutations with Lean]]. ~ Giacomo Maletto, Luca Roversi. #ITP #LeanProver
+ [[https://www.ams.org/journals/bull/2022-59-01/S0273-0979-2021-01726-5/S0273-0979-2021-01726-5.pdf][Varieties of mathematical understanding]]. ~ Jeremy Avigad. #ITP #Math
+ [[https://www.isa-afp.org/entries/Median_Method.html][Median method (in Isabelle/HOL)]]. ~ Emin Karayel. #ITP #IsabelleHOL #Math
+ [[http://www.prolog-heritage.org/doc/LOr2020.pdf][Hommage à Alain Colmerauer (Livre d’or)]]. #LogicProgramming #Prolog #History
+ [[https://youtu.be/DMdiPC1ZckI][Describing a dragon curve with Prolog]]. ~ Markus Triska (@MarkusTriska). #Prolog #LogicProgramming
+ [[https://plato.stanford.edu/entries/philosophy-mathematics/][Philosophy of Mathematics]]. ~ Leon Horsten. #Math #Philosophy via @peoppenheimer
+ [[https://www.cambridge.org/core/elements/set-theory/3FE81CA4C7BAD6D472C94593914783B7][Set theory]]. ~ John P. Burgess. #Set_theory #Logic #Math

*** 25-Jan-22
+ [[https://archive.org/details/disciplineofprog0000dijk][A discipline of programming]]. ~ Edsger W. Dijkstra (1976). #CompSci via @internetarchive
+ [[https://gist.github.com/elizabrock/d1206a4031c8215ad433][Great papers in Computer Science]]. ~ Eliza Brock Marcum (@elizabrock). #CompSci #History
+ [[https://books.google.es/books?id=oSq5BAAAQBAJ&lpg=PP1&hl=es&pg=PR1.6#v=onepage&q&f=false][Giants of computing: A compendium of select, pivotal pioneers]]. ~ Gerard O’Regan. #CompSci #History
+ [[https://youtu.be/Vs-vvlYLtRI][Haskell beginners 2022: Lecture 3 about ad-hoc polymorphism, typeclasses, deriving, semigroup, monoid, higher-kinded types, functor, foldable]]. ~ Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://www.ma.imperial.ac.uk/~buzzard/xena/formalising-mathematics-2022/Part_A/section03groups/groups.html][Formalising Mathematics: Section 3 : An introduction to group theory]]. ~ Kevin Buzzard (@XenaProject) #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/vV4jP8li9HY][[Formalising math 2022] Section 03: groups, introduction to classes and structures]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/myPZ7D7xyvs][[Formalising math 2022] Section 03: groups, solns to sheet 1 (basic definitions and theorems)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/Qh5giF6DlZ8][[Formalising math 2022] Section 03: Playing with variants of the axioms]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/N5jl5lTVPGQ][[Formalising math 2022] Section 03: groups, boilerplate for subgroups]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/VcXsl9hqR7c][[Formalising math 2022] Section 03: groups, solns to sheet 3 (subgroups) ~ Kevin Buzzard (@XenaProject)]]. #ITP #LeanProver #Logic #Math
+ [[https://cacm.acm.org/magazines/2022/2/258231-abstractions-their-algorithms-and-their-compilers/fulltext][Abstractions, their algorithms, and their compilers]]. ~ Alfred Aho, Jeffrey Ullman. #CompSci
+ [[https://cacm.acm.org/magazines/2022/2/258223-becoming-universal/fulltext][Becoming universal (A new history of modern computing)]]. ~ Thomas Haigh. #CompSci #History
+ [[https://books.google.es/books?id=KOY9EAAAQBAJ&lpg=PP1&dq=A%20New%20History%20of%20Modern%20Computing&hl=es&pg=PP][A new history of modern computing.1#v=onepage&q&f=false]] ~ Thomas Haigh, Paul E. Ceruzzi #CompSci #History
+ [[https://cacm.acm.org/magazines/2022/2/258221-the-lives-of-hidden-figures-matter-in-computer-science-education/fulltext][The lives of hidden figures matter in computer science education]]. ~ Tiffani L. Williams. #CompSci #Education #History
+ [[https://cacm.acm.org/blogs/blog-cacm/256056-computers-were-originally-humans/fulltext][Computers were originally humans]]. ~ Herbert Bruderer. #CompSci #History
+ [[https://arxiv.org/abs/2111.11218][Parallel logic programming: A sequel]]. ~ Agostino Dovier, Andrea Formisano, Gopal Gupta, Manuel V. Hermenegildo, Enrico Pontelli, Ricardo Rocha. #LogicProgramming
+ [[https://oleg.fi/gists/posts/2022-01-25-folding-unfoldable.html][Folding the unfoldable]]. ~ Oleg Grenrus (@phadej). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2201.07272][Lambda the ultimate SSA: Optimizing functional programs in SSA]]. ~ Siddharth Bhat, Tobias Grosser. #LeanProver #FunctionalProgramming #ITP
+ [[https://lmcs.episciences.org/8980/pdf][An extensible equality checking algorithm for dependent type theories]]. ~ Anja Petković Komel, Andrej Bauer. #TypeTheory #ITP #Andromeda
+ [[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9674115&casa_token=luX0fHkWPskAAAAA:73Kj8LOBek4vzSpsFFNpcAiJTUau6d5XH12ipQIMBGwYdWsvm_doou1Muz1nvqDqVuBTvAQEgw&tag=1][Formal modeling and verification of the sequential kernel of an embedded operating system]]. ~ Zhang Haitao, Chen Lirong, Luo Lei. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2201.08364][Mathematics and mathematics education in the 21st century]]. ~ Alexandre Borovik, Zoltan Kocsis, Vladimir Kondratiev. #Math #Education #CompSci #ITP
+ [[https://www.mpg.is/papers/gissurarson2022licentiate.pdf][The hole story: Type-driven synthesis and repair]]. ~ Matthías Páll Gissurarson. #BSc_Thesis #Haskell #FunctionalProgramming
+ [[https://www.cambridge.org/core/journals/journal-of-functional-programming/article/fregel-a-functional-domainspecific-language-for-vertexcentric-largescale-graph-processing/A6D4FC0B42C87B752E9AF88F681C5F13][Fregel: a functional domain-specific language for vertex-centric large-scale graph processing]]. ~ Hideya Iwasaki, Kento Emoto, Akimasa Morihata, Kiminori Matsuzaki, Zhenjiang Hu. #Haskell #FunctionalProgramming
+ [[https://www.buzzsprout.com/758831/9943702][Ingeniería y programación]] por Antonio Cabrera y Camilo Chacón Sartori (@camilo_chacon_s) en "Había una vez un algoritmo..." #Podcast #Programación
+ [[https://www.isa-afp.org/entries/Actuarial_Mathematics.html][Actuarial mathematics (in Isabelle/HOL)]]. ~ Yosuke Ito. #ITP #IsabelleHOL #Math
*** 24-Jan-22
+ [[https://bit.ly/3qWSDgk][Brian Kernighan]]: "Controlling complexity is the essence of computer programming." #CompSci #Programming
+ [[https://archive.org/details/cprogramminglang0000kern_2ed][The C programming language]]. ~ Brian W. Kernighan and Dennis Ritchie (1972). #CompSci #Programming via @internetarchive
+ [[https://github.com/Developer-Y/cs-video-courses][Computer Science courses with video lectures]]. #CompSci
+ [[https://plato.stanford.edu/entries/algebra-logic-tradition/][The algebra of logic tradition]]. ~ Burris, Stanley and Javier Legris. #Logic #Math via @dailySEP
+ [[https://cdsmithus.medium.com/monoids-are-composable-list-summarizers-77d2baf23ffc][Monoids are composable list summarizers]]. ~ Chris Smith (@cdsmithus). #Haskell #FunctionalProgramming #Math
+ [[https://www.cs.us.es/~fsancho/IAILab/][Laboratorio de Inteligencia Artificial inmersiva de la Universidad de Sevilla]]. #IA #Aprendizaje_automático
+ [[https://www.cs.us.es/~fsancho/IAILab/indexen.html][Immersive Artificial Intelligence Lab]]. #AI #MachineLearning
+ [[https://www.youtube.com/watch?v=JqF3-mqdwpM][Lisp in production: Interview with John Mercouris and Pierre Neidhardt the leads of the Atlas, the guys behind Nyxt web browser]]. #CommonLisp #Programming #Nyxt
+ [[https://stopa.io/post/292][LLisp: Lisp in Lisp]]. ~ Stepan Parunashvili (@stopachka). #Clojure #Programming #Lisp
+ [[https://youtu.be/grjMRgmjddE][Introduction to proof theory I: Sequent calculus]]. ~ Tim Lyon. #Logic #Math #Proof_theory
+ [[https://youtu.be/hUO2D0Smh0w][An introduction to proof theory II: Invertibility, cut-elimination, and proof-search]]. ~ Tim Lyon. #Logic #Math #Proof_theory
+ [[https://youtu.be/vPGNkByvPIY][[Formalising math 2022] Section 02: the reals, solutions to sheet 4 (cheating with library_search)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/Pspnhby_pfo][[Formalising math 2022] Section 02: the reals, solutions to sheet 5 (limit of sum is sum of limits)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/ze_GaITsu2Q][[Formalising math 2022] Section 02: the reals, solutions to sheet 6 (limit of prod is prod of limits)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://iccl.inf.tu-dresden.de/web/Foundations_of_Knowledge_Representation_(WS2021)/en][Course: Foundations of knowledge representation]]. ~ Hannes Straß. #KRR #Logic
+ [[https://www.researchgate.net/publication/228377589_Computational_Logic-Working_Material][Computational logic (Working material)]]. ~ Steffen Hölldobler. #Logic #AI

*** 23-Jan-22
+ [[http://pu.inf.uni-tuebingen.de/users/klaeren/epigrams.html][Epigrams on programming]]. ~ Alan J. Perlis (1982). #CompSci #Programming
+ [[https://en.wikipedia.org/wiki/List_of_pioneers_in_computer_science][List of pioneers in computer science]]. #CompSci #History
+ [[https://amturing.acm.org/byyear.cfm][Chronological listing of A. M. Turing award winners]]. #CompSci #History
+ [[https://www.researchgate.net/profile/Ende-Jin/publication/357605442_Parametrized_CDCL_Verified_in_Coq/links/61d5fecab6b5667157cc53dc/Parametrized-CDCL-Verified-in-Coq.pdf][Parametrized CDCL verified in Coq]]. ~ Ende Jin. #ITP #Coq

*** 22-Jan-22
+ [[http://worrydream.com/refs/Hoare%20-%20The%20Emperors%20Old%20Clothes.pdfa][The emperor’s old clothes]]. ~ C.A.R. Hoare (1981). #CompSci
+ [[https://scholarsarchive.library.albany.edu/cas_philosophy_scholar_books/4/][paratodo x: Una introducción a la lógica formal]]. ~ P.D. Magnus. #Lógica via @RrrichardZach
+ [[https://www.cs.yale.edu/homes/hudak/Papers/HSoM.pdf][The Haskell school of music (from signals to symphonies)]]. ~ Paul Hudak. #Haskell #FunctionalProgramming
+ [[https://www.cs.us.es/~jalonso/cursos/ia1-97/temas/tema-01.pdf ][Introducción a la Inteligencia Artificial]]. ~ José A. Alonso y Francisco J. Martín (1997). #IA #Historia
+ [[https://www.cs.us.es/~jalonso/cursos/ia2-02/temas/tema-1.pdf][Programación basada en reglas con CLIPS]]. ~  José A. Alonso, José Luis Ruiz y Francisco J. Martín (2002). #CLIPS

*** 21-Jan-22
+ [[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.136.3043&rep=rep1&type=pdf][Programming with abstract data types]]. ~ Barbara Liskov, Stephen Zilles (1974). #CompSci #Programming
+ [[https://www.cis.upenn.edu/~jean/math-deep.pdf][Algebra, topology, differential calculus, and optimization theory for computer science and machine learning]]. ~ Jean Gallier and Jocelyn Quaintance. #eBook #Math #MachineLearning via @CompSciFact
+ [[https://home.ttic.edu/~dreyer/course/papers/barendregt.pdf][Lambda calculi with types]]. ~ Henk Barendregt. #Logic #CompSci via @CompSciFact
+ [[http://www.andreas-lochbihler.de/pub/lochbihler-mfmc-jar.pdf][A mechanized proof of the max-flow min-cut theorem for countable networks with applications to probability theory]]. ~ Andreas Lochbihler. #ITP #IsabelleHOL
+ [[https://archive.org/details/prologprogrammin0000brat][Prolog programming for artificial intelligence]]. ~ Ivan Bratko (1990). #Prolog #LogicProgramming #AI via @internetarchive
+ [[https://book.simply-logical.space/][Simply logical (Intelligent reasoning by example)]]. ~ Peter Flach. #Logic #Prolog #LogicProgramming #AI
+ [[https://plus.maths.org/content/proof-picture][Proof by picture!]] #Math

*** 20-Jan-22
+ [[https://trhvidsten.com/docs/classics/Goedel-1931.pdf][On formally undecidable propositions of "Principia Mathematica" and related systems I]]. ~ Kurt Gödel (1931). #Logic #Math
+ [[https://programming-language-benchmarks.vercel.app/][Programming language and compiler benchmarks]]. #Programming
+ [[https://github.com/hanabi1224/Programming-Language-Benchmarks][Programming language and compiler benchmarks (Repo)]]. #Programming
+ [[https://arxiv.org/abs/2201.07275][Automated theorem proving in the classroom]]. ~ Wolfgang Windsteiger. #ITP #ATP #Logic #Math
+ [[https://fritzfeger.com/haskell/resolution-switching-haskell-ihp][A resolution switching responsive images template with Haskell and IHP]]. ~ Fritz Feger (@fritzfeger). #Haskell #FunctionalProgramming
+ [[https://cacm.acm.org/blogs/blog-cacm/257923-how-to-teach-mathematical-disciplines-for-it-specialties/fulltext][How to teach mathematical disciplines for IT specialties]]. ~ Andrei Sukhov. #Math #CompSci
+ [[https://www.tweag.io/blog/2022-01-19-why-liquid-haskell/][Why Liquid Haskell matters]]. ~ Facundo Domínguez. #Haskell #LiquidHaskell
+ [[https://tarmean.github.io/branch_and_bound.html][Abstracting over branch and bound]]. #Haskell #FunctionalProgramming

*** 19-Jan-22
+ [[https://www.astro.puc.cl/~rparra/tools/PAPERS/hilbert_1900.pdf][Mathematical problems]]. ~ David Hilbert (1900). #Math #CompSci
+ [[https://arxiv.org/abs/2201.05716][Mechanizing matching logic in Coq]]. ~ Péter Bereczky, Xiaohong Chen, Dániel Horpácsi, Tamás Bálint Mizsei, Lucas Peña. #ITP #Coq #Logic
+ [[http://real.mtak.hu/112925/1/381][Interactive teaching of programming language theory with a proof assistant]]. ~ Péter Bereczky, István Donkó, Dániel Horpácsi, Ambrus Kaposi, Dávid János Németh. #ITP #Coq

*** 18-Jan-22
+ [[https://www.inf.unibz.it/~calvanese/teaching/11-12-tc/material/cook-1971-NP-completeness-of-SAT.pdf][The complexity of theorem-proving procedures]]. ~ Stephen A. Cook (1971). #CompSci #Logic #Math
+ [[https://youtu.be/mbjeniWFqcM ][[Formalising math 2022] Section 02: the reals, solutions to sheet 1 ("norm_num")]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/fuNF7lVouWs][[Formalising math 2022] Section 02: the reals, solutions to sheet 2 ("ring")]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/jCQ1_zXo5GI][[Formalising math 2022] Section 02: the reals, solutions to sheet 3 (limits of sequences)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/rf-lie7U04Q][[Haskell beginners 2022]: Lecture 2 about pattern matching, algebraic data types, parametric polymorphism and function composition]]. ~ Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://ahistoryofai.com/][A history of Artificial Intelligence]]. ~ S. Hussain Ather (@SHussainAther). #AI #History
+ [[https://www.cs.tau.ac.il/~msagiv/courses/ATP/lecture-1.pdf][Automated Theorem Proving]]. ~ Arnon Avron, Mooly Sagiv. #ATP #Logic #CompSci
+ [[https://dl.acm.org/doi/pdf/10.1145/3498685][Certifying derivation of state machines from coroutines]]. ~ Mirai Ikebuchi, Andres Erbsen, Adam Chlipala. #ITP #Coq
+ [[https://youtu.be/u5B-jiFDKto][DSLsofMath Week 1: Extra lecture on Haskell, part 1/3]]. ~ Patrik Jansson (@patrikja). #Haskell #FunctionalProgramming
+ [[https://youtu.be/Mr_YFDX0C1w][DSLsofMath Week 1: Extra lecture on Haskell, part 2/3]]. ~ Patrik Jansson (@patrikja). #Haskell #FunctionalProgramming
+ [[https://youtu.be/NsSVRkxDdfQ][DSLsofMath Week 1: Extra lecture on Haskell, part 3/3]]. ~ Patrik Jansson (@patrikja). #Haskell #FunctionalProgramming
+ [[https://youtu.be/nsXgf1HF7E8][DSLsofMath Week 1, Lecture 1, Part 1]]. ~ Patrik Jansson (@patrikja). #Haskell #FunctionalProgramming #Math
+ [[https://youtu.be/80DeRjb06vI][DSLsofMath Week 1, Lecture 1, Part 2]]. ~ Patrik Jansson (@patrikja). #Haskell #FunctionalProgramming #Math
+ [[https://haselwarter.org/assets/pdfs/effective-metatheory-for-type-theory.pdf][Effective metatheory for type theory]]. ~ Philipp Georg Haselwarter. #PhD_Thesis #TypeTheory
+ [[https://www21.in.tum.de/~traytel/papers/tacas22-verimon_letpast/verimon_letpast.pdf][Verified first-order monitoring with recursive rules]]. ~ Sheila Zingg, Sr̄dan Krstíc, Martin Raszyk, Joshua Schneider, Dmitriy Traytel. #ITP #IsabelleHOL
+ [[https://homepages.uni-regensburg.de/~usm34387/masterarbeit.pdf][Computability and l²-Betti numbers]]. ~ Matthias Uschold. #MSc_Thesis #ITP #LeanProver

*** 17-Jan-22
+ [[http://sunnyday.mit.edu/16.355/Hoare-CACM-69.pdf][An axiomatic basis for computer programming]]. ~ C. A. R. Hoare (1969). #CompSci
+ [[https://zulip-uploads.s3.amazonaws.com/3121/sTt0HtbubzJwl1ZYkLpLRetd/TacticGuide.pdf?AWSAccessKeyId=AKIAIEVMBCAT2WD3M5KQ&Signature=1FJy4zP85WH4HQ4qi7E3Nm%2BTYSQ%3D&Expires=1642411032][A practical guide to writing tactics in Lean]]. ~ Daniel J. Velleman. #ITP #LeanProver
+ [[https://jxxcarlson.medium.com/lambda-calculus-an-elm-cli-fd537071db2b][Lambda calculus: an Elm CLI]]. ~ James Carlson. #Elm #FunctionalProgramming #LambdaCalculus
+ [[https://youtu.be/NBNH0_glDZg][From greek paradoxes to political paradoxes]]. ~ Moshe Y. Vardi (@vardi). #Logic
+ [[https://begriffs.com/posts/2017-01-14-design-use-quickcheck.html][The design and use of QuickCheck]]. ~ Joe "begriffs" Nelson (2017). #Haskell #FunctionalProgramming
+ [[https://lawrencecpaulson.github.io//2022/01/19/regular-pairs.html][Formalising extremal graph theory, I]]. ~ Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://mmhaskell.com/blog/2022/1/17/transposing-rows][Transposing rows]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 16-Jan-22
+ [[http://jmc.stanford.edu/articles/recursive/recursive.pdf][Recursive functions of symbolic expressions and their computation by machine]]. ~ John McCarthy (1960). #CompSci #Lisp
+ [[https://archive.org/details/foundationsofari0000freg][The foundations of arithmetic: a logico-mathematical enquiry into the concept of number]]. ~ Gottlob Frege (1884). #Logic #Math via @internetarchive
+ [[https://archive.org/details/diegrundlagende00freggoog][Die Grundlagen der Arithmetik: eine logisch mathematische Untersuchung über den Begriff der Zahl]]. ~ Gottlob Frege (1884). #Logic #Math via @internetarchive
+ [[https://github.com/lecopivo/SciLean][SciLean: Framework for scientific computing written in Lean]]. ~ Tomas Skrivnan. #ITP #LeanProver #FunctionalProgramming #Math

*** 15-Jan-22
+ [[https://archive.org/details/MIND--COMPUTING-MACHINERY-AND-INTELLIGENCE][Computing machinery and intelligence]]. ~ Alan Mathison Turing (1950). #CompSci #AI via @internetarchive
+ [[https://archive.org/details/atreatiseonalge02peacgoog][A treatise on algebra]]. ~ George Peacock (1830).
+ [[https://plato.stanford.edu/entries/logic-ai/][Logic and artificial intelligence]]. ~ Richmond Thomason (2018). #Logic #AI
+ [[https://plato.stanford.edu/entries/reasoning-automated/][Automated reasoning]]. ~ Frederic Portoraro (2019) #ATP #Logic #Math #CompSci
+ [[https://plato.stanford.edu/entries/logic-firstorder-emergence/][The emergence of first-order logic]]. ~ William Ewald (2018). #Logic #Math #History
+ [[https://plato.stanford.edu/entries/settheory-early/][The early development of set theory]]. ~ José Ferreirós (2020). #Logic #Math #SetTheory #History
+ [[https://plato.stanford.edu/entries/proof-theory-development/][The development of proof theory]]. ~ Jan von Plato (2014). #Logic #Math #History
+ [[https://www.britannica.com/topic/history-of-logic]["History of logic" (Encyclopedia Britannica)]]. ~ Jaakko J. Hintikka, Paul Vincent Spade. #Logic #Math #CompSci #History
+ [[https://www.ias.ac.in/article/fulltext/sadh/034/01/0003-0025][Proof assistants: History, ideas and future]]. ~ H. Geuvers (2009). #ITP #Logic #Math #CompSci #History
+ [[http://users.encs.concordia.ca/~tphols08/TPHOLs2008/mikegordontphols08talk.pdf][Twenty years of theorem proving for HOLs (Past, present and future)]]. ~ Mike Gordon (2008). #Logic #CompSci #ITP
+ [[http://people.cs.uchicago.edu/~rchugh/static/theses/nick-collins-thesis.pdf][Delta dictionaries (Total and extensional finite maps in proof assistants)]]. ~ Nick Collins. #ITP #Agda
+ [[https://link.springer.com/book/9783030769093][Introduction to computation: Haskell, logic and automata]]. ~ Don Sannella, Michael Paul Fourman, Haoran Peng, Philip Wadler. #Haskell #FunctionalProgramming #Logic #CompSci
+ [[https://www.micahcantor.com/blog/about-that-reader-trick/][About that Reader trick]]. ~ Micah Cantor (@micah_cantor). #Haskell #FunctionalProgramming
+ [[https://lawrencecpaulson.github.io/2021/12/01/Undefined.html][Undefined values, or what do we get when we divide by zero?]] ~ Lawrence C. Paulson. #Logic #Math #ITPa
+ [[http://data.tmorris.net/talks/list-folds/b30aa0fdff296c731bc5b1c824adf1d02b3b69d9/list-folds.pdf][Explaining list folds (An easy explanation of the fold-left and fold-right functions)]]. ~ Tony Morris (2013). #Haskell #FunctionalProgramming
+ [[https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/][Parse, don’t validate]]. ~ Alexis King (@lexi_lambda). #Haskell #FunctionalProgramming
+ [[https://bradparker.com/posts/servant-types][Servant's type-level domain specific language]]. ~ Brad Parker (@parkerbrads). #Haskell #FunctionalProgramming
+ [[https://www.benjamin.pizza/posts/2017-12-15-functor-functors.html][Functor functors]]. ~ Benjamin Hodgson (2017). #Haskell #FunctionalProgramming
+ [[https://blog.ocharles.org.uk/posts/2017-08-23-extensible-effects-and-transformers.html][Providing an API for extensible-effects and monad transformers]]. ~ Ollie Charles (@acid2). #Haskell #FunctionalProgramming
+ [[https://teh.id.au][Continuations all the way down]]. ~ T. Humphries./#/posts/2017/05/10/lambdajam-slides/index.html #Haskell #FunctionalProgramming
+ [[https://blog.jle.im/entry/free-alternative-regexp.html][Applicative regular expressions using the free Alternative]]. ~ Justin Le (@mstk). #Haskell #FunctionalProgramming
+ [[https://elvishjerricco.github.io/2017/03/10/profunctors-arrows-and-static-analysis.html][Profunctors, arrows, & static analysis]]. Will Fancher (@ElvishJerricco). #Haskell #FunctionalProgramming
+ [[http://jackkelly.name/wiki/haskell.html][Haskell learning resource collection]]. ~ Jack Kelly. #Haskell #FunctionalProgramming

*** 14-Jan-22
+ [[https://www.cs.virginia.edu/~evans/greatworks/shannon38.pdf][A symbolic analysis of relay and switching circuits]]. Claude Shannon (1938). #CompSci
+ [[https://www.karimarttila.fi/clojure/2022/01/13/datalog-exercises.html][Clojure & Datalog is Lisp & Prolog]]. ~ Kari Marttila. #Clojure #Datalog #Lisp #Prolog #FunctionalProgramming #LogicProgramming
+ [[https://youtu.be/UykGFDVfQNA][[London Learning Lean] Formalizing adèles and idèles]]. ~ María Inés de Frutos-Fernández. #ITP #LeanProver #Math
+ [[https://youtu.be/SAMxgEtLTcg][Formalising Lie algebras]]. ~ Oliver Nash. #ITP #LeanProver #Math
+ [[https://leanprover.zulipchat.com/user_uploads/3121/mqEJI5ZdyytcJnb1L3wWGhQD/TacticGuide.pdf][A practical guide to writing tactics in Lean]]. ~ Daniel J. Velleman. #ITP #LeanProver

*** 13-Jan-22
+ [[https://www.cs.virginia.edu/~robins/Turing_Paper_1936.pdf][On computable numbers, with an application to the Entscheidungsproblem]]. ~ Alan Mathison Turing (1936). #CompSci #Logic #Math
+ [[https://www.cambridge.org/core/journals/journal-of-functional-programming/article/building-a-consensus-a-rectangle-covering-problem/561C117A97FE0388AF96155469348B6B][Building a consensus: A rectangle covering problem]]. ~ Richard S. Bird (2011). #Haskell #FunctionalProgramming
+ [[https://www.theguardian.com/science/2022/jan/10/can-you-solve-it-godels-incompleteness-theorem][Can you solve it? Gödel’s incompleteness theorem (The proof that rocked maths)]]. ~ Alex Bellos (@alexbellos). #Logic #Math).
+ [[https://abakcus.com/10-beautiful-mathematical-documentaries-to-make-students-love-math/][10+ beautiful mathematical documentaries to make students love Math]]. ~ @abakcus #Math
+ [[https://arxiv.org/abs/2201.04352][Constructive theory of ordinals]]. ~ Thierry Coquand, Henri Lombardi, Stefan Neuwirth. #Logic #Math #SetTheory
+ [[https://github.com/woodrush/lisp-in-life][A Lisp interpreter implemented in Conway's Game of Life]]. ~ Hikaru Ikuta (@woodrush924). #Lisp #Programming
+ [[http://ceur-ws.org/Vol-3066/paper5.pdf][The role of functional programming in the organization of parallel computing]]. ~ Lidia V. Gorodnyaya. #FunctionalProgramming
+ [[https://arxiv.org/abs/1611.09475][Domain-Specific Languages of Mathematics: Presenting mathematical analysis using functional programming]]. ~ Cezar Ionescu, Patrik Jansson (2016). #Haskell #FunctionalProgramming #Math
+ [[http://www.cse.chalmers.se/~coquand/canorm1.pdf][Canonicity and normalization for type theory]]. ~ Thierry Coquand. #TypeTheory
+ [[http://hlombardi.free.fr/laius.html][Le point de vue constructif en mathématiques]]. ~ Henri Lombardi. #Logic #Math
+ [[http://hlombardi.free.fr/publis/JNCF2014.pdf][Algèbre constructive]]. ~ Henri Lombardi. #Math
+ [[https://youtu.be/lubSFfj4B08][[Formalising math 2022] Section 01 Logic, solutions to sheet 4 ("and")]]. ~ Kevin Buzzard (@XenaProject) #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/tQSA7x4AWD4][[Formalising math 2022] Section 01 Logic, solutions to sheet 5 ("iff")]]. ~ Kevin Buzzard (@XenaProject) #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/Mwx9zkQM-Kk][[Formalising math 2022] Section 01 Logic, solutions to sheet 6 ("or")]]. ~ Kevin Buzzard (@XenaProject) #ITP #LeanProver #Logic #Math
+ [[https://mmhaskell.com/blog/2022/1/13/group-theory]["Group" theory]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 12-Jan-22
+ [[https://www.gutenberg.org/files/15114/15114-pdf.pdf][An investigation of the laws of thought on which are founded the mathematical theories of logic and probabilities]]. ~ George Boole (1854). #Logic #Math
+ [[http://revue.sesamath.net/spip.php?article1478][La machine de Turing (1/2)]]. ~ Patrice Debrabant. #CompSci #Scratch
+ [[http://revue.sesamath.net/spip.php?article1462][La préhistoire de l’informatique]]. ~ Bernard Ycart. #CompSci #History
+ [[https://arxiv.org/abs/2201.03702][Learning logic programs from noisy failures]]. ~ John Wahlig. #MSc_Thesis #ILP #MachineLearning #LogicProgramming
+ [[https://www.cl.cam.ac.uk/~lp15/papers/Reports/mutil.pdf][A simple formalization and proof for the mutilated chess board]]. ~ Lawrence C. Paulson (2001). #ITP #IsabelleHOL
+ [[https://www.cl.cam.ac.uk/~jrh13/papers/wlog.pdf][Without loss of generality]]. ~ John Harrison (2013). #ITP #HOL_Light
+ [[https://lawrencecpaulson.github.io//2022/01/12/Proving-the-obvious.html][Proving the obvious]]. ~ Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://www.hobson.space/posts/haskell-foreign-library/][Building partially static libraries with Cabal]]. ~ James Hobson. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2005.02259][Learning programs by learning from failures]]. ~ Andrew Cropper, Rolf Morel (2020). #ILP #MachineLearning #LogicProgramming
+ [[https://github.com/logic-and-learning-lab/Popper][Popper: an inductive logic programming (ILP) system]]. ~ Andrew Cropper et als. #ILP #MachineLearning #LogicProgramming #Prolog
+ [[https://arxiv.org/abs/2102.10556][Inductive logic programming at 30]]. ~ Andrew Cropper, Sebastijan Dumančić, Richard Evans, Stephen H. Muggleton. #ITP #MachineLearning #LogicProgramming
+ [[https://arxiv.org/abs/2109.07818v2][Learning logic programs through divide, constrain, and conquer]]. ~ Andrew Cropper. #ILP #MachineLearning #LogicProgramming
+ [[http://andrewcropper.com/slides/2021-ucsd-ilp-intro.pdf][Inductive logic programming (Slides)]]. ~ Andrew Cropper. #ILP #Logic #MachineLearning #LogicProgramming
+ [[https://www.ijcai.org/Proceedings/07/Papers/397.pdf][ProbLog: A probabilistic Prolog and its application in link discovery]]. ~ Luc De Raedt, Angelika Kimmig, Hannu Toivonen (2007). #LogicProgramming #LogicProgramming
+ [[https://github.com/ML-KULeuven/deepproblog][DeepProbLog: an extension of ProbLog that integrates probabilistic logic programming with deep learning by introducing the neural predicate]]. ~ Robin Manhaeve. #LogicProgramming #DeepLearning
+ [[https://lirias.kuleuven.be/retrieve/642795][Neural probabilistic logic]]. ~ Robin Manhaeve (Supervisor: Luc De Raedt). #PhD_Thesis #AI #DeepLearning #LogicProgramming #MachineLearning
+ [[https://link.springer.com/content/pdf/10.1007/s10994-020-05941-0.pdf][Beneficial and harmful explanatory machine learning]]. ~ Lun Ai1, Stephen H. Muggleton, Céline Hocquette, Mark Gromowski, Ute Schmid. #ILP #MachineLearning #AI #XAI
+ [[https://www.ijcai.org/proceedings/2020/0320.pdf][Complete bottom-up predicate invention in meta-interpretive learning]]. ~ Céline Hocquette, Stephen H Muggleton. #ILP #MachineLearning #LogicProgramming
+ [[https://youtu.be/OZLfDQKbdFk][[Formalising math 2022] Section 01 Logic, solutions to sheet 1]]. ~ Kevin Buzzard (@XenaProject) #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/JTl6NHNxyDk][[Formalising math 2022] Section 01 Logic, solutions to sheet 2]]. ~ Kevin Buzzard (@XenaProject) #ITP #LeanProver #Logic #Math
+ [[https://youtu.be/qDKtXrOy6CM][[Formalising math 2022] Section 01 Logic, solutions to sheet 3]]. ~ Kevin Buzzard (@XenaProject) #ITP #LeanProver #Logic #Math

*** 11-Jan-22
+ [[http://www.leibniz-translations.com/truemethod.htm][The true method]]. ~ Gottfried Wilhelm Leibniz (1677). #Logic #CompSci #AI #Knowledge_representation #Automated_reasoning
+ [[https://arxiv.org/abs/2201.03242][A Coq formalization of the Bochner integral]]. ~ Sylvie Boldo, François Clément, Louise Leclerc. #ITP #Coq #Math
+ [[https://dreamsongs.com/ArtOfLisp.html][The art of Lisp & writing]]. ~ Richard Gabriel (2003). #Lisp #Programming
+ [[https://www.cs.princeton.edu/~appel/papers/ecosystem.pdf][Coq’s vibrant ecosystem for verification engineering]]. ~ Andrew W. Appel. #ITP #Coq
+ [[https://homes.cs.washington.edu/~emina/doc/rosette.popl22.pdf][A formal foundation for symbolic evaluation with merging]]. ~ Sorawee Porncharoenwase, Luke Nelson, Xi Wang, Emina Torlak. #ITP #LeanProver
+ [[https://mamouras.web.rice.edu/papers/monitoring-RV'20-extended.pdf][Verified online monitoring for metric temporal logic with lattice-based quantitative semantics]]. ~ Agnishom Chattopadhyay, Konstantinos Mamouras. #ITP #Coq #OCaml #FunctionalProgramming
+ [[https://arxiv.org/abs/2201.01649][WebSpec: Towards machine-checked analysis of browser security mechanisms]]. ~ Lorenzo Veronese, Benjamin Farinier, Mauro Tempesta, Marco Squarcina, Matteo Maffei. #ITP #Coq
+ [[https://youtu.be/3XaL0tjnWSk][Formalising mathematics: getting started (Video)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://www.ma.imperial.ac.uk/~buzzard/xena/formalising-mathematics-2022/index.html][Formalising Mathematics (A course for mathematicians)]]. ~ Kevin Buzzard (@XenaProject) #ITP #LeanProver #Math
+ [[https://www.cs.princeton.edu/~appel/papers/deriving-efficient-rewriters.pdf][Deriving efficient program transformations from rewrite rules]]. ~ John M. Li, Andrew W. Appel. #ITP #Coq
+ [[https://www.comp.nus.edu.sg/~hobor/Publications/2021/CertiDKP.pdf][Functional correctness of C implementations of Dijkstra’s, Kruskal’s, and Prim’s algorithms]]. ~ Aquinas Hobor, Anshuman Mohan, Wei Xiang. #ITP #Coq
+ [[https://www.gaussianos.com/demostracion-en-una-linea-del-teorema-de-varignon/][Demostración en una línea del teorema de Varignon]]. ~ Miguel Ángel Morales (@gaussianos). #Matemáticas

*** 10-Jan-22
+ [[http://sunnyday.mit.edu/16.355/wirth-refinement.html]["Program development by stepwise refinement"]]. ~ Niklaus Wirth (1971). #CompSci
+ [[https://fpunfold.com/2022/01/09/haskell-dp.html][Dynamic programming in Haskell]]. ~ Amogh Rathore (@RathoreAmogh). #Haskell #FunctionalProgramming
+ [[https://www.johndcook.com/blog/2022/01/09/beattys-theorem/][Beatty’s theorem]]. ~ John D. Cook (@JohnDCook). #Math #Python
+ [[http://web.fdi.ucm.es/posgrado/conferencias/RicardoPenaMari-slides.pdf][Pasado, presente y futuro de los lenguajes de programación]]. ~ Ricardo Peña Marí (2017). #Programación
+ [[http://www.lix.polytechnique.fr/Labo/Samuel.Mimram/teaching/INF551/course.pdf][Program / Proof]]. ~ Samuel Mimram. #Agda #FunctionalProgramming #ITP #Logic
+ [[https://youtu.be/6MsQcUprO9o][Haskell Beginners 2022: Lecture 1 about Haskell and FP fundamentals]]. ~ Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming

*** 09-Jan-22
+ [[http://www-formal.stanford.edu/jmc/history/lisp/lisp.html][History of Lisp]]. ~ John McCarthy (1979). #Lisp #FunctionalProgramming
+ [[https://www.researchgate.net/publication/220636751_Three_Paradigms_of_Computer_Science][Three paradigms of Computer Science]]. ~ Amnon H. Eden (2007). #CompSci
+ [[http://www.f.waseda.jp/sidoli/White_2004_Philosophy_Computer_Language.pdf][The philosophy of computer languages]]. ~ Graham White (2004). #CompSci
+ [[https://courses.cs.northwestern.edu/325/readings/luv-slides.pdf][Tutorial on good Lisp programming style]]. ~ Peter Norvig and Kent Pitman (1993). #Lisp #Programming
+ [[https://leanprover-community.github.io/blog/posts/2021-the-bottom-line/][2021 - The Bottom Line]]. ~ Mathlib community. #ITP #LeanProver #Mathlib
+ [[https://www.brunogavranovic.com/posts/2022-01-05-lenses-to-the-left-of-me.html][Lenses to the left of me, Prisms to the right]]. ~ Bruno Gavranović (@bgavran3). #CategoryTheory #FunctionalProgramming #Haskell
+ [[https://www.brunogavranovic.com/posts/2021-03-03-Towards-Categorical-Foundations-Of-Neural-Networks.html][Towards categorical foundations of learning]]. ~ Bruno Gavranović (@bgavran3). #CategoryTheory #DeepLearning
+ [[https://arxiv.org/abs/2112.15594][A neural network solves and generates mathematics problems by program synthesis: Calculus, differential equations, linear algebra, and more]]. ~ Iddo Drori et als. #MachineLearning #Math

*** 08-Jan-22
+ [[https://archive.org/details/asurveyofsymboli00lewiuoft via @internetarchive][A survey of symbolic logic]]. ~ Clarence Irving Lewis (1918). #Logic #Math
+ [[https://notxor.nueva-actitud.org/2022/01/08/preparando-emacs-para-trabajar-con-clojure.html][Preparando Emacs para trabajar con Clojure]]. ~ Notxor. #Emacs #Clojure #FunctionalProgramming
+ [[https://youtu.be/I4pQbo5MQOs][The paradox at the heart of mathematics: Gödel's Incompleteness Theorem]]. ~ Marcus du Sautoy. #Logic #Math
+ [[https://www.en.pms.ifi.lmu.de/publications/diplomarbeiten/Wolfgang.Witt/DA_Wolfgang.Witt.pdf][Types in logic programming (An overview of type systems proposed for logic programming languages)]]. ~ Wolfgang Witt. #LogicProgramming #TypeTheory #Mercury
+ [[http://hiperfit.dk/pdf/olesen-bsc-2021.pdf][Extracting certified Futhark code from Coq]]. ~ Kristian Knudsen Olesen. #BSc_Thesis #ITP #Coq
+ [[https://research.chalmers.se/publication/527051/file/527051_Fulltext.pdf][Practical heterogeneous unification for dependent type checking]]. ~ Víctor López Juan. #PhD_Thesis #ITP #Agda #FunctionalProgramming
+ [[https://arxiv.org/abs/2201.00255v1][The solutions to single-variable polynomials, implemented and verified in Lean]]. ~ Nicholas Dyson, Benedikt Ahrens, Jacopo Emmenegger. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2112.14809v1][Explanation by automated reasoning using the Isabelle infrastructure framework]]. ~ Florian Kammüller. #ITP #IsabelleHOL #XAI #AI #MachineLearning
+ [[https://repozytorium.uwb.edu.pl/jspui/bitstream/11320/12385/1/10.2478_forma-2021-0007.pdf][Pappus’s hexagon theorem in real projective plane]]. ~ Roland Coghetto. #ITP #Mizar #Math
+ [[https://repozytorium.uwb.edu.pl/jspui/bitstream/11320/12390/1/10.2478_forma-2021-0009.pdf][Ascoli-Arzel`a theorem (in Mizar)]]. ~ Hiroshi Yamazaki. #ITP #Mizar #Math
+ [[https://www.hindawi.com/journals/sp/2022/2079880/][A comprehensive formalization of AADL with behavior annex]]. ~ Yu Tan, Yongwang Zhao, Dianfu Ma, and Xuejun Zhang. #ITP #IsabelleHOL
+ [[https://raw.githubusercontent.com/mukeshtiwari/HotSpot2021/main/formal_properties_schulze.pdf][Machine checked properties of the Schulze method]]. ~ Mukesh Tiwari, Dirk Pattinson. #ITP #Coq
+ [[https://repozytorium.uwb.edu.pl/jspui/bitstream/11320/12387/1/10.2478_forma-2021-0008.pdf][On weakly associative lattices and near lattices (in Mizar)]]. ~ Damian Sawicki, Adam Grabowski. #ITP #Mizar #Math

*** 07-Jan-22
+ [[https://math.byu.edu/~grant/courses/cantor1874.pdf][On a property of the class of all real algebraic numbers]]. ~ Georg Cantor (1874). #Logic #Math #SetTheory
+ [[http://bibliotecadigital.ilce.edu.mx/Colecciones/ReinaCiencias/_docs/SobreUnaPropiedadConjunto_Cantor.pdf][Sobre una propiedad del conjunto de los números algebraicos reales]]. ~ Georg Cantor (1874). #Lógica #Matemática #Teoría_de_conjuntos vía @kroftopkin
+ [[http://www.digizeitschriften.de/dms/resolveppn/?PID=GDZPPN002155583][Ueber eine Eigenschaft des Inbegriffes aller reellen algebraischen Zahlen]]. ~ Georg Cantor (1874). #Logic #Math #SetTheory
+ [[https://www.cambridge.org/core/journals/journal-of-functional-programming/article/how-to-find-a-fake-coin/BD43BF3F22072B224171E9A0B961DF22][Functional pearl: How to find a fake coin]]. ~ Richard S. Bird (2019). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2201.01943][Machine learning: Algorithms, models, and applications]]. ~ Jaydip Sen et als. #eBook #MachineLearning
+ [[https://blog.josephmorag.com/posts/databass1/][Databass, Part 1: Queries]]. ~ Joseph Morag. #Haskell #FunctionalProgramming
+ [[https://blog.josephmorag.com/posts/databass2/][Databass, Part 2: Inserting into the database]]. ~ Joseph Morag. #Haskell #FunctionalProgramming
+ [[https://www.buzzsprout.com/758831/9639262-felipe-santa-cruz-buen-codigo-teoria-y-la-programacion-funcional-e-61][Buen código, teoría y la programación funcional]] por Felipe Santa-Cruz (@Felipe_StaCruz) y Camilo Chacón Sartori (@camilo_chacon_s) en "Había una vez un algoritmo..." #Podcast #Programación #ProgramaciónFuncional
+ [[https://www.researchgate.net/publication/357573307_Knowledge_representation_for_explainable_artificial_intelligence_Modeling_foundations_from_complex_systems][Knowledge representation for explainable artificial intelligence: Modeling foundations from complex systems]]. ~ Joaquín Borrego Díaz, Juan Galán Páez. #AI #KR #XAI
+ [[http://www.cs.ox.ac.uk/jeremy.gibbons/publications/continued.pdf][Continuation-passing style, defunctionalization, accumulations, and associativity]]. ~ Jeremy Gibbons (@jer_gib). #FunctionalProgramming #Haskell
+ [[http://www.cs.ox.ac.uk/people/jeremy.gibbons/publications/ifip60.pdf][Algorithmics]]. ~ Richard Bird‚ Jeremy Gibbons‚ Ralf Hinze‚ Peter Hoefner‚ Johan Jeuring‚ Lambert Meertens‚ Bernhard Moeller‚ Carroll Morgan‚ Tom Schrijvers‚ Wouter Swierstra and Nicolas Wu (2020). #Algorithmic_programming
+ [[https://pl.cs.uni-kl.de/homepage/teaching/ss19/fp/slides.pdf][Functional programming]]. ~ Ralf Hinze (2019). #Haskell #FunctionalProgramming
+ [[http://www.thomaswong.net/introduction-to-classical-and-quantum-computing.pdf][Introduction to classical and quantum computing]]. ~ Thomas G. Wong (@thomasgwong). #eBook #Quantum_computing #CompSci
+ [[http://www.hoefner-online.de/home/pdfs/2021BannisterHoefnerStruth.pdf][Effect algebras, Girard quantales and complementation in separation logic]]. ~ Callum Bannister, Peter Höfner, Georg Struth. #ITP #IsabelleHOL
+ [[https://spiral.imperial.ac.uk/handle/10044/1/90698][Reasoning about effect interaction by fusion]]. ~ Zhixuan Yang, Nicolas Wu (2021). #Haskell #FunctionalProgramming
+ [[https://yangzhixuan.github.io/pdf/scoped-cata.pdf][Structured handling of scoped effects]]. ~ Zhixuan Yang, Marco Paviotti, Nicolas Wu, Birthe van den Berg, and Tom Schrijvers. #Haskell #FunctionalProgramming
+ [[https://yangzhixuan.github.io/pdf/fantastic-morphisms.pdf][Fantastic morphisms and where to find them (A guide to recursion schemes)]]. ~ Zhixuan Yang and Nicolas Wu (2019). #Haskell #FunctionalProgramming

*** 06-Jan-22
+ [[https://archive.org/details/aninvestigation01boolgoog][An investigation of the laws of thought: On which are founded the mathematical theories of logic]]. ~ George Boole (1854). #Logic #Matha via @internetarchive
+ [[https://www.buzzsprout.com/758831/9831422-manuel-rubio-sanchez-recursividad-investigacion-y-el-valor-de-los-fundamentos-e-69]["Recursividad, investigación y el valor de los fundamentos" por Manuel Rubio-Sánchez (@MRubSan) y Camilo Chacón Sartori (@camilo_chacon) en "Había una vez un algoritmo]]...". #Podcast #Programación #Computación #Matemáticas
+ [[https://www.buzzsprout.com/758831/9788625-andros-fenollosa-programacion-funcional-clojure-y-el-amor-a-la-informatica-e-65]["Programación funcional, Clojure y el amor a la informática" por Andros Fenollosa (@androsfenollosa) y Camilo Chacón Sartori (@camilo_chacon) en "Había una vez un algoritmo]]...". #ProgramaciónFuncional #Clojure
+ [[https://www.cs.utexas.edu/users/EWD/ewd03xx/EWD340.PDF][The humble programmer]]. ~ Edsger W. Dijkstra (1972). #CompSci
+ [[https://nummolt.blogspot.com/2019/08/el-programador-humilde.html][El programador humilde]]. ~ Edsger W. Dijkstra (1972). #Programación
+ [[https://www.youtube.com/watch?v=-4Yp3j_jk8Q][Thinking above the code (Video)]]. ~ Leslie Lamport (2014). #CompSci
+ [[https://www.microsoft.com/en-us/research/wp-content/uploads/2016/07/leslie_lamport.pdf][Thinking above the code (Slides)]]. ~ Leslie Lamport (2014). #CompSci
+ [[https://topos.site/poly-book.pdf][Polynomial functors: A general theory of interaction]]. ~ David I. Spivak, Nelson Niu. #CategoryTheory via @Iceland_jack
+ [[https://gist.github.com/wenkokke/9f608fdebe0ee335deeff4d5b01b7f69][A list of projects providing tactics for Agda]]. ~  Wen Kokke (@wenkokke). #ITP #Agda
+ [[https://starsandspira.ls/docs/esop22-draft.pdf][Linearity and uniqueness: An entente cordiale]]. ~ Daniel Marshall, Michael Vollmer, and Dominic Orchard. #Granule #FunctionalProgramming via @brendanzab
+ [[https://github.com/haskell-beginners-2022/exercises][Exercises for the Haskell Beginners 2022 course]]. ~  Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://www.cs.utexas.edu/~amiltner/burst.pdf][Bottom-up synthesis of recursive functional programs using angelic execution]]. ~ Anders Miltner, Adrian Trejo Nuñez, Ana Brendel, Swarat Chaudhuri, Isil Dillig. #OCaml #FunctionalProgramming

*** 05-Jan-22
+ [[http://bibliotecadigital.ilce.edu.mx/Colecciones/ReinaCiencias/_docs/Los_principios_aritmetica.pdf][Los principios de la aritmética presentados por un nuevo método]]. ~ Giuseppe Peano (1889). #Lógica #Matemática via @kroftopkin
+ [[https://raw.githubusercontent.com/mdnahas/Peano_Book/master/Peano.pdf]["Arithmetices principia, nova methodo exposita" or "The principles of arithmetic, presented by a new method" (both in the original latin and in parallel english translation with modern mathematical notation)]]. ~ Giuseppe Peano (1889). #Logic #Math
+ [[https://archive.org/details/arithmeticespri00peangoog][Arithmetices principia: nova methodo]]. ~ Giuseppe Peano (1889). #Logic #Math via @internetarchive
+ [[https://www.cl.cam.ac.uk/archive/mjcg/papers/HolHistory.html][From LCF to HOL: a short history]]. ~ Michael J. C. Gordon (2000). #ITP #LCF #HOL
+ [[https://homepages.inf.ed.ac.uk/wadler/papers/propositions-as-types/propositions-as-types.pdf][Propositions as types]]. ~ Philip Wadler (2014). #Logic #CompSci
+ [[https://lawrencecpaulson.github.io//2022/01/05/LCF.html][The de Bruijn criterion vs the LCF architecture]]. ~ Lawrence Paulson. #ITP
+ [[https://backend.orbit.dtu.dk/ws/portalfiles/portal/266396296/Alexander_Birch_Jensen_2021_04_16_12.06.46_paper_16_finalversion.pdf][Formal verification of a cognitive agent using theorem proving]]. ~ Alexander Birch Jensen. #ITP #IsabelleHOL
+ [[https://www.ps.uni-saarland.de/Publications/documents/ForsterEtAl_2020_Synthetic-Reducibility-in-Coq.pdf][A constructive and synthetic theory of reducibility (Myhill’s isomorphism theorem and Post’s problem for many-one and truth-table reducibility in Coq)]]. ~ Yannick Forster, Felix Jahn, Gert Smolka. #ITP #Coq
+ [[https://ps.uni-saarland.de/~forster/thesis/phd-thesis-yforster-printblack.pdf][Computability in constructive type theory]]. ~ Yannick Forster. #PhD_Thesis #ITP #Coq
+ [[https://github.com/Chobbes/PiBellards][Implementation of Bellard's algorithm for calculating pi to 'n' digits in Haskell]]. ~ Calvin Beck. #Haskell #FunctionalProgramming #Math
+ [[https://github.com/dunnl/tealeaves][Tealeaves: a Coq framework for proving theorems about syntax abstractly]]. ~ Lawrence Dunn. #ITP #Coq
+ [[https://www.isa-afp.org/entries/Knights_Tour.html][Knight's tour revisited revisited (in Isabelle/HOL)]]. ~ Lukas Koller. #ITP #IsabelleHOL
+ [[https://raw.githubusercontent.com/sweirich/graded-haskell/main/ddc.pdf][A dependent dependency calculus]]. ~ Pritam Choudhury, Harley Eades III, Stephanie Weirich. #Dependent_types #Coq
+ [[https://leanprover-community.github.io/blog/posts/month-in-mathlib-dec-2021/][This month in mathlib (Dec 2021)]]. #ITP #LeanProver #Math
+ [[https://youtu.be/6JH8bFRohn8][How to implement the lambda calculus, quickly]]. ~ Stephanie Weirich. #Haskell #FunctionalProgramming #LambdaCalculus
+ [[https://www.cis.upenn.edu/~stevez/papers/ZB+21.pdf][Modular, compositional, and executable formal semantics for LLVM IR]]. ~ Yannick Zakowski, Calvin Beck, Irene Yoon, Ilya Zaichuk, Vadim Zaliva, and Steve Zdancewic. #ITP #Coq
+ [[https://paulhe.com/assets/spec-extraction-oopsla.pdf][A type system for extracting functional specifications from memory-safe imperative programs]]. ~ Paul He, Eddy Westbrook, Brent Carmer, Chris Phifer, Valentin Robert, Karl Smeltzer, Andrei Ştefănescu, Aaron Tomb, Adam Wick, Matthew Yacavone, Steve Zdancewic. #ITP #Coq
+ [[https://www.cs.umd.edu/~rrand/thesis.pdf][Formally verified quantum programming]]. ~ Robert Rand (2018). #PhD_Thesis #ITP #Coq #QuantumProgramming
+ [[https://www.isa-afp.org/browser_info/current/AFP/Hyperdual/document.pdf][Hyperdual numbers and forward differentiation (in Isabelle/HOL)]]. ~ Filip Smola and Jacques Fleuriot. #ITP #IsabelleHOL #Math

*** 04-Jan-22
 + [[https://archive.org/details/foundationsofari00freg][The foundations of arithmetic: a logico-mathematical enquiry into the concept of number]]. ~ Gottlob Frege (1884). #Logic #Math
 + [[http://bibliotecadigital.ilce.edu.mx/Colecciones/ReinaCiencias/_docs/Los_fundamentos_aritmetica-Frege.pdf][Los fundamentos de la aritmética]]. ~ Gottlob Frege (1884). #Lógica #Matemática
 + [[https://archive.org/details/diegrundlagende00freggoog][Die Grundlagen der Arithmetik : eine logisch mathematische Untersuchung über den Begriff der Zahl]]. ~ Gottlob Frege (1884). #Logic #Math
 + [[https://www.metalevel.at/prolog/cryptography][Cryptography with Prolog]]. ~ Markus Triska (@MarkusTriska). #Prolog #LogicProgramming
 + [[https://youtu.be/YnUOxsiSYfk][Cryptography with Prolog (Video)]]. ~ Markus Triska (@MarkusTriska). #Prolog #LogicProgramming
 + [[https://arxiv.org/abs/2111.03484][Pirouette: Higher-Order typed functional choreographies]]. ~ Andrew K. Hirsch (@andrewkhirsch), Deepak Garg. #ITP #Coq
 + [[http://people.mpi-sws.org/~dg/papers/pldi2021-refinedc.pdf][RefinedC: Automating the foundational verification of C code with refined ownership types]]. ~ Michael Sammler, Rodolphe Lepigre, Robbert Krebbers, Kayvan Memarian, Derek Dreyer, Deepak Garg. #ITP #Coq
 + [[https://iris-project.org/pdfs/2022-popl-vip.pdf][VIP: Verifying real-world C idioms with integer-pointer casts]]. ~ Rodolphe Lepigre, Michael Sammler, Kayvan Memarian, Robbert Krebbers, Derek Dreyer, Peter Sewell. #ITP #Coq
 + [[https://www.researchgate.net/publication/353105163_Consejos_y_reglas_de_un_simple_programador][Consejos y reglas de un simple programador]]. ~ Camilo Chacón Sartori (@camilo_chacon_s). #Computación #Aprendizaje #Filosofía
 + [[https://robbertkrebbers.nl/research/articles/connectivity_graphs.pdf][Connectivity graphs: A method for proving deadlock freedom based on separation logic]]. ~ Jules Jacobs, Stephanie Balzer and Robbert Krebbers. #ITP #Coq
 + [[https://arxiv.org/abs/2101.11320v10][Tutorial implementation of Hoare logic in Haskell]]. ~ Boro Sitnikovski  (@BSitnikovski). #Haskell #FunctionalProgramming
 + [[https://robbertkrebbers.nl/research/articles/simuliris.pdf][Simuliris: A separation logic framework for verifying concurrent program optimizations]]. ~ Lennard Gäher, Michael Sammler, Simon Spies, Ralf Jung, Hai Dang, Robbert Krebbers, Jeehong Kang and Derek Dreyer. #ITP #Coq
 + [[https://robbertkrebbers.nl/research/articles/intrinsic_compilation.pdf][Intrinsically typed compilation with nameless labels]]. ~ Arjen Rouvoet, Robbert Krebbers and Eelco Visser. #ITP #Agda #FunctionalProgramming
 + [[https://robbertkrebbers.nl/research/articles/semantic_sessions.pdf][Machine-checked semantic session typing]]. ~ Jonas Kastberg Hinrichsen, Daniël Louwrink, Robbert Krebbers and Jesper Bengtson. #ITP #Coq
 + [[https://robbertkrebbers.nl/research/articles/seloc.pdf][Compositional non-interference for fine-grained concurrent programs]]. ~ Dan Frumin, Robbert Krebbers and Lars Birkedal. #ITP #Coq
 + [[https://robbertkrebbers.nl/research/articles/transfinite-iris.pdf][Transfinite Iris: resolving an existential dilemma of step-indexed separation logic]]. ~ Simon Spies, Lennard Gäher, Daniel Gratzer, Joseph Tassarotti, Robbert Krebbers, Derek Dreyer and Lars Birkedal. #ITP #Coq
 + [[https://robbertkrebbers.nl/research/articles/reloc-reloaded.pdf][ReLoC reloaded: A mechanized relational logic for fine-grained concurrency and logical atomicity]]. ~ Dan Frumin, Robbert Krebbers and Lars Birkedal. #ITP #Coq
 + [[https://robbertkrebbers.nl/research/articles/actris2.pdf][Actris 2]].0: Asynchronous session-type based reasoning in separation logic. ~ Jonas Kastberg Hinrichsen, Jesper Bengtson and Robbert Krebbers. #ITP #Coq
 + [[https://royalsocietypublishing.org/doi/full/10.1098/rsta.2005.1650][The challenge of computer mathematics]]. ~ Henk Barendregt and Freek Wiedijk (2005). #ITP #Math

*** 03-Jan-22
+ [[http://bibliotecadigital.ilce.edu.mx/Colecciones/ReinaCiencias/_docs/El_analisis_matematico-Boole.pdf][El análisis matemático de la lógica]]. ~ George Boole (1847). #Lógica #Matemática
+ [[https://archive.org/details/mathematicalanal00booluoft Logic][The mathematical analysis of logic]]. ~ George Boole (1847). #Math via @internetarchive
+ [[https://www.isa-afp.org/entries/Gale_Shapley.html][Gale-Shapley algorithm (in Isabelle/HOL)]]. ~ Tobias Nipkow. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Roth_Arithmetic_Progressions.html][Roth's theorem on arithmetic progressions (in Isabelle/HOL)]]. ~ Chelsea Edmonds, Angeliki Koutsoukou-Argyraki and Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://www3.risc.jku.at/conferences/adg2020/talk/Windsteiger.pdf][Automated theorem proving in the classroom]]. ~ Wolfgang Windsteiger. #ITP #ATP #Logic #Math
+ [[https://www3.risc.jku.at/publications/download/risc_6356/21-15.pdf][Automated theorem proving in the classroom]]. ~ Wolfgang Windsteiger. #ITP #ATP #Logic #Math
+ [[https://files.sketis.net/Isabelle_Workshop_2020/Isabelle_2020_paper_10.pdf][Lucas’s theorem: formalising generating function proofs]]. ~ Chelsea Edmonds (2020). #ITP #IsabelleHOL #Math
+ [[https://www3.risc.jku.at/conferences/adg2020/talk/Dowek.pdf][Sharing geometry proofs across logics and systems]]. ~ Gilles Dowek. #ITP #Dedukti #Logic #Math
+ [[https://www.enseignement.polytechnique.fr/informatique/MPRI/2-7-1/slides1-print.pdf][Foundations of formal proof systems]]. ~ Benjamin Werner. #Logic #Math
+ [[https://files.sketis.net/Isabelle_Workshop_2020/Isabelle_2020_paper_3.pdf][FindFacts: A scalable theorem search]]. ~ Fabian Huch and Alexander Krauss (2020). #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2104.09366][Simple type theory is not too simple: Grothendieck's schemes without dependent types]]. ~ Anthony Bordg, Lawrence Paulson, Wenda Li. #TypeTheory #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2101.06223][LIME: Learning inductive bias for primitives of mathematical reasoning]]. ~ Yuhuai Wu, Markus Rabe, Wenda Li, Jimmy Ba, Roger Grosse, Christian Szegedy. #ITP #MachineLearning #Math
+ [[https://www.repository.cam.ac.uk/bitstream/handle/1810/289389/thesis.pdf?sequence=1&isAllowed=y][Towards justifying computer algebra algorithms in Isabelle/HOL]]. ~ Wenda Li (2019). #PhD_Thesis #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2007.02924][INT: An inequality benchmark for evaluating generalization in theorem proving]]. ~ Yuhuai Wu, Albert Qiaochu Jiang, Jimmy Ba, Roger Grosse. #ITP #MachineLearning
+ [[https://tel.archives-ouvertes.fr/tel-02512327/document][Approche combinatoire pour l'automatisation en Coq des preuves formelles en géométrie d'incidence projective]]. ~ David Braun (2019). #PhD_Thesis #ITP #Coq #Math
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ADG2021.8.pdf][Mechanization of incidence projective geometry in higher dimensions, a combinatorial approach]]. ~ Pascal Schreck, Nicolas Magaud and David Braun. #ITP #Coq #Math
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ADG2021.9.pdf][Automated generation of illustrations for synthetic geometry proofs]]. ~ Predrag Janičić and Julien Narboux. #ATP #Math
+ [[http://www.lsv.fr/~dowek/Cours/Pit/pit.pdf][Proofs in theories]]. ~ Gilles Dowek (2018). #eBook #Logic #Math
+ [[http://www.fmv.jku.at/papers/CernaSeidlSchreinerWindsteigerBiere-CSEDU20.pdf][Computational logic in the first semester of computer science: An experience report]]. ~ David M. Cerna, Martina Seidl, Wolfgang Schreiner, Wolfgang Windsteiger, Armin Biere (2020). #Logic #ITP #ATP
+ [[https://drive.google.com/file/d/1rY2ADHQX-rSUySSaiGi5G5iXduZD2e1D/view][Three different ways to prove Dandelin-Gallucci theorem]]. ~ David Braun, Nicolas Magaud, Pascal Schreck. #ITP #Coq #Math
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ADG2021.13.pdf][Formalising geometric axioms for Minkowski spacetime and without-loss-of-generality theorems]]. ~ Richard Schmoetten, Jake Palmer, Jacques Fleuriot. #ITP #IsabelleHOL #Math

*** 02-Jan-22
+ [[https://shemesh.larc.nasa.gov/people/cam/publications/NASA-TM-20205010644.pdf][Improving automated strategies for univariate quantifier elimination]]. ~ Katherine Cordwell, Cesar A. Muñoz, and Aaron M. Dutle. #ITP #PVS #Math
+ [[http://www.ijfcc.org/vol10/578-T0142.pdf][Formal verification of MILS partition scheduling module using layered methods]]. ~ Yang Gao, Xia Yang, Wensheng Guo, and Xiutai Lu. #ITP #Coq
+ [[https://slides.com/haskellbeginners2022/lecture-1][Haskell beginners 2022: Lecture 1 (Fundamentals)]]. ~ Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://slides.com/haskellbeginners2022/lecture-2][Haskell beginners 2022: Lecture 2 (Data)]]. ~ Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://slides.com/haskellbeginners2022/lecture-3][Haskell beginners 2022: Lecture 3 (Typeclasses)]]. ~ Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[http://bibliotecadigital.ilce.edu.mx/Colecciones/ReinaCiencias/_docs/Pueden_pensar_las_computadoras_Turing.pdf][¿Pueden pensar las computadoras digitales?]] ~ Alan Turing (1951). #Computación #IA
+ [[https://philipzucker.com/bap-js-1][Getting bap in the browser 1]]. ~ Philip Zucker (@SandMouth). #Ocaml #FunctionalProgramming
+ [[https://www.wittgensteinproject.org/w/index.php?title=Tractatus_Logico-Philosophicus_(English)][Tractatus Logico-Philosophicus]]. ~ Ludwig Wittgenstein (1922). #Logic
+ [[https://github.com/bolt12/advent-of-haskell-dd][Advent of Haskell: Denotational design]]. ~ Armando Santos (@_bolt12). #Haskell #FunctionalProgramming
+ [[https://raw.githubusercontent.com/bolt12/master-thesis/master/Msc_Thesis.pdf][Selective functors & probabilistic programming]]. ~ Armando Santos (@_bolt12). #MSc_Thesis #Haskell #FunctionalProgramming
+ [[https://mybinder.org/v2/gh/jamesdbrock/learn-you-a-haskell-notebook/master?urlpath=lab/tree/learn_you_a_haskell/00-preface.ipynb][Jupyter adaptation of "Learn You a Haskell for Great Good!"]] ~ James Brock (@jamesdbrock) #Haskell #FunctionalProgramming #Jupyter
+ [[https://mybinder.org/v2/gh/jaalonso/Temas_interactivos_de_PF_con_Haskell/master?filepath=temas/Indice.ipynb][Temas interactivos de programación funcional con Haskell]]. ~ J.A. Alonso. #Haskell #FunctionalProgramming #Jupyter
+ [[https://arxiv.org/abs/2010.10510][Compiling quantamorphisms for the IBM Q experience]]. ~ Ana Neri, Rui Soares Barbosa, José N. Oliveira. #Haskell #FunctionalProgramming #Quantum_computing
+ [[http://repositorium.sdum.uminho.pt/bitstream/1822/67480/1/Ana%20Isabel%20Carvalho%20Neri.pdf][Towards quantum program calculation]]. ~ Ana Neri (2018). #MSc_Thesis #Haskell #FunctionalProgramming #Quantum_computing
+ [[http://hojaynumeros.blogspot.com/2022/01/propiedades-del-numero-2022.html][Propiedades del número 2022]]. ~ Antonio Roldán (@Connumeros). #Matemáticas
+ [[https://www.lambdabytes.io/articles/defectprocess/][The source code of Defect Process]]. ~ Jonathan Thaler (@JonathanThaler). #Haskell #FunctionalProgramming
+ [[https://eccc.weizmann.ac.il/report/2022/002/][Extending merge resolution to a family of proof systems]]. ~ Sravanthi Chede, Anil Shukla. #Logic #CompSci
+ [[https://arxiv.org/abs/2103.01046][Extending Prolog for quantified boolean Horn formulas]]. ~ Anish Mallick, Anil Shukla. #Prolog #LogicProgramming

*** 01-Jan-22
+ [[https://github.com/jaalonso/Lecturas_GLC][Readings on computational logic, interactive theorem proving, and functional programming]]. #ITP #FunctionalProgramming
+ [[https://raw.githubusercontent.com/mukeshtiwari/HotSpot2021/main/formal_properties_schulze.pdf][Machine checked properties of the Schulze method]]. ~ Mukesh Tiwari and Dirk Pattinson. #ITP #Coq
+ [[https://gto76.github.io/python-cheatsheet/][Comprehensive Python cheatsheet]]. ~ Jure Šorn. #Python
+ [[https://www.nasa.gov/sites/default/files/atoms/files/system_engineering_research_consortium_category_theory_022619.pdf][Engineering elegant systems: Systems as mathematical categories]]. ~ Michael D. Watson (2019). #CategoryTheory
+ [[https://www.nasa.gov/sites/default/files/atoms/files/mssrc_uah_nasa_30-09-2018.pdf][Category theory for Engineers]]. ~ Larry A. Lambe (2018). #CategoryTheory
+ [[https://www.nasa.gov/sites/default/files/atoms/files/incose_isss_lal_2018_flat.pdf][Categories, mathematics, and systems]]. ~ Larry A. Lambe (2018). #CategoryTheory
+ [[https://youtu.be/nyT-TKxJgDg][Teaching automated reasoning and formally verified functional programming in Agda and Isabelle/HOL]]. ~ Jørgen Villadsen. #ITP #Agda #IsabelleHOL
+ [[https://raw.githubusercontent.com/mukeshtiwari/Thesis/master/thesisTemplate/thesis.pdf][Formally verified verifiable electronic voting scheme]]. ~ Mukesh Tiwari. #PhD_Thesis #ITP #Coq
+ [[https://archive.org/details/principiamathema01anwh][Principia Mathematica (Vol. 1)]]. ~ Alfred North Whitehead and Bertrand Russell (1910). #Logic #Math
+ [[https://archive.org/details/B-001-004-307/mode/2up][Principia Mathematica (Vol. 2)]]. ~ Alfred North Whitehead and Bertrand Russell (1912). #Logic #Math
+ [[https://archive.org/details/PrincipiaMathematicaVol3][Principia Mathematica (Vol. 3)]]. ~ Alfred North Whitehead and Bertrand Russell (1927). #Logic #Math
+ [[https://royalsocietypublishing.org/doi/10.1098/rspa.2017.0872][Computational logic: its origins and applications]]. ~ Lawrence C. Paulson (2018). #Logic #CompSci #ITP
+ [[https://www.principiarewrite.com/][The Principia Rewrite project (rewriting 'Principia Mathematica' in Coq)]]. ~ Landon D. C. Elkind (@LogicalAtomist) et als. #ITP #Coq #Logic #Math
+ [[http://www.imm.dtu.dk/~samo/PSPSP.pdf][Performing security proofs of stateful protocols]]. ~ Andreas V. Hess, Sebastian Mödersheim, Achim D. Brucker and Anders Schlichtkrull. #ITP #IsabelleHOL
+ [[https://backend.orbit.dtu.dk/ws/portalfiles/portal/163079794/phd493_Schlichtkrull_A.pdf][Formalization of logic in the Isabelle proof assistant]]. ~ Anders Schlichtkrull (2018). #PhD_Thesis #ITP #IsabelleHOL #Logic
+ [[https://people.compute.dtu.dk/ahfrom/Thesis.pdf][Hybrid logic]]. ~ Asta Halkjær From (2020). #MSc_Thesis #ITP #IsabelleHOL #Logic
+ [[https://github.com/prathyvsh/history-of-logic][History of Logic]]. ~ Prathyush (@prathyvsh). #Logic
+ [[https://leanprover-community.github.io/blog/posts/lte-update/][Liquid Tensor Experiment: an update]]. ~ Johan Commelin. #ITP #LeanProver #Math
+ [[https://github.com/prathyvsh/category-theory-resources][Resources for learning Category Theory for an enthusiast]]. ~ Prathyush (@prathyvsh). #CategoryTheory
+ [[http://bibliotecadigital.ilce.edu.mx/Colecciones/index.php?clave=ReinaCiencias][La reina de las ciencias (algunos contenidos esenciales de la ciencia matemática)]]. ~ Emilio Méndez Pinto (@kroftopkin). #Lógica #Matemática #Historia
+ [[https://matthew.brecknell.net/posts/intro-sel4-proofs/][Introduction to the seL4 proofs]]. ~ Matthew Brecknell (@mbrcknl). #ITP #IsabelleHOL
+ [[https://lauratitolo.github.io/publication/2022cpp/2022CPP.pdf][A compositional proof framework for FRETish requirements]]. ~ Esther Conrad, Laura Titolo, Dimitra Giannakopoulou, Thomas Pressburger, Aaron Dutle. #ITP #PVS
+ [[https://lauratitolo.github.io/publication/2021fac/2021FAC.pdf][Formal analysis of the compact position reporting algorithm]]. ~ Aaron Dutle, Mariano M. Moscato, Laura Titolo, César A. Muñoz, Gregory Anderson, and François Bobot. #ITP #PVS
+ [[https://shemesh.larc.nasa.gov/people/amd/publications/CPP2021-SAS_RA-draft.pdf][Formal verification of semi-algebraic sets and real analytic functions]]. ~ J. Tanner Slagel, Lauren White, and Aaron Dutle. #ITP #PVS #Mat

* Readings of the year 2021

** December 2021

*** 31-Dic-21
+ [[https://www.researchgate.net/publication/328518510_Classification_of_Finite_Fields_with_Applications][Classification of finite fields with applications]]. ~ Hing-Lun Chan and Michael Norrish (2019). #ITP #HOL4 #Math
+ [[https://www.researchgate.net/publication/320406041_Proof_Pearl_Bounding_Least_Common_Multiples_with_Triangles][Proof pearl: Bounding least common multiples with triangles]]. ~ Hing-Lun Chan and Michael Norrish (2019). #ITP #HOL4 #Math
+ [[https://www.researchgate.net/publication/266413080_A_String_of_Pearls_Proofs_of_Fermat's_Little_Theorem][A string of pearls: Proofs of Fermat's little theorem]]. ~ Hing-Lun Chan and Michael Norrish (2013). #ITP #HOL4 #Math
+ [[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7324286/pdf/978-3-030-51074-9_Chapter_30.pdf][Mechanised modal model theory]]. ~ Yiming Xu and Michael Norrish (2020). #ITP #HOL4 #Logic
+ [[https://tqft.net/web/research/students/YimingXu/thesis.pdf][Formalizing modal logic in HOL]]. ~ Yiming Xu. #BSc_Thesis #ITP #HOL4 #Logic
+ [[https://www.logicmatters.net/categories/][Category theory: Lecture notes and online books]]. ~ Peter Smith (@PeterSmith). #CategoryTheory
+ [[https://dl.acm.org/doi/pdf/10.1145/3445984][People, ideas, milestones: a scientometric study of computational thinking]]. ~ M. Saqr, K. Ng, S. Oyelere, M. Tedre. #Computational_thinking
+ [[https://www.johndcook.com/blog/2021/12/30/modal-axioms/][Names and numbers for modal logic axioms]]. ~ John D. Cook (@JohnDCook). #Logic

*** 30-Dic-21
+ [[https://arxiv.org/abs/2112.14605][On the relational translation method for propositional modal logics]]. ~ Jian Zhang. #ATP #OTTER
+ [[https://arxiv.org/abs/2112.14603][Learning higher-order programs without meta-interpretive learning]]. ~ Stanisław J. Purgał, David M. Cerna, Cezary Kaliszyk. #ITP #MachineLearning #LogicProgramming #Prolog #ASP
+ [[https://arxiv.org/abs/2112.14057][Inductive and coinductive predicate liftings for effectful programs]]. ~ Niccolò Veltri, and Niels F.W. Voorneveld. #ITP #Agda
+ [[https://arxiv.org/abs/2112.14050][A cartesian bicategory of polynomial functors in Homotopy Type Theory]]. ~ Eric Finster, Samuel Mimram, Maxime Lucas, Thomas Seiller. #ITP #Agda #HoTT
+ [[https://www.cl.cam.ac.uk/research/hvg/haiku.html][Theorem Proving Haiku]]. #ITP
+ [[https://blog.devgenius.io/importing-csv-data-with-haskell-and-the-worlds-dependency-on-fossil-fuels-7070e7796b4a][Importing CSV data with Haskell and the World’s dependency on fossil fuels]]. ~ Fábio Molinar. #Haskell #FunctionalProgramming
+ [[https://archive.org/details/tohbcurryessayso00edit/page/n5/mode/2up][To H.B. Curry: Essays on combinatory logic, lambda calculus and formalism]]. (Edited by J.P. Seldin and J.R. Hindley, 1980). #Logic #Math #LambdaCalculus via @breandan
+ [[https://archive.uea.ac.uk/~h020/Document_principal.pdf][Évolution des mathématiques au XXe siècle et après]]. ~ Hourya Benis and Mirna Džamonja #Math
+ [[https://www.irif.fr/~curien/LMFI1.pdf][Théorie de la démonstration]]. ~ Pierre-Louis Curien (2009). #Logic #Math
+ [[https://github.com/herbelin/cours-preuves-ordinateur/][Cours: Preuves assistées par ordinateur (hiver 2021)]]. ~ Hugo Herbelin, and Théo Zimmermann.  #ITP #Coq
+ [[https://avigad.github.io/lamr/logic_and_mechanized_reasoning.pdf][Logic and mechanized reasoning]]. ~ Jeremy Avigad, Marijn J. H. Heule, and Wojciech Nawrocki. #eBook #Logic #Math #LeanProver #FunctionalProgramming #SAT #SMT
+ [[https://github.com/avigad/lamr][Logic and mechanized reasoning (Repository)]]. ~ Jeremy Avigad, Marijn J. H. Heule, and Wojciech Nawrocki. #Logic #Math #LeanProver #FunctionalProgramming #SAT #SMT
+ [[https://www.cs.cmu.edu/~mheule/15217-f21/][Logic and mechanized reasoning (Course)]]. ~ Jeremy Avigad, Marijn J. H. Heule, and Wojciech Nawrocki. #Logic #Math #LeanProver #FunctionalProgramming #SAT #SMT
+ [[https://www.andrew.cmu.edu/user/avigad/Talks/fmtea.pdf][Teaching logic and mechanized reasoning with Lean 4 (Slides)]]. ~ Jeremy Avigad (Marijn Heule and Wojciech Nawrocki). #ITP #LeanProver #Logic
+ [[https://www.cl.cam.ac.uk/~lp15/papers/Reports/Verif-Transcendental-Algs.pdf][Formal verification of transcendental fixed and floating point algorithms using an automatic theorem prover]]. ~ Samuel Coward, L. C. Paulson, Theo Drane and Emiliano Morini. #ATP #MetiTarski #Math
+ [[https://arxiv.org/abs/2105.13583][A modular first formalisation of combinatorial design theory]]. ~ Chelsea Edmonds and L. C. Paulson. #ITP #IsabelleHOL
+ [[https://www.andrew.cmu.edu/user/avigad/Talks/topos.pdf][Formal mathematics, dependent type theory, and the Topos Institute (Slides)]]. ~ Jeremy Avigad. #ITP #LeanProver #Math
+ [[https://youtu.be/Kpa8cCUZLms][Formal mathematics, dependent type theory, and the Topos Institute (Video)]]. ~ Jeremy Avigad. #ITP #LeanProver #Math
+ [[https://thma.github.io/posts/2021-12-27-Implementing-a-functional-language-with-Graph-Reduction.html][Implementing a functional language with graph reduction]]. ~ Thomas Mahler. #Haskell #FunctionalProgramming
+ [[https://notxor.nueva-actitud.org/2021/12/30/editorconfig-y-emacs.html][EditorConfig y Emacs]]. ~ Notxor. #Emacs
+ [[https://leanprover.github.io/theorem_proving_in_lean4/ ][Theorem proving in Lean 4]]. ~ Jeremy Avigad, Leonardo de Moura, Soonho Kong and Sebastian Ullrich. #Lean4 #ITP #FunctionalProgramming

*** 29-Dic-21
+ [[https://docs.google.com/presentation/d/1pNI5mVX2ORn_VffgVU1aUu0HGrJvbWfZwMo60Qe9qOU/edit#slide=id.p][Proof automation (Class 1: Impacts)]]. ~ Talia Ringer (@TaliaRinger). #Proof_engineering #ITP #Coq
+ [[https://dependenttyp.es/classes/598sp2022.html][Proof automation (Spring 2022)]]. ~ Talia Ringer (@TaliaRinger). #Proof_engineering #ITP
+ [[https://dependenttyp.es/pdf/QEDatLarge.pdf][QED at large: A survey of engineering of formally verified software]]. ~ Talia Ringer, Karl Palmskog, Ilya Sergey, Milos Gligoric, and Zachary Tatlock. #Proof_engineering #ITP
+ [[https://www.researchgate.net/publication/327893218_Implementing_Euclid's_straightedge_and_compass_constructions_in_type_theory][Implementing Euclid’s straightedge and compass constructions in type theory]]. ~ Ariel Kellison, Mark Bickford, and Robert Constable (2019). #ITP #Nuprl #Math
+ [[https://www.tandfonline.com/doi/full/10.1080/10586458.2021.1980464][Formalizing ordinal partition relations using Isabelle/HOL]]. ~ Mirna Džamonja, Angeliki Koutsoukou-Argyraki, and Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://lawrencecpaulson.github.io//2021/12/29/Ramsey-1.html][Formalising Ramsey theory, I]]. ~ Lawrence Paulson. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Regular_Tree_Relations.html?utm_source=dlvr.it&utm_medium=twitter][Regular tree relations (in Isabelle/HOL)]]. ~ Alexander Lochmann, Bertram Felgenhauer, Christian Sternagel, René Thiemann, and Thomas Sternagel. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/MDP-Algorithms.html][Verified algorithms for solving Markov decision processes (in Isabelle/HOL)]]. ~ Maximilian Schäffeler, Mohammad Abdulaziz. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/MDP-Rewards.html][Markov decision processes with rewards (in Isabelle/HOL)]]. ~ Maximilian Schäffeler and Mohammad Abdulaziz. #ITP #IsabelleHOL #Math
+ [[https://hoogleplus.goto.ucsd.edu/][Hoogle+ is a type-driven synthesis engine for Haskell - like Hoogle but able to find compositions of functions]]. Given a Haskell type, Hoogle+ generates terms that inhabit this type by composing library components. #Haskell #FunctionalProgramming
+ [[https://github.com/TyGus/hoogle_plus/][Hoogle+: Type-driven, component based synthesis, showcasing TYpe Guided Abstract Refinement (TYGAR)]]. ~ Zheng Guo (@AaronGuo069). #Haskell #FunctionalProgramming
+ [[https://aaronguo1996.github.io/publication/tygar/tygar-paper.pdf][Program synthesis by type-guided abstraction refinement]]. ~ Zheng Guo et als. #Haskell #FunctionalProgramming
+ [[https://aaronguo1996.github.io/publication/hplus/hplus-oopsla20.pdf][Digging for fold: Synthesis-aided API discovery for Haskell]]. ~ Michael B. James, Zheng Guo, Ziteng Wang, Shivani Doshi, Hila Peleg, Ranjit Jhala, and Nadia Polikarpova. #Haskell #FunctionalProgramming
+ [[https://aaronguo1996.github.io/talk/tygar/tygar_v4.pdf][Hoogle+: Program synthesis by type-guided abstraction refinement [Slides]]]. ~ Zheng Guo, Michael James, David Justo, Jiaxiao Zhou, Ziteng Wang, Ranjit Jhala, and Nadia Polikarpova. #Haskell #FunctionalProgramming
+ [[https://bartoszmilewski.com/2021/12/28/co-presheaf-optics/][Co-presheaf optics]]. ~ Bartosz Milewski (@BartoszMilewski). #CategoryTheory

*** 28-Dic-21
+ [[https://metacoq.github.io/][MetaCoq]]: a project formalizing Coq in Coq and providing tools for manipulating Coq terms and developing certified plugins (i.e. translations, compilers or tactics) in Coq. #ITP #Coq
+ [[https://hal.inria.fr/hal-02167423/documenta][The MetaCoq project]]. ~ Matthieu Sozeau et als. #ITP #Coq
+ [[https://dannenkov.me/papers/COBRA2021-slides.pdf][Smart contracts in a proof assistant [Slides]]]. ~ Danil Annenkov, Mikkel Milo, Jakob Botsch Nielsen, Bas Spitters #ITP #Coq
+ [[https://www.college-de-france.fr/site/xavier-leroy/seminar-2018-12-05-11h30.htm][Mathématiques assistées par ordinateur]]. ~ Assia Mahboubi. #ITP #Coq #Math
+ [[http://www.nieuwarchief.nl/serie5/pdf/naw5-2016-17-3-172.pdf][Machine-checked mathematics]]. ~ Assia Mahboubi. #ITP #Coq #Math
+ [[https://arxiv.org/abs/2108.02995][Extracting functional programs from Coq, in Coq]]. ~ Danil Annenkov, Mikkel Milo, Jakob Botsch Nielsen, Bas Spitters. #ITP #Coq
+ [[https://www.ps.uni-saarland.de/~hostert/bachelor/ba_final_fixes.pdf][The undecidability of first-order logic over small signatures]]. ~ Johannes Hostert (Advisors: Andrej Dudenhefner and Dominik Kirst). #BSc_Thesis #ITP #Coq #Logic #Math
+ [[https://www.ps.uni-saarland.de/~hermes/thesis.pdf][Modeling Peano Arithmetic in constructive type theory (Undecidability and Tennenbaum’s theorem)]]. ~ Marc Hermes (Advisors: Dominik Kirst and Moritz Weber). #MSc_Thesis #ITP #Coq #Logic #Math
+ [[https://arxiv.org/abs/2012.09138][Extracting smart contracts tested and verified in Coq]]. ~ Danil Annenkov, Mikkel Milo, Jakob Botsch Nielsen, Bas Spitters. #ITP #Coq
+ [[https://www.ps.uni-saarland.de/Publications/documents/KochKirst_2022_Undecidability.pdf][Undecidability, incompleteness, and completeness of second-order logic in Coq]]. ~ Mark Koch, Dominik Kirst. #ITP #Coq #Logic #Math
+ [[https://www.ps.uni-saarland.de/~kirst/downloads/talk_PC_21.pdf][Formalising metamathematics in constructive type theory]]. ~ Dominik Kirst. #ITP #Coq #Logic #Math
+ [[https://hal.inria.fr/hal-01703524/document][Formalizing implicative algebras in Coq]]. ~ Étienne Miquey. #ITP #Coq
+ [[https://www.i2m.univ-amu.fr/perso/etienne.miquey/content/banner.pdf][Realizabilidad clásica y efectos colaterales: Extendiendo la correspondencia de Curry-Howard]]. ~ Étienne Miquey. #Logic #CompSci
+ [[https://www.i2m.univ-amu.fr/perso/etienne.miquey/content/imerl18.pdf][Curry-Howard: unveiling the computational content of proofs]]. ~ Étienne Miquey. #Logic #CompSci
+ [[https://www.i2m.univ-amu.fr/perso/etienne.miquey/content/lmw19.pdf][The benefits of sequent calculus]]. ~ Étienne Miquey. #Logic #CompSci

*** 27-Dic-21
+ [[http://olivernash.org/2019/02/03/excursion-fv-coq/index.html][An excursion in formal verification with Coq]]. ~ Oliver Nash. #ITP #Coq #Math

*** 26-Dic-21
+ [[https://youtu.be/wVfosnHZtjA][How Gödel discovered his incompleteness theorems]]. ~ Jan von Plato. #Logic #Math
+ [[https://arxiv.org/abs/2112.02556][Windmills of the minds: an algorithm for Fermat's Two Squares Theorem]]. ~ Hing Lun Chan. #ITP #HOL4 #Math

*** 25-Dic-21
+ [[https://anjapetkovic.com/img/doctoralThesis.pdf][Meta-analysis of type theories with an application to the design of formal proofs]]. ~ Anja Petković Komel (Adviser: Andrej Bauer). #PhD_Thesis #TypeTheory #ITP
+ [[https://www.ps.uni-saarland.de/~peters/resources/memo.pdf][A computational and abstract approach to Gödel's first incompleteness theorem]]. ~ Benjamin Peters. #Logic #Math
+ [[https://www.ps.uni-saarland.de/extras/axiomatisations/][Synthetic undecidability and incompleteness of first-order axiom systems in Coq]]. ~ Dominik Kirst, Marc Hermes. #ITP #Coq #Logic #Math
+ [[https://hal.inria.fr/hal-03499968/document][CertiCAN: Certifying CAN analyses and their results]]. ~ Pascal Fradet, Xiaojie Guo, Sophie Quinton. #ITP #Coq
+ [[https://arxiv.org/abs/2112.11062][L-types for resource awareness: an implicit name approach]]. ~ Silvia Ghilezan, Jelena Ivetić, Simona Kašterović, Pierre Lescanne. #Haskell #Agda #FunctionalProgramming
+ [[http://www.learningclojure.com/2021/12/fermats-christmas-theorem-fixed-points_24.html][Fermat's Christmas Theorem: Fixed points come in pairs]]. ~ John Lawrence Aspden. #Clojure #FunctionalProgramming #Math

*** 24-Dic-21
+ [[https://arxiv.org/abs/2112.12758v1][A manifesto for applicable formal methods]]. ~ Mario Gleirscher, Jaco van de Pol, Jim Woodcock. #FormalMethods
+ [[https://felixspringer.xyz/homepage/blog/composingTransformers][Composing transformers: ~ Felix Springer]]. #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/parser-combinators-in-haskell][Parser combinators in Haskell]]. ~ Heitor Toledo Lassarote de Paula. #Haskell #FunctionalProgramming
+ [[https://www.quantamagazine.org/the-year-in-math-and-computer-science-20211223/][The year in math and computer science]]. ~ Bill Andrews. #Math CompSci

*** 23-Dic-21
+ [[https://lawrencecpaulson.github.io//2021/12/22/MVT-example.html][Readability in proofs: the mean value theorem (in Isabelle/HOL)]]. ~ Lawrence Paulson. #ITP #IsabelleHOL #Math
+ [[https://europroofnet.github.io/groups/][Research groups working on formal proofs in Europe]]. #FormalMethods #ITP

*** 22-Dic-21
+ [[https://arxiv.org/abs/2112.11182][A machine-checked direct proof of the Steiner-Lehmus theorem]]. ~ Ariel Kellison. #ITP #Nuprl #Math

*** 21-Dic-21
+ [[https://www.ps.uni-saarland.de/extras/iel/][Constructive and mechanised meta-theory of intuitionistic epistemic logic]]. ~ Christian Hagemeier, Dominik Kirst. #ITP #Coq #Logic
+ [[https://hal.archives-ouvertes.fr/hal-03482567/document][Accurate calculation of euclidean norms using double-word arithmetic]]. ~ Vincent Lefèvre, Nicolas Louvet, Jean-Michel Muller, Joris Picot, Laurence Rideau. #ITP #Coq
+ [[https://odr.chalmers.se/bitstream/20.500.12380/304406/1/CSE%2021-161%20Qufei.pdf][A Haskell implementation for a dependent type theory with definitions]]. ~ Qufei Wang. #MSc_Thesis #Haskell #FunctionalProgramming
+ [[https://www.lrde.epita.fr/~didier/lectures/afp/afp_01_tutorials.en.pdf][Functional approaches to programming (Lisp / Haskell: the diff tutorial)]]. ~ Didier Verna (@didierverna). #Lisp #Haskell #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2021/12/20/learning-to-navigate-the-maze][Learning to navigate the maze!]] ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 20-Dic-21
+ [[https://youtu.be/6oet8OCZp9Q][Functional programming in Coq theorem prover (Lecture 3: induction on natural numbers)]]. ~ Mukesh Tiwari (@mukesh_tiwari). #ITP #Coq

*** 19-Dic-21
+ [[https://arxiv.org/abs/2112.06039][CertiStr: A certified string solver (technical report)]]. ~ Shuanglong Kan, Anthony W. Lin, Philipp Rümmer, Micha Schrader. #ITP #IsabelleHOL
+ [[https://github.com/Karnaj/sttfa_geocoq_euclid][Formalization of Euclid's elements book 1 in Dedukti]]. ~ Karnaj. #Math #ITP #Dedukti #Coq, #HOL_Light, #Lean, #Matita, #OpenTheory #PVS
+ [[https://arxiv.org/abs/2112.06609][On homotopy of walks and spherical maps in homotopy type theory]]. ~ Jonathan Prieto-Cubides. #ITP #Agda #HoTT #Math
+ [[http://home.in.tum.de/~mansour/cv-and-website/papers/verifiedTemproalValidator.pdf][Formal semantics and formally verified validation for temporal planning]]. ~ M. Abdulaziz, L. Koller. #ITP #IsabelleHOL

*** 18-Dic-21
+ [[https://github.com/GeoCoq/GeoCoq][GeoCoq: A formalization of geometry in Coq]]. ~  Julien Narboux (@jnarboux). #ITP #Coq #Math
+ [[https://arxiv.org/abs/2112.06700][Verified compilation of quantum oracles]]. ~ Liyi Li, Finnegan Voichick, Kesha Hietala, Yuxiang Peng, Xiaodi Wu, Michael Hicks. #ITP #Coq
+ [[https://arxiv.org/abs/2112.07292][Verifying a minimalist reverse-mode AD library]]. ~ Paulo Emílio de Vilhena, François Pottier. #ITP #Coq
+ [[https://arxiv.org/abs/2112.06633][On planarity of graphs in homotopy type theory]]. ~ Jonathan Prieto-Cubides, Håkon Robbestad Gylterud. #ITP #Agda #HoTT #Math
+ [[https://cacm.acm.org/magazines/2022/1/257448-fifty-years-of-p-vs-np-and-the-possibility-of-the-impossible/fulltext][Fifty years of P vs. NP and the possibility of the impossible]]. ~ Lance Fortnow. #CompSci
+ [[https://cacm.acm.org/magazines/2022/1/257445-declarative-machine-learning-systems/fulltext][Declarative machine learning systems]]. ~ Piero Molino, Christopher Ré. #MachineLearning #AI
+ [[https://cacm.acm.org/magazines/2022/1/257432-will-ai-destroy-education/fulltext][Will AI destroy education?]] ~ Moshe Y. Vardi. #AI #Education

*** 17-Dic-21
+ [[https://arxiv.org/abs/2112.05515][Semantic cut elimination for the logic of bunched implications, formalized in Coq]]. ~ Dan Frumin. #ITP #Coq
+ [[https://cs.uwaterloo.ca/sites/ca.computer-science/files/uploads/files/cs-2021-02.pdf][Semantics and contextual equivalence for probabilistic programs with nested queries and recursion]]. ~ Yizhou Zhang, Nada Amin. #ITP #Coq
+ [[https://leanprover-community.github.io/blog/posts/backstage-with-dillies/][Johan Commelin interviews Yaël Dillies]]. #ITP #LeanProver #MathLib
+ [[https://well-typed.com/blog/2021/12/type-level-sharing-now/][Type-level sharing in Haskell, now]]. ~ Edsko de Vries, Andres Löh, Adam Gundry, Sam Derbyshire. #Haskell #FunctionalProgramming
+ [[https://roganmurley.com/2021/12/11/free-monads.html][Game rules with a Free Monad DSL]]. ~ Rogan Murley (@RoganMurley). #Haskell #FunctionalProgramming
+ [[https://free.cofree.io/2021/12/13/space-leak/][Understanding space leaks from StateT]]. ~  Ziyang Liu. #Haskell #FunctionalProgramming
+ [[https://typeable.io/blog/2021-12-13-haskell-usage][Do you know where Haskell is used? (Examples of how Haskell is used in different industries)]]. ~ Catherine Galkina. #Haskell #FunctionalProgramming

*** 16-Dic-21
+ [[https://www.glc.us.es/~jalonso/vestigium/materiales-para-la-ensenanza-de-la-programacion-funcional-con-haskell/][Materiales para el estudio de la programación funcional con Haskell]]. #Haskell #ProgramaciónFuncional
+ [[https://www.cs.us.es/~jalonso/publicaciones/2002-ded-automatica-1.pdf][Deducción automática (Vol. 1: Construcción lógica de sistemas lógicos)]]. ~ José A. Alonso y Joaquín Borrego. ~ #Prolog #ProgramaciónLógica #Lógica #DAT
+ [[https://blog.oxij.org/2011/12/22/howto-get-started-with-agda/][HOWTO: Get started with Agda]]. ~ Jan Malakhovski. #Agda #FunctionalProgramming
+ [[https://blog.oxij.org/2012/01/16/the-decent-way-to-learn-functional-programming/][The decent way to learn functional programming]]. ~ Jan Malakhovski. #FunctionalProgramming #Haskell #Agda

*** 15-Dic-21
+ [[https://arxiv.org/abs/2006.04399][Completeness theorems for first-order logic analysed in constructive type theory]]. ~ Yannick Forster, Dominik Kirst, Dominik Wehr. #ITP #Coq #Logic
+ [[https://www.gaussianos.com/como-factorizo-euler-f5/][Cómo factorizó Euler F5]]. ~ M.A. Morales (@gaussianos). #Matemáticas

*** 14-Dic-21
+ [[https://github.com/leanprover-community/mathlib/blob/10fb7f91a2718c641ad4b95b180d515e943ad639/archive/imo/imo2005_q4.lean][Formalization in Lean of IMO 2005 Q4]]. ~ Heather Macbeth. #ITP #LeanProver #Math #IMO
+ [[https://www.isa-afp.org/entries/CoSMed.html][CoSMed: A confidentiality-verified social media platform (in Isabelle/HOL)]]. ~ Thomas Bauereiss, Andrei Popescu. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2112.05996][Formalising the foundations of discrete reinforcement learning in Isabelle/HOL]]. ~ Mark Chevallier, Jacques Fleuriot. #ITP #IsabelleHOL #MachineLearning #AI
+ [[https://iris-project.org/pdfs/2022-cpp-folly-queue.pdf][Mechanized verification of a fine-grained concurrent queue from Meta's Folly Library]]. ~ S.F. Vindum, D Frumin, L Birkedal. #ITP #Coq
+ [[https://lawrencecpaulson.github.io//2021/12/15/Incompleteness.html][Do Gödel's incompleteness theorems matter?]]. ~ Lawrence Paulson #Logic #Math #ITP
+ [[https://mmhaskell.com/blog/2021/12/13/implementation-creating-a-maze-environment][Implementation: Creating a maze environment]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming #Gloss

*** 13-Dic-21
+ [[https://www.isa-afp.org/entries/Foundation_of_geometry.html][Foundation of geometry in planes, and some complements: Excluding the parallel axioms (in Isabelle/HOL)]]. ~ Fumiya Iwama. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2112.05715][Formalizing higher-order termination in Coq]]. ~ Deivid Vale, Niels van der Weide. #ITP #Coq
+ [[https://www.isa-afp.org/entries/Simplicial_complexes_and_boolean_functions.html][Simplicial complexes and boolean functions (in Isabelle/HOL)]]. ~ Jesús Aransay, Alejandro del Campo, Julius Michaelis. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2112.02142][An impossible asylum]]. ~ Jeremy Avigad, Seulkee Baek, Alexander Bentkamp, Marijn Heule, Wojciech Nawrocki. #ATP #Vampire #Logic
+ [[https://cuddly-octo-palm-tree.com/posts/2021-12-05-sieve/]["The genuine sieve of Eratosthenes" in Clojure]]. ~ Gary Verhaegen. #Clojure #FunctionalProgramming

*** 11-Dic-21
+ [[https://hal.inria.fr/hal-03466807][Certified abstract machines for skeletal semantics]]. ~ Guillaume Ambal, Sergueï Lenglet, Alan Schmitt. #ITP #Coq #OCaml #FunctionalProgramming
+ [[https://leanprover-community.github.io/blog/posts/semilinear-maps/][Semilinear maps (in Lean)]]. ~ Frédéric Dupuis. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2112.03653v1][A specification for typed template Haskell]]. ~ Matthew Pickering, Andres Löh, Nicolas Wu. #Haskell #FunctionalProgramming

*** 10-Dic-21
+ [[https://arxiv.org/abs/2112.04570a][Formalising Lie algebras]]. ~ Oliver Nash. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2104.05256][A Coq formalization of Lebesgue integration of nonnegative functions]]. ~ Sylvie Boldo, François Clément, Florian Faissole, Vincent Martin, Micaela Mayero. #ITP #Coq #Math
+ [[https://gitlab.com/ana-borges/QRC1-Coq/-/blob/ProofSociety/docs/slides/202112_ProofSocietyWorkshop/QRC1-Coq.pdf][QRC1 in Coq (Formalizing a quantified modal logic)]]. ~ Ana de Almeida Borges. #ITP #Coq #Logic
+ [[https://vitez.me/hts-language][Haskell’s type system standing alone]]. ~ Vitez. #Haskell #FunctionalProgramming

*** 09-Dic-21
+ [[https://cs.famaf.unc.edu.ar/~pedro/forcing/][Formalization of forcing in set theory]]. ~ Emmanuel Gunther, Miguel Pagano, Pedro Sánchez Terraf, Matías Steinberg. #ITP #IsabelleZF #Logic #Math #SetTheory
+ [[https://www.tweag.io/blog/2021-12-09-tcplugins-2/][Type-checking plugins, Part II: GHC's constraint solver]]. ~ Sam Derbyshire. #Haskell #FunctionalProgramming

*** 07-Dic-21
+ [[https://lawrencecpaulson.github.io//2021/12/08/ALEXANDRIA.html][ALEXANDRIA: Large-scale formal proof for the working mathematician]]. ~ Lawrence Paulson. #ITP #IsabelleHOL #Coq #LeanProver
+ [[https://link.springer.com/book/10.1007/978-3-030-87882-5][Fundamentals of logic and computation (With practical automated reasoning and verification)]]. Zhe Hou. #eBook #Logic #CompSci #ITP #IsabelleHOL
+ [[https://link.springer.com/chapter/10.1007/978-3-030-92124-8_2][Validating safety arguments with Lean]]. ~ Logan Murphy, Torin Viger, Alessio Dia Sandro, Ramy Shahin, Marsha Chechik. #ITP #LeanProver
+ [[https://leanprover-community.github.io/blog][This month in mathlib (Nov 2021)]]./#ITP #LeanProver #MahLib
+ [[http://nachivpn.me/nfmc.pdf][Normalization for Fitch-style modal calculi]]. ~ Nachiappan Valliappan , Fabian Ruch, Carlos Tomé Cortiñas. #ITP #Agda
+ [[http://funes.uniandes.edu.co/8476/1/Lockhart2008El.pdf][El lamento de un matemático]]. ~ Paul Lockhart. #Matemática #AI #MachineLearning #Math
+ [[http://discrete.openmathbooks.org/dmoi3.html][Discrete mathematics (An open introduction, 3rd edition)]]. ~ Oscar Levin. #eBook #Math

*** 06-Dic-21
+ [[https://www.imo.universite-paris-saclay.fr/~pmassot/files/exposition/why_formalize.pdf][Why formalize mathematics? ~ Patrick Massot]]. #ITP #LeanProver #Math
+ [[https://mmhaskell.com/blog/2021/12/6/from-world-to-environment-open-ai-gym-primer][From World to Environment: Open AI Gym Primer]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming #AI

*** 05-Dic-21
+ [[https://youtu.be/fOKfk9Bup_o][Functional programming in Coq theorem prover: Lecture 2]]. ~ Mukesh Tiwari (@mukesh_tiwari). #ITP #Coq #FunctionalProgramming
+ [[https://hugopeters.me/posts/13/][Demystifying the state monad]]. ~ Hugo Peters. #Haskell #FunctionalProgramming

*** 04-Dic-21
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/15427/pdf/OASIcs-FMBC-2021-3.pdf][Using Coq to enforce the checks-effects-interactions pattern in DeepSEA smart contracts]]. ~ D. Britten, V. Sjöberg, S. Reeves. #ITP #Coq
+ [[https://arxiv.org/abs/2111.14736v1][Formalization of dependent type theory: The example of CaTT]]. ~ Thibaut Benjamin. #ITP #Agda
+ [[https://arxiv.org/abs/1804.00596][TacticToe: Learning to prove with tactics]]. ~ Thibault Gauthier, Cezary Kaliszyk, Josef Urban, Ramana Kumar, Michael Norrish. #ITP #HOL4 #MachineLearning
+ [[https://serokell.io/blog/whats-that-typeclass-foldable][What’s that Typeclass: Foldable]]. ~ Alyona Antonova. #Haskell #FunctionalProgrammiang
+ [[https://javaplt.github.io/haskell-course/][A 7 lecture Haskell Crash Course]]. #Haskell #FunctionalProgramming
+ [[https://www.newscientist.com/people/muhammad-ibn-musa-al-khwarizmi/][Muḥammad ibn Mūsā al-Khwārizmī]]. ~ Chris Simms. #Math #CompSci

*** 02-Dic-21
+ [[https://www.ma.imperial.ac.uk/~buzzard/xena/pdfs/ICMtalkv0.pdf][What is the point of computers? A question for pure mathematicians]]. ~ Kevin Buzzard. #ITP LeanProver #Math
+ [[https://wkrozowski.github.io/files/icfp21src-paper1.pdf][Formally verified derivation of an executable and terminating CEK machine from call-by-value calculus]]. ~ Wojciech Rozowski. #ITP #Agda
+ [[https://youtu.be/IdMwDLmwzT4][Haskelling the Advent of Code 2021 - Day 0]]. #Haskell #FunctionalProgramming
+ [[https://youtu.be/-Ywc__h5_yw][Haskelling the Advent of Code 2021 - Day 1]]. #Haskell #FunctionalProgramming
+ [[https://graspablemath.com/][Graspable math activities: Assign algebra tasks to your students and see live feedback of their step-by-step work]]. Discover, create, and share engaging math activities for 4th to 12th graders. #Math

*** 01-Dic-21
+ [[https://homotopytypetheory.org/2021/12/01/the-hott-game/][The HoTT Game]]. ~ Joseph Hua. #HoTT #ITP #Agda
+ [[https://nyeogmi.com/2021/11/30/assessing-haskell/][Assessing Haskell]]. ~ @nyeogmi. #Haskell #FunctionalProgramming
+ [[https://www.nature.com/articles/d41586-021-03512-4][Artificial intelligence aids intuition in mathematical discovery]]. ~ Christian Stump. #AI #Math
+ [[https://dl.acm.org/ft_gateway.cfm?id=2617811&ftid=1457525&dwn=1][Domain-specific languages and code synthesis using Haskell]]. ~ Andy Gill. #Haskell #FunctionalProgramming
+ [[https://www.parsonsmatt.org/2021/11/30/rank_n_types_via_lambda_calculus.html][RankNTypes via lambda calculus]]. ~ Matt Parsons (@mattoflambda). #Haskell #FunctionalProgramming



** November 2021

*** 30-Nov-21
+ [[https://people.csail.mit.edu/cpitcla/thesis/relational-compilation.html][On relational compilation]]. ~ Clément Pit-Claudel (@cpitclaudel). #ITP #Coq
+ [[https://mmhaskell.com/blog/2021/11/29/see-and-believe-visualizing-with-gloss][See and believe: Visualizing with Gloss]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming

*** 28-Nov-21
+ [[https://arxiv.org/abs/2111.11144v1][A complete axiom system for 1-free Kleene star expressions under bisimilarity: An elementary proof]]. ~ Allan van Hulst. #ITP #Coq
+ [[https://bora.uib.no/bora-xmlui/bitstream/handle/11250/2830640/archive.pdf?sequence=1&isAllowed=y][Coherence for monoidal and symmetric monoidal groupoids in Homotopy Type Theory]]. ~ Stefano Piceghello. #PhD_Thesis #ITP #Coq #HoTT

*** 27-Nov-21
+ [[https://www.diva-portal.org/smash/get/diva2:1613286/FULLTEXT01.pdf][Simple formally verified compiler in Lean]]. ~ Leo Okawa Ericson. #ITP #LeanProver
+ [[http://lcs.ios.ac.cn/fm2021/recordings/fm_tea/J%C3%B8rgen.mp4][Using Isabelle in two courses on logic and automated reasoning]]. ~ Jørgen Villadsen, Frederik Krogsdal Jacobsen. #ITP #IsabelleHOL #Logic #ATP
+ [[http://lcs.ios.ac.cn/fm2021/recordings/fm_tea/Avigad.mp4][Teaching logic and mechanized reasoning with Lean 4 [Video]]]. ~ Jeremy Avigad. #ITP #LeanProver #Logic
+ [[http://lcs.ios.ac.cn/fm2021/recordings/fm_tea/Tobias.mp4][Teaching algorithms and data structures with a proof assistant [Video]]]. ~ Tobias Nipkow. #ITP #IsabelleHOL #Algorithms
+ [[https://mat.unb.br/lsfa2021/pages/lsfa2021_proceedings/LSFA_2021_paper_5.pdf][SeCaV: A sequent calculus verifier in Isabelle/HOL]]. ~ AH From, FK Jacobsen, J Villadsen. #ITP #IsabelleHOL #Logic

*** 26-Nov-21
+ [[https://www.isa-afp.org/browser_info/current/AFP/Van_Emde_Boas_Trees/document.pdf][van Emde Boas trees (in Isabelle/HOL)]]. ~ Thomas Ammer, Peter Lammich. #ITP #IsabelleHOL #Algorithms
+ [[https://www.isa-afp.org/browser_info/current/AFP/SimplifiedOntologicalArgument/document.pdf][Exploring simplified variants of Gödel’s ontological argument in Isabelle/HOL]]. ~ Christoph Benzmüller. #ITP #IsabelleHOL
+ [[https://blog.kalvad.com/haskell-series-part-7/][Haskell series part 7 (This is the seventh article of a series on the functional language Haskell for beginners)]]. ~ Pierre Guillemot (@hnb_02). #Haskell #FunctionalProgramming

*** 25-Nov-21
+ [[https://www.isa-afp.org/browser_info/current/AFP/PAL/outline.pdf][Automating public announcement logic and the wise men puzzle in Isabelle/HOL]]. ~ Christoph Benzmüller, Sebastian Reichie. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/browser_info/current/AFP/Factor_Algebraic_Polynomial/document.pdf][Factorization of polynomials with algebraic coefficients (in Isabelle/HOL)]]. ~ Manuel Eberl, René Thiemann. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2111.12210][From Kepler to Newton: the role of explainable AI in science discovery]]. ~ Zelong Li, Jianchao Ji, Yongfeng Zhang. #AI #XAI
+ [[https://arxiv.org/abs/2111.12274][Formalization of bond graph using higher-order-logic theorem proving]]. ~ Ujala Qasim, Adnan Rashid, Osman Hasan. #ITP #HOL_Light

*** 24-Nov-21
+ [[https://lawrencecpaulson.github.io/2021/11/24/Intuitionism.html][Intuitionism and constructive logic]]. ~ Lawrence Paulson. #Logic #Math #ITP #Coq #Agda
+ [[https://youtu.be/bwKFcLaeD1A][Entrevista com Leonardo de Moura (Microsoft Research)]]. #ITP #LeanProver #CompSci
+ [[http://ksjhandbook.org/wp-content/uploads/sites/5/2021/08/KSJ-Handbook-Spanish.pdf][Manual de edición científica por KSJ]].
+ [[http://ksjhandbook.org/wp-content/uploads/sites/5/2021/03/ksj-handbook-v1.6.pdf][KSJ Science Editing Handbook]].
+ [[https://batsov.com/articles/2021/11/24/emacs-is-a-lifestyle/][Emacs is a lifestyle]]. ~ Bozhidar Batsov (@bbatsov). #Emacs

*** 23-Nov-21
+ [[https://www.cantorsparadise.com/dijkstras-most-powerful-lessons-165bd5360237][Dijkstra’s most powerful lessons]]. ~ Eliran Turgema. #Dijkstra #CompSci
+ [[https://agentultra.github.io/lean-4-hackers/][Lean 4 Hackers]]. ~ J Kenneth King. #Lean4 #FunctionalProgramming
+ [[https://mmhaskell.com/blog/2021/11/22/ai-revisited-breaking-down-bfs][AI revisited: Breaking down BFS]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://leanprover-community.github.io/blog/posts/dedekind-domains-and-class-number-in-lean/][Dedekind domains and class number in Lean]]. ~ Anne Baanen. #ITP #LeanProver #Math

*** 21-Nov-21
+ [[https://youtu.be/i2_LwOx3Ss4][Functional programming in Coq theorem prover - Lecture 1]]. ~ Mukesh Tiwari (@mukesh_tiwari). #ITP #Coq #FunctionalProgramming
+ [[https://youtu.be/mXl_msAaZrE][An introduction to Lean 4, a functional programming language]]. ~ Adolfo Neto (@adolfont). #ITP #LeanProver #FunctionalProgramming
+ [[https://youtu.be/BiH_A36zKwI][Programming with tactics]]. ~ Reed Mullanix. #Haskell #FunctionalProgramming

*** 20-Nov-21
+ [[https://project-archive.inf.ed.ac.uk/msc/20215368/msc_proj.pdf][cryptolib: Security proofs in the Lean theorem prover]]. ~ Joey Lup. #MSc_Thesis #ITP #LeanProver
+ [[https://www.quantamagazine.org/amazing-math-bridge-extended-beyond-fermats-last-theorem-20200406/][‘Amazing’ Math bridge extended beyond Fermat’s Last Theorem]]. ~ Erica Klarreich. #Math
+ [[https://hal.inria.fr/hal-03429597/document][Modelling and proving safety in autonomous cars scenarios in HOL-CSP]]. ~ Burkhart Wolff, Safouan Taha. #ITP #IsabelleHOL

*** 18-Nov-21
+ [[https://byorgey.wordpress.com/2021/11/17/competitive-programming-in-haskell-bfs-part-4-implementation-via-stuarray/][Competitive programming in Haskell: BFS, part 4 (implementation via STUArray)]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming

*** 17-Nov-21
+ [[https://www.cs.umd.edu/~mwh/papers/Toward_A_Quantum_Programming_Language_for_Higher_Level_Formal_Verification.pdf][Toward a quantum programming language for higher-level formal verification]]. ~ Finn Voichick, Michael Hicks. #ITP #Coq #QuantumProgramming
+ [[https://byorgey.wordpress.com/2021/11/15/competitive-programming-in-haskell-enumeration/][Competitive programming in Haskell: Enumeration]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2111.08171][Solving linear algebra by program synthesis]]. ~ Iddo Drori, Nakul Verma. #AI #MachineLearning #Math

*** 16-Nov-21
+ [[https://project-archive.inf.ed.ac.uk/msc/20214838/msc_proj.pdf][A mechanized investigation of an axiomatic system for Minkowski spacetime]]. ~ Mathis Gerdes. #MSc_Thesis #ITP #IsabelleHOL
+ [[https://serras.github.io/haskell-exchange-2021/slide][A beginner's guide to Haskell and its ecosystem]]. ~ Alejandro Serrano (@trupill).s#1 #Haskell #FunctionalProgramming
+ [[http://ceur-ws.org/Vol-3002/paper7.pdf][A sequent calculus for first-order logic formalized in Isabelle/HOL]]. ~ Asta Halkjær From, Anders Schlichtkrull, Jørgen Villadsen. #ITP #IsabelleHOL #Logic
+ [[https://project-archive.inf.ed.ac.uk/ug4/20212543/ug4_proj.pdf][Exploring Euler’s differentials of trigonometric functions in Isabelle using nonstandard analysis]]. ~ Alice Johansen. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2105.14183][Verified quadratic virtual substitution for real arithmetic]]. ~ Matias Scharager, Katherine Cordwell, Stefan Mitsch, André Platzer. #ITP #IsabelleHOL #Logic #Math

*** 15-Nov-21
+ [[https://lawrencecpaulson.github.io//2021/11/17/Cauchy-Schwarz-example.html][An experiment: The Cauchy–Schwarz inequality]]. ~ Lawrence Paulson. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2111.06807][Verified optimization]]. ~ Alexander Bentkamp, Jeremy Avigad. #ITP #LeanProver #Math

*** 14-Nov-21
+ [[https://drops.dagstuhl.de/opus/volltexte/2019/11086/pdf/LIPIcs-ITP-2019-31.pdf][Verified decision procedures for modal logics]]. ~ Minchao Wu, Rajeev Goré. #ITP #LeanProver #Logic
+ [[https://www.isa-afp.org/entries/PAL.html][Automating public announcement logic and the wise men puzzle in Isabelle/HOL]]. ~ Christoph Benzmüller, Sebastian Reiche. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Factor_Algebraic_Polynomial.html][Factorization of polynomials with algebraic coefficients (in Isabelle/HOL)]]. ~ Manuel Eberl, René Thiemann. #ITP #IsabelleHOL #Math

*** 13-Nov-21
+ [[https://studenttheses.uu.nl/bitstream/handle/20.500.12932/201/Thesis_final.pdf][Conditional independence in functional probabilistic programming]]. ~ Wink van Zon. #MSc_Thesis #Haskell #FunctionalProgramming
+ [[https://lawrencecpaulson.github.io/2021/11/10/Axiom_of_Choice.html][The axiom of choice and descriptions]]. ~ Lawrence Paulson. #Logic #Math #IsabelleHOL

*** 12-Nov-21
+ [[https://arxiv.org/abs/2111.06366][Answer set programming made easy]]. ~ Jorge Fandinno, Seemran Mishra, Javier Romero, Torsten Schaub. #LogicProgramming #ASP
+ [[https://arxiv.org/abs/2111.06368][Should Type Theory replace Set Theory as the foundation of Mathematics?]] ~ Thorsten Altenkirch. #Logic #Math #TypeTheory #SetTheory

*** 11-Nov-21
+ [[https://arxiv.org/abs/2111.05364][Towards tractable mathematical reasoning: Challenges, strategies, and opportunities for solving math word problems]]. ~ Keyur Faldu, Amit Sheth, Prashant Kikani, Manas Gaur, Aditi Avasthi. #AI #Math #MachineLearning

*** 10-Nov-21
+ [[https://www.isa-afp.org/entries/Real_Power.html][Real exponents as the limits of sequences of rational exponents (in Isabelle/HOL)]]. ~ Jacques D. Fleuriot. #ITP #IsabelleHOL #Math
+ [[https://github.com/quchen/articles/blob/master/loeb-moeb.md][Löb and möb: strange loops in Haskell]]. ~ David Luposchainsky (@quch3n). #Haskell #FunctionalProgramming

*** 08-Nov-21
+ [[https://www.isa-afp.org/entries/Szemeredi_Regularity.html][Szemerédi's regularity lemma (in Isabelle/HOL)]]. ~ Chelsea Edmonds, Angeliki Koutsoukou-Argyraki, Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://github.com/leanprover-community/mathlib/blob/bc55cd785d1c29fb1b276f5933dfc7f5b2ebf0eb/archive/imo/imo1994_q1.lean][Formalization in Lean of IMO 1994 Q1]]. ~ Antoine Labelle. #ITP #LeanProver #Math #IMO
+ [[https://arxiv.org/abs/2106.10165][The principles of deep learning theory (An effective theory approach to understanding neural networks)]]. ~ Daniel A. Roberts, Sho Yaida, Boris Hanin. #eBook #DeepLearning #NeuralNetwork #AI #Math
+ [[https://aihub.org/2021/11/03/coffee-corner-are-deep-learnings-returns-diminishing/][Coffee corner: are deep learning’s returns diminishing?]]. #DeepLearning #AI

*** 07-Nov-21
+ [[https://github.com/llee454/functional-algebra][A Coq formalization of abstract algebra using a functional programming style]]. ~ Larry Darryl Lee Jr. #ITP #Coq #Math
+ [[https://github.com/ivashkev/math-formalizations][Formalization of some elementary mathematical theories in Coq]]. ~ Evgeny Ivashkevich. #ITP #Coq #Math

*** 06-Nov-21
+ [[https://giters.com/anton-trunov/csclub-coq-course-spring-2021][A course on formal verification at CS Club]]. ~ Anton Trunov (@falsenov). #ITP #Coq #MathComp #SSReflect
+ [[https://ilyasergey.net/pnp/][Programs and proofs (Mechanizing mathematics with dependent types)]]. ~ Ilya Sergey (@ilyasergey). #ITP #Coq #MathComp #SSReflect #Math
+ [[https://team.inria.fr/marelle/en/coq-winter-school-2018-2019-ssreflect-mathcomp/][Coq Winter School 2018-2019 (SSReflect & MathComp)]]. ~ Yves Bertot, Cyril Cohen, Laurence Rideau, Enrico Tassi and Laurent Thery. #ITP #Coq #MathComp #SSReflect

*** 05-Nov-21
+ [[https://jesper.sikanda.be/posts/1001-syntax-representations.html][1001 representations of syntax with binding]]. ~ Jesper Cockx (@agdakx). #ITP #Agda

*** 04-Nov-21
+ [[https://leanprover-community.github.io/blog/posts/month-in-mathlib-oct-2021/][This month in mathlib (Oct 2021)]]. #ITP #LeanProver #MathLib #Math
+ [[https://www.ps.uni-saarland.de/~lauermann/bachelor/thesis.pdf][A formalization of Kolmogorov complexity in synthetic computability theory]]. ~ Nils Lauermann. #BSc_Thesis #ITP #Coq #CompSci
+ [[https://openscience.ub.uni-mainz.de/bitstream/20.500.12030/6394/1/keidel_sven-modular_specif-20211001142655806.pdf][Modular specification and compositional soundness of abstract interpreters]]. ~ Sven Keidel. #PhD_Thesis #Haskell #FunctionalProgramming
+ [[http://www.prg.nii.ac.jp/projects/biscuits/fifth-workshop/proceedings/paper_7.pdf][Conflict resolution for data updates by multiple bidirectional transformations]]. ~ Mikiya Habu, Soichiro Hidaka. #ITP #Coq
+ [[https://link.springer.com/article/10.1007/s10817-021-09607-x][Predicate transformer semantics for hybrid systems (Verification components for Isabelle/HOL)]]. ~ Jonathan Julián Huerta y Munive, Georg Struth. #ITP #IsabelleHOL
+ [[https://typeable.io/blog/2021-10-18-haskell-tools][7 useful tools written in Haskell]]. ~ Nikolay Rulev. #Haskell #FunctionalProgramming
+ [[https://github.com/svenkeidel/sturdy][Sturdy: a library for developing sound static analyses in Haskell]]. ~ Sven Keidel. #Haskell #FunctionalProgramming
+ [[https://home.ipipan.waw.pl/w.drabent/LOPSTR/1.pdf][It is declarative (On declarative programming in Prolog)]]. ~ Włodzimierz Drabent. #Prolog #LogicProgramming
+ [[https://home.ipipan.waw.pl/w.drabent/LOPSTR/d.pdf][It is declarative (On declarative programming in Prolog) 2nd part]]. ~ Włodzimierz Drabent. #Prolog #LogicProgramming

*** 03-Nov-21
+ [[https://hal.archives-ouvertes.fr/hal-03404668/document][Hydras & Co]].: Formalized mathematics in Coq for inspiration and entertainment. ~ Pierre Castéran, Jérémy Damour, Karl Palmskog, Clément Pit-Claudel, Théo Zimmermann. #ITP #Coq #Math
+ [[https://coq-community.org/hydra-battles/doc/hydras.pdf][Hydras, Ordinals & Co]]. A library in Coq of entertaining formal mathematics. ~ Pierre Castéran. #ITP #Coq #Math
+ [[https://leanprover-community.github.io/blog/posts/contributions-to-mathlib-from-lte-about-normed-groups/][Contributions to mathlib from LTE about normed groups]]. ~ Riccardo Brasca. #ITP #LeanProver #Math
+ [[https://hal.inria.fr/tel-02451322v2/document][Challenges in the collaborative evolution of a proof language and its ecosystem]]. ~ Théo Zimmermann. #PhDThesis #ITP #Coq
+ [[https://siliconreckoner.substack.com/p/can-mathematics-be-done-by-machine][Can mathematics be done by machine? I]]. ~ Michael Harris. #ITP #Math #AI
+ [[https://www.investigacionyciencia.es/noticias/avances-en-la-resolucin-de-los-problemas-diofnticos-20388][Avances en la resolución de los problemas diofánticos]]. ~ Rachel Crowell. #Matemáticas

*** 02-Nov-21
+ [[https://lawrencecpaulson.github.io/2021/11/03/AUTOMATH.html][NG de Bruijn and AUTOMATH]]. ~ Lawrence Paulson @Cambridge_CL #ITP #AutoMath #Math
+ [[https://lambdafoo.com/posts/2021-10-29-getting-started-with-ocaml.html][Getting started with OCaml in 2021]]. ~ Tim McGilchrist. #OCaml #FunctionalProgramming
+ [[https://zenodo.org/record/4457887][Mathematical components]]. ~ Assia Mahboubi, Enrico Tassi. #ITP #Coq #Math
+ [[https://artagnon.com/articles/leancoq][Lean versus Coq: The cultural chasm]]. ~ Ramkumar Ramachandra (@artagnon). #ITP #LeanProver #Coq #Logic #Math
+ [[https://bit.ly/3k193k3][Design of quantum optical experiments with logic artificial intelligence]]. ~ Alba Cervera-Lierta, Mario Krenn, Alan Aspuru-Guzik. #AI #Logic #SAT #QuantumPhysics

*** 01-Nov-21
+ [[https://www.imo.universite-paris-saclay.fr/~pmassot/enseignement/poly_alg/][Structures algébriques fondamentales]]. ~ Patrick Massot. #Math
+ [[https://osa1.net/posts/2014-07-12-fun-coq-exercises.html][Coq exercises for beginners]]. ~ Ömer Sinan Ağacan. #ITP #Coq #Math
+ [[https://hal.inria.fr/inria-00368403v2/document][Packaging mathematical structures]]. ~ François Garillot, Georges Gonthier, Assia Mahboubi, Laurence Rideau. #ITP #Coq #Math
+ [[https://arxiv.org/abs/1102.132][Type classes for mathematics in type theory]]. ~ Bas Spitters, Eelis van der Weegen.3# #ITP #Coq #Math
+ [[https://tqft.net/web/notes/load.php?name=students/20180219-MitchRowett-ASC-report-on-Lean][Group theory in Lean]]. ~ Mitchell Rowet. #ITP #LeanProver #Math



** October 2021

*** 31-Oct-21
+ [[https://www.isa-afp.org/entries/X86_Semantics.html?utm_source=dlvr.it&utm_medium=twitter][X86 instruction semantics and basic block symbolic execution (in Isabelle/HOL)]]. ~ Freek Verbeek, Abhijith Bharadwaj, Joshua Bockenek, Ian Roessle, Timmy Weerwag, Binoy Ravindran. #ITP #IsabelleHOL
+ [[https://raw.githubusercontent.com/GiacomoMaletto/RPP/main/Tesi/main.pdf][A formal verification of reversible primitive permutations]]. ~ Giacomo Maletto. #BSc_Thesis #ITP #LeanProver #Logic #Math
+ [[https://plato.stanford.edu/entries/natural-deduction/][#SEP: Natural deduction systems in logic]]. ~ Francis Jeffry Pelletier, Allen Hazen. #Logic

*** 30-Oct-21
+ [[https://books.google.es/books?id=75dKEAAAQBAJ&lpg=PR2&hl=es&pg=PR.2#v=onepage&q&f=true][Modelling puzzles in first order logic]] ~ Adrian Groza. #ATP #Prover9
+ [[https://byorgey.wordpress.com/2021/10/29/competitive-programming-in-haskell-bfs-part-3-implementation-via-hashmap/][Competitive programming in Haskell: BFS, part 3 (implementation via HashMap)]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://www.technologyreview.com/2020/10/30/1011435/ai-fourier-neural-network-cracks-navier-stokes-and-partial-differential-equations][AI has cracked a key mathematical puzzle for understanding our world]]. ~ Karen Hao. #AI #MachineLearning #Math

*** 29-Oct-21
+ [[https://github.com/leanprover-community/mathlib/blob/0cfae438fdb524f4b2b18d5cb3a5db87e2ad84cb/archive/imo/imo2021_q1.lean][Formalization in Lean of IMO 2021 Q1]]. ~ Mantas Bakšys. #ITP #LeanProver #Math #IMO
+ [[https://gaceta.rsme.es/abrir.php?id=1057][Demostración asistida por ordenador]]. ~ Jesús María Aransay Azofra, César Domínguez Pérez. #DAO #IsabelleHOL #Matemáticas
+ [[https://isabelle.in.tum.de/dist/Isabelle2021/doc/locales.pdf][Tutorial to locales and locale interpretation]]. ~ Clemens Ballarin. #ITP #IsabelleHOL #Math
+ [[https://isabelle.in.tum.de/dist/Isabelle2021/doc/classes.pdf][Haskell-style type classes with Isabelle/Isar]]. ~ Florian Haftmann. #ITP #IsabelleHOL
+ [[https://youtu.be/gFYfdkQ6cr4][Mathematical Logic, Lecture 14 (Presburger arithmetic)]]. ~ Artem Chernikov (@archernikov). #Logic #Math

*** 28-Oct-21
+ [[https://youtu.be/rRGh97sOtKE][Why explain mathematics to computers?]] ~ Patrick Massot. #ITP #LeanProver #Math

*** 27-Oct-21
+ [[https://www.tandfonline.com/doi/full/10.1080/10586458.2021.1980465][Irrationality and transcendence criteria for infinite series in Isabelle/HOL]]. ~ Angeliki Koutsoukou-Argyraki, Wenda Li, Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://blog.poisson.chat/posts/2021-10-26-proving-lists-infinite.html][On proving lists infinite]]. ~ Li-yao Xia (@lysxia). #ITP #Coq
+ [[https://youtu.be/1kpKW69oNaI][Mathematical Logic, Lecture 12 (Quantifier elimination)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://youtu.be/lUlsDiEbFA8][Mathematical Logic, Lecture 13 (Quantifier elimination in algebraically closed fields)]]. ~ Artem Chernikov (@archernikov). #Logic #Math

*** 26-Oct-21
+ [[https://cacm.acm.org/magazines/2021/11/256402-technical-perspective-on-proofs-entanglement-and-games/fulltext][Technical perspective: On proofs, entanglement, and games]]. ~ Dorit Aharonov, Michael Chapman. #CompSci

*** 25-Oct-21
+ [[https://rezigned.com/posts/monad-transformers-1/][Monad transformers – Part 1: An introduction]]. ~ @rezigned. #Haskell #FunctionalProgramming
+ [[https://mariokrenn.wordpress.com/2021/10/24/quantum-physics-in-lean/][Quantum physics in Lean]]. ~ Mario Krenn (@MarioKrenn6240). #ITP #LeanProver #Physics

*** 24-Oct-21
+ [[https://lawrencecpaulson.github.io//2021/10/27/formalisms.html][On logical formalisms]]. ~ Lawrence Paulson. #Logic #ITP
+ [[https://tel.archives-ouvertes.fr/tel-03387912/document][Integrating automated theorem provers in proof assistants]]. ~ Yacine El Haddad. #PhDThesis #ITP #ATP
+ [[https://www.isa-afp.org/entries/Belief_Revision.html][Belief revision theory (in Isabelle/HOL)]]. ~ Valentin Fouillard, Safouan Taha, Frédéric Boulanger, Nicolas Sabouret. #ITP #IsabelleHOL
+ [[https://www.researchgate.net/publication/355201728_Proof_Complexity_of_Modal_Resolution][Proof complexity of modal resolution]]. ~ Sarah Sigley, Olaf Beyersdorff. #ATP #Logic #Automated_reasoning

*** 23-Oct-21
+ [[https://arxiv.org/abs/2110.09174][A formalisation of abstract argumentation in higher-order logic]]. ~ Alexander Steen, David Fuenmayor. #ITP #IsabelleHOL
+ [[https://static.miraheze.org/isacwiki/f/f2/Mawen-isa.pdf][Towards an accessible mathematics working environment in education]]. ~ K Miesenberger, W Neuper, B Stöger, M Wenzel. #ITP #IsabelleHOL #Math
+ [[https://static.miraheze.org/isacwiki/a/ad/ThEdu21_paper_2.pdf][Make Isabelle accessible!]]. ~ R. Koutny, K. Miesenberger, W. Neuper, B. Stöger. #ITP #IsabelleHOL
+ [[https://hasufell.github.io/posts/2021-10-22-conduit-to-streamly.html][From conduit to streamly]]. ~ Julian Ospald. #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/learn-from-errors-overlapping-instances][Learn from errors: Overlapping instances]]. ~ Sandeep Chandrika. #Haskell #FunctionalProgramming

*** 22-Oct-21
+ [[https://youtu.be/24DUqFn9jWM][Mathematical Logic, Lecture 11 (Upward Löwenheim-Skolem and expansions by definition)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://www.isa-afp.org/entries/Correctness_Algebras.html][Algebras for iteration, infinite executions and correctness of sequential computations]]. ~ Walter Guttmann. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Virtual_Substitution.html][Verified quadratic virtual substitution for real arithmetic]]. ~ Matias Scharager, Katherine Cordwell, Stefan Mitsch, André Platzer. #ITP #IsabelleHOL #Math
+ [[https://www.ingentaconnect.com/content/matthey/jmtr/pre-prints/content-jm_jmtr_johnsapr22][Emacs as a tool for modern science]]. ~ Timothy Johnson. #Emacs #OrgMode

*** 21-Oct-21
+ [[https://lawrencecpaulson.github.io/2021/10/13/Fib-example.html][Introductory example: Fibonacci numbers (in Isabelle/HOL)]]. ~  Lawrence Paulson @Cambridge_CL #ITP #IsabelleHOL #Math
+ [[https://lawrencecpaulson.github.io/2021/10/20/Fib-example-contd.html][More on Fibonacci numbers, with equational reasoning (in Isabelle/HOL)]]. ~  Lawrence Paulson @Cambridge_CL #ITP #IsabelleHOL #Math
+ [[https://www.tandfonline.com/doi/full/10.1080/10586458.2021.1980464][Formalizing ordinal partition relations using Isabelle/HOL]]. ~ Mirna Džamonja, Angeliki Koutsoukou-Argyraki, Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://well-typed.com/blog/2021/10/large-records-part-2/][Induction without core-size blow-up a.k.a. Large records: anonymous edition]]. ~ Edsko de Vries, Adam Gundry. #Haskell #FunctionalProgramming
+ [[https://reasonablypolymorphic.com/blog/proving-commutativity/][Proving commutativity of polysemy interpreters]]. ~ Sandy Maguire. #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2021-10-21-tcplugins-1/][Type-checking plugins, Part I: Why write a type-checking plugin?]]. ~ Sam Derbyshire. #Haskell #FunctionalProgramming
+ [[https://youtu.be/37uTCZqpqmk][Custom type errors using TypeError]]. ~ Richard Eisenberg (@RaeHaskell). #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2021/10/co-applicative-programming-style.html][Co-Applicative programming style]]. ~ Gabriella Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2110.09947][Using program synthesis and inductive logic programming to solve Bongard problems]]. ~ Atharv Sonwane, Sharad Chitlangia, Tirtharaj Dash, Lovekesh Vig, Gautam Shroff, Ashwin Srinivasan. #MachineLearning #ILP

*** 20-Oct-21
+ [[https://blog.poisson.chat/posts/2021-10-20-initial-final-free-monad.html][Initial and final encodings of free monads]]. ~ Li-yao Xia (@lysxia). #Haskell #FunctionalProgramming #ITP #Coq
+ [[https://barriecooper.github.io/html/index.html][The graphs game, version 0]].1. ~ Barrie Cooper. #ITP #LeanProver #Math
+ [[https://youtu.be/hrCGPTLgMA0][Mathematical Logic, Lecture 10 (Axiomatizability and the diagram method)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://youtu.be/cT8G6FS2v94][TrieMap that match (a programming pearl)]]. ~ Simon Peyton Jones. #Haskell #FunctionalProgramming
+ [[https://byorgey.wordpress.com/2021/10/18/competitive-programming-in-haskell-bfs-part-2-alternative-apis/][Competitive programming in Haskell: BFS, part 2 (alternative APIs)]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2110.08640][Is the twin prime conjecture independent of Peano Arithmetic? ~ Alessandro Berarducci, Antongiulio Fornasiero]]. #Logic #Math
+ [[https://www.colinmclear.net/posts/teaching-notes/][Teaching notes, slides, & handouts]]. ~ Colin McLear (@mclearc). #Emacs #OrgMode

*** 19-Oct-21
+ [[https://arxiv.org/abs/2110.05063v1][Efficient extensional binary tries]]. ~ Andrew Appel, Xavier Leroy. #ITP #Coq
+ [[https://arxiv.org/abs/2110.05771v1][Toward SMT-based refinement types in Agda]]. ~ Gan Shen, Lindsey Kuper. #ITP #Agda #FunctionalProgramming
+ [[https://arxiv.org/abs/2110.04461v1][Toward hole-driven development with Liquid Haskell]]. ~ Patrick Redmond, Gan Shen, Lindsey Kuper. #Haskell #LiquidHaskell #FunctionalProgramming
+ [[https://monadplus.pro/haskell/2021/10/14/th/][Template Haskell — Use cases]]. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/pdf/2110.08881.pdf][Naive descriptive set theory]]. ~ M. Foreman. #SetTheory
+ [[https://youtu.be/0NaRJa8yGEo][Mathematical Logic, Lecture 1 (First-order logic: languages, structures and formulas)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://youtu.be/aL9AthhlHsM][Mathematical Logic, Lecture 2 (Semantics of first-order formulas)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://youtu.be/4grFfGwQNww][Mathematical Logic, Lecture 3 (Substitution of terms into formulas)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://youtu.be/ccGKl9P-Mck][Mathematical Logic, Lecture 4 (Universally valid formulas and propositional calculus)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://youtu.be/KR5fF_QTJlQ][Mathematical Logic, Lecture 5 (Formal proofs)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://youtu.be/qaLFi-StQ0g][Mathematical Logic, Lecture 6 (More on formal proofs and Gödel's completeness theorem)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://youtu.be/tyoDrJGPlzc][Mathematical Logic, Lecture 7 (Proof of Gödel's completeness theorem)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://youtu.be/BfFMkR9Sekw][Mathematical Logic, Lecture 8 (Finishing the proof of Gödel's completeness theorem)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://youtu.be/IwEXosSIxw8][Mathematical Logic, Lecture 9 (Model theory: compactness, Löwenheim-Skolem, elementary substructure)]]. ~ Artem Chernikov (@archernikov). #Logic #Math
+ [[https://youtube.com/playlist?list=PL54Pt_mZzBqibWHgesgEICeQHnwHom8xz][UCLA Math 220A, Mathematical Logic]].~ Artem Chernikov (@archernikov). #Logic #Math

*** 18-Oct-21
+ [[https://youtu.be/3kduOmZ2Wxw][Haskell Lenses From Scratch]]. #Haskell #FunctionalProgramming

*** 16-Oct-21
+ [[https://ajrouvoet.github.io/files/thesis.pdf][Correct by construction language implementations]]. ~ Arjen Rouvoet (@ArjenRouvoet). #PhD_Thesis #ITP #Agda #FunctionalProgramming via @PerezJorgeA_
+ [[https://ocamlpro.github.io/verification_for_dummies/][Verification for dummies: SMT and induction]]. ~ Adrien Champion. #eBook #Logic #SMT #FormalVerification
+ [[https://cs3110.github.io/textbook/cover.html][OCaml Programming: Correct + Efficient + Beautiful]]. ~ Michael R. Clarkson et als. #eBook #OCaml #FunctionalProgramming
+ [[https://youtu.be/2TKuzeRG_lI][Un parser en una docena de lineas en Haskell]]. ~ Alejandro Serrano (@trupill). #Haskell #FunctionalProgramming

*** 15-Oct-21
+ [[https://xenaproject.wordpress.com/2021/10/14/new-year-new-teaching-material/][New year, new teaching material]]. ~ Kevin Buzzard. #ITP #LeanProver #Math
+ [[https://byorgey.wordpress.com/2021/10/14/competitive-programming-in-haskell-bfs-part-1/][Competitive programming in Haskell: BFS, part 1]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2021-10-13-homomorphic-testing/][Denotational homomorphic testing]]. ~ Divesh Otwani. #Haskell #FunctionalProgramming
+ [[https://bit.ly/3lDSiN3][La conjetura diabólica]]. ~ Juan Arias de Reyna. #Matemáticas
+ [[https://www.haskellforall.com/2021/10/advice-for-aspiring-bloggers.html][Advice for aspiring bloggers]]. ~ Gabriella Gonzalez (@GabrielG439). #Blogs

*** 14-Oct-21
+ [[https://digitalcommons.calpoly.edu/cgi/viewcontent.cgi?article=3900&context=theses][Proving correctness of a Chez Scheme compiler pass]]. ~ Ian Atol. #MSc_Thesis #ITP #Coq

*** 12-Oct-21
+ [[https://youtu.be/arwiwBPZA-0][Introduction to University Mathematics 2021: Logic in Lean, video 3 (and, or, iff)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[http://www.lix.polytechnique.fr/~dale/mpri/ln2021-v1.pdf][Proof theory, proof search, and logic programming]]. ~ Dale Miller. #eBook #Logic #LogicProgramming
+ [[https://www.researchgate.net/publication/353673818_Experiences_from_Exporting_Major_Proof_Assistant_Libraries][Experiences from exporting major proof assistant libraries]]. ~ Michael Kohlhase, Florian Rabe. #ITP #HOL_Light #Coq #IsabelleHOL #IMPS #PVS #Mizar
+ [[https://www.cantorsparadise.com/when-alan-turing-and-ludwig-wittgenstein-discussed-the-liar-paradox-3c2de0ff09d1][When Alan Turing and Ludwig Wittgenstein discussed the liar paradox]]. ~ Paul Austin Murphy. #Logic #Math
+ [[https://github.com/kuanyui/copy-as-org-mode][copy-as-org-mode: A Firefox Add-on (WebExtension) to copy selected web page into Org-mode formatted text!]]. #Emacs #OrgMode #Firefox

*** 11-Oct-21
+ [[https://youtu.be/GfrBViUdWoA][Haskelling in Hackerrank!!: Episode 1: Competitive coding]].  #Haskell #FunctionalProgramming
+ [[https://youtu.be/GfrBViUdWoA][Haskelling in Hackerrank!!: Episode 2: Mini-Max Sum]].  #Haskell #FunctionalProgramming

*** 10-Oct-21
+ [[http://ceur-ws.org/Vol-2970/meepaper1.pdf][Logic programming for XAI: A technical perspective]]. ~ Laura State. #LogicProgramming #AI #XAI
+ [[https://arxiv.org/abs/2110.00789][Kernels and small quasi-kernels in digraphs]]. ~ Allan van Hulst. #ITP #Coq #Math
+ [[https://www.ps.uni-saarland.de/~koch/bachelor/thesis.pdf][Mechanizing second-order logic in Coq]]. ~ Mark Koch. #BSc_Thesis #ITP #Coq #Logic #Math

*** 08-Oct-21
+ [[https://arxiv.org/abs/2110.03551][Formalizing geometric algebra in Lean]]. ~ Eric Wieser, Utensil Song. #ITP #LeanProver #Math
+ [[https://youtu.be/NbXkhPmUvug][Introduction to University Mathematics 2021: Logic in Lean, video 2 (true, false, not)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Logic #Math
+ [[https://vitez.me/tuple-prelude][Tuple Prelude]]. ~ Mitchell Vitez. #Haskell #FunctionalProgramming

*** 07-Oct-21
+ [[https://es.cs.uni-kl.de/publications/datarsg/Kock21.pdf][An overview of functional reactive programming]]. ~ F. Kockelke. #FunctionalProgramming #Haskell

*** 05-Oct-21
+ [[https://www.isa-afp.org/entries/FOL_Axiomatic.html][Soundness and completeness of an axiomatic system for first-order logic (in Isabelle/HOL)]]. ~ Asta Halkjær From. #ITP #IsabelleHOL #Logic #Math
+ [[https://www.duo.uio.no/bitstream/handle/10852/88548/R-mming_thesis.pdf][Learning to reason]]. ~ Fredrik Rømming. #Logic #ATP #MachineLearning
+ [[https://youtu.be/kTQZiyniYYI][Logic in Lean, video 1]]. ~ Kevin Buzzard. #ITP #LeanProver #Logic

*** 03-Oct-21
+ [[https://leanprover-community.github.io/mathlib_stats.html][Mathlib statistics]]. #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/statistics.html][Isabelle's AFP statistics]]. #ITP #IsabelleHOL #Math

*** 02-Oct-21
+ [[https://leanprover-community.github.io/blog/posts/month-in-mathlib-sep-2021/][This month in mathlib (Sep 2021)]]. ~ Mathlib community. #ITP #LeanProver #Math
+ [[https://linuxplumbersconf.org/event/11/contributions/1036/attachments/860/1666/Polat_2021_Testing-the-Red-Black-Tree-Implementation-of-the-Linux-Kernel-against-a-Formally-Verified-Variant.pdf][Testing the Red-Black tree implementation of the Linux kernel against a formally verified variant]]. ~ Mete Polat. #ITP #IsabelleHOL
+ [[https://dl.acm.org/doi/pdf/10.1145/3477041][Verified Lustre normalization with node subsampling]]. ~ Timothy Bourke, Paul Jeanmaire, Basile Pesin, Marc Pouzet. #ITP #Coq

*** 01-Oct-21
+ [[https://github.com/Agnishom/lattice-mtl][A verified online monitor for metric temporal logic with quantitative semantics]]. ~ Agnishom Chattopadhyay. #ITP #Coq
+ [[https://youtu.be/fNpsgTIpODA][How to market Haskell to a mainstream programmer]]. ~ Gabriella Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming
+ [[http://h2.jaguarpaw.co.uk/posts/nested-strict-data/][Nested strict data in Haskell]]. ~ Tom Ellis. #Haskell #FunctionalProgramming

** September 2021

*** 30-Sep-21
+ [[http://cambium.inria.fr/~fpottier/publis/moine-chargueraud-pottier-transient.pdf][Specification and verification of a transient stack]]. ~ A. Moine, A. Charguéraud, F. Pottier. #ITP #Coq
+ [[https://arxiv.org/abs/2109.14534][A verified algebraic representation of Cairo program execution]]. ~ Jeremy Avigad, Lior Goldberg, David Levit, Yoav Seginer, Alon Titleman. #ITP #LeanProver
+ [[https://www.jameskoppel.com/files/papers/phd_dissertation.pdf][Meta-metaprogramming]]. ~ James Koppel. #PhD_Thesis #Haskell #FunctionalProgramming
+ [[https://www.imo.universite-paris-saclay.fr/~pmassot/enseignement/poly_alg.pdf][Structures algébriques fondamentales (Définitions, constructions et propriétés universelles)]]. ~ Patrick Massot. #eBook #Math
+ [[https://willcrichton.net/nota/][A new medium for communicating research on programming languages]]. ~ Will Crichton. #CompSci
+ [[https://laurentrdc.xyz/posts/existential.html][Can you make heterogeneous lists in Haskell? Sure — as long your intent is clear]]. ~ Laurent P. René de Cotret. #Haskell #FunctionalProgramming

*** 29-Sep-21
+ [[https://magnus.therning.org/2021-09-28-using-lens-to-set-a-value-based-on-another.html][Using lens to set a value based on another]]. ~ Magnus Therning. #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/typed-template-haskell-overview][A short overview of typed template Haskell]]. ~ Heitor Toledo Lassarote de Paula. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2109.13500][Not another computer algebra system: Highlighting wxMaxima in calculus]]. ~ N. Karjanto, H. S. Husain. #CAS #Math

*** 28-Sep-21
+ [[https://repositories.lib.utexas.edu/bitstream/handle/2152/88056/TEMEL-DISSERTATION-2021.pdf][Automated, efficient, and sound verification of integer multipliers]]. ~ Mertcan Temel. #PhD_Thesis #ITP #ACL2
+ [[https://luctielen.com/posts/making_llvm_gep_safer_in_haskell/][Making LLVM GEP safer in Haskell]]. ~ Luc Tielen (@luctielen). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2109.12755][Abstraction, reasoning and deep learning: A Study of the "Look and Say" sequence]]. ~ Wlodek W. Zadrozny. #AI #MachineLearning #Math
+ [[https://junjizhi.com/all/experience/2021/09/19/emacs-systems-thinking/][Use Emacs for systems thinking]]. ~ Junji Zhi. #Emacs #OrgMode

*** 27-Sep-21
+ [[https://leanprover-community.github.io/blog/posts/the-radon-nikodym-theorem-in-lean/][The Radon-Nikodym theorem in Lean]]. ~ Kexing Ying. #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/Weighted_Path_Order.html][A formalization of weighted path orders and recursive path orders (in Isabelle/HOL)]]. ~ Christian Sternagel, René Thiemann. #ITP #IsabelleHOL
+ [[https://boris-marinov.github.io/category-theory-illustrated/05_logic/][Category theory ilustrated: Logic]]. ~ Boris Marinov (@AlexanderKatt). #CategoryTheory #Logic #Math

*** 26-Sep-21
+ [[https://www.extrema.is/articles/haskell-books/what-the-industrial-coder-misses][What the industrial coder misses]]. ~ Zoltán Tóth. #eBook #Haskell #FunctionalProgramming
+ [[https://github.com/leanprover-community/mathlib/wiki/Big-missing-undergraduate-theorems][Big missing undergraduate theorems (in Lean mathlib)]]. ~ Patrick Massot. #ITP #LeanProver #Math

*** 25-Sep-21
+ [[https://www.cs.bham.ac.uk/~axj/ccc2021/abstracts/CCC_2021_paper_10.pdf][A certified library of ordinal arithmetic]]. ~ Nicolai Kraus, Fredrik Nordvall Forsberg, Chuangjie Xu. #ITP #Agda #Logic #Math #SetTheory
+ [[https://revistas.pucsp.br/index.php/circumhc/article/view/55033][How AI can be surprisingly dangerous for the philosophy of mathematics and of science]]. ~ Walter Carnielli. #AI #MachineLearning #Math #ITP
+ [[https://odr.chalmers.se/bitstream/20.500.12380/304169/1/CSE%2021-31%20Group%2061.pdf][A functional quantum programming language]]. ~ Matilda Blomqvist et als. #Haskell #FunctionalProgramming

*** 24-Sep-21
+ [[https://mathai-iclr.github.io/papers/papers/MATHAI_3_paper.pdf][Beyond the tactic-state automaton]]. ~ Daniel Selsam. #ITP #LeanProver #MachineLearning
+ [[https://youtu.be/tbz6cdnFyPc][Presentation by Jeremy Avigad at the opening of the Hoskinson Center for Formal Mathematics at CMU]]. ~ Jeremy Avigad. #ITP #LeanProver #Math
+ [[https://www.researchgate.net/publication/354542199_Conflict-Driven_Satisfiability_for_Theory_Combination_Lemmas_Modules_and_Proofs][Conflict-driven satisfiability for theory combination: Lemmas, modules, and proofs]]. ~ Maria Paola Bonacina, Stéphane Graham-Lengrand, Natarajan Shankar. #ATP #Logic
+ [[https://hbr.github.io/Lambda-Calculus/lambda1/untyped_lambda.pdf][Lambda calculus - Step by step]]. ~ Helmut Brandl. #LambdaCalculus
+ [[https://byorgey.wordpress.com/2021/09/23/swarm-preview-and-call-for-collaboration/][A new programming game, Swarm]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming #Game
+ [[https://github.com/byorgey/swarm][Swarm: a 2D programming and resource gathering game]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming #Game
+ [[https://www.tweag.io/blog/2021-09-23-funflow2-intro/][Functional data pipelines with funflow2]]. ~ Dorran Howell, Guillaume Desforges, Vince Reuter. #Haskell #FunctionalProgramming #DataScience

*** 23-Sep-21
+ [[https://www.andrew.cmu.edu/user/avigad/Talks/hoskinson_inaugural.pdf][The promise of formal mathematics]]. ~ Jeremy Avigad. #ITP #LeanProver #Math
+ [[https://escholarship.org/content/qt2g73d7qv/qt2g73d7qv_noSplash_3bfa3e4d313d996081476f109a2ad825.pdf][Voting theory in the Lean theorem prover]]. ~ Wesley H. Holliday, Chase Norman, Eric Pacuit. #ITP #LeanProver #Math
+ [[https://flint.cs.yale.edu/flint/publications/ado-tr.pdf][Much ADO about failures: A fault-aware model for compositional verification of strongly consistent distributed systems]]. ~ W. Honoré, J. Kim, J.Y. Shin, Z. Shao. #ITP #Coq
+ [[https://www.researchgate.net/publication/354765192_Introduccion_a_la_programacion_funcional_usando_Haskell_y_Agda][Introducción a la programación funcional usando Haskell y Agda]]. ~ Camilo Chacón Sartori (@camilo_chacon_s). #ProgramaciónFuncional #Haskell #Agda
+ [[https://arxiv.org/abs/2109.10317][Introduction to neural network verification]]. ~ Aws Albarghouthi. #eBook #NeuralNetwork #MachineLearning #Logic
+ [[https://cacm.acm.org/magazines/2021/10/255716-trustworthy-ai/fulltext][Trustworthy AI]]. ~ Jeannette M. Wing. #AI #FormalMethods
+ [[https://cacm.acm.org/magazines/2021/10/255711-ai-futures/fulltext][AI futures: Fact and fantasy]]. ~ Devdatt Dubhashi. #AI
+ [[https://bit.ly/3u6I7Da][La inteligencia artificial y la solución de problemas]]. ~ Juan Arias de Reyna. #IA #Matemáticas
+ [[https://youtu.be/jWtPimYNA9Q][Online course on Category theory: 4. Adjoint functors]]. ~ Richard E. Borcherds. #CategoryTheory
+ [[http://videoarxiv.org/][VideoArxiv: a searchable repository of links to math videos]]. #Math

*** 22-Sep-21
+ [[https://buttondown.email/hillelwayne/archive/there-was-no-formal-methods-winter/][There was no formal methods winter]]. ~ Hillel Wayne (@hillelogram). #FormalMethods via @LogicPractice
+ [[https://arxiv.org/abs/2104.02549][Connecting constructive notions of ordinals in homotopy type theory]]. ~ Nicolai Kraus, Fredrik Nordvall Forsberg, Chuangjie Xu. #ITP #Agda #Logic #Math #HoTT
+ [[https://byorgey.wordpress.com/2021/09/21/competitive-programming-in-haskell-codeforces-educational-round-114/][Competitive programming in Haskell: Codeforces Educational Round 114]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://unimath.github.io/SymmetryBook/book.pdf][Symmetry]]. ~ Marc Bezem, Ulrik Buchholtz, Pierre Cagne, Bjørn Ian Dundas, Daniel R. Grayson. #eBook #Univalent_mathematics
+ [[https://www.gaussianos.com/primos-que-generan-primos-el-teorema-de-scherk/][Primos que generan primos: el teorema de Scherk]]. ~ M.A. Morales (@gaussianos). #Matemáticas
+ [[https://youtu.be/JOp7mH72Jlg][Online course on Category theory: 1]]. Introduction. ~ Richard E. Borcherds. #CategoryTheory
+ [[https://youtu.be/6jrQjoM8b9s][Online course on Category theory: 2]]. Functors. ~ Richard E. Borcherds. #CategoryTheory
+ [[https://youtu.be/YLZuamSNLvc][Online course on Category theory: 3]]. Natural transformations. ~ Richard E. Borcherds. #CategoryTheory

*** 21-Sep-21
+ [[http://leanprover.github.io/papers/lean4.pdf][The Lean 4 theorem prover and programming language (System description)]]. ~ Leonardo de Moura, Sebastian Ullrich. #ITP #LeanProver
+ [[https://leanprover-community.github.io/blog/posts/continuous-partitions-of-unity/][Continuous partitions of unity (in Lean)]]. ~ Patrick Massot. #ITP #LeanProver #Math
+ [[https://lean-forward.github.io/pubs/konovalova_bsc_thesis.pdf][Verifying AVL trees in Lean]]. ~ Sofia Konovalova. #ITP #LeanProver #Algorithms
+ [[https://www.cjquines.com/files/typetheory.pdf][Type theory by example]]. ~ Carl Joshua Quines. #TypeTheory #Logic #CompSci

*** 20-Sep-21
+ [[https://bor0.wordpress.com/2021/09/20/closed-expression-of-a-sum-with-proof-in-coq/][Closed-expression of a sum with proof in Coq]]. ~ Boro Sitnikovski (@BSitnikovski).  #ITP #Coq #Math
+ [[http://www.andrew.cmu.edu/user/avigad/Papers/verified_optimization_wip_paper.pd][Verified optimization (work in progress)]]. ~ Alexander Bentkamp, Jeremy Avigad.f#ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/Complex_Bounded_Operators.html][Complex bounded operators in Isabelle/HOL]]. ~ José Manuel Rodríguez Caballero, Dominique Unruh. #ITP #IsabelleHOL #Math
+ [[https://soupi.github.io/learn-haskell-blog-generator/][Learning Haskell by building a static blog generator]]. ~ Gil Mizrahi (@_gilmi). #eBook #Haskell #FunctionalProgramming

*** 18-Sep-21
+ [[https://byorgey.wordpress.com/2021/09/17/automatically-updated-cached-views-with-lens/][Automatically updated, cached views with lens]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://odr.chalmers.se/bitstream/20.500.12380/304114/1/CSE%2021-17%20Group%2016.pdf][Proof editor for natural deduction]]. ~ Freddy Abrahamsson, Therese Andersson, Axel Forsman, Lo Ranta, Michael Åkesson. #BSc_Thesis #Logic #PureScript #FunctionalProgramming
+ [[https://proofs.openlogicproject.org/][Natural deduction proof editor and checker]]. #Logic #PureScript #FunctionalProgramming
+ [[https://lamassr.github.io/papers/Existence-Nash.pdf][Existence of Nash equilibria in 2-player simultaneous games and priority games proven in Isabelle]]. ~ S Le Roux, É Martin-Dorel, JG Smaus. #ITP #IsabelleHOL #Math
+ [[https://lamassr.github.io/papers/Formalized-Soundness.pdf][Formalized soundness and completeness of epistemic logic]]. ~ AH From, AB Jensen, J Villadsen. #ITP #IsabelleHOL #Logic

*** 17-Sep-21
+ [[https://jmtd.net/log/ghc_rewrite_rules/][GHC rewrite rules]]. ~ Jonathan Dowland. #Haskell #FunctionalProgramming
+ [[https://blog.kalvad.com/haskell-series-part-4/][Haskell series part 4 (This is the fourth article of a series on the functional language Haskell for beginners)]]. ~ Pierre Guillemot. #Haskell #FunctionalProgramming

*** 16-Sep-21
+ [[https://www.cs.ru.nl/bachelors-theses/2021/Michiel_Philipse___1016359___Distributed_Knowledge_Proofs_in_the_Coq_Proof_Assistant.pdf][Distributed knowledge proofs in the Coq proof assistant]]. ~ Michiel Philipse #BSc_Thesis #ITP #Coq
+ [[https://github.com/UniMath/UniMath][Univalent Mathematics: This Coq library aims to formalize a substantial body of mathematics using the univalent point of view]]. #ITP #Coq #Math

*** 15-Sep-21
+ [[https://www.scientificamerican.com/article/infinity-category-theory-offers-a-birds-eye-view-of-mathematics/][Infinity category theory offers a bird’s-eye view of mathematics]]. ~ Emily Riehl. #Math #CategoryTheory
+ [[https://arxiv.org/abs/2109.06258][Unprovability in mathematics: A first course on ordinal analysis]]. ~ Anton Freund. #Logic #Math

*** 14-Sep-21
+ [[http://aitp-conference.org/2021/abstract/paper_17.pdf][LISA: Language models of ISAbelle proofs]]. ~ Albert Q. Jiang, Wenda Li, Jesse M. Han, Yuhuai Wu. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/CZH_Foundations.html ~ Mihails Milehins.][Category theory for ZFC in HOL I: Foundations: Design patterns, set theory, digraphs, semicategories]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/CZH_Elementary_Categories.html ~ Mihails Milehins.][Category theory for ZFC in HOL II: Elementary theory of 1-categories]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/CZH_Universal_Constructions.html ~ Mihails Milehins.][Category theory for ZFC in HOL III: Universal constructions]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Types_To_Sets_Extension.html ~ Mihails Milehins.][Extension of types-to-sets]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Intro_Dest_Elim.html ~ Mihails Milehins.][IDE: Introduction, destruction, elimination]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Conditional_Transfer_Rule.html ~ Mihails Milehins.][Conditional transfer rule]]. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Conditional_Simplification.html ~ Mihails Milehins.][Conditional simplification]]. #ITP #IsabelleHOL #Math
+ [[https://drimyswinteri.ml/esteblog.html][Como está hecho este blog]]. #Emacs #OrgMode
+ [[http://mbork.pl/2021-09-06_My_experience_with_book_writing][My experience with book writing]]. ~ Marcin Borkowski (@marcin_mbork). #Emacs #OrgMode #Elisp
+ [[https://ruor.uottawa.ca/bitstream/10393/42643/4/Bahrami_Abdorrahim_2021_thesis.pdf][Modelling and verifying dynamic properties of neuronal networks in Coq]]. ~ Abdorrahim Bahrami. #PhDThesis #ITP #Coq #NeuralNetwork
+ [[https://readerunner.wordpress.com/2021/09/13/diagrams-for-penrose-tiles/][Penrose kite and dart tilings with Haskell Diagrams]]. ~ Chris Reade. #Haskell #FunctionalProgramming #Math

*** 13-Sep-21
+ [[http://aitp-conference.org/2021/abstract/paper_3.pdf][Mining counterexamples for wide-signature algebras with an Isabelle server]]. ~ Boris Shminke, Wesley Fussner. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2109.02806v1][Symbolic computation in software science: My personal view]]. ~ Bruno Buchberger. #CompSci
+ [[https://arxiv.org/abs/2109.04886][Proceedings 18th International Conference on Quantum Physics and Logic]]. #Logic #Math #Physics

*** 12-Sep-21
+ [[https://github.com/leanprover-community/mathlib/blob/56a59d3eaf3f1fad38fd3742831729bfd6d1a1dd/src/data/polynomial/hasse_deriv.lean][Hasse derivative of polynomials (in Lean)]].~ Johan Commelin. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/3e10324f686c8d895f97e4160a8ff796adaabdd4/src/data/polynomial/taylor.lean][Taylor expansions of polynomials (in Lean)]]. ~ Johan Commelin. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2109.01362][A survey of practical formal methods for security]]. ~ Tomas Kulik et als. #FormalMethods

*** 11-Sep-21
+ [[https://link.springer.com/article/10.1007/s10817-021-09599-8][Distilling the requirements of Gödel’s incompleteness theorems with a proof assistant]]. ~ Andrei Popescu, Dmitriy Traytel. #ITP #IsabelleHOL #Logic #Math
+ [[http://jssst.or.jp/files/user/taikai/2021/papers/9-L.pdf][GSOL: A confluence checker for Haskell rewrite rules]]. ~ Yao Faustin Date Makoto Hamana. #Haskell #FunctionalProgramming
+ [[https://taylor.fausak.me/2021/09/10/evoke/][Announcing Evoke, a GHC plugin for deriving type class instances quickly]]. ~ Taylor Fausak (@taylorfausak). #Haskell #FunctionalProgramming
+ [[https://www.parsonsmatt.org/2021/09/09/deferred_derivation.html][Deferred derivation]]. ~ Matt Parsons (@mattoflambda). #Haskell #FunctionalProgramming
+ [[https://inside.mines.edu/~ndantam/csci-561/L02-lisp-prelecture.pdf][Symbolic computation and Common Lisp]]. ~ Neil T. Dantam. #CommonLisp
+ [[https://www.quantamagazine.org/new-math-book-rescues-landmark-topology-proof-20210909/][New math book rescues landmark topology proof]]. ~ Kevin Hartnett (@KSHartnett). #Math

*** 10-Sep-21
+ [[https://byorgey.wordpress.com/2021/09/08/implementing-hindley-milner-with-the-unification-fd-library/][Implementing Hindley-Milner with the unification-fd library]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://rebeccaskinner.net/posts/2021-08-25-introduction-to-type-level-programming.html][An introduction to type level programming]]. ~ Rebecca Skinner. #Haskell #FunctionalProgramming
+ [[https://bartoszmilewski.com/2021/09/08/optics-for-the-working-mathematician/][Optics for the working mathematician]]. ~ Bartosz Milewski (@BartoszMilewski). #CategoryTheory
+ [[https://oleg.fi/gists/posts/2021-09-09-leibniz-coercion.html][Leibniz coercion]]. ~ Oleg Grenrus (@phadej). #Haskell #FunctionalProgramming

*** 09-Sep-21
+ [[https://arxiv.org/abs/2109.03234][Learned provability likelihood for tactical search]]. ~ Thibault Gauthier. #ITP #HOL4 #MachineLearning
+ [[https://arxiv.org/abs/2109.03721][Conjectures, tests and proofs: An overview of theory exploration]]. ~ Moa Johansson, Nicholas Smallbone. #Haskell #FunctionalProgramming
+ [[https://gitlab.homotopic.tech/haskell/conic-graphs][Vinyl-style extensible graphs]]. ~ Daniel Firth. #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2021/09/optics-are-monoids.html?m=1][Optics are monoids]]. ~ Gabriella Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming
+ [[https://byorgey.wordpress.com/2021/09/09/competitive-programming-in-haskell-kadanes-algorithm/][Competitive programming in Haskell: Kadane’s algorithm]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://ryanglscott.github.io/2021/09/06/leibniz-equality-in-haskell-part-2-heterogeneous-equality/][Leibniz equality in Haskell, part 2: heterogeneous equality]]. ~ Ryan Scott. #Haskell #FunctionalProgramming
+ [[https://kleczkow.ski/cayley-representation-of-monads/][Cayley representation of ... monads?]] ~ Konrad Kleczkowski. #Haskell #FunctionalProgramming

*** 08-Sep-21
+ [[https://www.isa-afp.org/entries/Dominance_CHK.html][A data flow analysis algorithm for computing dominators (in Isabelle/HOL)]]. ~ Nan Jiang. #ITP #IsabelleHOL
+ [[https://www.coalg.org/calco-mfps2021/files/2021/08/Veltri-Voorneveld.pdf][Inductive and coinductive predicate liftings for effectful programs]]. ~ Niccolò Veltri, Niels Voorneveld. #ITP #Agda
+ [[https://tarmean.github.io/mutable_lenses][Mutating lenses]]. ~ Tarmean. #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/how-dependent-haskell-can-improve-industry-projects][How dependent Haskell can improve industry projects]]. ~ Danya Rogozin, Vladislav Zavialov. #Haskell #FunctionalProgramming

*** 07-Sep-21
+ [[https://vtss.doc.ic.ac.uk/publications/Watt2021Two.pdf][Two mechanisations of WebAssembly 1]].0. ~ Conrad Watt, Xiaojia Rao, Jean Pichon-Pharabod, Martin Bodin, Philippa Gardner. #ITP #IsabelleHOL #Coq
+ [[https://arxiv.org/abs/2109.01121][A reasoning engine for the gamification of loop-invariant discovery]]. ~ Andrew Walter, Seth Cooper, Panagiotis Manolios. #ATP #ACL2 #Program_verification
+ [[http://cliplab.org/proglog/][Course: Logic Programming (2020-2021)]]. ~ Manuel Hermenegildo et als. #LogicProgramming #Prolog

*** 06-Sep-21
+ [[https://www.isa-afp.org/entries/Schutz_Spacetime.html][Schutz' independent axioms for Minkowski spacetime (in Isabelle/HOL)]]. Richard Schmoetten, Jake Palmer, Jacques Fleuriot. #ITP #IsabelleHOL #Math
+ [[https://github.com/leanprover-community/mathlib/blob/0a94b29f2296d00526724640d204f9222ec265eb/src/data/nat/choose/vandermonde.lean][Vandermonde's identity (in Lean)]]. ~ Johan Commelin. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2109.01483][A survey of the proof-theoretic foundations of logic programming]]. ~ Dale Miller. #LogicProgramming

*** 05-Sep-21
+ [[https://dev.to/viglioni/creating-haskell-notebooks-with-org-mode-4h7][Creating Haskell notebooks with org-mode]]. ~ Laura Viglioni (@LauraViglioni). #Emacs #OrgMode #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2108.13114][Embedded pattern matching]]. ~ Trevor L. McDonell, Joshua D. Meredith, Gabriele Keller. #Haskell #FuncionalProgramming

*** 04-Sep-21
+ [[https://www.researchgate.net/profile/Giancarlo-Guizzardi-2/publication/354150631_On_the_Role_of_Automated_Proof-Assistants_in_the_Formalization_of_Upper_Ontologies/links/6127b2fd2b40ec7d8bc8321e/On-the-Role-of-Automated-Proof-Assistants-in-the-Formalization-of-Upper-Ontologies.pdf][On the role of automated proof-assistants in the formalization of upper ontologies]]. ~ João R. M. Nicola, Giancarlo Guizzardi. #ITP #IsabelleHOL
+ [[https://youtu.be/U5i2VQj5jPk][Programming with proofs]]. ~ Thorsten Altenkirch. #ITP #Agda #FunctionalProgramming
+ [[http://philsci-archive.pitt.edu/19508/1/language_archive.pdf][The design of mathematical language]]. ~ Jeremy Avigad. #Logic #Math
+ [[https://abby.how/posts/parsing-layout.html][Parsing layout, or: Haskell's syntax is a mess]]. ~ Abigail (@plt_abbie). #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/functional-programming-in-fintech][Why fintech companies use Haskell]]. ~ Roman Alterman. #Haskell #FunctionalProgramming
+ [[https://bartoszmilewski.com/2021/09/04/dependent-optics/][Dependent optics]]. ~ Bartosz Milewski (@BartoszMilewski). #FunctionalProgramming #CategoryTheory

*** 03-Sep-21
+ [[https://www.isa-afp.org/entries/Cubic_Quartic_Equations.html][Solving cubic and quartic equations (in Isabelle/HOL)]]. ~ René Thiemann. #ITP #IsabelleHOL #Math
+ [[https://www.parsonsmatt.org/2021/09/02/family_values.html][Family values]]. ~ Matt Parsons (@mattoflambda). #Haskell #FunctionalProgramming

*** 02-Sep-21
+ [[http://www.andreas-lochbihler.de/pub/lochbihler-mfmc.pdf][A mechanized proof of the max-flow min-cut theorem for countable networks with applications to probability theory]]. ~ Andreas Lochbihler. #ITP #IsabelleHOL #Math
+ [[https://sciendo.com/pdf/10.2478/forma-2021-0002][Inverse function theorem]]. Part I. ~ K. Nakasho, Y. Futa. #ITP #Mizar #Math
+ [[https://sciendo.com/pdf/10.2478/forma-2021-0006][Elementary number theory problems]]. Part II. ~ A. Korniłowicz, D. Surowik. #ITP #Mizar #Math
+ [[https://sciendo.com/pdf/10.2478/forma-2021-0001][Derivation of commutative rings and the Leibniz formula for power of derivation]]. ~ Y. Watase, S. Matsunoki. #ITP #Mizar #Math
+ [[https://sciendo.com/pdf/10.2478/forma-2021-0004][Algebraic extensions]]. ~ C. Schwarzweller, A. Rowińska-Schwarzweller. #ITP #Mizar #Mat #ITP #Mizar #Math
+ [[https://sciendo.com/pdf/10.2478/forma-2021-0003][Miscellaneous graph preliminaries]]. Part I. ~ S. Koch. #ITP #Mizar #Math
+ [[https://arxiv.org/abs/2109.00110][MiniF2F: a cross-system benchmark for formal Olympiad-level mathematics]]. ~ Kunhao Zheng, Jesse Michael Han, Stanislas Polu. #ITP #LeanProver #IsabelleHOL #Metamath #Math
+ [[https://leanprover.github.io/theorem_proving_in_lean4/][Theorem proving in Lean 4]].  #ITP #LeanProver
+ [[https://youtu.be/11QrZa6wlhw][From Euclid to Hilbert to Lean]]. ~ Tianchen Zhao. #ITP #LeanProver #Math
+ [[https://youtu.be/8hk-IO0-Zcg][Formalising nilpotent groups in Lean]]. ~ Ines Wright. #ITP #LeanProver #Math
+ [[https://youtu.be/HajwhhUyXxE][Formalising the fundamental group]]. ~ Shing Tak Lam. #ITP #LeanProver #Math
+ [[https://youtu.be/QyIrjY3ntuY][Proving Dedekind's Theorem in Lean]]. ~ Paul Lezeau. #ITP #LeanProver #Math
+ [[https://youtu.be/Xhe3IR-HSoo][Formalizing Thomae's function in Lean]]. ~ Frick Hazard. #ITP #LeanProver #Math
+ [[https://youtu.be/ZaT_ciXoc40][Ax-Grothendieck theorem in Lean]]. ~ Joseph Hua. #ITP #LeanProver #Math
+ [[https://youtu.be/pq3uc8xkTcE][Conformal maps, Liouville's theorem and random stuffs in Lean]]. ~ Yourong Zang. #ITP #LeanProver #Math
+ [[https://youtu.be/jtxysgZL8Jk][Probability in Lean: a new begnining]]. ~ Kexing Ying. #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/Design_Theory.html][Combinatorial design theory in Isabelle/HOL]]. ~ Chelsea Edmonds, Lawrence Paulson. #ITP #IsabelleHOL

*** 01-Sep-21
+ [[http://www-verimag.imag.fr/~boulme/boulme_hdr.pdf][Formally verified defensive programming (efficient Coq-verified computations from untrusted ML oracles)]]. ~ Sylvain Boulmé. #ITP #Coq #OCaml #FunctionalProgramming
+ [[https://www.isa-afp.org/entries/Three_Circles.html][The theorem of three circles (in Isabelle/HOL)]]. ~ Fox Thomson, Wenda Li #ITP #IsabelleHOL #Math
+ [[https://serokell.io/blog/dependency-analysis-haskell][Dependency analysis of Haskell declarations]]. ~ Artem Kuznetsov. #Haskell #FunctionalProgramming

** August 2021

*** 31-Aug-21
+ [[https://bit.ly/3DxZPnp][New Software Foundations release]]. ~ Benjamin C. Pierce et als. #ITP #Coq
+ [[https://arxiv.org/abs/2108.04194][Modal logic S5 satisfiability in answer set programming]]. ~ Mario Alviano,a Sotiris Batsakis, George Baryannis. #Logic #ASP #LogicProgramming
+ [[https://raw.githubusercontent.com/BartoszMilewski/Publications/master/TheDaoOfFP/DaoFP.pdf][The Dao of Functional Programming (Last updated: August 30, 2021)]]. ~ Bartosz Milewski (@BartoszMilewski). #Haskell #FunctionalProgramming #CategoryTheory
+ [[https://youtube.com/playlist?list=PLyrlk8Xaylp6_QTmXGuRe3lShaRGaMtgc][HIW (The Haskell Implementors’ Workshop) 2021 videos]]. #Haskell #FunctionalProgramming
+ [[https://www.ppig.org/files/2021-PPIG-32nd-tavante.pdf][A data-centered user study for proof assistant tools]]. ~ Hanneli C.A. Tavante. #ITP #Coq#LeanProver
+ [[https://arxiv.org/abs/2108.11155][Latent effects for reusable language components: Extended version]]. ~ Birthe van den Berg, Tom Schrijvers, Casper Bach-Poulsen, Nicolas Wu. #Haskell #FunctionalProgramming
+ [[https://www.cs.kent.ac.uk/people/staff/dao7/publ/timo-hope21.pdf][Formalising algebraic effects with non-recoverable failure]]. ~ Timotej Tomandl, Dominic Orchard. #Haskell #FunctionalProgramming
+ [[https://www.researchgate.net/profile/Mertcan-Temel/publication/354010466_Sound_and_Automated_Verification_of_Real-World_RTL_Multipliers/links/611ed85f169a1a01031224fd/Sound-and-Automated-Verification-of-Real-World-RTL-Multipliers.pdf][Sound and automated verification of real-world RTL multipliers]]. ~ Mertcan Temel, Warren A. Hunt Jr. #ITP #ACL2

*** 30-Aug-21
+ [[https://arxiv.org/abs/2108.12301][Computer algebra in Julia]]. ~ Dmitry S. Kulyabov, Anna V. Korolkova. #CAS #JuliaLang #Math
+ [[https://youtu.be/GhkoPskC3eY][Dijkstra: O homem que tornou a computação uma ciência]]. ~ Adriano Santos (@adrianolcp). #CompSci

*** 29-Aug-21
+ [[https://katyhristova.medium.com/what-is-category-theory-and-why-is-it-trendy-b94ce59fe42b][What is category theory and why is it trendy?]] ~ Katerina Hristova. #Math #CategoryTheory

*** 28-Aug-21
+ [[https://youtu.be/LwwzVpolxm8][Geometry in Lean, a report for mathematicians]]. ~ Nicolò Cavalleri, Anthony Bordg. #ITP #LeanProver #Math
+ [[https://youtu.be/qac1O4Co0IU][Formalizing the Gromov-Hausdorff space]]. ~ Sébastien Gouëzel. #ITP #LeanProver #Math

*** 27-Aug-21
+ [[https://ryanglscott.github.io/2021/08/22/leibniz-equality-in-haskell-part-1/][Leibniz equality in Haskell, part 1]]. ~ Ryan Scott. #Haskell #FunctionalProgramming
+ [[https://leanpub.com/magicalhaskell][Magical Haskell (modern functional programming and type theory in a fun and accessible way)]]. ~ Anton Antich (@aantich). #Haskell #FunctionalProgramming #eBook
+ [[https://cdsmithus.medium.com/nascent-ghc-proposal-source-rewrite-rules-and-optional-constraints-810a2f6051eb][Nascent GHC proposal: Source rewrite rules and optional constraints]]. ~ Chris Smith (@cdsmithus). #Haskell #FunctionalProgramming
+ [[https://cacm.acm.org/news/255113-life-as-a-logician/fulltext][Life as a logician (An interview with Martin Davis by Allyn Jackson)]]. #Logic #Math #CompSci #AI #MachineLearning

*** 26-Aug-21
+ [[https://youtu.be/8P-X8YgsCZ0][Une idée assez folle, l'Intelligence Artificielle ]]... (un film sur le parcours d'Alain Colmerauer). #AI #LogicProgramming #Prolog

*** 25-Aug-21
+ [[https://arxiv.org/abs/2108.10868][Towards formalising Schutz' axioms for Minkowski spacetime in Isabelle/HOL]]. ~ Richard Schmoetten, Jake E. Palmer, Jacques D. Fleuriot. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2108.10700][Scalar actions in Lean's mathlib]]. ~ Eric Wieser. #ITP #LeanProver #Math
+ [[https://cacm.acm.org/magazines/2021/9/255036-ai-ethics/fulltext][AI ethics: A call to faculty]]. ~ Illah Reza Nourbakhsh. #AI

*** 24-Aug-21
+ [[https://github.com/leanprover-community/mathlib/blob/c811dd774f9590e9106c0780ea0983c60b659c78/src/data/nat/mul_ind.lean][Multiplicative induction principles for ℕ]]. ~ Eric Rodriguez. #ITP #LeanProver #Math

*** 23-Aug-21
+ [[https://youtu.be/OCQfkhqg8Yg][Formalizing Fibonacci squares]]. ~ Harun Khan. #ITP #LeanProver #Math
+ [[https://daemons.it/posts/programacion-literaria-para-sysadminsdevops/][Programación literaria para sysadmins / devops]]. ~ drymer. #Emacs #OrgMode

*** 21-Aug-21
+ [[https://www.ijcai.org/proceedings/2021/0273.pdf][Faster smarter proof by induction in Isabelle/HOL]]. ~ Yutaka Nagashima. #ITP #IsabelleHOL
+ [[https://github.com/leanprover-community/mathlib/blob/15b1461951d8821c1354dcf01a89ce09e798965b/archive/imo/imo2006_q3.lean][Formalization in Lean of IMO 2006 Q3]]. ~ Tian Chen. #ITP #LeanProver #Math #IMO
+ [[https://arxiv.org/abs/2108.06944v1][Verifying C11-style weak memory libraries via refinement]]. ~ Sadegh Dalvandi, Brijesh Dongol. #ITP #IsabelleHOL

*** 20-Aug-21
+ [[https://youtu.be/wUUcuaegljk][The design of mathematical language]]. ~ Jeremy Avigad. #Logic #Math
+ [[https://youtu.be/-uGhuknZHJI][Verified optimization]]. ~ Alexander Bentkamp, Jeremy Avigad. #ITP #LeanProver #Math
+ [[https://youtu.be/pudd4F749tE][Automatically generalizing theorems using typeclasses]]. ~ Alexander Best. #ITP #LeanProver
+ [[https://github.com/google/formal-ml][Formal ML: A LEAN library for proving foundational results in measure theory, probability, statistics, and machine learning, based upon mathlib]]. #ITP #LeanProver #Math #MachineLearning

*** 19-Aug-21
+ [[https://github.com/RaitoBezarius/berkovich-spaces][Formalization of Ostrowski theorems in Lean theorem prover]]. ~ Ryan Lahfad†, Julien Marquet, Hadrien Barral. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2108.08079][On correctness and completeness of an n queens program]]. ~ Włodzimierz Drabent. #LogicProgramming #Prolog
+ [[https://www.microsiervos.com/archivo/ia/colisiones-matematicas-neuralhash.html][Colisiones matemáticas que muestran cómo confundir al algoritmo Neural Hash]]. ~ @Alvy. #AI #MachineLearning
+ [[https://arxiv.org/abs/2108.08009][XAI methods for neural time series classification: A brief review]]. ~ Ilija Šimić, Vedran Sabol, Eduardo Veas. #DeepLearning #XAI
+ [[https://arxiv.org/abs/2108.07804][A framework for understanding AI-induced field change: How AI technologies are legitimized and institutionalized]]. ~ Benjamin Cedric Larsen. #AI
+ [[https://books.google.es/books?id=DjM9EAAAQBAJ&lpg=PP1&pg=PP.1#v=onepage&q&f=true][A first course in Artificial Intelligence]]. ~ Osondu Oguike #eBook #AI

*** 18-Aug-21
+ [[https://www.cantorsparadise.com/machine-learning-and-the-continuum-hypothesis-87bb9bb23e90][Machine learning and the continuum hypothesis (How the unprovable concerns the unlearnable)]]. ~ Robert Passmann. #MachineLearning #Math
+ [[https://awakesecurity.com/blog/spectacle-a-language-for-writing-and-checking-formal-specifications-in-haskell/][Announcing Spectacle – A language for writing and checking formal specifications in Haskell]]. ~ Jacob Leach. #Haskell #FunctionalProgramming

*** 17-Aug-21
+ [[https://github.com/leanprover-community/mathlib/blob/53d97e1ad2b5e30eff5f9246a689ec37361f63d0/archive/oxford_invariants/2021summer/week3_p1.lean][The Oxford Invariants Puzzle Challenges (Summer 2021, Week 3, Problem 1) in Lean]]. ~ Yaël Dillies, Bhavik Mehta. #ITP #LeanProver #Math

*** 16-Aug-21
+ [[https://books.google.es/books?id=bhkSEAAAQBAJ&lpg=PP1&pg=PP1#v=onepage&q&f=true][Ideas that created the future: Classic papers of Computer Science]]. ~ Harry R. Lewis. #eBook #CompSci
+ [[https://gilmi.me/blog/post/2021/08/14/hs-core-tools][Core Haskell tools]]. ~ Gil Mizrahi (@_gilmi). #Haskell #FunctionalProgramming
+ [[https://twobithistory.org/2018/10/14/lisp.html][How Lisp became God's own programming language]]. ~ @TwoBitHistory. #Lisp #Programming
+ [[https://arxiv.org/abs/2108.06015][Natural deduction calculus for first-order logic]]. ~ Yazeed Alrubyli.  #Logic #Math

*** 14-Aug-21
+ [[https://easychair.org/publications/preprint/RDH3][Assimilating the structure of formal and informal proof]]. ~ Kensho Tsurusaki, Akiko Aizawa. #ITP #LeanProver
+ [[https://repositorio.inesctec.pt/bitstream/123456789/12455/1/P-00V-35V.pdf][Balancing the formal and the informal in user-centred design]]. ~ JC Campos, MD Harrison, P Masci. #ITP #PVS
+ [[https://arxiv.org/abs/2108.02995][Extracting functional programs from Coq, in Coq]]. ~ Danil Annenkov, Mikkel Milo, Jakob Botsch Nielsen, Bas Spitters. #ITP #Coq
+ [[https://www.cybok.org/media/downloads/Formal_Methods_for_Security_v1.0.0.pdf][Formal methods for security knowledge area]]. ~ David Basin. #FormalMethods
+ [[https://publications.waset.org/10012167/haskellfl-a-tool-for-detecting-logical-errors-in-haskell][HaskellFL: A tool for detecting logical errors in Haskell]]. ~ Vanessa Vasconcelos, Mariza A. S. Bigonha. #Haskell #FunctionalProgramming
+ [[https://cdsmithus.medium.com/abstraction-in-reflex-and-codeworld-a1b42ad36923][Abstraction in Reflex and CodeWorld]]. ~ Chris Smith (@cdsmithus). #Haskell #CodeWorld #FunctionalProgramming
+ [[https://blog.cofree.coffee/2021-08-13-that-one-cool-reader-trick/][That one cool reader trick]]. ~ Solomon. #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2021/08/namespaced-de-bruijn-indices.html][Namespaced De Bruijn indices]]. ~ Gabriella Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/1801.00631][Deep Learning: A critical appraisal]]. ~ Gary Marcus. #DeepLearning
+ [[https://github.com/conal/talk-2018-deep-learning-rebooted][A functional reboot for Deep Learning]]. ~ Conal Elliott (@conal). #DeepLearning #FunctionalProgramming #Haskell
+ [[http://conal.net/papers/language-derivatives/][Symbolic and automatic differentiation of languages]]. ~ Conal Elliott (@conal). #Agda #FunctionalProgramming

*** 13-Aug-21
+ [[https://youtu.be/alByz_LoANE][What is the point of Lean's maths library?]] ~ Kevin Buzzard. #ITP #LeanProver #Math
+ [[https://vitez.me/counting-cardinalities][Counting cardinalities]]. ~ Mitchell Vitez. #Haskell #FunctionalProgramming

*** 12-Aug-21
+ [[http://adam.chlipala.net/papers/FrapICFP21/FrapICFP21.pdf][Skipping the binder bureaucracy with mixed embeddings in a semantics course (Functional Pearl)]]. ~ Adam Chlipala. #ITP #Coq
+ [[http://www.cs.ru.nl/~wouters/Publications/HoareLogicStateMonad.pdf][The Hoare State Monad (Proof Pearl)]]. ~ Wouter Swierstra. #ITP #Coq
+ [[https://byorgey.wordpress.com/2021/08/11/competitive-programming-in-haskell-monoidal-accumulation/][Competitive programming in Haskell: monoidal accumulation]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming

*** 11-Aug-21
+ [[https://github.com/leanprover-community/mathlib/blob/master/archive/imo/imo2001_q6.lean][Formalization in Lean of IMO 2001 Q6]]. ~ Sara Díaz, Johan Commelin. #ITP #LeanProver #Math #IMO

*** 10-Aug-21
+ [[https://arxiv.org/abs/2108.01883v1][Reasoning about iteration and recursion uniformly based on big-step semantics]]. ~ Ximeng Li, Qianying Zhang, Guohui Wang, Zhiping Shi, Yong Guan. #ITP #Coq
+ [[https://academiccommons.columbia.edu/doi/10.7916/d8-3tsv-1117/download][A secure and formally verified commodity multiprocessor hypervisor]]. ~ Shih-Wei Li. #PhD_Thesis #ITP #Coq
+ [[https://github.com/leanprover-community/mathlib/blob/master/src/data/matrix/kronecker.lean][Kronecker product of matrices (in Lean)]]. ~ Filippo A. E. Nuccio, Eric Wieser. #ITP #LeanProver #Math
+ [[https://malv.in/posts/2021-01-09-depth-first-and-breadth-first-search-in-haskell.html][Depth-first and breadth-first search in Haskell]]. ~ Malvin Gattinger (@m4lvin). #Haskell #FunctionalProgramming
+ [[https://www.slideshare.net/pjschwarz/left-and-right-folds-comparison-of-a-mathematical-definition-and-a-programmatic-one-polyglot-fp-for-fun-and-profit-haskell-and-scala][Left and right folds (Comparison of a mathematical definition and a programmatic one)]]. ~ Philip Schwarz (@philip_schwarz). #Haskell #Scala #FunctionalProgramming
+ [[https://arxiv.org/abs/2108.03574][Elementary recursive algorithms]]. ~ Yiannis N. Moschovakis. #Algorithms #Logic #Math #CompSci

*** 09-Aug-21
+ [[https://arxiv.org/abs/2108.02995][Extracting functional programs from Coq, in Coq]]. ~ Danil Annenkov, Mikkel Milo, Jakob Botsch Nielsen, Bas Spitters. #ITP #Coq
+ [[https://github.com/synacktiv/toy-wasm-symbexp][A toy WASM symbolic interpreter]]. ~ Simon Marechal et als. #Haskell #FunctionalProgramming

*** 08-Aug-21
+ [[https://www.isa-afp.org/entries/Relational_Forests.html][Relational forests (in Isabelle/HOL)]]. ~ Walter Guttmann. #ITP #IsabelleHOL

*** 07-Aug-21
+ [[https://www.imperial.ac.uk/media/imperial-college/faculty-of-engineering/computing/public/2021-ug-projects/Theorem-proving-with-classical-logic.pdf][Theorem proving in classical logic]]. ~ David Davies. #Haskell #FunctionalProgramming #Logic
+ [[https://easychair.org/publications/preprint_download/KLfT][Automatically generalizing theorems using typeclasses]]. ~ Alex J. Best. #ITP #LeanProver
+ [[https://blog.cofree.coffee/2021-08-05-a-brief-intro-to-monad-transformers/][A brief intro to monad transformers]]. ~ Solomon. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2108.00484][Elements of differential geometry in Lean: A report for mathematicians]]. ~ Anthony Bordg, Nicolò Cavalleri. #ITP #LeanProver #Math

*** 06-Aug-21
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?FIDE2021.6][Plotting in a formally verified way]]. ~ Guillaume Melquiond. #ITP #Coq
+ [[https://www.edukera.com/][Edukera: Teach Logic and Math with a proof assistant]]. #ITP #Coq #Edukera #Logic #Math
+ [[https://medium.com/coinmonks/archetype-a-dsl-for-tezos-6f55c92d1035][Archetype, a DSL for Tezos]]. ~ Benoit Rognier. #ITP #Coq #Edukera #Archetype
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?FIDE2021.7][A logic theory pattern for linearized control systems]]. ~ Andrea Domenici, Cinzia Bernardeschi. #ITP #PVS
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?FIDE2021.9][Verifying time complexity of binary search using Dafny]]. ~ Shiri Morshtein, Ran Ettinger, Shmuel Tyszberowicz. #ATP #FormalVerification #Dafny
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?FIDE2021.10][Explaining counterexamples with giant-step assertion checking]]. ~ Benedikt Becker, Cláudio Belo Lourenço, Claude Marché. #ATP #Why3 #FormalVerification
+ [[https://arxiv.org/html/2108.02369v1][VeriFly: On-the-fly assertion checking with CiaoPP (extended abstract)]]. ~ Miguel A. Sanchez-Ordaz, Isabel Garcia-Contreras, Víctor Pérez, Jose F. Morales, Pedro Lopez-Garcia, Manuel V. Hermenegildo./#EPTCS338.13 #Prolog #CiaoPP
+ [[https://blog.noredink.com/post/658510851000713216/haskell-for-the-elm-enthusiast][Haskell for the Elm enthusiast]]. ~ No Red Ink. #Haskell #Elm #FunctionalProgramming
+ [[https://blog.kalvad.com/haskell-series-part-2/][Haskell series part 2 (This is the second article of a series on the functional language Haskell for beginners)]]. ~ Pierre Guillemot. #Haskell #FunctionalProgramming
+ [[https://danso.ca/blog/frommaybe-is-just-a-fold/][fromMaybe is Just a fold]]. ~ Dan Soucy (@ninedotnine). #Haskell #FunctionalProgramming
+ [[https://antitypical.com/posts/2021-07-28-when-howard-met-curry/][When Howard Met Curry]]. ~ Rob Rix (@rob_rix). #Haskell #FunctionalProgramming

*** 05-Aug-21
+ [[https://project-archive.inf.ed.ac.uk/msc/20204462/msc_proj.pdf][Axiomatic Minkowski spacetime in Isabelle/HOL]]. ~ Richard Schmoetten. #MSc_Thesis #ITP #IsabelleHOL
+ [[https://afp.theoremproving.org/][Archive of Formal Proofs]]. #ITP #IsabelleHOL
+ [[https://github.com/carlinmack/afp][Archive of Formal Proofs redesign]]. ~ Carlin MacKenzie. #ITP #IsabelleHOL

*** 04-Aug-21
+ [[https://github.com/FrickHazard/thomaes-function][Lean proof of Thomaes (popcorn) function]]. ~ Ender Doe. #ITP #LeanProver #Math

*** 03-Aug-21
+ [[https://www.worldscientific.com/doi/pdf/10.1142/9789811236488_0001][Proof and computation: Perspectives for mathematics, computer science, and philosophy]]. ~ Klaus Mainzer. #Logic #Math #CompSci #ITP
+ [[https://www.cs.purdue.edu/homes/bendy/OADT/oadt.pdf][Oblivious Algebraic Data Types]]. ~ Qianchuan Ye, Benjamin Delaware. #ITP #Coq
+ [[https://ryanglscott.github.io/2021/08/01/equality-constraints-in-kinds/][GHC curiosities: Equality constraints in kinds]]. ~ Ryan Scott. #Haskell #FunctionalProgramming

*** 02-Aug-21
+ [[https://www.philipzucker.com/egglog2-monic/][Egglog 2: Automatically proving the pullback of a monic is monic]]. ~ Philip Zucke. #CategoryTheory
+ [[http://www.wouterspekkink.org/academia/writing/tool/doom-emacs/2021/02/27/writing-academic-papers-with-org-mode.html][Writing academic papers with org-mode]]. ~ Wouter Spekkink (@wouterspekkink). #Emacs #OrgMode
+ [[https://morrowm.github.io/posts/2021-08-02-shoes.html][Tying shoes with GADTs]]. ~ MorrowM. #Haskell #FunctionalProgramming

** July 2021

*** 31-Jul-21
+ [[https://www21.informatik.tu-muenchen.de/students/past/interval_newton/assets/newton.pdf][Formalisation of interval methods for nonlinear root-finding]]. ~ Daniel Seidl. #BSc_Thesis #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2107.11838][New algebraic normative theories for ethical and legal reasoning in the LogiKEy framework]]. ~ Ali Farjami. #ITP #IsabelleHOL
+ [[https://dspace.library.uu.nl/handle/1874/403363][The categorical origin of monads in Haskell]]. ~ Marien Matser. #BSc_Thesis #Haskell #FunctionalProgramming #CategoryTheory
+ [[https://analyticsindiamag.com/what-separates-ai-from-an-idiot-savant-is-common-sense-hector-levesque/][What separates AI from an idiot savant is common sense: Hector Levesque]]. #AI #KRR
+ [[https://mathscholar.org/2021/07/computer-theorem-prover-verifies-sophisticated-new-result/][Computer theorem prover verifies sophisticated new result]]. ~ David H Bailey. #ITP #ATP #Math #AI

*** 30-Jul-21
+ [[https://arxiv.org/abs/2107.14044][Ethical AI for Social Good]]. ~ Ramya Akula, Ivan Garibay. #AI
+ [[https://www.foxhound.systems/blog/composable-data-validation/][Composable data validation with Haskell]]. ~ Ben Levy, Christian Charukiewicz. #Haskell #FunctionalProgramming
+ [[https://blog.sumtypeofway.com/posts/ode-to-a-streaming-bytestream.html][Ode to a streaming ByteString (Or: lazy I/O without shooting yourself in the foot)]]. ~ Patrick Thomson. #Haskell #FunctionalProgramming
+ [[https://coot.me/posts/containers-strict-foldr.html][Strictness of foldr' from containers]]. ~ Marcin Szamotulski (@me_coot). #Haskell #FunctionalProgramming
+ [[https://easychair.org/publications/preprint/k1hv][Formalization of Gambler’s Ruin Problem in Isabelle/HOL]]. ~ Zibo Yang. #ITP #IsabelleHOL #Math
+ [[https://easychair.org/publications/preprint/XmvS][Formalization of RBD-based Cause Consequence Analysis in HOL]]. ~ Mohamed Abdelghany, Sofiene Tahar. #ITP #HOL4
+ [[https://easychair.org/publications/preprint/gGb9][Inductive Benchmarks for Automated Reasoning]]. ~ Márton Hajdu, Petra Hozzová, Laura Kovács, Johannes Schoisswohl, Andrei Voronkov. #ATP
+ [[https://easychair.org/publications/preprint/sD76][Formalizing the Gromov-Hausdorff Space]]. ~ Sébastien Gouëzel. #ITP #LeanProver #Math
+ [[https://easychair.org/publications/preprint/38w1][Formalizing rotation number and its properties in Lean]]. ~ Yury Kudryashov. #ITP #LeanProver #Math
+ [[https://easychair.org/publications/preprint/mC9X][Scalar actions in Lean's Mathlib]]. ~ Eric Wieser. #ITP #LeanProver #Math

*** 29-Jul-21
+ [[http://flaviomoura.info/files/fmm21.pdf][A formalization of the (compositional) Z property]]. ~ Flávio L. C. de Moura,a Leandro O. Rezende. #ITP #Coq
+ [[http://flaviomoura.info/files/reportZtoConfl.pdf][Confluence via the Z property in Coq]]. ~ Flávio L. C. de Moura, Leandro O. Rezende. #ITP #Coq
+ [[https://arxiv.org/abs/2107.13509][The who in explainable AI: How AI background shapes perceptions of AI explanations]]. ~ Upol Ehsan, Samir Passi, Q. Vera Liao, Larry Chan, I-Hsiang Lee, Michael Muller, Mark O. Riedl. #AI #XAI
+ [[http://www.cse.chalmers.se/research/group/logic/TypesSS05/Extra/wiedijk_2.pdf][The QED Manifesto]]. #ATP #ITP
+ [[https://www.quantamagazine.org/lean-computer-program-confirms-peter-scholze-proof-20210728/][Proof assistant makes jump to big-league Math]]. ~ Kevin Hartnett (@KSHartnett). #ITP #LeanProver #Math
+ [[https://www.researchgate.net/publication/353208312_Integrating_an_Automated_Prover_for_Projective_Geometry_as_a_New_Tactic_in_the_Coq_Proof_Assistant][Integrating an automated prover for projective geometry as a new tactic in the Coq proof assistant]]. ~ Nicolas Magaud. #ITP #Coq #Math
+ [[https://www.researchgate.net/publication/353526866_Is_computer_algebra_ready_for_conjecturing_and_proving_geometric_inequalities_in_the_classroom][Is computer algebra ready for conjecturing and proving geometric inequalities in the classroom?]] ~ Zoltán Kovács, Tomás Recio, Robert Vajda, M. Pilar Vélez. #GeoGebra #Math
+ [[https://www.researchgate.net/profile/Zoltan-Kovacs-3/publication/353466393_Is_computer_algebra_ready_for_conjecturing_and_proving_geometric_inequalities_in_the_classroom/links/60ff0d602bf3553b29142ca4/Is-computer-algebra-ready-for-conjecturing-and-proving-geometric-inequalities-in-the-classroom.pdf?origin=homeFeed_download&_iepl%5BactivityId%5D=1396227761647622&_iepl%5BactivityTimestamp%5D=1627257600&_iepl%5BactivityType%5D=person_publish_publication&_iepl%5Bcontexts%5D%5B0%5D=homeFeed&_iepl%5BrecommendationActualVariant%5D=&_iepl%5BrecommendationDomain%5D=&_iepl%5BrecommendationScore%5D=&_iepl%5BrecommendationTargetActivityCombination%5D=&_iepl%5BrecommendationType%5D=&_iepl%5BfeedVisitIdentifier%5D=&_iepl%5BpositionInFeed%5D=11&_iepl%5BsingleItemViewId%5D=KUZ4i5ThvdxaoZf1ctK2jh1s&_iepl%5BviewId%5D=mkX7HMc1c9d9Y7Hyr4ISW4R9&_iepl%5BhomeFeedVariantCode%5D=ncls&_iepl%5B__typename%5D=HomeFeedTrackingPayload&_iepl%5BinteractionType%5D=publicationDownload&_iepl%5BtargetEntityId%5D=PB%3A353466393][Is computer algebra ready for conjecturing and proving geometric inequalities in the classroom? [Slides]]] ~ Zoltán Kovács, Tomás Recio, Robert Vajda, M. Pilar Vélez. #GeoGebra #Math
+ [[https://link.springer.com/content/pdf/10.1007%2F978-3-030-52200-1_27.pdf][A formalization of properties of continuous functions on closed intervals]]. ~ Yaoshun Fu, Wensheng Yu. #ITP #Coq #Math
+ [[https://github.com/coderfys/Analysis][Formal analysis in Coq]]. #ITP #Coq #Math
+ [[https://raw.githubusercontent.com/mirefek/geo_logic/master/article/geo_logic.pdf][GeoLogic – Graphical interactive theorem prover for Euclidean geometry]]. ~ Miroslav Olsak. #ITP #Logic #Math
+ [[https://github.com/mirefek/geo_logic][GeoLogic: Tool for euclidean geometry aware of logic]]. ~ Miroslav Olsak. #ITP #Logic #Math

*** 27-Jul-21
+ [[https://arxiv.org/abs/2107.11674][Case studies in formal reasoning about lambda-calculus: Semantics, Church-Rosser, standardization and HOAS]]. ~ Lorenzo Gheri, Andrei Popescu. #ITP #IsabelleHOL
+ [[http://www.math.uni-bonn.de/ag/logik/teaching/2021SS/Introduction_Naproche.pdf][An introduction to the Naproche natural language proof checker]]. ~ Peter Koepke. #ITP #IsabelleHOL #Naproche #Logic #Math
+ [[https://www.ps.uni-saarland.de/~hagemeier/files/thesis.pdf][Intuitionistic epistemic logic in Coq]]. ~ Christian Albert Hagemeier. #BSc_Thesis #ITP #Coq #Logic
+ [[https://cacm.acm.org/magazines/2021/8/254304-what-does-saying-that-programming-is-hard-really-say-and-about-whom/fulltext][What does saying that 'Programming is hard' really say, and about whom? ~ Brett A]]. Becker. #Programming

*** 26-Jul-21
+ [[https://gist.github.com/MantasBaksys/5db553021d417b62f33a8c821581498f][Formalization in Lean of IMO 2021 Q1]]. ~ Mantas Baksys. #ITP #LeanProver #Math #IMO
+ [[https://arxiv.org/abs/2107.10988][Formalizing Galois theory (in Lean)]]. ~ Thomas Browning, Patrick Lutz. #ITP #LeanProver #Math
+ [[https://frasertweedale.github.io/blog-fp/posts/2021-07-26-hakyll-without-sources.html][Hakyll how-to: pages without source files]]. ~ Fraser Tweedale (@hackuador). #Haskell #FunctionalProgramming
+ [[https://www.cantorsparadise.com/why-math-is-an-art-not-a-science-94d234cacb76][Why math is an art, not a science]]. ~ Peter Flom. #Math

*** 25-Jul-21
+ [[https://github.com/b-mehta/combinatorics][Combinatorics in Lean]]. ~  Bhavik Mehta. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/056d709743bfc8371400dfbe1b2d4b627d89f6ef/src/model_theory/basic.lean][First-order languages and structures in Lean]]. ~ Aaron Anderson, Jesse Michael Han, Floris van Doorn. #ITP #LeanProver #Logic #Math
+ [[https://github.com/leanprover-community/mathlib/blob/8a0d5e07c88b8b6a36f183e4b1b8d8a4d81f9df8/src/group_theory/complement.lean][Schur–Zassenhaus theorem in Lean]]. ~ Thomas Browning. #ITP #LeanProver #Math
+ [[https://youtu.be/j5RIZAzooAg][Univalence from a computer science point-of-view]]. ~ Dan Licata. #Logic #Math #CompSci
+ [[https://mpodlasin.com/articles/haskell-i][Haskell (The most gentle introduction ever)]]. ~ Mateusz Podlasin (@m_podlasin). #Haskell #FunctionalProgramming
+ [[https://www21.in.tum.de/~wenzelm/papers/romantic.pdf][A comparison of the mathematical proof languages Mizar and Isar]]. ~ Freek Wiedijk, Markus Wenzel. #ITP #Mizar #IsabelleHOL #Isar
+ [[https://www.cs.ru.nl/~freek/notes/mv.pdf][The mathematical vernacular]]. ~ Freek Wiedijk. #ITP #Mizar #IsabelleIsar
+ [[https://github.com/leanprover-community/mathlib/blob/53c830592cc48471c873df6b6ba726b764fcd7f0/src/analysis/convex/krein_milman.lean][The Krein-Milman theorem in Lean]]. ~ Yaël Dillies. #ITP #LeanProver #Math
+ [[https://www.ma.imperial.ac.uk/~buzzard/M4000x_html/M40001/M40001_C1.html][Sets and logic in Lean]]. ~ Kevin Buzzard. #ITP #LeanProver #Logic #Math
+ [[https://www.ma.imperial.ac.uk/~buzzard/M4000x_html/M40001/M40001_C2.html][Functions and equivalence relations in Lean]]. ~ Kevin Buzzard. #ITP #LeanProver #Logic #Math
+ [[https://arxiv.org/abs/0809.1552][A computer verified, monadic, functional implementation of the integral]]. ~ Russell O'Connor, Bas Spitters. #ITP #Coq #Math

*** 24-Jul-21
+ [[https://luctielen.com/posts/static_analysis_using_haskell_and_datalog/][Static analysis using Haskell and Datalog]]. ~ Luc Tielen (@luctielen). #Haskell #FunctionalProgramming
+ [[https://brandonchinn178.github.io/blog/2021/07/23/foralls-in-data-types.html][`forall`s in Data Types]]. ~ Brandon Chinn. #Haskell #FunctionalProgramming

*** 23-Jul-21
+ [[https://github.com/leanprover-community/mathlib/blob/cb21104b83e13a814b913cecc9601f55405bd888/archive/mccune.lean][Every group is a McCune group (in Lean)]]. ~ Bhavik Mehta. #ITP #LeanProver #Math

*** 22-Jul-21
+ [[https://link.springer.com/chapter/10.1007/978-3-030-81685-8_2][Balancing automation and control for formal verification of microprocessors]]. #ITP #ACL2
+ [[https://arxiv.org/abs/2107.10034][Learning theorem proving components]]. ~ Karel Chvalovský, Jan Jakubův, Miroslav Olšák, Josef Urban. #ATP #MachineLearning
+ [[https://arxiv.org/abs/2104.02549][Connecting constructive notions of ordinals in Homotopy Type Theory]]. ~ Nicolai Kraus, Fredrik Nordvall Forsberg, Chuangjie Xu. #HoTT #ITP #Agda #Logic #Math
+ [[https://books.google.es/books?id=NvI4EAAAQBAJ&lpg=PR3&hl=es&pg=PR][Artificial intelligence (A textbook)]]. ~ Charu C. Aggarwal.3#v=onepage&q&f=false #eBook #AI

*** 21-Jul-21
+ [[https://mathematicswithoutapologies.wordpress.com/2021/07/21/announcing-a-new-newsletter-on-mechanizing-mathematics][Announcing a new newsletter on mechanizing mathematics]]. ~ Michael Harris. #ITP #ATP #Math
+ [[https://siliconreckoner.substack.com/about][Silicon Reckoner: an opinionated newsletter about the implications of mechanization of mathematics]]. ~ Michael Harris. #ITP #ATP #Math

*** 20-Jul-21
+ [[http://fmv.jku.at/papers/Fleury-EDA-Challenge-2021.pdf][IsaSAT and Kissat entering the EDA Challenge 2021]]. ~ Mathias Fleury. #ITP #IsabelleHOL #SATSolvers
+ [[https://github.com/impermeable/waterproof][Waterproof: an educational environment for writing mathematical proofs in interactive notebooks]]. #ITP #Coq #Math
+ [[https://pure.tue.nl/ws/portalfiles/portal/174693710/BFP_Jan_Moraal.pdf][Measure theory in Waterproof (Interactive theorem-proving for measure theory in an educational setting)]]. ~ Jan Moraal. #ITP #Coq #Math
+ [[https://www.cs.princeton.edu/~appel/papers/comp-opt-certicoq.pdf][Compositional optimizations for CertiCoq]]. ~ Zoe Paraskevopoulou, John M. Li, Andrew W. Appel. #ITP #Coq
+ [[https://hal.archives-ouvertes.fr/tel-03286314/document][Noetherian induction for computer-assisted first-order reasoning]]. ~ Sorin Stratulat. #ITP #Coq #Logic #Math
+ [[https://eprints.ucm.es/id/eprint/66943/1/BLAZQUEZ%20SABORIDO%2069815_JORGE_BLAZQUEZ_SABORIDO_Verificacion_de_estructuras_de_datos_enlazadas_en_Dafny_784051_493349558%20%281%29.pdf][Verification of linked data structures in Dafny]]. ~ Jorge Blázquez Saborido. #TFG #ATP #SMT #Dafny
+ [[https://rpeszek.github.io/posts/2021-07-18-prob-tree-scheme.html][Probability tree diagrams. Recursion schemes. Why finding the right solution is sometimes hard?]] ~ Robert Peszek. #Haskell #FunctionalProgramming
+ [[http://ocramz.github.io/haskell/automatic-differentiation/2021/07/19/ad-delcont.html][Purely-functional reverse-mode automatic differentiation with delimited continuations]]. ~ Marco Zocca (@ocramz_yo). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2107.08821][Proceedings of ICML 2021 workshop on theoretic foundation, criticism, and application trend of explainable AI]]. #AI #MachineLearning #XAI

*** 19-Jul-21
+ [[https://lucidmanager.org/productivity/publishing-with-org-mode-export/][Publishing articles and books with Org Mode export]]. ~ Peter Prevos (@pprevos). #Emacs #OrgMode #LaTeX

*** 18-Jul-21
+ [[https://github.com/leanprover-community/mathlib/blob/master/src/combinatorics/hales_jewett.lean][The Hales-Jewett theorem (in Lean)]]. ~ David Wärn. #ITP #LeanProver #Math
+ [[https://www.genbeta.com/herramientas/emacs-editor-texto-libre-vocacion-sistema-operativo-sus-extensiones-usadas-suplen-toda-clase-aplicaciones][Emacs, el editor de texto libre con vocación de sistema operativo: sus 'extensiones' más usadas suplen toda clase de aplicaciones]]. ~ Marcos Merino (@MarcosMerino_B). #Emacs
+ [[https://forkast.news/video-audio/watch-charles-hoskinson-co-founder-of-ethereum-and-iohk-on-why-cardano-is-a-better-platform-part-i-2-2/][Of all the programming languages in the world, why Haskell? ~ Charles Hoskinson]]. #Haskell #FunctionalProgramming #Cardano
+ [[https://github.com/manateelazycat/emacs-application-framework][Emacs Application Framework (EAF)]]. #Emacs

*** 17-Jul-21
+ [[https://arxiv.org/abs/2107.05225][Incremental vulnerability detection via back-propagating symbolic execution of insecurity separation logic]]. ~ Toby Murray, Pengbo Yan, Gidon Ernst. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2107.05493][Integrating an automated prover for projective geometry as a new tactic in the Coq proof assistant]]. ~ Nicolas Magaud. #ITP #Coq #Math
+ [[https://dione.lib.unipi.gr/xmlui/bitstream/handle/unipi/13557/AI_MSc_Thesis_EiriniVandorou.pdf][Reasoning on figures of theoretical geometry theorems]]. ~ Eirini Vandorou. #MSc_Thesis #Clojure #FunctionalProgramming #Prolog #LogicProgramming #Math
+ [[https://www.parsonsmatt.org/2021/07/16/hspec_hooks.html][Hspec hooks]]. ~ Matt Parsons (@mattoflambda). #Haskell #FunctionalProgramming
+ [[https://i.cs.hku.hk/~bruno/papers/icfp2021.pdf][Distributing intersection and union types with splits and duality (Functional pearl)]]. ~ Xuejing Huang, Bruno C.D.S. Oliveira. #Haskell #FunctionalProgramming
+ [[https://mally.stanford.edu/Papers/logicism.pdf][A defense of logicism]]. ~ Hannes Leitgeb, Uri Nodelman, Edward N. Zalta. #Logic #Math

*** 16-Jul-21
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.1][Facilitating meta-theory reasoning]]. ~ Giselle Reis. #Logic #CompSci #SELLF #TATU #QUATI #OCaml #FunctionalProgramming
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.2][Touring the MetaCoq project]]. ~ Matthieu Sozeau. #ITP #Coq
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.4][Automating induction by reflection]]. ~ Johannes Schoisswohl, Laura Kovács. #ATP #Logic
+ [[https://repositum.tuwien.at/handle/20.500.12708/16472][Automated induction by reflection]]. ~ Johannes Schoisswohl. #MSc_Thesis #ATP #Logic
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.5][Countability of inductive types formalized in the object-logic level]]. ~ Qinxiang Cao, Xiwei Wu. #ITP #Coq
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.6][SMLtoCoq: Automated generation of Coq specifications and proof obligations from SML programs with contracts]]. ~ Laila El-Beheiry, Giselle Reis, Ammar Karkour. #ITP #Coq #SML #FunctionalProgramming
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2021.7][Systematic translation of formalizations of type theory from intrinsic to extrinsic style]]. ~ Florian Rabe, Navid Roux. #MMT #LogicalFramework
+ [[https://arxiv.org/abs/2107.07373][A reinforcement learning environment for mathematical reasoning via program synthesis]]. ~ Joseph Palermo, Johnny Ye, Alok Singh. #AI #MachineLearning #Math
+ [[https://arxiv.org/abs/2107.07045][Explainable AI: current status and future directions]]. ~ Prashant Gohel, Priyanka Singh, Manoranjan Mohanty. #XAI #AI #MachineLearning
+ [[https://cuddly-octo-palm-tree.com/posts/2021-07-11-cwafi-4/][Cheap interpreter, part 4: stack machines]]. ~ Gary Verhaegen. #Haskell #FunctionalProgramming
+ [[https://blog.kalvad.com/haskell-series-part-1/][Haskell series part 1]]. ~ Pierre Guillemot (@hnb_02). #Haskell #FunctionalProgramming
+ [[https://www.parsonsmatt.org/2021/07/12/template_haskell_performance_tips.html][Template Haskell performance tips]]. ~ Matt Parsons. #Haskell #FunctionalProgramming
+ [[http://libros.csic.es/product_info.php?cPath=164&products_id=1493&PHPSESSID=ccd9b6102a86d43bb8272bb1de415d03][Artificial Intelligence, Robotics & Data Science (CSIC Scientific Challenges: Towards 2030, Volume 11)]]. #AI #DataScience #MachineLearning

*** 15-Jul-21
+ [[https://blog.desdelinux.net/copilot-el-asistente-de-ai-de-github-recibio-fuertes-criticas-de-la-comunidad-open-source][Copilot, el asistente de AI de GitHub recibió fuertes críticas de la comunidad open source]]. ~ Darkcrizt. #AI #Copilot #Programación
+ [[https://cacm.acm.org/careers/253975-hrs-role-in-understanding-and-mitigating-ai-bias/fulltext][HR's role in understanding and mitigating AI bias]]. ~ Laura Baldwin. #AI
+ [[https://stopachka.essay.dev/post/5/risp-in-rust-lisp][(Risp (in (Rust) (Lisp)))]]. ~ Stepan Parunashvili (@stopachka). #Rust #Lisp
+ [[https://www.fotonixx.com/posts/rust-fizzbuzz/][Writing an (overly) idiomatic Fizzbuzz with Rust]]. ~ Ryan Frazier. #RustLang
+ [[https://arxiv.org/abs/2007.00752][Is Rust used safely by software developers?]] ~ Ana Nora Evans, Bradford Campbell, Mary Lou Soffa. #RustLang
+ [[https://neptune.ai/blog/explainability-auditability-ml-definitions-techniques-tools][Explainability and auditability in ML: Definitions, techniques, and tools]]. ~ Ejiro Onose. #AI #MachineLearning #XAI
+ [[https://pure.tue.nl/ws/portalfiles/portal/174690614/Final_thesis_Cottaar.pdf][Reinforcement learning for interactive theorem proving (Creating an artificial student)]]. ~ Jolijn Cottaar. #ITP #Coq #MachineLearning
+ [[https://is.muni.cz/th/zedur/Game_development_in_Haskell_Archive.pdf][Game development in Haskell]]. ~ Jan Rychlý. #BSc_Thesis #Haskell #FunctionalProgramming

*** 14-Jul-21
+ [[https://drops.dagstuhl.de/opus/frontdoor.php?source_opus=13914][A mechanised proof of the time invariance thesis for the weak call-by-value λ-calculus]]. ~ Yannick Forster, Fabian Kunze, Gert Smolka, Maximilian Wuttke. #ITP #Coq #CompSci
+ [[https://arxiv.org/abs/2107.06015][A classification of artificial intelligence systems for mathematics education]]. ~ Steven Van Vaerenbergh, Adrián Pérez-Suay. #AI #Math
+ [[https://youtu.be/XspZEqNl6Wo][GHC: Dependency analysis of Haskell declarations]]. ~ Artyom Kuznetsov. #Haskell #FunctionalProgramming
+ [[https://www.isa-afp.org/entries/Finitely_Generated_Abelian_Groups.html][Finitely generated abelian groups (in Isabelle/HOL)]]. ~ Joseph Thommes, Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://perso.univ-rennes1.fr/sebastien.gouezel/articles/gromov_hausdorff.pdf][Formalizing the Gromov-Hausdorff space]]. ~ Sébastien Gouëzel. #ITP #LeanProver #Math
+ [[https://www.xixilogic.org/events/wp-content/uploads/2021/07/proceedingsfinal.pd][A flexible approach to argumentation framework analysis using theorem proving]]. ~ David Fuenmayor, Alexander Steen.f#page=26 #ITP #IsabelleHOL
+ [[https://matela.com.br/express.pdf][Express: Applications of dynamically typed Haskell expressions]]. ~ Rudy Matela. #Haskell #FunctionalProgramming
+ [[https://link.springer.com/article/10.1007/s40753-021-00140-1][Learning about proof with the theorem prover Lean: the abundant numbers task]]. ~ Athina Thoma, Paola Iannone. #ITP #LeanProver #Math

*** 12-Jul-21
+ [[https://www.extrema.is/articles/haskell-books][Haskell books: a tagged index of English books related to the Haskell programming language]]. ~ Travis Cardwell. #Haskell #FunctionalProgramming

*** 11-Jul-21
+ [[https://arxiv.org/abs/2107.02353][General automation in Coq through modular transformations]]. ~ Valentin Blot, Louise Dubois de Prisque, Chantal Keller, Pierre Vial. #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/14256/ ][Synthetic undecidability of MSELL via FRACTRAN mechanised in Coq]]. ~ Dominique Larchey-Wendling. #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/14260/pdf/LIPIcs-FSCD-2021-22.pdf][Type-theoretic constructions of the final coalgebra of the finite powerset functor]]. ~ Niccolò Veltri. #ITP #Agda
+ [[https://arxiv.org/abs/2107.02354][Alethe: Towards a generic SMT proof format]]. ~ Hans-Jörg Schurr, Mathias Fleury, Haniel Barbosa, Pascal Fontaine. #ATP #SMT
+ [[http://www.cse.chalmers.se/~jomoa/papers/VPT21QuickSpec.pdf][Conjectures, tests and proofs: An overview of theory exploration]]. ~ Moa Johansson, Nicholas Smallbone. #Haskell #FunctionalProgramming #QuickSpec
+ [[https://arxiv.org/abs/2107.02352][A framework for proof-carrying logical transformations]]. ~ Quentin Garchery. #FunctionalProgramming #OCaml #Why3

*** 10-Jul-21
+ [[https://link.springer.com/content/pdf/10.1007%2F978-3-030-79876-5.pd][Isabelle’s metalogic: Formalization and proof checker]]. ~ Tobias Nipkow, Simon Roßkopf.f#page=104 #ITP #IsabelleHOL
+ [[https://link.springer.com/content/pdf/10.1007%2F978-3-030-79876-5.pd][Reliable reconstruction of fine-grained proofs in a proof assistant]]. ~ Hans-Jörg Schurr, Mathias Fleury, Martin Desharnais.f#page=459 #ATP #SMT #ITP #IsabelleHOL
+ [[https://link.springer.com/content/pdf/10.1007%2F978-3-030-79876-5.pd][The Isabelle/Naproche natural language proof assistant]]. ~ Adrian De Lon et als.f#page=619 #ITP #IsabelleHOL
+ [[https://leanprover-community.github.io/mathlib_docs/computability/turing_machine.html][Turing machines in Lean]]. ~ Mario Carneiro et als. #ITP #LeanProver #CompSci
+ [[https://www.tweag.io/blog/2021-07-08-linear-traversable/][Exploring linear Traversable using generics]]. ~ Sjoerd Visscher. #Haskell #FunctionalProgramming
+ [[https://bdtechtalks.com/2021/07/05/openai-github-gpt-3-copilot/][What OpenAI and GitHub’s "AI pair programmer" means for the software industry]]. ~ Ben Dickson. #AI #Programming #Copilot
+ [[https://cacm.acm.org/news/253847-using-ai-to-drill-down-in-physics/fulltext][Using AI to Drill Down in Physics]]. ~ Bennie Mols. #AI
+ [[https://www.microsiervos.com/archivo/matematicas/matematicas-dinamicas-visualizaciones-codigo-abierto.html][Matemáticas dinámicas: estupendas visualizaciones a partir de código abierto]]. ~ @Alvy. #Matemáticas #Computación
+ [[https://www.dynamicmath.xyz/][Dynamic mathematics (Interactive mathematical applets & animations)]]. ~ Juan Carlos Ponce. #Math
*** 09-Jul-21
+ [[https://raw.githubusercontent.com/sofsanfer/TFM/main/output/document.pdf][Formalización del teorema de existencia de modelo en Isabelle/HOL]]. ~ Sofı́a Santiago Fernández. #TFM #ITP #IsabelleHOL #Lógica #Matemática
+ [[https://www.lix.polytechnique.fr/iwc2021/IWC2021_proceedings.pdf#page=29][Formalized signature extension results for confluence, commutation and unique normal forms]]. ~ A. Lochmann, F. Mitterwallner, A. Middeldorp. #ITP #IsabelleHOL
+ [[http://fitelson.org/walsh.pdf][Answers to some open questions of Ulrich & Meredith]]. ~ Matthew Walsh, Branden Fitelson. #ATP #Otter #Logic #Math
+ [[https://www.isa-afp.org/entries/SpecCheck.html?utm_source=dlvr.it&utm_medium=twitter][SpecCheck: Specification-based testing for Isabelle/ML]]. ~ Kevin Kappelmann, Lukas Bulwahn. #ITP #IsabelleHOL
+ [[https://media.suub.uni-bremen.de/bitstream/elib/4986/4/Dissertation_Bornebusch.pdf][Coq meets CλaSH (Proposing a hardware design synthesis flow that combines proof assistants with functional hardware description languages)]]. ~ Fritjof Bornebusch. #PhD_Thesis #ITP #Coq
+ [[https://utmsjoe.mk/files/Vol.12.No.1/3.MODELS_FOR_SOFTWARE_VERIFICATION_PROVING_PROGRAM_CORRECTNESS.pdf][Models for software verification: Proving program correctness]]. ~ Boro Sitnikovski, Lidija Goracinova-Ilieva, Biljana Stojcevska. #FormalVerification #Coq #Dafny
+ [[http://ksiresearch.org/seke/seke21paper/paper047.pdf][Using LSTM to predict tactics in Coq]]. ~ X. Luan, X. Zhang, M. Sun. #ITP #Coq #MachineLearning #NeuralNetwork
+ [[https://arxiv.org/abs/2107.01883][A theory of higher-order subtyping with type intervals]]. ~ Sandro Stucki, Paolo G. Giarrusso. #ITP #Agda
+ [[https://bit.ly/3AO50OI][Curry-Howard correspondence: An intuitive language for mathematics]]. ~ Xiao Tan. #MSc_Thesis #Logic #CompSci
+ [[https://www.ams.org/journals/notices/202106/rnoti-p930.pdf][Practical suggestions for mathematical writing]]. ~ R. Bell, B. Kadets, P. Srinivasan, N. Triantafillou, I. Vogt. #Math

*** 07-Jul-21
+ [[https://odr.chalmers.se/bitstream/20.500.12380/302935/1/CSE%2021-74%20Engsmyre%20Wikstr%c3%b6m.pdf][Complementing the digital programming tutor Ask-Elle with program synthesis]]. ~ Gustav Engsmyre, Karl Wikström. #MSc_Thesis #Haskell #FunctionalProgramming

*** 06-Jul-21
+ [[https://github.com/FredericLeRoux/LEAN_ESPACES_METRIQUES][Code Lean contenant les preuves d'un cours standard sur les espaces métriques]]. ~  Frederic Le Roux. #ITP #LeanProver #Math
+ [[https://mmhaskell.com/blog/2021/7/5/function-application-using-the-dollar-sign-][Function application: Using the dollar sign ($)]]. ~ James Bowen (@james_OWA). #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/introduction-to-template-haskell][A brief introduction to Template Haskell]]. ~ Heitor Toledo Lassarote de Paula. #Haskell #FunctionalProgramming
+ [[https://cacm.acm.org/news/253785-will-ai-rewrite-coding/fulltext][Will AI rewrite coding?]] ~ Samuel Greengard. #AI

*** 05-Jul-21
+ [[https://exlean.org/groups-i/][Groups I]]. Omar Harhara. #ITP #LeanProver #Math
+ [[https://www.iiia.csic.es/sat2021/program/Slides39.pdf][Chinese remainder encoding for hamiltonian cycles [Slides]]]. ~ Marijn Heule. #ATP #SATSolvers #Math
+ [[https://www.iiia.csic.es/sat2021/program/Presentation39.mp4][Chinese remainder encoding for hamiltonian cycles [Video]]]. ~ Marijn Heule. #ATP #SATSolvers #Math
+ [[https://www.iiia.csic.es/sat2021/program/Slides48.pdf ][DiMo: Discrete modelling using propositional logic [Slides]]]. ~ Norbert Hundeshagen, Martin Lange and Georg Siebert. #Logic #Math
+ [[https://www.iiia.csic.es/sat2021/program/Presentation48.mp4][DiMo: Discrete modelling using propositional logic [Video]]]. ~ Norbert Hundeshagen, Martin Lange and Georg Siebert. #Logic #Math
+ [[https://dumbarton.fm.cs.uni-kassel.de/assets/manual/DiMoManual_v0.2.2.pdf][DiMo: A tool for discrete modelling using propositional logic (version 0]].2.2). ~ Martin Lange. #Logic #Math
+ [[https://repository.tudelft.nl/islandora/object/uuid:989e34ff-c81f-43ba-a851-59dca559ab90/datastream/OBJ/download][Verifying correctness of Haskell programs using the programming language Agda and framework agda2hs]]. ~ Dixit Sabharwal, Jesper G.H. Cockx, Lucas F.B. Escot. #ITP #Agda #Haskell #FunctionalProgramming
+ [[https://www.itl.waw.pl/czasopisma/JTIT/2021/2/107.pdf][Security verification in the context of 5G sensor networks]]. ~ Piotr Remlein, Urszula Stachowiak. #Haskell #FunctionalProgramming
+ [[https://repository.tudelft.nl/islandora/object/uuid:5f308592-49ac-4395-985c-77f8c48a52f2/datastream/OBJ/download][Deriving a symbolic executor for definitional interpreters suitable for the study of heuristics]]. ~ Laura-Ana Pîrcalaboiu, Casper Bach Poulsen, Cas van der Rest. #Haskell #FunctionalProgramming
+ [[https://gopiandcode.uk/logs/log-certified-synthesis.html][Goodbye C developers: The future of programming with certified program synthesis]]. ~ Kiran Gopinathan (@Gopiandcoshow). #ITP #Coq
+ [[https://ilyasergey.net/assets/pdf/papers/certisuslik-icfp21.pdf][Certifying the synthesis of heap-manipulating programs]]. ~ Y. Watanabe, K. Gopinathan, George Pîrlea, Nadia Polikarpova, I. Sergey. #ITP #Coq

*** 03-Jul-21
+ [[https://costa.fdi.ucm.es/wst2021/WST2021_proceedings.pd][Formalizing higher-order termination in Coq]]. ~ Deivid Vale, Niels van der Weide.f#page=71 #ITP #Coq
+ [[https://hal.inria.fr/hal-03274013/document][Formalization of a sign determination algorithm in real algebraic geometry]]. ~ Cyril Cohen. #ITP #Coq #Math
+ [[https://www.cs.bham.ac.uk/%7emhe/agda-new/CantorSchroederBernstein.html][The Cantor-Schröder-Bernstein for homotopy types, or ∞-groupoids, in Agda]]. ~ Martin Escardo. #ITP #Agda #Logic #Math
+ [[https://link.springer.com/article/10.1007/s40062-021-00284-6][The Cantor–Schröder–Bernstein Theorem for ∞-groupoids]]. ~ Martin Escardo. #Logic #Math
+ [[https://repository.tudelft.nl/islandora/object/uuid:2c32c354-42e4-466e-9869-b7c68b4388ec/datastream/OBJ/download][Practical verification of the Haskell ranged-sets library]]. ~ Ioana Savu, Jesper Cockx, Lucas Escot. #ITP #Agda #Haskell #FunctionalProgramming
+ [[https://repository.tudelft.nl/islandora/object/uuid:065b9e87-43e5-4e3c-8e37-04f1b50c8cf7/datastream/OBJ/download][Producing a verified implementation of sequences using agda2hs]]. ~ Shashank Anand, Jesper Cockx, Lucas Escot. #ITP #Agda #Haskell #FunctionalProgramming
+ [[https://raw.githubusercontent.com/barry-jay-personal/tree-calculus/master/tree_book.pdf][Reflective programs in tree calculus]]. ~ Barry Jay (@Jay59009444). #eBook #ITP #Coq
+ [[https://github.com/barry-jay-personal/tree-calculus][Proofs in Coq for the book "Reflective programs in tree calculus"]]. ~ Barry Jay (@Jay59009444). #ITP #Coq
+ [[https://webspace.science.uu.nl/~swier004/publications/2010-fundamentae-informatica.pdf][A tutorial implementationof a dependently typed lambda calculus]]. ~ Andres Löh, Conor McBride, Wouter Swierstra. #ITP #Agda
+ [[https://youtu.be/tYqbbRsx8DI][Formalising contemporary mathematics in simple type theory]]. ~ Lawrence Paulson. #ITP #IsabelleHOL #Math

*** 02-Jul-21
+ [[https://arxiv.org/abs/2104.12224v1][Isabelle's metalogic: Formalization and proof checker]]. ~ Tobias Nipkow, Simon Roßkopf. #ITP #IsabelleHOL
+ [[https://rpeszek.github.io/posts/2021-06-28-polysemy-arrows.html][Arming polysemy with Arrows]]. ~ Robert Peszek. #Haskell #FunctionalProgramming
+ [[http://www.jerf.org/iri/post/2958][Functors and monads for people who have read too many "Tutorials"]]. ~ Jeremy Bowers. #Haskell #FunctionalProgramming

** June 2021

*** 30-Jun-21
+ [[https://www.sciencedirect.com/science/article/pii/S2352220821000626][A Perron–Frobenius theorem for deciding matrix growth]]. ~ RenéThiemann. #ITP #IsabelleHOL #Math
+ [[https://yfu.tw/publication/cav21-coq-qfbv/cav21-coq-qfbv.pdf][CoqQFBV: A scalable certified SMT quantifier-free bit-vector solver]]. ~ Xiaomu Shi et als. #ITP #Coq
+ [[http://www.ccas.ru/ca/_media/ca-2021.pd][On a machine-checked proof for an optimized method to multiply polynomials]]. ~ S.D. Meshveliani.f#page=88 #ITP #Agda #Math
+ [[https://www.researchgate.net/profile/Hester-Breman/publication/350607318_Augmenting_the_human_mathematician/links/608bc486a6fdccaebdf9063e/Augmenting-the-human-mathematician.pdf][Augmenting the human mathematician]]. ~ H.K. Sørensen, M.W. Johansen, R. Hoekzema, H. Breman. #ITP #ATP #Math
+ [[https://arxiv.org/abs/1905.13100][Towards finding longer proofs]]. ~ Zsolt Zombori, Adrián Csiszárik, Henryk Michalewski, Cezary Kaliszyk, Josef Urban. #ATP #MachineLearning
+ [[https://cdsmithus.medium.com/towers-of-hanoi-from-a-random-start-db22d09da027][Towers of Hanoi from a random start]]. ~ Chris Smith (@cdsmithus). #Haskell #FunctionalProgramming

*** 29-Jun-21
+ [[https://exlean.org/well-founded-recursion/][Well-founded recursion]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math

*** 28-Jun-21
+ [[https://hal.inria.fr/inria-00139131v2/document][A modular formalisation of finite group theory]]. ~ Georges Gonthier, Assia Mahboubi, Laurence Rideau, Enrico Tassi, LaurentThéry. #ITP #Coq #Math
+ [[https://siddhartha-gadgil.github.io/automating-mathematics/posts/sat-prover-lean/][SAT solver-prover in Lean 4]]. ~ Siddhartha Gadgil. #ITP #LeanProver #Logic
+ [[http://siddhartha-gadgil.github.io/ProvingGround/][ProvingGround: Automated Theorem proving by learning]]. ~ Siddhartha Gadgil. #ITP #LeanProver #MachineLearning
+ [[http://siddhartha-gadgil.github.io/presentations/KWK-AutoMath.htm][Automating Mathematics? ~ Siddhartha Gadgil]].l#/ #Math #ATP #ITP #AI
+ [[http://math.iisc.ac.in/~gadgil/SMTGeom.pdf][Euclidean geometry by high-performance solvers? ~ Siddhartha Gadgil, Anand Tadipatri]]. #Math #ATP #SAT #SMT
+ [[http://www.contrib.andrew.cmu.edu/~avigad/Students/serafin_thesis.pdf][A formally verified proof of the central limit theorem]]. ~ Luke Serafin. #PhD_Thesis #ITP #IsabelleHOL #Math
+ [[http://www.contrib.andrew.cmu.edu/~avigad/Students/wu_thesis.pdf][A formally verified proof of Kruskal’s tree theorem in Lean]]. ~ Minchao Wu. #ITP #LeanProver #Math

*** 27-Jun-21
+ [[https://dodisturb.me/posts/2021-06-27-Typed-Programs-Dont-Leak-Data.html][Typed programs don't leak data]]. ~ Mistral Contrastin. #Haskell #FunctionalProgramming
+ [[https://youtu.be/yLw5j-4-aEE][Historia de desafíos matemáticos]]. Cómo ganar un millón de dólares. ~ Antonio Pérez (@aperezsanz). #Matemáticas vía @manuel_de_leon

*** 26-Jun-21
+ [[https://bit.ly/3AboKvE][La prova del software (in Italian)]]. ~ Riccardo Brasca et als. #ITP #LeanProver #Math
+ [[https://philpapers.org/archive/DETGFA.pdf][Groundwork for a fallibilist account of Mathematics]]. ~ Silvia De Toffoli. #Math
+ [[https://morrowm.github.io/posts/2021-06-26-assoc.html][Associated types in two different ways]]. #Haskell #FunctionalProgramming

*** 25-Jun-21
+ [[https://bit.ly/3h3jXDD][Creación artística y creación matemática]]. ~ Juan Arias de Reyna. #Matemáticas #ITP #LeanProver
+ [[http://abstract.ups.edu/index.html][Abstract algebra: Theory and applications]]. ~ Thomas W. Judson et als. #eBook #Math #Sage
+ [[http://antoniobehn.cl/cursillo2017/][Taller de Sage]]. ~ Antonio Behn. #Sage #Matemáticas
+ [[https://www.isa-afp.org/entries/MiniSail.html][MiniSail: A kernel language for the ISA specification language SAIL in Isabelle/HOL]]. ~ Mark Wassell. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Public_Announcement_Logic.html][Public announcement logic (in Isabelle/HOL)]]. ~ Asta Halkjær From (@astahfrom). #ITP #IsabelleHOL
+ [[http://people.compute.dtu.dk/ahfrom/Formalizing%20Epistemic%20Logic.pdf][Formalized soundness and completeness of epistemic logic]]. ~ Asta Halkjær From (@astahfrom) et als. #Logic #ITP #IsabelleHOL
+ [[https://leanprover-community.github.io/lt2021/slides/paula-LeanTogether2021.pdf][Results in modal and dynamic epistemic logic (A formalization in Lean)]]. ~ Paula Neeley. #Logic #ITP #LeanProver
+ [[https://www.rsme.es/2021/06/hito-de-las-demostraciones-asistidas-por-ordenador-en-nature/][Hito de las demostraciones asistidas por ordenador en Nature]]. ~ Nerea Diez López. #DAO #LeanProver #Matemáticas
+ [[http://endlessparentheses.com/embedding-youtube-videos-with-org-mode-links.html][Embedding Youtube videos with org-mode links]]. ~ Artur Malabarba. #OrgMode #Emacs

*** 24-Jun-21
+ [[https://link.springer.com/content/pdf/10.1007/s42979-020-00417-3.pdf][Verified model checking for conjunctive positive logic]]. ~ Alex Abuin et als. #ITP #Dafny
+ [[https://dl.acm.org/doi/pdf/10.1145/3453483.3454053][CoStar: a verified ALL (*) parser]]. ~ Sam Lasser et als. #ITP #Coq
+ [[https://dl.acm.org/doi/pdf/10.1145/3453483.3454027][Revamping hardware persistency models: view-based and axiomatic persistency models for Intel-x86 and Armv8]]. ~ Kyeongmin Cho et als. #ITP #Coq
+ [[https://elpais.com/ciencia/2021-06-24/las-matematicas-que-estudian-los-limites-de-los-ordenadores.html][Las matemáticas que estudian los límites de los ordenadores]]. ~ Daniel Graça, Ágata A. Timón. #Matemáticas #Computación
+ [[http://www.contrib.andrew.cmu.edu/~avigad/Students/zipperer_ms_thesis.pdf][A formalization of elementary group theory in the proof assistant Lean]]. ~ Andrew Zipperer. #ITP #LeanProver #Math
+ [[https://byorgey.wordpress.com/2021/06/24/types-versus-sets-in-math-and-programming-languages/][Types versus sets in math and programming languages]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[http://math.andrej.com/2021/06/24/the-dawn-of-formalized-mathematics/][The dawn of formalized mathematics]]. ~ Andrej Bauer (@andrejbauer). #ITP #Math

*** 23-Jun-21
+ [[https://www.isa-afp.org/entries/Van_der_Waerden.html][Van der Waerden's theorem in Isabelle/HOL]]. ~ Katharina Kreuzer, Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://www.tweag.io/blog/2021-06-23-deconstructing-class/][Deconstructing classes]]. ~ Nicholas Clarke. #Haskell #FunctionalProgramming

*** 22-Jun-21
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13901/pdf/LIPIcs-ITP-2021-6.pdf][A formally verified checker for first-order proofs]]. ~ Seulkee Baek. #ITP #Agda #Logic
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13924/pdf/LIPIcs-ITP-2021-29.pdf][Reaching for the star: Tale of a monad in Coq]]. ~ Pierre Nigron, Pierre-Évariste Dagand. #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13915/pdf/LIPIcs-ITP-2021-20.pdf][Mechanising complexity theory: The Cook-Levin theorem in Coq]]. ~ Lennard Gäher, Fabian Kunze. #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13920/pdf/LIPIcs-ITP-2021-25.pdf][A mechanized proof of the max-flow min-cut theorem for countable networks]]. ~ Andreas Lochbihler. #ITP #IsabelleHOL
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13917/pdf/LIPIcs-ITP-2021-22.pdf][Formalization of basic combinatorics on words]]. ~ Štěpán Holub, Štěpán Starosta. #ITP #IsabelleHOL
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13926/pdf/LIPIcs-ITP-2021-31.pdf][Proof Pearl: Playing with the Tower of Hanoi formally]]. ~ Laurent Théry. #ITP #Coq
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13896/pdf/LIPIcs-ITP-2021-1.pdf][The CakeML project's quest for ever stronger correctness theorems]]. ~ Magnus O. Myreen. #ITP #HOL4
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13911/pdf/LIPIcs-ITP-2021-16.pdf][A natural formalization of the mutilated checkerboard problem in Naproche]]. ~ Adrian De Lon, Peter Koepke, Anton Lorenzen. #ITP #Naproche
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13905/pdf/LIPIcs-ITP-2021-10.pdf][Verified progress tracking for timely dataflow]]. ~ M. Brun, S. Decova, A. Lattuada, D. Traytel. #ITP #IsabelleHOL
+ [[https://github.com/leanprover-community/mathlib/blob/master/src/geometry/euclidean/sphere.lean][Ptolemy’s Theorem in Lean]]. ~ Manuel Candales, Benjamin Davidson. #ITP #LeanProver #Math
+ [[https://cacm.acm.org/magazines/2021/7/253452-formal-software-verification-measures-up/fulltext][Formal software verification measures up]]. ~ Samuel Greengard. #FormalVerification
+ [[https://cacm.acm.org/magazines/2021/7/253448-program-verification/fulltext][Program verification: Vision and reality]]. ~ Moshe Y. Vardi. #FormalVerification
+ [[https://arxiv.org/abs/2106.10966][Consequence relations (An introduction to the Tarski-Lindenbaum method)]]. ~ Alex Citkin, Alexey Muravitsky. #eBook #Logic #Math

*** 21-Jun-21
+ [[https://cj-xu.github.io/abm19/mainzer.pdf][From proof theory to proof assistants (Challenges of responsible software and AI)]]. ~ Klaus Mainzer. #ITP #Coq #AI
+ [[https://www.isa-afp.org/entries/IMP_Compiler.html][A shorter compiler correctness proof for language IMP]]. ~ Pasquale Noce. #ITP #IsabelleHOL
+ [[https://isabelle.systems/conventions/][Isabelle community conventions]]. #ITP #IsabelleHOL
+ [[https://search.isabelle.in.tum.de][FindFacts: Experimental search platform for Isabelle and the AFP]]./# #ITP #IsabelleHOL
+ [[https://isabelle.systems/][Isabelle quick access links]]. #ITP #IsabelleHOL
+ [[https://cdsmithus.medium.com/hmock-first-rate-mocks-in-haskell-e59d7c3b066c][HMock: first rate mocks in Haskell]]. ~ Chris Smith (@cdsmithus). #Haskell #FunctionalProgramming
+ [[https://youtu.be/S0HvfXq3454][A new kind of programming: Tactic metaprogramming in Haskell]]. ~ Sandy Maguire. #Haskell #FunctionalProgramming
+ [[https://youtu.be/n4IgYrc0pes][Testing smart contracts with QuickCheck]]. ~ John Hughes. #Haskell #FunctionalProgramming
+ [[https://youtu.be/wJsXjsCvSPg][Lift unliftable (and unlift liftable)]]. ~ Veronika Romashkina (@vrom911). #Haskell #FunctionalProgramming

*** 20-Jun-21
+ [[https://doisinkidney.com/pdfs/algebras-for-weighted-search.pdf][Algebras for weighted search]]. ~ Donnacha Oisín Kidney, Nicolas Wu. #Haskell #FunctionalProgramming
+ [[https://byorgey.wordpress.com/2021/06/19/competitive-programming-in-haskell-folding-folds/][Competitive programming in Haskell: folding folds]]. ~ Brent Yorgey. #Haskell #FunctionalProgramming
+ [[https://mkdoku.github.io/posts/2021-06-19-molecular-dynamics.html ][Molecular dynamic simulations in Haskell]]. ~ Sascha Bubeck (@SaschaBubeck). #Haskell #FunctionalProgramming

*** 19-Jun-21
+ [[https://www.nature.com/articles/d41586-021-01627-2 ][Mathematicians welcome computer-assisted proof in 'grand unification' theory]]. ~ Davide Castelvecchi. #ITP #LeanProver #Mat
+ [[https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/489454/thesis.pdf?sequence=3][Formal verification of composable security proofs]]. ~ Seyed Reza Sefidgar. #PhDThesis #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2106.07707v1][An alternative axiomatic presentation of Nelson algebras]]. ~ Juan Manuel Cornejo, Andrés Gallardo, Luiz Monteiro, Ignacio Viglizzo. #ATP #Prover9 #Mace4 #Math

*** 17-Jun-21
+ [[https://youtu.be/ikR4T44PT9w][La gran familia de los números]]. ~ Raúl Ibáñez. #Matemáticas
+ [[https://youtu.be/8LUPWXW_6rc][Computer says 'I don't know' (The case for Honest AI)]]. ~ Peter Flach. #AI via @hakankj

*** 15-Jun-21
+ [[https://benjaminselfridge.github.io/haskell/mathematics/2021/06/13/finite-algebra-1.html][Finite abstract algebra in Haskell]]. ~ Ben Selfridge. #Haskell #FunctionalProgramming #Math
+ [[https://www.ps.uni-saarland.de/~koch/bachelor/incompleteness.pdf][Undecidability and incompleteness of second-order logic]]. ~ Mark Koch. #ITP #Cog #Logic #Math
+ [[https://samuelgruetter.net/assets/lightbulb_pldi21.pdf][Integration verification across software and hardware for a simple embedded system]]. ~ A. Erbsen, S. Gruetter, J. Choi, C. Wood, A. Chlipala. #ITP #Coq
+ [[https://www.cis.upenn.edu/~sweirich/papers/spector-zabusky-thesis.pdf][Don’t mind the formalization gap: The design and usage of Hs-to-Coq]]. ~ Antal Spector-Zabusky. #PhD_Thesis #ITP #Coq #Haskell #FunctionalProgramming

*** 14-Jun-21
+ [[https://arxiv.org/abs/2106.05987][Hybrid systems verification with Isabelle/HOL: Simpler syntax, better models, faster proofs]]. ~ Simon Foster, Jonathan Julián Huerta y Munive, Mario Gleirscher, Georg Struth. #ITP #IsabelleHOL

*** 13-Jun-21
+ [[https://micahcantor.xyz/blog/median-heap-haskell][Median heaps in Haskell]]. ~ Micah Cantor. #Haskell #FunctionalProgramming
+ [[https://bit.ly/3xiBmyF][Theorem proving and Artificial Intelligence (A brief introduction)]]. ~ Josef Urban. #ATP #ITP #AI #MachineLearning
+ [[https://bit.ly/3gl4akg][Towards a human-like reasoning system]]. ~ Mateja Jamnik. #ATP #AI
+ [[https://bit.ly/35hF7IB][Mathematical reasoning in humans]]. ~ Jay McClelland. #AI #Math
+ [[https://bit.ly/2RT6ANU][From Hammer to Scalpel: Progress in Automated Theorem Proving]]. ~ Markus Rabe. #ATP #AI
+ [[https://bit.ly/3xlg1EC][Training a first-order theorem prover from synthetic data]]. ~ Vlad Firoiu et als. #ATP #AI #MachineLearning
+ [[https://mathai-iclr.github.io/papers/papers/MATHAI_18_paper.pdf][Training a first-order theorem prover from synthetic data]]. ~ Vlad Firoiu et als. #ATP #AI #MachineLearning
+ [[https://arxiv.org/abs/2102.06203][Proof artifact co-training for theorem proving with language models]]. ~ Jesse Michael Han, Jason Rute, Yuhuai Wu, Edward W. Ayers, Stanislas Polu. #ITP #LeanProver #MachineLearning
+ [[https://bit.ly/3wm5hG3][Neural theorem proving in Lean using proof artifact co-training and language models]]. ~ Jesse Michael Han. #ITP #LeanProver #MachineLearning
+ [[https://youtube.com/playlist?list=PLp2qifo30hMuNgmUUhgl82DTK2JTUqK6M][Video series "Haskell by Example"]]. ~ Michael Oswald. #Haskell #FunctionalProgramming

*** 12-Jun-21
+ [[https://ensiwiki.ensimag.fr/images/2/20/Rapport_cousin_marie.pdf][Formalisation du théorème de décomposition de Hahn avec le démonstrateur interactif Isabelle]]. ~ Marie Cousin. #ITP #IsabelleHOL #Math
+ [[https://drops.dagstuhl.de/opus/volltexte/2021/13884/pdf/LIPIcs-TYPES-2020-5.pdf][Synthetic completeness for a terminating Seligman-Style tableau system]]. ~ Asta Halkjær From. #ITP #IsabelleHOL #Logic #Math
+ [[https://youtu.be/aIObfpWdDbo][Teaching computers about numbers]]. ~ Kevin Buzzard  (@XenaProject). #ITP #LeanProver #Math
+ [[http://www.cse.unsw.edu.au/~crizkallah/theses/harrison-scott-honours-thesis.pdf][Towards a verified compiler from Cogent to LLVM]]. ~ Harrison Jay Scott. #BsC_Thesis #ITP #Coq
+ [[https://www.cse.chalmers.se/~abela/agda/MultiSortedAlgebra.pdf][Birkhoff's completeness theorem for multi-sorted algebras formalized in Agda]]. ~ Andreas Abel. #ITP #Agda #Math
+ [[https://www.cs.bham.ac.uk/~txw467/lics21.pdf][Global optimisation with constructive reals]]. ~ Dan R. Ghica, odd Waugh Ambridge. #ITP #Agda #Math
+ [[https://tonyday567.github.io/posts/avoid/][Haskell and the elegant attack]]. ~ Tony Day (@tonyday567). #Haskell #FunctionalProgramming
+ [[https://youtu.be/bwI3MSWQ-po][Demostración del teorema de Cantor-Schröder-Bernstein]]. ~ Urtzi Buijs (@archimedestub). #Matemáticas
+ [[https://rebeccaskinner.net/posts/2021-06-09-getting-to-the-fixed-point.html][The fixed point]]. ~ Rebecca Skinner. #Haskell #FunctionalProgramming

*** 11-Jun-21
+ [[https://exlean.org/blog/][What the rec? Types dependent on terms, Lean eliminators, and threshold concepts]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver
+ [[https://www.softwarefactory-project.io/practical-haskell-use-cases.html][Practical Haskell use cases]]. #Haskell #FunctionalProgramming
+ [[https://marcosh.github.io/post/2021/06/04/introducing-haskell-in-soisy.html][Introducing Haskell in Soisy]]. ~ Marco Perone. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2106.05784][Programming puzzles]]. ~ Tal Schuster, Ashwin Kalyan, Oleksandr Polozov, Adam Tauman Kalai. #Programming #Python
+ [[https://github.com/microsoft/PythonProgrammingPuzzles][Python Programming Puzzles (P3)]]. #Programming #Python
+ [[https://www.lemonde.fr/blog/binaire/2021/06/11/des-bibliotheques-aux-logiciels-une-histoire-damour/][Des bibliothèques aux logiciels: une histoire d’amour!]] ~ Sabrina Granger. #Programming
+ [[https://youtu.be/6otIuI89fcU][Jornada sobre Inteligencia Artificial de los Institutos de Investigación de la Universidad de Zaragoza]]. #IA

*** 10-Jun-21
+ [[https://link.springer.com/content/pdf/10.1007%2Fs10817-020-09584-7.pdf][Certified quantum computation in Isabelle/HOL]]. ~ Anthony Bordg, Hanna Lachnitt, Yijun He. #ITP #IsabelleHOL
+ [[https://icube-publis.unistra.fr/docs/15134/hal.pdf][Combining pencil/paper proofs and formal proofs, a challenge for Artificial Intelligence and mathematics education]]. ~ Julien Narboux, Viviane Durand-Guerrier. #ITP #Coq #Math
+ [[https://ilyasergey.net/assets/pdf/papers/Watanabe-MComp.pdf][A framework for certified program synthesis]]. ~ Yasunari Watanabe. #PhDThesis #ITP #Coq

*** 09-Jun-21
+ [[https://arxiv.org/abs/2106.03906][Learning to guide a saturation-based theorem prover]]. ~ Ibrahim Abdelaziz et als. #ATP #MachineLearning
+ [[https://coqmath.blogspot.com/2015/01/learning-set-theory-through-coq-part-1.html][Learning set theory through Coq (part 1)]]. ~ Kyle Stemen. #ITP #Coq #Math
+ [[https://coqmath.blogspot.com/2015/02/learning-set-theory-through-coq-part-2.html][Learning set theory through Coq (part 2)]]. ~ Kyle Stemen. #ITP #Coq #Math
+ [[https://coqmath.blogspot.com/2015/02/learning-set-theory-through-coq-part-3.html][Learning set theory through Coq (part 3)]]. ~ Kyle Stemen. #ITP #Coq #Math

*** 08-Jun-21
+ [[https://arxiv.org/abs/2106.01184][Formally verified convergence of policy-rich DBF routing protocols]]. ~ Matthew L. Daggitt, Timothy G. Griffin. #ITP #Agda
+ [[https://d1wqtxts1xzle7.cloudfront.net/66762807/tphols05.pdf?1619895651=&response-content-disposition=inline%3B+filename%3DTeaching_a_HOL_course_Experience_report.pdf&Expires=1623139510&Signature=FnVfzvP4dk3Wo~3AiYraNZVPRtbII4B6XawBO4iMOhP~nJIzG39oRQfdKJFy8Ts9Pi6NuS5QcnBgdASL0XaM4OlO46wQsWe~y5kt70-UdA-iYGnXcsK-t7iyx~MF6OIKGEspN3AbRas1WKEyRRniSGsJmfmwvXVlH0u202o-GXHehmk5F8agabp9EqSwST3-8IiOwCLDJTWsBdjN22CXs~3YVPUnn0FFjoND5Rmg5hRpfzSpLo1CGmsShzNA3kQLQ~OJ7G3BTfvgY~-OM30x4UOFJ4Sor-waAeerRNJGy-uFoIqJwdhkyoh6-6XfpWZ1KJ8HpvhHOIl-h7Ilt-~9Xg__&Key-Pair-Id=APKAJLOHF5GGSLRBV4ZA][Teaching a HOL course: experience report]]. ~ Konrad Slind et als. #ITP #HOL4
+ [[https://slate.com/technology/2021/05/artificial-intelligence-moonshots-usually-fail.html][Why A.I. Moonshots Miss (Ambitious predictions about the future powers of computers keep turning out to be wrong).]] ~ Jeffrey Funk, Gary Smith. #AI
+ [[https://arxiv.org/abs/2104.05207 Liao Zhang, Lasse Blaauwbroek, Bartosz Piotrowski, Prokop Černý, Cezary Kaliszyk, Josef Urban.][Online machine learning techniques for Coq: a comparison]]. ~ #ITP #Coq #MachineLearning
+ [[https://arxiv.org/abs/2106.03015][Learning proofs for the classification of nilpotent semigroups]]. ~ Carlos Simpson. #ATP #MachineLearning #Math
+ [[https://bor0.wordpress.com/2021/06/07/re-inventing-the-monad-wheel/][Re-inventing the Monad wheel]]. ~ Boro Sitnikovski (@BSitnikovski). #Haskell #FunctionalProgramming

*** 07-Jun-21
+ [[https://logicaltypes.blogspot.com/2021/06/why-kleisli-arrow-matter.html][Why Kleisli arrows matter]]. ~ Douglas M. Auclair (geophf). #Haskell #FunctionalProgramming
+ [[https://github.com/williamdemeo/TypeFunc][TypeFunc: This repository collects some links and resources for learning about type theory, functional programming, and related subjects]]. ~  Avatar William DeMeo. #ITP #FunctionalProgramming #Agda #Coq #Haskell #Idris #LeanProver #Scala

*** 06-Jun-21
+ [[https://youtu.be/w11mI67R95I][Roger Penrose explains Godel's incompleteness theorem in 3 minutes]]. #Logic #Math
+ [[https://xenaproject.wordpress.com/2021/06/05/half-a-year-of-the-liquid-tensor-experiment-amazing-developments/][Half a year of the Liquid Tensor Experiment: Amazing developments]]. ~ Peter Scholze. #ITP #LeanProver #Math

*** 05-Jun-21
+ [[https://paulaneeley.com/wp-content/uploads/2021/05/draft1.pdf][A formalization of dynamic epistemic logic]]. ~ Paula Neeley. #ITP #LeanProver #Logic
+ [[https://arxiv.org/abs/2105.14183][Verified quadratic virtual substitution for real arithmetic]]. ~ Matias Scharager, Katherine Cordwell, Stefan Mitsch, André Platzer. #ITP #IsabelleHOL #Logic #Math
+ [[https://etd.ohiolink.edu/apexprod/rws_etd/send_file/send?accession=ohiou1618999718015199&disposition=inline][Verifying value iteration and policy iteration in Coq]]. ~ David M. Masters. #MSc_Thesis #ITP #Coq #MachineLearning
+ [[https://www.ps.uni-saarland.de/~kirst/downloads/abstract_CoqWS_21.pdf][A toolbox for mechanised first-order logic]]. ~ Johannes Hostert, Mark Koch, Dominik Kirst. #ITP #Coq #Logic #Math
+ [[https://arxiv.org/abs/2105.14706v1][The role of entropy in guiding a connection prover]]. ~ Zsolt Zombori, Josef Urban, Miroslav Olšák. #ATP #MachineLearning
+ [[https://blog.monadfix.com/th-groups][Declaration groups: where order of declarations suddenly matters in Haskell]]. ~ Artyom Kazak. #Haskell #FunctionalProgramming
+ [[https://www.foxhound.systems/blog/final-tagless/][Final tagless encodings have little to do with typeclasses]]. ~ Ben Levy. #Haskell #FunctionalProgramming
+ [[https://www.stackbuilders.com/tutorials/haskell/getting-started-with-haskell-projects-using-scotty/][Getting started with Haskell projects using Scotty]]. ~ Juan Pedro Villa Isaza. #Haskell #FunctionalProgramming
+ [[https://pbrisbin.com/posts/phantom-types-and-globbing-bugs/][Phantom types and globbing bugs]]. ~ Patrick Brisbin. #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2021/06/probability-for-slay-spire-fanatics.html][Probability for Slay the Spire fanatics]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming #Math
+ [[https://mathscholar.org/2021/06/bach-as-mathematician/][Bach as mathematician]]. ~ David H Bailey. #Math #Music #Bach

*** 04-Jun-21
+ [[https://youtu.be/IoCcZ5CjuGc][El Teorema de Cantor-Schröder-Bernstein]]. ~ Urtzi Buijs @archimedestub. #Lógica #Matemática
+ [[https://www.quantamagazine.org/mathematicians-identify-threshold-at-which-shapes-give-way-20210603/][Mathematicians identify threshold at which shapes give way]]. ~ Mordechai Rorvig. #Math

*** 03-Jun-21
+ [[https://janmasrovira.gitlab.io/ascetic-slug/post/haskell-proofs/][Using dependent types to write proofs in Haskell]]. ~ Jan Mas Rovira. #Haskell #FunctionalProgramming #Logic

*** 02-Jun-21
+ [[https://suzdalnitski.medium.com/functional-programming-the-true-silver-bullet-fbeb7cf4a17a][Functional Programming - the True Silver Bullet]]. ~ Ilya Suzdalnitski. #FunctionalProgramming

*** 01-Jun-21
+ [[https://www.quantamagazine.org/how-a-simple-math-puzzle-can-guide-discovery-20210528/][How a simple arithmetic puzzle can guide discovery]]. ~ Pradeep Mutalik. #Math
+ [[https://exlean.org/relations-in-lean/][Relations in Lean]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math
+ [[https://exlean.org/decidable-propositions-i/][Decidable propositions I]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math
+ [[https://exlean.org/decidable-propositions-ii/][Decidable propositions II]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math
+ [[https://exlean.org/decidable-propositions-iii/][Decidable propositions III]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math
+ [[https://exlean.org/vectors-and-dependent-function-types/][Vectors and dependent function types]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Math
+ [[https://link.springer.com/article/10.1007/s10516-021-09561-8][The limits of computation]]. ~ A. Powell. #CompSci #LambdaCalculus #TypeTheory
+ [[https://homepages.inf.ed.ac.uk/slindley/papers/nbe-for-edsls-draft-may2021.pdf][Practical normalization by evaluation for EDSLs]]. ~ N. Valliappan, A. Russo, S. Lindley. #Haskell #FunctionalProgramming
+ [[http://www.cs.tufts.edu/t/tech_reports/reports/2021-01/report.pdf][Hook: An embedded domain-specific language for fusing implicit interactions to explicit event handlers]]. ~ Tomoki Shibata, Usamatthew Ahrens, Usarobert J.K. Jacob. #Haskell #FunctionalProgramming
+ [[https://blanqui.gitlabpages.inria.fr/papers/fscd21.pdf][Some axioms for mathematics]]. ~ Frédéric Blanqui et als. #Logic #Math
+ [[http://profs.sci.univr.it/~bonacina/papers/JARLWHistoricSurvey.pdf][Set of support, demodulation, paramodulation: a historical Perspective]]. ~ Maria Paola Bonacina. #ATP #Logic #Math
+ [[https://www.isa-afp.org/entries/Lifting_the_Exponent.html][Lifting the exponent]]. ~ Jakub Kądziołka. #ITP #IsabelleHOL #Math

** May 2021

*** 31-May-21
+ [[https://www.lavanguardia.com/ciencia/20210531/7484405/maquinas-creativas.html][¿Pueden las máquinas ser creativas?]] ~ Ramón López de Mántaras. #IA
*** 30-May-21
+ [[https://cdsmithus.medium.com/fun-with-category-theory-and-dynamical-systems-f470ea5e7809][Fun with category theory and dynamical systems]]. ~ Chris Smith (@cdsmithus). #CategoryTheory
+ [[https://functional.works-hub.com/learn/representable-functors-by-example-6c5c0][Representable functors: Practical examples]]. ~ Siddharth Bhat. #Haskell #FunctionalProgramming

*** 29-May-21
+ [[https://arxiv.org/abs/2105.10914v1][Quantum and classical registers]]. ~ Dominique Unruh. #ITP #IsabelleHOL
+ [[https://dependenttyp.es/pdf/thesis.pdf][Proof repair]]. ~ Talia Ringer. #PhD_Thesis #ITP #Coq
+ [[https://www.hindawi.com/journals/complexity/2021/5525539/][CoCEC: An automatic combinational circuit equivalence checker based on the interactive theorem prover]]. ~ Wilayat Khan, Farrukh Aslam Khan, Abdelouahid Derhab, Adi Alhudhaif. #ITP #Coq
+ [[https://hal.inria.fr/hal-03233227/document][Some formal tools for computer arithmetic: Flocq and Gappa]]. ~ S. Boldo, G. Melquiond. #ITP #Coq
+ [[https://arxiv.org/abs/2105.12077][A beginner guide to Iris, Coq and separation logic]]. ~ Elizabeth Dietrich. #ITP #Coq
+ [[https://langsec.org/spw21/papers/Chen_LangSec21.pdf][Mechanized type safety for gradual information flow]]. ~ Tianyu Chen, Jeremy G. Siek. #ITP #Agda
+ [[https://arxiv.org/abs/2105.11267v1][Actions you can handle: Dependent types for AI plans]]. ~ Alasdair Hill, Ekaterina Komendantskaya, Matthew L. Daggitt, Ronald P. A. Petrick. #ITP #Agda #AI
+ [[https://langsec.org/spw21/papers/Hardin_LangSec21.pdf][Formal synthesis of filter components for use in security-enhancing architectural transformations]]. ~ David S. Hardin, Konrand L. Slind. #ITP #ACL2

*** 28-May-21
+ [[https://frasertweedale.github.io/blog-fp/posts/2021-05-23-tax-combinators.html][A combinator library for taxes]]. ~ Fraser Tweedale (@hackuador). #Haskell #FunctionalProgramming
+ [[https://cstml.github.io/2021/05/23/applicative.html][Haskell: Applicative]]. ~ Vlad P. Luchian (@Cstml1). #Haskell #FunctionalProgramming
+ [[https://youtu.be/V9_14jjJiuQ][Testing smart contracts with QuickCheck]]. ~ John Hughes. #Haskell #FunctionalProgramming #QuickCheck
+ [[http://www.fstar-lang.org/tutorial/][Proof-oriented programming in F*]]. #ITP #FunctionalProgramming

*** 26-May-21
+ [[https://softwarefoundations.cis.upenn.edu/slf-current][Separation logic foundations (Software Foundations, Volume 6)]]. ~ Arthur Charguéraud. #ITP #Coq
+ [[https://mathlesstraveled.com/2021/05/25/the-natural-number-game/][The Natural Number Game]]. ~ Brent Yorgey. #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/Combinatorics_Words.html][Combinatorics on words basics]]. ~ Štěpán Holub, Martin Raška, Štěpán Starosta. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Combinatorics_Words_Graph_Lemma.html][Graph lemma]]. ~ Štěpán Holub, Štěpán Starosta. #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Combinatorics_Words_Lyndon.html][Lyndon words]]. ~ Štěpán Holub, Štěpán Starosta. #ITP #IsabelleHOL
+ [[http://www.jerf.org/iri/post/2958][Functors and monads for people who have read too many "tutorials"]]. ~ Jeremy Bowers. #Haskell #FunctionalProgramming
+ [[https://www.fpcomplete.com/blog/tying-the-knot-haskell/][Tying the Knot in Haskell]]. ~ Michael Snoyman (@snoyberg). #Haskell #FunctionalProgramming

*** 25-May-21
+ [[https://cister-labs.pt/f-ide2021/images/preprints/F-IDE_2021_paper_10.pdf][Verifying time complexity of binary search using Dafny]]. ~ Shiri Morshtein et als. #Dafny #Algorithms
+ [[https://hal.archives-ouvertes.fr/hal-03225987/document][Two new ways to formally prove Dandelin-Gallucci's theorem]]. ~ D. Braun, N. Magaud, P. Schreck. #ITP #Coq #Math
+ [[https://cister-labs.pt/f-ide2021/images/preprints/F-IDE_2021_paper_4.pdf][A logic theory pattern for linearized control systems]]. ~ A. Domenici, C. Bernardeschi. #ITP #PVS

*** 24-May-21
+ [[https://kowainik.github.io/posts/fixity][Fix(ity) me]]. ~ Veronika Romashkina (@vrom911), Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming

*** 23-May-21
+ [[https://etd.ohiolink.edu/apexprod/rws_etd/send_file/send?accession=ouhonors161919616626269&disposition=inline][Translating LaTeX to Coq: A recurrent neural network approach to formalizing natural language proofs]]. ~ Benjamin A. Carman. #PhD_Thesis #ITP #Coq #NeuralNetwork
+ [[https://eprint.iacr.org/2021/588.pdf][A novel proof of shuffle: Exponentially secure cut-and-choose]]. ~ Thomas Haines, Johannes Müller. #ITP #Coq
+ [[https://langsec.org/spw21/papers/Egolf_LangSec21.pdf][Verbatim: A verified lexer generator]]. ~ D. Egolf, S. Lasser, K. Fisher. #ITP #Coq
+ [[https://github.com/openai/miniF2F][miniF2F: Formal to Formal Mathematics Benchmark consisting of exercise statements from olympiads (AMC, AIME, IMO)]]. #ITP #LeanProver #Math
+ [[http://www.netlib.org/tex/bib/jfunctprogram.pdf][A complete bibliography of publications in the Journal of Functional Programming]]. ~ Nelson H.F. Beebe. #FunctionalProgramming

*** 21-May-21
+ [[https://blog.shaynefletcher.org/2021/05/annotations-in-ghc.html][Annotations in GHC]]. ~ Shayne Fletcher. #Haskell #FunctionalProgramming
+ [[https://www.quantamagazine.org/mathematicians-answer-old-question-about-odd-graphs-20210519/][Mathematicians answer old question about odd graphs]]. ~ Kevin Hartnett (@KSHartnett). #Maths
+ [[https://github.com/project-oak/silveroak][Silver Oak: Formal specification and verification of hardware, especially for security and privacy]]. #ITP #Coq
+ [[https://outline.com/he3HH7][An AI has disproved five mathematical conjectures with no human help]]. #AI #Math
+ [[https://arxiv.org/abs/2104.14516][Constructions in combinatorics via neural networks]]. ~ Adam Zsolt Wagner. #AI #Math #MachineLearning #NeuralNetwork

*** 20-May-21
+ [[https://www.haskellforall.com/2021/05/module-organization-guidelines-for.html][Module organization guidelines for Haskell projects]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming
+ [[https://github.com/Debdut/oeis.haskell][A collection of OEIS sequences in Haskell]]. ~ Debdut Karmakar (@KarmakarDebdut). #Haskell #FunctionalProgramming #Math

*** 18-May-21
+ [[https://arxiv.org/abs/2105.05133][Formally verified simulations of state-rich processes using interaction trees in Isabelle/HOL]]. ~ Simon Foster, Chung-Kil Hur, Jim Woodcock. #ITP #IsabelleHOL
+ [[https://www.mat.unb.br/~ayala/Formalization_of_Ring_TheoryR1.pdf][Formalization of ring theory in PVS (Isomorphism theorems, principal, prime and maximal ideals, chinese remainder theorem)]]. ~ Thaynara Arielly de Lima et als. #ITP #PVS #Math
+ [[https://lmcs.episciences.org/7478/pdf][Computable analysis and notions of continuity in Coq]]. ~ H. Thies, L. Thery, F. Steinberg. #ITP #Coq #Math

*** 17-May-21
+ [[https://github.com/leanprover-community/mathlib/blob/9084a3c765f7177d6466c72563998b9f48cf8e81/src/order/fixed_points.lean][Fixed point construction on complete lattices]]. ~ Johannes Hölzl et als. #ITP #LeanProver #Math

*** 16-May-21
+ [[https://arxiv.org/abs/2104.14516][Constructions in combinatorics via neural networks]]. ~ Adam Zsolt Wagner. #MachineLearning #Math

*** 15-May-21
+ [[https://www.researchgate.net/profile/Angeliki-Koutsoukou-Argyraki/publication/351126012_On_Preserving_the_Computational_Content_of_Mathematical_Proofs_Toy_Examples_for_a_Formalising_Strategy/links/60895dfe299bf1ad8d632b7b/On-Preserving-the-Computational-Content-of-Mathematical-Proofs-Toy-Examples-for-a-Formalising-Strategy.pdf][On preserving the computational content of mathematical proofs: toy examples for a formalising strategy]]. ~ Angeliki Koutsoukou-Argyraki. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Padic_Ints.html][Hensel's Lemma for the p-adic integers (in Isabelle/HOL)]]. ~ Aaron Crighton. #ITP #IsabelleHOL #Math
+ [[https://typeclasses.com/phrasebook][The Haskell Phrasebook]]. ~ Chris Martin (@chris__martin), Julie Moronuki (@argumatronic). #Haskell #FunctionalProgramming
+ [[https://haskell.mooc.fi/part1][Haskell MOOC University of Helsinki]]. ~ Joel Kaasinen, John Lång. #Haskell #FunctionalProgramming
+ [[http://counterexamples.org/][Counterexamples in type systems]]. ~ Stephen Dolan. #TypeTheory
+ [[https://youtu.be/RSJrBEhdZxw][Qué son los algoritmos y cómo aprenden de nosotros]]. | BBC Mundo. #Algoritmos

*** 14-May-21
+ [[https://www.microsiervos.com/archivo/ia/enigma-gpt-2-trabajo-falso.html][Enigma GPT-2: ¿Puedes distinguir un artículo real de otro falso generado mediante inteligencia artificial simplemente leyendo el resumen?]]. ~ @Alvy. #IA
+ [[https://theconversation.com/regreso-al-futuro-de-las-matematicas-si-hipatia-levantara-la-cabeza-158094][Regreso al futuro de las matemáticas: Si Hipatia levantara la cabeza]]. ~ Patricia Contreras Tejada (@_PatriciaCT). #Matemáticas

*** 12-May-21
+ [[https://patternsinfp.wordpress.com/2021/05/10/the-genuine-sieve-of-eratosthenes/][The Genuine Sieve of Eratosthenes]]. ~ Jeremy Gibbons (@jer_gib). #Haskell #FunctionalProgramming
+ [[https://frasertweedale.github.io/blog-fp/posts/2021-05-12-types-garden-path.html][Type-guided development and garden paths]]. ~ Fraser Tweedale (@hackuador). #Haskell  #FunctionalProgramming
+ [[https://forketyfork.medium.com/why-you-should-learn-functional-programming-type-classes-vs-interfaces-9d2192d20ac2][Why you should learn functional programming: Type classes vs. interfaces]]. ~ @forketyfork #Java #Haskell #FunctionalProgramming
+ [[https://www.quantamagazine.org/how-mathematicians-use-homology-to-make-sense-of-topology-20210511/][How mathematicians use homology to make sense of topology]]. ~ Kelsey Houston-Edwards. #Math

*** 11-May-21
+ [[http://www.cse.chalmers.se/~jomoa/papers/Automated_Conjecturing_in_QuickSpec.pdf][Automated conjecturing in QuickSpec]]. ~ Moa Johansson, Nicholas Smallbone. #Haskell #FuncionalProgramming

*** 10-May-21
+ [[http://functional-algorithms-verified.org/.][Functional algorithms, verified! ~ Tobias Nipkow et als]]. #eBook #ITP #IsabelleHOL #Algorithms
+ [[https://github.com/leanprover-community/mathlib/blob/93e9e0d7057889fe4d5ffea7a3f4b45c236a916b/archive/100-theorems-list/16_abel_ruffini.lean][Construction of an algebraic number that is not solvable by radicals]]. ~ Thomas Browning. #ITP #LeanProver #Math

*** 09-May-21
+ [[https://github.com/IPDSnelting/tba-2021][Slides and exercises of the Lean 4 course "Theorem prover lab: applications in programming languages"]]. ~ Jakob von Raumer, Sebastian Ullrich (@derKha). #ITP #Lean4
+ [[https://github.com/digama0/mm-lean4][Lean 4 Metamath verifier]]. ~ Mario Carneiro. #ITP #Lean4 #Metamath
+ [[https://github.com/digama0/lean-type-theory/releases/download/v1.0/main.pdf][The type theory of Lean]]. ~ Mario Carneiro. #ITP #LeanProver #TypeTheory

*** 06-May-21
+ [[https://www.artofmathematics.org/books][Books: Inquiry-Based Learning Guides]]. #eBooks #Math

*** 05-May-21
+ [[https://www.welcometothejungle.com/en/articles/btc-deep-learning-clojure-haskell][The beauty of functional languages in Deep Learning — Clojure and Haskell]]. ~ Jun Wu. #Clojure #Haskell #FunctionalProgramming #DeepLearning
+ [[https://youtu.be/GtAo8wqWHHg][The IMO Grand Challenge]]. ~ Daniel Selsam. #ITP #LeanProver
+ [[https://www.haskellforall.com/2021/05/the-trick-to-avoid-deeply-nested-error.html][The trick to avoid deeply-nested error-handling code]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming

*** 04-May-21
+ [[https://www.isa-afp.org/entries/Regression_Test_Selection.html][Regression test selection]]. ~ Susannah Mansky. #ITP #IsabelleHOL #Math
+ [[http://people.rennes.inria.fr/Frederic.Besson/itauto.pdf][Itauto: an extensible intuitionistic SAT solver]]. ~ Frédéric Besson. #ITP #Coq #Logic #SAT_Solver
+ [[https://bellmar.medium.com/programming-in-z3-by-learning-to-think-like-a-compiler-401fd46828d5][Programming in Z3 by learning to think like a compiler]]. ~ Marianne Bellotti. #SMT #Z3

*** 03-May-21
+ [[https://arxiv.org/abs/2104.15021][Formalizing the face lattice of polyhedra]]. ~ Xavier Allamigeon, Ricardo D. Katz, Pierre-Yves Strub. #ITP #Coq #Math
+ [[https://youtu.be/mTLuON5eRZI][Lean Together 2021: Panel on teaching with proof assistants]]. #ITP #LeanProver
+ [[https://mazzo.li/posts/haskell-backprop-short.html][Quick and dirty backpropagation in Haskell]]. ~ Francesco Mazzoli (@trascendentale). #Haskell #FunctionalProgramming #NeuralNetwork

*** 02-May-21
+ [[https://www.logicmatters.net/2021/05/01/fefermans-logic-mathematics-and-conceptual-structuralism/][Feferman’s virtual book: Logic, Mathematics, and Conceptual Structuralism]]. ~ Peter Smith (@PeterSmith). #Logic #Math

*** 01-May-21
+ [[https://arxiv.org/abs/2104.11613v1][A formalised theorem in the partition calculus]]. ~ Lawrence C. Paulson. #ITP #IsabelleHOL #Logic #Math
+ [[https://arxiv.org/abs/2104.11622v1][Producing symmetrical facts for lists induced by the list reversal mapping in Isabelle/HOL]]. ~ Martin Raška, Štěpán Starosta. #ITP #IsabelleHOL
+ [[https://schurr.io/academic/pubs/cade2021.pdf][Reliable reconstruction of fine-grained proofs in a proof assistant]]. ~ HJ Schurr, M Fleury, M Desharnais. #ITP #IsabelleHOL
+ [[https://docs.zkproof.org/pages/standards/accepted-workshop4/proposal-leo.pdf][LEO: A programming language for formally verified, zero-knowledge applications]]. ~ C. Chin et als. #ITP #ACL2
+ [[https://shemesh.larc.nasa.gov/fm/papers/itp2021.pdf][Formal verification of termination criteria for first-order recursive functions]]. ~ C.A. Muñoz et als. #ITP #PVS
+ [[https://repository.tudelft.nl/islandora/object/uuid:2d831aa4-df6b-4ab6-983e-9776c710b450][Verifying the semantics of disambiguation rules (Using parse tree repairing for showing safety and completeness of associativity and priority rules)]]. ~ L. Miljak. #ITP #Coq

** April 2021

*** 30-Apr-21
+ [[https://arxiv.org/abs/2104.14445][Trakhtenbrot's theorem in Coq: Finite model theory through the constructive lens]]. ~ Dominik Kirst, Dominique Larchey-Wendling. #ITP #Coq #Logic #Math
+ [[https://github.com/youtakaoka/topos][Topos: Programming language which can treat set and topology]]. #Haskell #FunctionalProgramming #Math
+ [[https://notes.srid.ca/ema-announce][Announcing Ema - Static sites in Haskell]]. ~ Sridhar Ratnakumar. #Haskell #FunctionalProgramming
+ [[https://z.haskell.world/design/2021/04/20/introduce-BIO-a-simple-streaming-abstraction.html][Introduce BIO: A simple streaming abstraction]]. ~ Dong Han. #Haskell #FunctionalProgramming
+ [[https://bit.ly/3344TyV][We are happy being poor: El problema de Erdös-Faber-Lovász]]. ~ Juan Arias de Reyna. #Matemáticas

*** 29-Apr-21
+ [[https://arxiv.org/abs/2104.13792][A mechanised proof of Gödel's incompleteness theorems using Nominal Isabelle]]. ~ Lawrence C. Paulson. #ITP #IsabelleHOL #Logic #Math
+ [[https://arxiv.org/abs/2104.13851][Verified approximation algorithms]]. ~ Robin Eßmann, Tobias Nipkow, Simon Robillard. #ITP #IsabelleHOL #Algorithms
+ [[https://iwilare.com/bsc-thesis.pdf][Formalizations of the Church-Rosser theorem in Agda]]. ~ Andrea Laretto. #ITP #Agda
+ [[https://arxiv.org/abs/2104.13645][Learning from Łukasiewicz and Meredith: Investigations into proof structures (Extended version)]]. ~ Christoph Wernhard, Wolfgang Bibel. #ATP #Prover9 #Logic
+ [[https://www.educative.io/blog/haskell-tutorial][Haskell tutorial: Get started with functional programming]]. ~ Ryan Thelin. #Haskell #FunctionalProgramming

*** 28-Apr-21
+ [[https://www.math.umd.edu/~jda/seminarNotes/carneiro.pdf][Mathematics in the computer]]. ~ Mario Carneiro. #Math #ITP #LeanProver #Metamath #Metamath_Zero
+ [[https://arxiv.org/abs/2104.13117][A verified decision procedure for orders in Isabelle/HOL]]. ~ Lukas Stevens, Tobias Nipkow. #ITP #IsabelleHOL #Logic #Math
+ [[https://www.isa-afp.org/entries/GaleStewart_Games.html][Gale-Stewart games (in Isabelle/HOL)]]. ~ Sebastiaan Joosten. #ITP #IsabelleHOL

*** 27-Apr-21
+ [[https://youtu.be/N7orNWIur-c][Induction and collection up to definable elements: calibrating the strength of parameter-free Δn-minimization]]. ~ Andrés Cordón. #Logic #Math
+ [[https://novo.manzano.pro.br/wp/download/logica-de-programacao-funcional-programe-em-hope/][Lógica de programação funcional: Programe em Hope]]. ~ José Augusto N. G. Manzano, José A. Alonso. #Hope #FunctionalProgramming
+ [[https://github.com/J-AugustoManzano/hope_programe][Código fonte do livro "Lógica de programação funcional: Programe em Hope"]]. ~ José Augusto N. G. Manzano. #Hope #FunctionalProgramming
+ [[https://www21.in.tum.de/~rosskops/papers/metalogic_pre.pdf][Isabelle's metalogic: Formalization and proof checker]]. ~ Tobias Nipkow, Simon Roßkopf. #ITP #IsabelleHOL #Logic
+ [[https://youtu.be/1SCvFDZDLgQ][Mathematical structures in dependent type theory]]. ~ Assia Mahboubi. #ITP #Coq #Math
+ [[https://academic.oup.com/iwc/advance-article/doi/10.1093/iwcomp/iwab012/6232199][Balancing the formal and the informal in user-centred design]]. ~ M.D. Harrison, P. Masci, J.C. Campos. #ITP #PVS
+ [[https://cacm.acm.org/magazines/2021/5/252165-a-satisfying-result/fulltex][A satisfying result]]. ~ Don Monroe.t#.YIeLaVxXfk0.twitter #Math #CompSci #SATSolvers
+ [[https://www.investigacionyciencia.es/noticias/el-producto-de-matrices-en-pos-de-una-meta-mtica-19718][El producto de matrices, en pos de una meta mítica]]. ~ Kevin Hartnett. #Matemáticas #Computación

*** 26-Apr-21
+ [[https://arxiv.org/abs/2104.11613][A formalised theorem in the partition calculus]]. ~ Lawrence C. Paulson. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/BenOr_Kozen_Reif.html][The BKR decision procedure for univariate real arithmetic (in Isabelle/HOL)]]. ~ Katherine Cordwell, Yong Kiam Tan, André Platzer. #ITP #IsabelleHOL #Math

*** 25-Apr-21
+ [[https://youtu.be/44fb3tI2Cak][Grandes ideas de la Filosofía: Lógica]]. #Lógica
+ [[https://github.com/leanprover-community/mathlib/blob/2ecd65e6de2939f09df9d964782f8ec7ba4aeb5c/archive/imo/imo2001_q2.lean][Formalization in Lean of IMO 2001 Q2]]. ~ Tian Chen. #ITP #LeanProver #Math #IMO

*** 24-Apr-21
+ [[https://arxiv.org/abs/2002.09282][Homotopy Type Theory in Isabelle]]. ~ Joshua Chen. #ITP #IsabelleHOL #HoTT
+ [[https://pp.ipd.kit.edu/uploads/publikationen/dieterichs21masterarbeit.pdf][Formal verification of pattern matching analyses]]. ~ Henning Dieterichs. #ITP #LeanProver
+ [[https://www.ps.uni-saarland.de/~smolka/drafts/icl2021.pdf][Modeling and proving in computational type theory using the Coq proof assistant]]. ~ Gert Smolka. #eBook #ITP #Coq
+ [[https://tel.archives-ouvertes.fr/tel-03202580/document][Formalisation en Coq des algorithmes de filtre numérique calculés en précision finie]]. ~ Diane Gallois-Wong. #ITP #Coq #Math
+ [[https://lmcs.episciences.org/7383/pdf][Logic for exact real arithmetic]]. ~ Helmut Schwichtenberg, Franziskus Wiesnet. #ITP #MinLog #Haskell
+ [[https://home.sandiego.edu/~shulman/papers/induction.pdf][Induction on equality]]. #Logic #Math #CompSci

*** 23-Apr-21
+ [[https://arxiv.org/abs/2104.11157][Ackermann's function in iterative form: A proof assistant experiment]]. ~ Lawrence C Paulson. #ITP #IsabelleHOL
+ [[https://www.danielbrice.net/blog/of-function-instances-and-abstract-syntax/][Of function instances and abstract syntax]]. ~ Daniel Brice. #Haskell #FunctionalProgramming
+ [[https://serokell.io/blog/type-families-haskell][Type families in Haskell: The definitive guide]]. ~ Vladislav Zavialov. #Haskell #FunctionalProgramming
+ [[https://www.poberezkin.com/posts/2021-04-21-what-i-wish-somebody-told-me-when-i-was-learning-Haskell.html][What I wish somebody told me when I was learning Haskell]]. ~ Evgeny Poberezkin (@epoberezkin). #Haskell #FunctionalProgramming
+ [[https://spectrum.ieee.org/tech-talk/artificial-intelligence/machine-learning/the-state-of-ai-in-15-graphs][15 graphs you need to see to understand AI in 2021]]. ~ Eliza Strickland. #AI

*** 22-Apr-21
+ [[https://www.pointedset.ca/blog/2020/02/06/proptype.html][A practical difference between Props and Types in Lean]]. ~ Mathieu Guay-Paquet. #ITP #LeanProver
+ [[https://github.com/leanprover-community/mathlib/blob/afa6b72e20728cf46912ef9333d0f08ccebf7a6f/src/geometry/euclidean/sphere.lean][Product of segments of chords in Lean]]. ~ Manuel Candales. #ITP #LeanProver #Math
+ [[https://www.haskellforall.com/2021/04/the-end-of-history-for-programming.html][The end of history for programming]]. ~ Gabriel Gonzalez (@GabrielG439). #Programming

*** 20-Apr-21
+ [[https://arxiv.org/abs/2104.09366][Simple type theory is not too simple: Grothendieck's schemes without dependent types]]. ~ Anthony Bordg, Lawrence Paulson, Wenda Li. #ITP #IsabelleHOL #Math
+ [[https://github.com/mirefek/sokoban.lean][Sokoban implementation in Lean for proving solvability / unsolvability]]. ~ Miroslav Olšák. #ITP #LeanProver
+ [[https://cdsmithus.medium.com/continued-fractions-haskell-equational-reasoning-property-testing-and-rewrite-rules-in-action-77a16d750e3f][Continued fractions: Haskell, equational reasoning, property testing, and rewrite rules in action]]. ~ Chris Smith (@cdsmithus). #Haskell #FunctionalProgramming
+ [[https://medium.com/geekculture/a-random-tour-of-typeclass-in-haskell-87a5a2125e1a][A random tour of typeclass in Haskell]]. ~ Ong Yi Ren. #Haskell #FunctionalProgramming
+ [[https://alpha2phi.medium.com/writing-technical-documentation-with-emacs-276f13284e54][Writing technical documentation with Emacs]]. #Emacs #OrgMode

*** 18-Apr-21
+ [[https://xenaproject.wordpress.com/2021/04/18/induction-on-equality/][Induction on equality]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math

*** 17-Apr-21
+ [[https://arxiv.org/abs/2104.05256][A Coq formalization of Lebesgue integration of nonnegative functions]]. ~ Sylvie Boldo, François Clément, Florian Faissole, Vincent Martin, Micaela Mayero. #ITP #Coq #Math
+ [[https://www.cs.columbia.edu/~rgu/publications/oakland21-li.pdf][A secure and formally verified Linux KVM hypervisor]]. ~ Shih-Wei Li, Xupeng Li, Ronghui Gu, Jason Nieh, John Zhuang Hui. #ITP #Coq
+ [[https://arxiv.org/abs/2104.05516][Machine-checked ZKP for NP-relations: Formally verified security proofs and implementations of MPC-in-the-head]]. ~ José Carlos Bacelar Almeida et als. #EasyCrypt
+ [[https://www.easycrypt.info][EasyCrypt: Computer-aided cryptographic proofs]]. #EasyCrypt
+ [[https://www.easycrypt.info/downloads/tutorial/tutorial-prg.pdf][EasyCrypt: A tutorial]]. ~ Gilles Barthe et als. #EasyCrypt
+ [[https://arxiv.org/abs/2104.05207][Online machine learning techniques for Coq: A comparison]]. ~ Liao Zhang, Lasse Blaauwbroek, Bartosz Piotrowski, Prokop Černý, Cezary Kaliszyk, Josef Urban. #ITP #Coq #MachineLearning
+ [[https://turcomat.org/index.php/turkbilmat/article/download/2435/2138][Balanced Academic Curriculum: Looking for an optimal solution with metaheuristics and functional programming]]. ~ José Miguel Rubio, Cristian Vidal-Silva, Luis Carter, Miguel Tupac-Yupanqui. #Haskell #FunctionalProgramming
+ [[http://gallais.github.io/blog/poltergeist-types][Poltergeist types]]. ~ G. Allais. #Haskell #FunctionalProgramming
+ [[https://ec-jones.github.io/flocking.html][Functional flocks]]. ~ Eddie Jones. #Haskell #FunctionalProgramming
+ [[https://aadaa-fgtaa.github.io/blog/optionally/][Checking for uncheckable: optional constraints]]. #Haskell #FunctionalProgramming

*** 16-Apr-21
+ [[https://plato.stanford.edu/entries/type-theory/][Type theory]]. ~ Thierry Coquand. #TypeTheory
+ [[https://functional.works-hub.com/learn/more-on-types-typeclasses-and-the-foldable-typeclass-e1862][More on types, typeclasses and the foldable typeclass]]. ~ Marty Stumpf. #Haskell #FunctionalProgramming
+ [[https://chrisdone.com/posts/the-movement-principle/][The movement principle]]. ~ Chris Done (@christopherdone). #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2021-04-15-arrows-through-a-different-lens/][Arrows, through a different lens]]. ~ Juan Raphael Diaz Simões. #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2021-04-08-capabilities-ad-hoc-interpreters/][Ad-hoc interpreters with capability]]. ~ Gaël Deest, Andreas Herrmann. #Haskell #FunctionalProgramming
+ [[https://medium.math.dev/lisp-the-web-4c00c88d11f9][Lisp & the Web (Introductory reference guide to creating Web applications with Common Lisp & Google Compute Engine)]]. ~ Ashok Khanna. #CommonLisp #Programming
+ [[https://www.quantamagazine.org/mathematician-disproves-group-algebra-unit-conjecture-20210412/][Mathematician disproves 80-year-old algebra conjecture]]. ~ Erica Klarreich (@EricaKlarreich). #Math

*** 15-Apr-21
+ [[https://github.com/leanprover-community/mathlib/blob/8d3e8b5b2635fc20a27922893cdf852bd0bd5706/archive/imo/imo1977_q6.lean][Formalization in Lean of IMO 1977 Q6]]. ~ Tian Chen. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/3379f3ed992a6bce819a030178082efb6f6a92b4/archive/100-theorems-list/57_herons_formula.lean][Heron's Formula (in Lean)]]. ~ Matt Kempster. #ITP #LeanProver #Math

*** 14-Apr-21
+ [[https://culturacientifica.com/2013/04/24/para-que-sirven-las-matematicas/][¿Para qué sirven las matemáticas?]] ~ Marta Macho Stadler (@MartaMachoS). #Matemáticas

*** 13-Apr-21
+ [[https://www.researchgate.net/profile/David-Fuenmayor/publication/349043183_Topological_semantics_for_paraconsistent_and_paracomplete_logics_in_IsabelleHOL/links/606c0941458515614d3a53c9/Topological-semantics-for-paraconsistent-and-paracomplete-logics-in-Isabelle-HOL.pdf][Topological semantics for paraconsistent and paracomplete logics in Isabelle/HOL]]. ~ David Fuenmayor. #ITP #IsabelleHOL #Logic
+ [[https://jonascarpay.com/posts/2021-01-28-haskell-project-template.html][The working programmer’s guide to setting up Haskell projects]]. ~ Jonas Carpay (@jonascarpay). #Haskell #FunctionalProgramming
+ [[https://jrsinclair.com/articles/2019/what-i-wish-someone-had-explained-about-functional-programming/][Things I wish someone had explained about functional programming (Part 1: Faulty assumptions)]]. ~ James Sinclair (@jrsinclair). #FunctionalProgramming
+ [[https://jrsinclair.com/articles/2019/algebraic-structures-what-i-wish-someone-had-explained-about-functional-programming/][Things I wish someone had explained about functional programming (Part 2: Algebraic structures)]]. ~ James Sinclair (@jrsinclair). #FunctionalProgramming
+ [[https://jrsinclair.com/articles/2019/type-classes-what-i-wish-someone-had-explained-about-functional-programming/][Things I wish someone had explained about functional programming (Part 3: Type classes)]]. ~ James Sinclair (@jrsinclair). #FunctionalProgramming
+ [[https://jrsinclair.com/articles/2019/algebraic-data-types-what-i-wish-someone-had-explained-about-functional-programming/][Things I wish someone had explained about functional programming (Part 4: Algebraic data types)]]. ~ James Sinclair (@jrsinclair). #FunctionalProgramming
+ [[https://github.com/quchen/generative-art][Generative art using Haskell]]. ~ David Luposchainsky (@quch3n). #Haskell #FunctionalProgramming
+ [[https://blogs.elconfidencial.com/tecnologia/tribuna/2021-04-13/programador-software-consultoria-producto-universidad_3030868/][Programar es de pobres: por qué el mundo del 'software' está roto en España]]. ~ Eduardo Manchón (@eduardomanchon). #Programación #Informática

*** 12-Apr-21
+ [[https://github.com/leanprover-community/mathlib/blob/e269dbc17a978dfabe57975b84d0b0250b78a2db/src/tactic/itauto.lean][Intuitionistic tautology (`itauto`) decision procedure in Lean]]. ~ Mario Carneiro. #ITP #LeanProver #Logic
+ [[https://arxiv.org/abs/2104.04095][First-order natural deduction in Agda]]. ~ Louis Warren. #ITP #Agda #Logic
+ [[https://github.com/BartoszMilewski/Publications/tree/master/TheDaoOfFP][The Dao of functional programming]]. ~ Bartosz Milewski (@BartoszMilewski). #Haskell #FunctionalProgramming #CategoryTheory
+ [[https://www.brynmawr.edu/cs/resources/beauty-of-programming][The beauty of programming]]. ~ Linus Torvalds. #Programming
+ [[https://www.vidal-rosset.net/gnus_emacs_as_email_client_in_imap_with_protonmail.html][Gnus Emacs as email client in IMAP with ProtonMail]]. ~ Joseph Vidal-Rosset. #Emacs #ProtonMail

*** 11-Apr-21
+ [[https://osa1.net/posts/2021-04-10-sums-and-products.html][Products and sums, named and anonymous]]. ~ Ömer Sinan Ağacan. #Haskell #FunctionalProgramming

*** 10-Apr-21
+ [[https://arxiv.org/abs/2104.02549][Connecting constructive notions of ordinals in Homotopy Type Theory]]. ~ Nicolai Kraus, Fredrik Nordvall Forsberg, Chuangjie Xu. #ITP #Agda #Logic #Math #HoTT
+ [[https://49jaiio.sadio.org.ar/pdfs/saei/SAEI-12.pdf][Propuesta de enseñanza de la formalización de la Matemática utilizando un asistente de pruebas en estudiantes de la Licenciatura en Ciencias de la Computación]]. ~ Daniel Severın, Alejandro Hernández. #ITP #Coq
+ [[https://github.com/leanprover-community/mathlib/blob/c6b06369392473fe9ebc480fbcfed1695db3e554/archive/imo/imo2008_q3.lean][Formalization in Lean of IMO 2008 Q3]]. ~ Manuel Candales. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2104.01112][NaturalProofs: Mathematical theorem proving in natural language]]. ~ Sean Welleck, Jiacheng Liu, Ronan Le Bras, Hannaneh Hajishirzi, Yejin Choi, Kyunghyun Cho. #ATP #MachineLearning
+ [[https://youtu.be/79ymkGQW3b4][Type theory from the perspective of Artificial Intelligence]]. ~ David McAllester. #TypeTheory #AI
+ [[https://arxiv.org/abs/2104.02466][A review of formal methods applied to machine learning]]. ~ Caterina Urban, Antoine Miné. #MachineLearning #FormalMethods
+ [[https://youtu.be/nmBkU-l1zyc][Prolog meta-interpreters]]. ~ Markus Triska (@MarkusTriska). #Prolog #LogicProgramming

*** 09-Apr-21
+ [[https://www.isa-afp.org/entries/Grothendieck_Schemes.html][Grothendieck's Schemes in Algebraic Geometry]]. ~ Anthony Bordg, Lawrence Paulson, Wenda Li. #ITP #IsabelleHOL #Math
+ [[https://code.world/haskel][Continued fractions in Haskell]]. ~ Chris Smith (@cdsmithus).l#P7oZc6pbWBK6wRaBBMm0goA #Haskell #FunctionalProgramming #Math
+ [[https://bor0.wordpress.com/2021/04/09/algorithmic-puzzle-continuous-increasing-subsequences/][Algorithmic puzzle: Continuous increasing subsequences]]. ~ Boro Sitnikovski (@BSitnikovski). #Haskell #FunctionalProgramming
+ [[https://www.haskellforall.com/2021/04/how-to-replace-proxy-with.html][How to replace Proxy with AllowAmbiguousTypes]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming

*** 08-Apr-21
+ [[https://github.com/leanprover-community/mathlib/blob/a6024f10dde5322da06d1158221e1827d3ba4cfe/archive/imo/imo2008_q4.lean][Formalization in Lean of IMO 2008 Q4]]. ~ Manuel Candales. #ITP #LeanProver #Math
+ [[https://gilmi.me/blog/post/2021/04/06/giml-type-inference][Giml's type inference engine]]. ~ Gil Mizrahi (@_gilmi). #Haskell #FunctionalProgramming
+ [[https://github.com/jimburton/scrabble][Scrabbλe: A one- or two-player implementation of Scrabble for teaching functional programming]]. ~ Jim Burton. #eBook #Haskell #FunctionalProgramming

*** 06-Apr-21
+ [[https://arxiv.org/abs/2104.00506v1][Intuitionistic NF Set Theory]]. ~ Michael Beeson. #Logic #Math #ITP #LeanProver
+ [[https://github.com/leanprover-community/mathlib/blob/82fd6e1e1b9b35249e25d1e19af1df0eb7cf2a15/src/logic/girard.lean][Girard's paradox]]. ~ Mario Carneiro. #ITP #LeanProver #Logic #Math
+ [[https://github.com/leanprover-community/mathlib/blob/89ea423d261b46c4e90e49362a6471a5ceb1d6d5/archive/imo/imo2005_q3.lean][Formalization in Lean of IMO 2005 Q3]]. ~ Manuel Candales. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/1e1eaae6ad91319c1f3cc2f414a0f763b8f15641/archive/imo/imo2008_q2.lean][Formalization in Lean of IMO 2008 Q2]]. ~ Manuel Candales. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/1e1eaae6ad91319c1f3cc2f414a0f763b8f15641/archive/imo/imo2011_q5.lean][Formalization in Lean of IMO 2011 Q5]]. ~ Alain Verberkmoes. #ITP #LeanProver #Math
+ [[https://bor0.wordpress.com/2021/04/05/capturing-number-theory-in-haskell/ https://bor0.wordpress.com/2021/04/05/capturing-number-theory-in-haskell/][Capturing number theory in Haskell]]. ~ Boro Sitnikovski (@BSitnikovski). #Haskell #FunctionalProgramming #Math
+ [[https://erick.navarro.io/blog/auto-build-and-publish-emacs-org-configuration-as-a-website/][Auto build and publish emacs org configuration as a website]]. ~ Erick Navarro (@erickgnavar). #Emacs
+ [[https://hal.archives-ouvertes.fr/hal-03184956/document][Division by zero in Logic and Computing]]. ~ Jan Bergstra. #Logic #Math #CompSci

*** 05-Apr-21
+ [[https://xenaproject.wordpress.com/2021/04/03/induction-and-inductive-types/][Induction, and inductive types]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://youtu.be/LZMtQNdqtvc][Doing mathematics with simple types: Infinitary combinatorics in Isabelle/HOL]]. ~ Lawrence Paulson. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2104.01052][An evaluation of the Archive of Formal Proofs]]. ~ Carlin MacKenzie, Jacques Fleuriot, James Vaughan. #ITP #IsabelleHOL
+ [[https://taylor.fausak.me/2021/04/03/default-exception-handler-in-haskell/][Default exception handler in Haskell]]. ~ Taylor Fausak. #Haskell #FunctionalProgramming
+ [[https://home.fnal.gov/~neilsen/notebook/orgExamples/org-examples.html][Emacs org-mode examples and cookbook]]. ~ Eric H. Neilsen, Jr. #Emacs

*** 04-Apr-21
+ [[https://repositorioaberto.uab.pt/bitstream/10400.2/9925/1/TD_IvoRobert.pdf][ProverX: Rewriting and extending Prover9]]. ~ Ivo Robert. #PhDThesis #ATP #Prover9

*** 03-Apr-21
+ [[https://eprint.iacr.org/2021/397.pdf][SSProve: A foundational framework for modular cryptographic proofs in Coq]]. ~ Carmine Abate et als. #ITP #Coq

*** 02-Apr-21
+ [[https://github.com/J-AugustoManzano/hope][Código fonte do livro "Lógica de programação funcional: Pense em Hope"]]. ~ José Augusto N. G. Manzano. #Hope #FunctionalProgramming
+ [[https://gallais.github.io/pdf/draft_sigbovik21.pdf][Dependent stringly-typed programming]]. ~ @anormalform. #Agda #FunctionalProgramming #ITP
+ [[https://www.stephanschiffels.de/posts/2021-03-24-Haskell-CLI/][Designing command line interfaces in Haskell]]. ~ Stephan Schiffels (@stschiff). #Haskell #FunctionalProgramming
+ [[https://boris-marinov.github.io/category-theory-illustrated/04_order/][Category theory illustrated]]. ~ Boris Marinov (@AlexanderKatt). #CategoryTheory
+ [[https://plato.stanford.edu/entries/category-theory][#SEP: Category theory]]. ~ Jean-Pierre Marquis. #CategoryTheory #Logic #Math

** March 2021

*** 31-Mar-21
+ [[http://www.andreas-lochbihler.de/pub/basin2021.pdf][Abstract modeling of systems communication in constructive cryptography using CryptHOL]]. ~ D. Basin, A. Lochbihler, U. Maurer, S.R. Sefidgar. #ITP #IsabelleHOL
+ [[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7984526/pdf/978-3-030-72019-3_Chapter_5.pdf][Verified software units]]. ~ Lennart Beringer. #ITP #Coq
+ [[https://github.com/ekmett/linear-logic][linear-logic: a version of intuitionistic linear logic on top of linear Haskell]]. ~ Edward Kmett (@kmett). #Haskell #FunctionalProgramming #Logic
+ [[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7984547/pdf/978-3-030-72019-3_Chapter_10.pdf/?tool=EBI][Do judge a test by its cover: Combining combinatorial and property-based testing]]. ~ Harrison Goldstein, John Hughes, Leonidas Lampropoulos, Benjamin C. Pierce. #Haskell #FunctionalProgramming

*** 30-Mar-21
+ [[https://www.ams.org//journals/bull/0000-000-00/S0273-0979-2021-01726-5/S0273-0979-2021-01726-5.pdf][Varieties of mathematical understanding]]. ~ Jeremy Avigad. #ITP #Math
+ [[https://arxiv.org/abs/2103.13534v1][A formal proof of the Lax equivalence theorem for finite difference schemes]]. ~ Mohit Tekriwal, Karthik Duraisamy, Jean-Baptiste Jeannin. #ITP #Coq #Math
+ [[https://hal.archives-ouvertes.fr/hal-03176024][Verifying min-plus Computations with Coq (extended version with appendix)]]. ~ Lucien Rakotomalala, Pierre Roux, Marc Boyer. #ITP #Coq
+ [[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7984530/][For a few dollars more: Verified fine-grained algorithm analysis down to LLVM]]. ~ Maximilian P.L. Haslbeck, Peter Lammich. #ITP #IsabelleHOL
+ [[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7984549/][Certifying proofs in the first-order theory of rewriting]]. ~ Fabian Mitterwallner, Alexander Lochmann, Aart Middeldorp, Bertram Felgenhauer. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2103.15702][Limits of real numbers in the binary signed digit representation]]. ~ Franziskus Wiesnet, Nils Köpp. #Haskell #FunctionalProgramming #Math
+ [[https://www.microsiervos.com/archivo/matematicas/analisis-complejo-mandelbrot-julia-codigo-abierto.html][El Análisis complejo y una exploración de los conjuntos de Mandelbrot y Julia con código abierto]]. ~ @Alvy. #Matemáticas #Programación
+ [[https://complex-analysis.com/es.html][Análisis complejo (Una introducción visual e interactiva)]]. ~ Juan Carlos Ponce Campuzano. #eBook #Matemáticas
+ [[https://novo.manzano.pro.br/wp/download/logica-de-programacao-funcional-pense-em-hope/][Lógica de programação funcional: Pense em Hope (Exercícios de programação funcional com Hope)]]. ~ José Augusto N. G. Manzano, José A. Alonso Jiménez, María J. Hidalgo Doblado. #eBook #Hope #FunctionalProgramming

*** 29-Mar-21
+ [[https://perl.plover.com/yak/typing/notes.html][Strong typing]]. ~ M-J. Dominus (1999). #Programming
+ [[https://www.cse.chalmers.se/~rjmh/Papers/whyfp.pdf][Why functional programming matters]]. ~ John Hughes. #FunctionalProgramming
+ [[https://www.ams.org/journals/notices/202104/rnoti-p565.pdf][The dawning of a new era in applied mathematics]]. ~ Weinan E. #Math via @emulenews
+ [[https://www.lavanguardia.com/ciencia/20210329/6607152/inteligencia-artificial-nunca-sera-humana.html][La inteligencia artificial nunca será como la humana]]. ~ Ramón López de Mántaras. #IA
+ [[https://github.com/AbstProcDo/Master-Emacs-From-Scratch-with-Solid-Procedures/blob/master/01.semantic-keybinding-en.org][EmacsTutorial01: Semantic keybindings to memorize hundreds of keys instantly]]. #Emacs

*** 27-Mar-21
+ [[https://eprint.iacr.org/2021/397][SSProve: A foundational framework for modular cryptographic proofs in Coq]]. ~ C. Abate, P.G. Haselwarter, E. Rivas, A. Van Muylder, T. Winterhalter, C. Hritcu, K. Maillard, B. Spitters. #ITP #Coq
+ [[https://webspace.science.uu.nl/~swier004/publications/2021-jfp-submission.pdf][A well-known representation of monoids and its application to the function "vector reverse"]]. ~ Wouter Swierstra. #Agda #FunctionalProgramming
+ [[https://arxiv.org/abs/2103.11751v1][Functional Pearl: Witness me - Constructive arguments must be guided with concrete witness]]. ~ Hiromi Ishii. #Haskell #FunctionalProgramming
+ [[https://luctielen.com/posts/combining_folds_using_semigroups/][Combining folds using semigroups]]. ~ Luc Tielen (@luctielen). #Haskell #FunctionalProgramming
+ [[https://kowainik.github.io/posts/internal-functions][Many faces of internal functions]]. ~ Veronika Romashkina (@vrom911). #Haskell #FunctionalProgramming

*** 26-Mar-21
+ [[https://plv.csail.mit.edu/blog/alectryon.html][Alectryon: a collection of tools for writing technical documents that mix Coq code and prose]]. ~ Clément Pit-Claudel. #ITP #Coq via @jjcarett2
+ [[https://www.ereslibre.es/blog/2019/09/building-a-personal-website-with-org-mode.html][Building a personal website with org-mode]]. ~ Rafael Fernández (@ereslibre). #Emacs #OrgMode
+ [[https://emacs.love/weblorg/][Weblorg: A static HTML generator for Emacs and Org-Mode]]. #Emacs #OrgMode

*** 25-Mar-21
+ [[https://lexi-lambda.github.io/blog/2021/03/25/an-introduction-to-typeclass-metaprogramming/][An introduction to typeclass metaprogramming]]. ~ Alexis King (@lexi_lambda). #Haskell #FunctionalProgramming
+ [[https://www.tweag.io/blog/2021-03-25-haskell-java/][How to build hybrid Haskell and Java programs]]. ~ Facundo Domínguez, Andreas Hermann. #Haskell #Java

*** 24-Mar-21
+ [[https://courses.cs.washington.edu/courses/cse505/17au/][Course: Programming languages]]. ~ Zach Tatlock, Leonardo De Moura. #CompSci #ITP #LeanProver
+ [[https://docs.google.com/document/d/1V22TC-vf6b7ciBquR5-IK3wJ1WCPhrBLWIP1Tf18z0Y/edit#][Coq fundamentals]]. ~ Zach Tatlock. #ITP #Coq
+ [[https://www.tomhoule.com/leaning-into-calculus-chapter-1/][Leaning into Spivak's calculus]]. ~ Tom Houle (@_tomhoule). #ITP #LeanProver #Math

*** 23-Mar-21
+ [[https://openreview.net/pdf/c9fb7dd359102a00d8676684bd704c54961a5285.pdf][IsarStep: A benchmark for high-level mathematical reasoning]]. ~ W. Li, L. Yu, Y. Wu, L.C. Paulson. #ITP #IsabelleHOL #Math #MachineLearning
+ [[https://arxiv.org/abs/2103.11389][Formal verification of Zagier's one-sentence proof]]. ~ Guillaume Dubach, Fabian Muehlboeck. #ITP #Coq #Math
+ [[https://www.snoyman.com/blog/2021/03/programmer-learning-list/][Programmer learning list]]. ~ Michael Snoyman (@snoyberg). #Programming
+ [[https://github.com/tomjaguarpaw/tilapia/blob/master/Windows10.md][Install GHC, Cabal and Haskell Language Server IDE on Windows 10]]. ~ Will Gould. #Haskell #FunctionalProgramming

*** 21-Mar-21
+ [[https://readerunner.wordpress.com/2021/03/20/diagrams-for-penrose-tiles/][Diagrams for Penrose tiles]]. ~ Chris Reade. #Haskell #FunctionalProgramming #Math

*** 20-Mar-21
+ [[https://arxiv.org/abs/2103.08535v1][Quantum projective measurements and the CHSH inequality in Isabelle/HOL]]. ~ Mnacho Echenim, Mehdi Mhalla. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2103.07543v1][Reasoning about the garden of forking paths]]. ~ Yao Li, Li-yao Xia, Stephanie Weirich. #ITP #Coq
+ [[https://hal.inria.fr/hal-03168208/document][Plotting in a formally verified way]]. ~ Guillaume Melquiond. #ITP #Coq
+ [[https://arxiv.org/abs/2103.06913v1][Classical (co)recursion: Programming]]. ~ Paul Downen, Zena M. Ariola. #Agda #Scheme #Python #Java
+ [[http://web.wakayama-u.ac.jp/~sakama/slide/aspocp2018-slide.pdf][Partial evaluation of logic programs in vector spaces]]. ~ Chiaki Sakama, Hien D. Nguyen, Taisuke Sato, Katsumi Inoue. #LogicProgramming #Math

*** 18-Mar-21
+ [[https://www21.in.tum.de/~haslbema/documents/haslbeck2021thesis.pdf][Verified quantitative analysis of imperative algorithms]]. ~ Maximilian P.L. Haslbeck. #PhDThesis #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Constructive_Cryptography_CM.html][Constructive cryptography in HOL: the communication modeling aspect]]. ~ Andreas Lochbihler, S. Reza Sefidgar. #ITP #IsabelleHOL
+ [[https://www.cs.helsinki.fi/u/jllang/Introduction_to_Lambda_Calculus.pdf][Introduction to lambda calculus]]. ~ John Lång. #LambdaCalculus #FunctionalProgramming
+ [[https://www.quantamagazine.org/avi-wigderson-and-laszlo-lovasz-win-abel-prize-20210317/][Pioneers linking Math and Computer Science win the Abel Prize]]. ~ Kevin Hartnett (@KSHartnett). #Math #CompSci
+ [[https://plus.maths.org/content/laszlo-lovasz-working-mathematical-miracles][László Lovász: Working mathematical miracles]]. ~ Marianne Freiberger. #Math #CompSci
+ [[https://plus.maths.org/content/its-good-have-hard-problems][Avi Wigderson: "It's good to have hard problems"]]. ~ Rachel Thomas. #Math #CompSci
+ [[http://www.cs.toronto.edu/~ledt/papers/Avi/L2.pdf][Cryptography and pseudorandomness]]. ~ Avi Wigderson. #Math #CompSci
+ [[https://www.math.ias.edu/avi/book][Mathematics and computation (A theory revolutionizing technology and science)]]. ~ Avi Wigderson. #eBook #Math #CompSci via @mbelcrypt_vasco

*** 17-Mar-21
+ [[https://arxiv.org/abs/2103.09092][The Agda universal algebra library, Part 2: Structure]]. ~ William DeMeo. #ITP #Agda #Math
+ [[https://youtu.be/5e7UdWzITyQ][Formal methods for the informal engineer (Tutorial 2: The Coq theorem prover)]]. ~ Cody Roux. #ITP #Coq
+ [[https://gilmi.me/blog/post/2021/03/16/bottom-haskell-pyramid][The bottom of the Haskell Pyramid]]. ~ Gil Mizrahi (@_gilmi). #Haskell #FunctionalProgramming
+ [[https://www.math.wustl.edu/~sk/eolss.pdf][The history and concept of mathematical proof]]. ~ Steven G. Krantz. #Logic #Math via @mathematicsprof
+ [[https://ingenieriadesoftware.es/historia-visual-lenguajes-programacion/][Historia visual de los lenguajes de programación]]. ~ Jordi Cabot (@ingdesoftware). #Programación vía @fernand0

*** 16-Mar-21
+ [[https://ps.uni-saarland.de/Publications/documents/KirstHermes_2021_Synthetic.pdf][Synthetic undecidability and incompleteness of first-order axiom systems in Coq]]. ~ Dominik Kirst, Marc Hermes. #ITP #Coq #Logic #Math
+ [[https://webspace.science.uu.nl/~swier004/publications/2020-jfp.pdf][Functional Pearls: Heterogeneous binary random-access lists]]. ~ Wouter Swierstra. #Agda #FunctionalProgramming
+ [[https://kowainik.github.io/images/Haskell_Knowledge_Map.png][Haskell knowledge map]]. ~ Veronika Romashkina (@vrom911), Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://blog.ch3m4.org/2021/03/07/evaluacion-perezosa-en-python-parte-5/][Evaluación perezosa en Python. Parte 5: Formalización de la secuencia perezosa]]. ~ Chema Cortés (@chemacortes). #Python #Programación

*** 15-Mar-21
+ [[https://xenaproject.wordpress.com/2021/03/15/formalising-mathematics-workshop-8-group-cohomology/][Formalising mathematics: workshop 8 (group cohomology)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://www.isa-afp.org/entries/Modular_arithmetic_LLL_and_HNF_algorithms.html][Two algorithms based on modular arithmetic: lattice basis reduction and Hermite normal form computation (in Isabelle/HOL)]]. ~ Ralph Bottesch, Jose Divason, Rene Thiemann. #ITP #IsabelleHOL #Math
+ [[https://doisinkidney.com/posts/2021-03-14-hyperfunctions.html][Hyperfunctions]]. ~ Donnacha Oisín Kidney (@oisdk). #Haskell #FunctionalProgramming
+ [[https://www.wikiwand.com/en/List_of_formulae_involving_%CF%80][List of formulae involving π]]. #Math via @mathematicsprof

*** 14-Mar-21
+ [[https://ubikium.gitlab.io/portfolio/2021-03-13-wait-a-moment.html][(((Wait a moment .) .) .) - Composing functions with multiple arguments]]. ~ Philip K. Dick. #Haskell #FunctionalProgramming

*** 13-Mar-21
+ [[https://magnus.therning.org/posts/2021-03-05-000-flycheck-and-hls.html][Flycheck and HLS]]. ~ Magnus Therning. #Emacs #LSPmode #Haskell #HLS via @jneira

*** 12-Mar-21
+ [[https://www.isa-afp.org/entries/Hermite_Lindemann.html][The Hermite–Lindemann–Weierstraß transcendence theorem (in Isabelle/HOL)]]. ~ Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[http://matt.might.net/articles/partial-orders/][Order theory for computer scientists]]. ~ Matt Might (@mattmight). #Math #CompSci #Haskell #FunctionalProgramming via @CompSciFact
+ [[https://www.newyorker.com/culture/culture-desk/what-is-mathematics][What is mathematics?]] ~ Alec Wilkinson. #Math
+ [[https://infinitedescent.xyz/][An infinite descent into pure mathematics]]. ~ Clive Newstead. #eBook #Math
+ [[http://eugeniacheng.com/wp-content/uploads/2017/02/cheng-proofguide.pdf][How to write proofs: a quick guide]]. ~ Eugenia Cheng (@DrEugeniaCheng). #Logic #Math

*** 11-Mar-21
+ [[https://notxor.nueva-actitud.org/2021/03/11/emacs-y-lsp-mode.html][Emacs y lsp-mode]]. #Emacs #LSPmode

*** 10-Mar-21
+ [[https://arxiv.org/abs/2103.05581][The Agda universal algebra library - Part 1: Foundation (Equality, extensionality, truncation, and dependent types for relations and algebras)]]. ~ William DeMeo. #ITP #Agda #Math
+ [[https://link.springer.com/article/10.1007/s00283-020-10037-7][A replication crisis in mathematics?]] ~ Anthony Bordg. #Math #ITP
+ [[http://www.divulgamat.net/index.php?option=com_content&view=article&id=18][Contrastando dos códices matemáticos iluminados]]. ~ Ángel Requena Fraile. #Matemáticas

*** 09-Mar-21
+ [[https://github.com/jespercockx/agda-lecture-notes/blob/master/agda.pdf][Programming and proving in Agda]]. ~ Jesper Cockx (@dregntael). #ITP #Agda #FunctionalProgramming #Haskell
+ [[https://arxiv.org/abs/2103.04519][Formal verification of authenticated, append-only skip lists in Agda: Extended version]]. ~ Victor Cacciari Miraldo, Harold Carr, Mark Moir, Lisandra Silva, Guy L. Steele Jr. #ITP #Agda
+ [[http://conal.net/papers/language-derivatives/paper.pdf][Symbolic and automatic differentiation of languages]]. ~ Conal Elliott. #ITP #Agda
+ [[https://www.isa-afp.org/entries/Projective_Measurements.html][Quantum projective measurements and the CHSH inequality (in Isabelle/HOL)]]. ~ Mnacho Echenim. #ITP #IsabelleHOL
+ [[https://github.com/leanprover-community/mathlib/blob/b25994d522d1368e19a6e568aa7e642d72a95294/src/number_theory/bernoulli_polynomials.lean][Bernoulli polynomials (in Lean prover)]]. ~ Ashvni Narayanan. #ITP #LeanProver #Math
+ [[https://dfithian.github.io/2021/03/08/pruning-unused-haskell-dependencies.html][Pruning unused Haskell dependencies]]. ~ Dan Fithian. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2103.03930][Logical foundations: Personal perspective]]. ~ Yuri Gurevich. #Logic #Math #CompSci
+ [[http://math.fau.edu/yiu/RecreationalMathematics2003.pdf][Recreational Mathematics]]. ~ Paul Yiu. #eBook #Math
+ [[https://cacm.acm.org/blogs/blog-cacm/203554-five-principles-for-programming-languages-for-learners][Five principles for programming languages for learners]]. ~ Mark Guzdial (@guzdial). #CompSci #Teaching #Programming
+ [[https://blog.jpolak.org/?p=2358][Fifteen awesome cross-platform math apps]]. ~ Jason Polak. #Math #CompSci #Programming

*** 08-Mar-21
+ [[https://arxiv.org/abs/2103.03607][Formalizing graph trail properties in Isabelle/HOL]]. ~ Laura Kovacs, Hanna Lachnitt, Stefan Szeider. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2103.03798][Training a first-order theorem prover from synthetic data]]. ~ Vlad Firoiu, Eser Aygun, Ankit Anand, Zafarali Ahmed, Xavier Glorot, Laurent Orseau, Lei Zhang, Doina Precup, Shibl Mourad. #ATP #MachineLearning
+ [[https://arxiv.org/abs/2103.03874][Measuring mathematical problem solving with the MATH dataset]]. ~ Dan Hendrycks, Collin Burns, Saurav Kadavath, Akul Arora, Steven Basart, Eric Tang, Dawn Song, Jacob Steinhardt. #MachineLearning #ITP #Math

*** 07-Mar-21
+ [[https://users-cs.au.dk/birke/papers/free-theorems-sep-logic.pdf ][Theorems for free from separation logic specifications]]. ~ Lars Birkedal et als. #ITP #Coq
+ [[https://www.isa-afp.org/entries/Mereology.html][Mereology (in Isabelle/HOL)]]. ~ Ben Blumson. #ITP #IsabelleHOL #Logic

*** 06-Mar-21
+ [[https://wiki.tfpie.science.ru.nl/images/a/a6/TFPIE_AHF_JV.pdf][Teaching automated reasoning and formally verified functional programming in Agda and Isabelle/HOL]]. ~ Asta Halkjær From, Jørgen Villadsen. #Logic #FunctionalProgramming #ITP #Agda #IsabelleHOL
+ [[https://www.scitepress.org/Papers/2020/98936/98936.pdf][Formalization and verification of reconfigurable discrete-event system using model driven engineering and Isabelle/HOL]]. ~ S. Soualah, Y. Hafidi, M. Khalgui, A. Chaoui, L. Kahloul. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/2103.00223][Generalized universe hierarchies and first-class universe levels]]. ~ András Kovács. #ITP #Agda
+ [[https://arxiv.org/abs/2103.01346][Roosterize: Suggesting lemma names for Coq verification projects using deep learning]]. ~ Pengyu Nie, Karl Palmskog, Junyi Jessy Li, Milos Gligoric. #ITP #Coq #DeepLearning
+ [[https://youtu.be/EXpmbAfBNnw][Neural theorem proving in Lean using Proof Artifact Co-training and language models]]. ~ Jason Rute. #ITP #LeanProver #MachineLearning
+ [[https://cmsa.fas.harvard.edu/wp-content/uploads/2021/03/LeanStep-Talk-New-Technology-in-Mathematics-Seminar.pdf][Neural theorem proving in Lean using Proof Artifact Co-training and language models]]. [Slides] ~ Jason Rute. #ITP #LeanProver #MachineLearning
+ [[https://github.com/atarnoam/lean-automata][Proving theorems about regular languages and DFAs in Lean]]. ~ Noam Atar. #ITP #LeanProver
+ [[https://github.com/leanprover-community/mathlib/blob/5962c76fb636d17a041726adcc11299c8a23e2b6/src/algebra/ring/boolean_ring.lean][Boolean rings (in Lean prover)]]. ~ Bryan Gin-ge Chen. #ITP #LeanProver #Math
+ [[https://hgeometry.org/][HGeometry: Computational Geometry in Haskell]]. #Haskell #FunctionalProgramming #Math

*** 05-Mar-21
+ [[https://xenaproject.wordpress.com/2021/03/04/formalising-mathematics-workshop-7-quotients/][Formalising mathematics: workshop 7 (quotients)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://functional.works-hub.com/learn/tutorial-cellular-automata-and-comonads-fc3a6][Tutorial: Cellular automata and comonads]]. ~ Siddharth Bhat. #Haskell #FunctionalProgramming
+ [[https://www.popularmechanics.com/science/math/g29008356/hard-math-problems/][These are the 10 toughest math problems ever solved]]. ~ Dave Linkletter. #Math
+ [[https://www.lemonde.fr/blog/binaire/2021/03/05/linformatique-quelques-questions-pour-se-facher-entre-amis/][L’informatique, quelques questions pour se fâcher entre amis]]. ~ Serge Abiteboul, Inria Paris, Gilles Dowek. #CompSci

*** 04-Mar-21
+ [[https://www.cs.rice.edu/~vardi/comp409/history.pdf][A brief history of Logic]]. ~ Moshe Y. Vardi (2003). #Logic #Math #CompSci via @prathyvsh
+ [[https://arxiv.org/abs/2103.02102][Experimental mathematics approach to Gauss diagrams realizability]]. ~ A. Khan, A. Lisitsa, A. Vernitski. #Prolog #LogicProgramming #Math

*** 03-Mar-21
+ [[https://blog.plover.com/math/topology-doc.html][Short introduction to Topology (for Computer Science grad students)]]. ~ Mark Jason Dominus (2010). #Math via @CompSciFact
+ [[https://jcodev.eu/posts/using-nix-for-haskell-development-in-emacs-with-lsp/][Using Nix for Haskell development in Emacs with LSP]]. ~ Jonas Collberg. #Haskell #Emacs
+ [[https://www.researchgate.net/publication/348829872_Towards_a_Notion_of_Basis_for_Knowledge-Based_Systems_-_Applications][Towards a notion of basis for knowledge-based systems - Applications]]. ~ Gonzalo A. Aranda, Joaquín Borrego, Juan Galán, Daniel Rodríguez. #Math #CompSci

*** 02-Mar-21
+ [[https://youtu.be/UnYrWuOzOlc][AI and Theorem Proving [Video]]]. ~ Josef Urban. #ATP #ITP #MachineLearning #AI
+ [[https://cmsa.fas.harvard.edu/wp-content/uploads/2021/01/Urbanslides.pdf][AI and Theorem Proving [Slides]]]. ~ Josef Urban. #ATP #ITP #MachineLearning #AI
+ [[https://youtu.be/Y0hpHm74FYs][Language modeling for mathematical reasoning [Video]]]. ~ Christian Szegedy. #Logic #Math #AI
+ [[https://cmsa.fas.harvard.edu/wp-content/uploads/2021/01/Language-modeling-for-Mathematical-Reasoning-.pdf ][Language modeling for mathematical reasoning [Slides]]]. ~ Christian Szegedy. #Logic #Math #AI
+ [[https://kowainik.github.io/posts/arrows-zoo][Arrows Zoo]]. ~ Veronika Romashkina (@vrom911), Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://www.cs.utexas.edu/users/EWD/transcriptions/EWD10xx/EWD1011.html][Introducing my fall 1987 course on Mathematical Methodology]]. ~ Edsger W.Dijkstra. #Math

*** 01-Mar-21
+ [[https://www.isa-afp.org/entries/Sunflowers.html][The sunflower lemma of Erdős and Rado (in Isabelle/HOL)]]. ~ René Thiemann. #ITP #IsabelleHOL #Math
+ [[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.303.8201&rep=rep1&type=pdf][12² beautiful mathematical theorems with short proofs]]. ~ Jörg Neunhäuserer. #Math via @@lizardbill
+ [[http://www.cut-the-knot.org/proofs/index.shtml][Proofs in Mathematics]]. ~ Alexander Bogomolny. #Math

** February 2021

*** 28-Feb-21
+ [[https://cs.nyu.edu/faculty/davise/papers/proof.pdf][Proof verification technology and elementary physics]]. ~ Ernest Davis. #FormalVerification #Physics
+ [[http://h2.jaguarpaw.co.uk/posts/how-i-use-dante/][How I use Dante]]. #Haskell #FunctionalProgramming #Emacs

*** 27-Feb-21
+ [[https://www.scitepress.org/Papers/2020/94644/94644.pdf][Computational logic in the first semester of computer science: An experience report]]. ~ David M. Cerna et als. #Logic #CompSci
+ [[https://arxiv.org/abs/2102.10698v1][Certifying choreography compilation]]. ~ Luís Cruz-Filipe, Fabrizio Montesi, Marco Peressotti. #ITP #Coq

*** 26-Feb-21
+ [[https://xenaproject.wordpress.com/2021/02/25/formalising-mathematics-workshop-6-limits/][Formalising mathematics: workshop 6 (limits)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://mediatum.ub.tum.de/doc/1596550/1596550.pdf][A verified imperative implementation of B-trees (in Isabelle/HOL)]]. ~ Niels Mündle. #ITP #IsabelleHOL
+ [[https://kowainik.github.io/posts/totality][Totality]]. ~ Veronika Romashkina (@vrom911), Dmitrii Kovanikov (@ChShersh). #Haskell #FunctionalProgramming
+ [[https://blog.ch3m4.org/2021/02/15/evaluacion-perezosa-en-python-parte-4/][Evaluación perezosa en Python. Parte 4: Evaluación perezosa avanzada]]. ~ Chema Cortés (@chemacortes). #Python #Programación

*** 25-Feb-21
+ [[https://www.isa-afp.org/entries/Formal_Puiseux_Series.html][Formal Puiseux series (in Isabelle/HOL)]]. ~ Manuel Eberl. #ITP #IsabelleHOL #Math
+ [[https://blog.drewolson.org/purescript-and-haskell][PureScript and Haskell]]. ~ Drew Olson. #Haskell #PureScript #FunctionalProgramming
+ [[http://math.andrej.com/2021/02/22/burali-forti-in-hott-uf/][The Burali-Forti argument in HoTT/UF]]. ~ Martin Escardo. #Logic #Math #HoTT

*** 24-Feb-21
+ [[https://youtu.be/YqAu1hdd4Z4][Rerecorded introduction to the Algebra of Programming research group]]. ~  Jeremy Gibbons (@jer_gib). #CompSci #Haskell #FunctionalProgramming

*** 23-Feb-21
+ [[https://student.cs.uwaterloo.ca/~cs442/W21/notes/][Course: Principles of Programming Languages]]. ~ Gregor Richards. #Programming #Haskell #Prolog #Pascal #Smalltalk #Erlang #C
+ [[https://cacm.acm.org/magazines/2021/3/250711-knowledge-graphs/fulltext][Knowledge graphs]]. ~ Claudio Gutierrez, Juan F. Sequeda. #AI #Logic #CompSci
+ [[https://cacm.acm.org/magazines/2021/3/250710-the-decline-of-computers-as-a-general-purpose-technology/fulltext][The decline of computers as a general purpose technology]]. ~ Neil C. Thompson, Svenja Spanuth. #CompSci
+ [[https://cacm.acm.org/magazines/2021/3/250705-50-years-of-pascal/fulltext][50 years of Pascal]]. ~ Niklaus Wirth. #Pascal #Programming #CompSci
+ [[https://arxiv.org/abs/2102.10556v1][Inductive logic programming at 30]]. ~ Andrew Cropper, Sebastijan Dumančić, Richard Evans, Stephen H. Muggleton. #ILP #LogicProgramming #MachineLearning

*** 21-Feb-21
+ [[https://link.medium.com/LjTU9hQL3db][A formal proof of safegcd bounds]]. ~ Russell O’Connor, Andrew Poelstra. #ITP #Coq

*** 20-Feb-21
+ [[https://arxiv.org/abs/2102.07636][Formalized Haar measure]]. ~ Floris van Doorn. #ITP #LeanProver #Math
+ [[https://hal.archives-ouvertes.fr/hal-03142192/document][A variant of Wagner’s theorem based on combinatorial hypermaps]]. ~ Christian Doczkal. #ITP #Coq #Math
+ [[https://eprint.iacr.org/2021/147.pdf][IPDL: A simple framework for formally verifying distributed cryptographic protocols]]. ~ Greg Morrisett, Elaine Shi, Kristina Sojakova, Xiong Fan, Joshua Gancher. #ITP #Coq
+ [[http://angg.twu.net/LATEX/2021excuse.pdf][Category theory as an excuse to learn type theory]]. ~ Eduardo Ochs, Selana Ochs. #CategoryTheory #TypeTheory
+ [[https://youtu.be/ipIY7MWhk8s][Introducción al sistema de tipos en Haskell]]. ~ Manuel Soto (@manu_msr). #Haskell #FunctionalProgramming
+ [[https://youtu.be/ipIY7MWhk8s][Type classes: de aprendiz a maestro]]. ~ Alejandro Serrano (@trupill). #Haskell #FunctionalProgramming

*** 19-Feb-21
+ [[https://arxiv.org/abs/2102.09125v1][Formalizing groups in type theory]]. ~ Farida Kachapova. #Logic #Math #ITP
+ [[https://xenaproject.wordpress.com/2021/02/18/formalising-mathematics-workshop-5-filters][Formalising mathematics: workshop 5 (filters)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://en.wikipedia.org/wiki/Filter_(mathematics)][Filter (mathematics)]]. ~ Wikipedia. #Math
+ [[https://en.wikipedia.org/wiki/Filters_in_topology][Filters in topology]]. ~ Wikipedia. #Math
+ [[https://plato.stanford.edu/entries/set-theory/][Set theory (in "The Stanford Encyclopedia of Philosophy")]]. ~ Joan Bagaria (@BagariaJoan). #Logic #Math
+ [[https://www.icrea.cat/security/files/researchers/researcher-sections/pcm_set_theory_long_revised.pdf][Set theory]]. ~ Joan Bagaria (@BagariaJoan). #Logic #Math
+ [[https://www.icrea.cat/security/files/researchers/researcher-sections/mst2019-20.pdf][Models of set theory]]. ~ Joan Bagaria (@BagariaJoan). #Logic #Math #Set_theory
+ [[https://plato.stanford.edu/entries/boolalg-math/][The mathematics of boolean algebra (in "The Stanford Encyclopedia of Philosophy")]]. ~ J. Donald Monk. #Logic #Math

*** 18-Feb-21
+ [[https://alistairb.dev/reflections-on-haskell-for-startup/][Reflections on using Haskell for my startup]]. ~ Alistair Burrowes (@AlistairBuzz). #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2102.08595v1][Formalizing relations in type theory]]. ~ Farida Kachapova. #Logic #Math

*** 17-Feb-21
+ [[https://www.lri.fr/~wolff/teach-material/2020-2021/M2-CSMR/index.html][Course: Interactive theorem proving and applications]]. ~ Burkhart Wolff. #ITP #IsabelleHOL
+ [[https://plato.stanford.edu/entries/algebra/][#SEP: Algebra (in "The Stanford Encyclopedia of Philosophy")]]. ~ Vaughan Pratt. #Math
+ [[https://blog.ch3m4.org/2021/02/14/evaluacion-perezosa-en-python-parte-3/][Evaluación perezosa en Python]]. Parte 3: Cachés y memoización. ~ Chema Cortés (@chemacortes). #Python #Programación
+ [[https://arxiv.org/abs/2102.05242][Patterns, predictions, and actions: A story about machine learning]]. ~ Moritz Hardt, Benjamin Recht. #eBook #MachineLearning
+ [[http://mathcentral.uregina.ca/RR/database/RR.09.95/grzesina1.html][A geometric view of the square root algorithm]]. ~ A. Grzesina. #Math #Algorithms

*** 16-Feb-21
+ [[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9348915][Study of Isabelle/HOL on formal algorithm analysis and code generation]]. ~ Haitao Wang, Lihua Song. #ITP #IsabelleHOL
+ [[https://www.researchgate.net/profile/Christoph-Benzmueller/publication/349061647_Cantor's_Theorem_without_Reductio_Ad_Absurdum/links/601e41a592851c4ed54fa746/Cantors-Theorem-without-Reductio-Ad-Absurdum.pdf][Cantor’s theorem without reductio ad absurdum]]. ~ Christoph Benzmüller, David Fuenmayor. #ITP #IsabelleHOL #Logic #Math

*** 15-Feb-21
+ [[https://plato.stanford.edu/entries/fallacies/][#SEP: Fallacies]]. ~ Hans Hansen. #Logic
+ [[https://plato.stanford.edu/entries/algebra-logic-tradition/][#SEP: The algebra of logic tradition]]. ~ Stanley Burris, Javier Legris. #Logic

*** 14-Feb-21
+ [[https://kaygun.tumblr.com/post/643010859143151616/kruskals-algorithm-implemented-in-clojure][Kruskal’s algorithm implemented in Clojure]]. ~ Atabey Kaygun (@Atabey_Kaygun). #Clojure #Algorithms
+ [[https://kaygun.tumblr.com/post/643088741013012480/kruskals-algorithm-in-common-lisp][Kruskal’s algorithm in Common Lisp]]. ~ Atabey Kaygun (@Atabey_Kaygun). #CommonLisp #Algorithms

*** 13-Feb-21
+ [[https://www.researchgate.net/profile/Christoph-Benzmueller/publication/349027173_Value-oriented_Legal_Argumentation_in_IsabelleHOL/links/601b90b5299bf1cc26a00e9a/Value-oriented-Legal-Argumentation-in-Isabelle-HOL.pdf][Value-oriented legal argumentation in Isabelle/HOL]]. ~ Christoph Benzmüller, David Fuenmayor. #ITP #IsabelleHOL
+ [[https://hal.inria.fr/hal-03136002/document][Unsolvability of the quintic formalized in dependent type theory]]. ~ Sophie Bernard, Cyril Cohen, Assia Mahboubi, Pierre-Yves Strub. #ITP #Coq #Math
+ [[https://tel.archives-ouvertes.fr/tel-03107626/document/][Machine-checked computer-aided mathematics]]. ~ Assia Mahboubi. #ITP #Coq #Math
+ [[https://academic.oup.com/logcom/advance-article/doi/10.1093/logcom/exab006/6129486][A study of continuous vector representations for theorem proving]]. ~ StanisŁaw PurgaŁ, Julian Parsert, Cezary Kaliszyk. #ATP #MachineLearning
+ [[https://www.quantamagazine.org/mathematician-solves-computer-science-conjecture-in-two-pages-20190725/][Decades-old computer science conjecture solved in two pages]]. ~ Erica Klarreich (@EricaKlarreich). #Math #CompSci

*** 12-Feb-21
+ [[https://github.com/leanprover-community/mathlib/blob/72141fdc94feec6f394b95c9310687f517bb4d02/src/combinatorics/hall.lean][Hall's Marriage Theorem in Lean]]. ~ Alena Gusakov, Bhavik Mehta, Kyle Miller. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/2f566202f1bbefee115b5b45b48a7127133309c7/src/data/real/liouville.lean][Liouville's theorem in Lean]]. ~ Jujian Zhang. #ITP #LeanProver #Math
+ [[https://github.com/leanprover-community/mathlib/blob/983cb905e2468a820d833263bd537686b549267a/archive/imo/imo1987_q1.lean][Formalization in Lean of IMO (International Mathematical Olympiads) 1987, Q1]]. ~ Yury Kudryashov. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2102.05945][A formal proof of modal completeness for provability logic]]. ~ Marco Maggesi, Cosimo Perini Brogi. #ITP #HOL_Light #Logic
+ [[https://youtube.com/playlist?list=PLguYJK7ydFE4aS8fq4D6DqjF6qsysxTnx][HaskellRank: HackerRank in Haskell]]. ~ @tsoding. #Haskell #FunctionalProgramming
+ [[https://blog.ch3m4.org/2021/02/09/evaluacion-perezosa-en-python-parte-2/][Evaluación perezosa en Python - Parte 2: Secuencias infinitas]]. ~ Chema Cortés (@chemacortes). #Python #Programming

*** 11-Feb-21
+ [[https://www.isa-afp.org/entries/Laws_of_Large_Numbers.html][The laws of large numbers (in Isabelle/HOL)]]. ~ Manuel Eberl (@pruvisto). #ITP #IsabelleHOL #Math
+ [[https://xenaproject.wordpress.com/2021/02/10/formalising-mathematics-workshop-4/][Formalising mathematics: workshop 4 (topology)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2102.05547][Learning equational theorem proving]]. ~ Jelle Piepenbrock, Tom Heskes, Mikoláš Janota, Josef Urban. #ATP #MachineLearning
+ [[https://arxiv.org/abs/2102.05616][An algebra of properties of binary relations]]. ~ Jochen Burghardt. #Logic #Math #ATP #Eprover

*** 10-Feb-21
+ [[https://github.com/leanprover-community/mathlib/blob/fdbd4bffdc00b53b0b337ff308378a448b069f7e/archive/imo/imo2013_q1.lean][IMO 2013 Q1 in Lean]]. ~ David Renshaw. #ITP #LeanProver #Math

*** 09-Feb-21
+ [[https://arxiv.org/abs/2102.02679][Certifying differential equation solutions from computer algebra systems in Isabelle/HOL]]. ~ Thomas Hickman, Christian Pardillo Laursen, Simon Foster. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2102.03529][Vampire with a brain is a good ITP hammer]]. ~ Martin Suda. #Vampire #ATP #ITP #MachineLearning
+ [[https://users.utcluj.ro/~agroza/puzzles/maloga/preface.html][Modelling puzzles in First Order Logic]]. ~ Adrian Groza. #Logic #ATP #Prover9
+ [[https://blog.ch3m4.org/2021/02/08/evaluacion-perezosa-en-python-parte-1/][Evaluación perezosa en Python]]. Parte 1: Introducción a la evaluación perezosa. ~ Chema Cortés (@chemacortes). #Python #Programming
+ [[https://www.galoisrepresentations.com/2019/07/17/the-ramanujan-machine-is-an-intellectual-fraud/][The Ramanujan Machine is an intellectual fraud]]. #AI #Math

*** 08-Feb-21
+ [[https://arxiv.org/abs/2102.03003][A verified decision procedure for univariate real arithmetic with the BKR algorithm]]. ~ Katherine Cordwell, Yong Kiam Tan, André Platzer. #ITP #IsabelleHOL #Math
+ [[https://arxiv.org/abs/2102.02901][A formal proof of the independence of the continuum hypothesis]]. ~ Jesse Michael Han, Floris van Doorn. #ITP #LeanProver #Logic #Math
+ [[https://www.philipzucker.com/javascript-automated-proving/][Automated propositional sequent proofs in your browser with Tau Prolog]]. Philip Zucker (@SandMouth). #ATP #Logic #Prolog #LogicProgramming
+ [[https://fosdem.org/2021/schedule/event/open_research_emacs_orgmode/][Emacs and org-mode for reproducible research]]. (Organize your research in plain text!). ~ Thibault Lestang. #Emacs #OrgMode
+ [[https://www.hhyu.org/posts/literate_config/][Writing the Emacs configuration script in org-mode: a simple example of literate programming]]. ~ Hsin-Hao Yu (@HsinHaoYu). #Emacs

*** 07-Feb-21
+ [[https://www.haskellforall.com/2021/02/folds-are-constructor-substitution.html][Folds are constructor substitution]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming

*** 06-Feb-21
+ [[https://arxiv.org/abs/2102.00378][Model-based testing of networked applications]]. ~ Yishuai Li, Benjamin C. Pierce, Steve Zdancewic. #ITP #Coq
+ [[https://arxiv.org/abs/2102.01167][Verifying the Hashgraph consensus algorithm]]. ~ Karl Crary. #ITP #Coq
+ [[https://www.nature.com/articles/d41586-021-00304-8][AI maths whiz creates tough new problems for humans to solve]]. ~ Davide Castelvecchi. #AI #Math #ITP
+ [[https://www.ramanujanmachine.com/][The Ramanujan Machine (an algorithmic approach to discover new mathematical conjectures)]]. #AI #Math
+ [[https://arxiv.org/abs/1907.00205][The Ramanujan Machine: automatically generated conjectures on fundamental constants]]. ~ Gal Raayoni, Shahar Gottlieb, George Pisha, Yoav Harris, Yahel Manor, Uri Mendlovic, Doron Haviv, Yaron Hadad, Ido Kaminer. #AI #Math
+ [[https://takenobu-hs.github.io/downloads/haskell_ghc_reading_guide.pdf][GHC reading guide (Exploring entrances and mental models to the source code)]]. ~ Takenobu Tani. #Haskell #FunctionalProgramming
+ [[https://cscx.org/][Computer Science by Example]]. #CompSci #Programming

*** 05-Feb-21
+ [[https://arxiv.org/abs/2102.02627][Formalising a Turing-complete choreographic language in Coq]]. ~ Luís Cruz-Filipe, Fabrizio Montesi, Marco Peressotti. #ITP #Coq
+ [[https://arxiv.org/abs/2102.02600][A formalization of Dedekind domains and class groups of global fields]]. ~ Anne Baanen, Sander R. Dahmen, Ashvni Narayanan, Filippo A. E. Nuccio Mortarino Majno di Capriglio. #ITP #LeanProver #Math
+ [[https://alexey.kuleshevi.ch/blog/2021/01/29/random-interface/][New random interface]]. ~ Alexey Kuleshevich. #Haskell #FunctionalProgramming

*** 04-Feb-21
+ [[https://xenaproject.wordpress.com/2021/02/04/formalising-mathematics-workshop-3/][Formalising mathematics: Workshop 3 (Limits of sequences)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://xenaproject.wordpress.com/2018/08/04/what-is-a-filter-how-some-computer-scientists-think-about-limits/][What is a filter? How some computer scientists think about limits]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://xenaproject.wordpress.com/2018/08/05/what-is-a-uniform-space-how-some-computer-scientists-think-about-completions/][What is a uniform space? How some computer scientists think about completions]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://www.researchgate.net/profile/Marco_Bonatto/publication/348662657_Superconnected_left_quasigroups_and_involutory_quandles/links/6009d8bea6fdccdcb86fc158/Superconnected-left-quasigroups-and-involutory-quandles.pdf][Superconnected left quasigroups and involutory quandles]]. ~ Marco Bonatto. #ATP #Prover9 #Math
+ [[https://zacwood.me/posts/haskell-type-application/][Haskell's @ symbol - Type application]]. ~ Zac Wood. #Haskell #FunctionalProgramming

*** 03-Feb-21
+ [[https://jonascarpay.com/posts/2021-01-28-haskell-project-template.html][The working programmer’s guide to setting up Haskell projects]]. ~ Jonas Carpay (@jonascarpay). #Haskell #FunctionalProgramming
+ [[https://www.microsiervos.com/archivo/seguridad/cifrado-monjes-cistercienses.html][El cifrado de los monjes cistercienses: de 0000 a 9999 con «símbolos raros»]]. ~ @Alvy. #Matemáticas

*** 02-Feb-21
+ [[https://www.isa-afp.org/browser_info/current/AFP/IsaGeoCoq/document.pdf][Tarski's parallel postulate implies the 5th postulate of Euclid, the postulate of Playfair and the original parallel postulate of Euclid]]. ~ Roland Coghetto. #ITP #IsabelleHOL #Math
+ [[https://www.isa-afp.org/entries/Blue_Eyes.html][Solution to the xkcd Blue Eyes puzzle (in Isabelle/HOL)]]. ~ Jakub Kądziołka. #ITP #IsabelleHOL
+ [[https://thma.github.io/posts/2021-01-30-How-QuickCheck-destroyed-my-favourite-theory.html][Proving me wrong (How QuickCheck destroyed my favourite theory)]]. ~ Thomas Mahler. #Haskell #FunctionalProgramming #QuickCheck

*** 01-Feb-21
+ [[https://people.mpi-sws.org/~beta/papers/jlamp20.pdf][Verification of dynamic bisimulation theorems in Coq]]. ~ R Fervari, F Trucco, B Ziliani. #ITP #Coq
+ [[https://arxiv.org/abs/2101.11320v1][Tutorial on implementing Hoare logic for imperative programs in Haskell]]. ~ Boro Sitnikovski. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2101.11421v1][Deriving monadic quicksort (Declarative Pearl)]]. ~ Shin-Cheng Mu, Tsung-Ju Chiang. #Haskell #FunctionalProgramming

** January 2021

*** 31-Jan-21
+ [[https://www.bbc.com/mundo/noticias-55815156][Paul Cohen, el matemático que por resolver un problema terminó creando dos mundos]]. ~ Dalia Ventura. #Matemáticas

*** 30-Jan-21
+ [[https://kilthub.cmu.edu/ndownloader/files/26180729][HELIX: From math to verified code]]. ~ Vadim Zaliva. #PhD_Thesis #ITP #Coq #Math
+ [[https://repository.tudelft.nl/islandora/object/uuid:54b01377-1f79-4758-b79b-4859df05dbd6][Implementing the decomposition of soundness proofs of abstract interpreters in Coq]]. ~ Jens de Waard. #MSc_Thesis #ITP #Coq
+ [[https://arxiv.org/abs/2101.09699][Longest segment of balanced parentheses: an exercise in program inversion in a segment problem (Functional Pearl)]]. ~ Shin-Cheng Mu, Tsung-Ju Chiang. #Haskell #FunctionalProgramming
+ [[https://arxiv.org/abs/2101.09700][A greedy algorithm for dropping digits (Functional Pearl)]]. ~ Richard Bird, Shin-Cheng Mu. #Haskell #FunctionalProgramming

*** 29-Jan-21
+ [[https://xenaproject.wordpress.com/2021/01/28/formalising-mathematics-workshop-2][Formalising mathematics: Workshop 2 (Groups and subgroups)]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://mjj.io/2021/01/26/building-a-passphrase-generator-in-haskell/][Building a passphrase generator in Haskell]]. ~ Mathias Jean Johansen. #Haskell #FunctionalProgramming
+ [[https://youtu.be/g2--VL2SkMo][What do we mean by equality?]] ~ Kevin Buzzard (@XenaProject). #Logic #Math
+ [[https://youtu.be/ehlXpfFuLvI][¿Cuántos infinitos existen?️ El teorema de Cantor]]. ~ Urtzi Buijs (@UrtziBuijs). #Matemáticas

*** 28-Jan-21
+ [[https://github.com/leanprover-community/mathlib/blob/6585eff99deca6bb21ae0c84c5c7b609c0406189/archive/imo/imo2013_q5.lean][IMO 2013 Q5 in Lean]]. ~ David Renshaw. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2101.11501][Evolution of artificial intelligence languages, a systematic literature review]]. ~ Emmanuel Adetiba, Temitope John, Adekunle Akinrinmade, Funmilayo Moninuola, Oladipupo Akintade, Joke Badejo. #AI #Programming
+ [[https://tecdigital.tec.ac.cr/revistamatematica/Libros/LaTeX/LaTeX_2018.pdf][Edición de textos científicos con LaTeX]]. (Composición, gráficos, Inkscape, Tikz y presentaciones Beamer). ~ Alexánder Borbón, Walter Mora. #LaTeX

*** 27-Jan-21
+ [[https://github.com/leanprover-community/mathlib/blob/1eb1293706c569ef94776d63fd4900923cc66270/archive/imo/imo2011_q3.lean][IMO 2011 Q3 in Lean]]. ~ David Renshaw. #ITP #LeanProver #Math

*** 26-Jan-21
+ [[https://dl.acm.org/doi/pdf/10.1145/3437992.3439910][Teaching algorithms and data structures with a proof assistant]]. ~ Tobias Nipkow. #ITP #IsabelleHOL
+ [[https://lmcs.episciences.org/7124/pdf][2-Adjoint equivalences in Homotopy Type Theory]]. ~ Daniel Carranza, Jonathan Chang, Krzysztof Kapulkin, Ryan Sandford. #ITP #LeanProver #HoTT
+ [[https://arxiv.org/abs/2101.10166][The Agda universal algebra library and Birkhoff's theorem in Martin-Löf dependent type theory]]. ~ William DeMeo. #ITP #Agda #Math
+ [[https://dl.acm.org/doi/pdf/10.1145/3437992.3439924][Formal verification of authenticated, append-only skip lists in Agda]]. ~ Victor Cacciari Miraldo, Harold Carr, Mark Moir, Lisandra Silva, Guy L. Steele Jr. #ITP #Agda
+ [[https://atcm.mathandtech.org/EP2020/invited/21810.pdf][A Haskell implementation of the Lyness-Moler’s numerical differentiation algorithm]]. ~ Weng Kin Ho, Chu Wei Lim. #Haskell #FunctionalProgramming #Math
+ [[https://cacm.acm.org/magazines/2021/2/250078-lets-not-dumb-down-the-history-of-computer-science/fulltext][Let's not dumb down the history of computer science]]. ~ Donald E. Knuth, Len Shustek. #CompSci

*** 25-Jan-21
+ [[https://xenaproject.wordpress.com/2021/01/24/formalising-mathematics-workshop-1][Formalising mathematics: workshop 1]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math

*** 24-Jan-21
+ [[https://www.johndcook.com/blog/2021/01/23/sums-of-consecutive-reciprocals/][Sums of consecutive reciprocals]]. ~ John D. Cook (@JohnDCook). #Math
+ [[https://republicaweb.es/podcast/descubriendo-la-programacion-funcional-lisp-con-diego-sevilla/][Descubriendo la programación funcional: Lisp con Diego Sevilla (@diegosevilla)]]. #Lisp #CommonLisp #ProgramaciónFuncional12

*** 23-Jan-21
+ [[https://youtu.be/4d6B1C0wuaE][Las bases matemáticas de la programación funcional]]. ~ Héctor Iván Patricio Moreno. #ProgramaciónFuncional
+ [[https://arxiv.org/abs/2101.06759][Proceedings of the 2020 Scheme and Functional Programming Workshop]]. #FunctionalProgramming
+ [[https://arxiv.org/abs/2101.06317][Machine-learning mathematical structures]]. ~ Yang-Hui He. #MachineLearning #Math
+ [[https://www.nature.com/articles/d41586-021-00075-2][Ten computer codes that transformed science]]. ~ Jeffrey M. Perkel. #CompSci via @vardi
+ [[https://notxor.nueva-actitud.org/2021/01/22/tablas-para-calculos-en-org-mode.html][Tablas para cálculos en org-mode]]. #Emacs #OrgMode

*** 22-Jan-21
+ [[https://www.lambdabytes.io/posts/teachinghaskell/][Teaching Haskell means teaching important concepts]]. ~ Jonathan Thaler (@JonathanThaler). #Haskell #FunctionalProgramming

*** 21-Jan-21
+ [[https://xenaproject.wordpress.com/2021/01/21/formalising-mathematics-an-introduction/][Formalising mathematics: an introduction]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://maksbotan.github.io/posts/2021-01-20-callstacks.html][Capturing call stack with Haskell exceptions]]. ~ Maxim Koltsov (@maksbotan). #Haskell #FunctionalProgramming
+ [[https://lispcookbook.github.io/cl-cookbook][The Common Lisp Cookbook [in EPUB and PDF format]]]./#download-in-epub #eBook #CommonLisp
+ [[https://www.gaussianos.com/el-numero-de-dottie/][El número de Dottie]]. ~ M.A. Morales (@gaussianos). #Matemáticas

*** 20-Jan-21
+ [[https://raw.githubusercontent.com/DSLsofMath/DSLsofMath/master/L/snapshots/DSLsofMathBook_snapshot_2021-01-17.pdf][Domain-specific languages of Mathematics [Draft of January 17, 2021]]]. ~ Patrik Jansson (@patrikja), Cezar Ionescu, Jean-Philippe Bernardy. #Haskell #FunctionalProgramming #Math
+ [[https://github.com/DSLsofMath/DSLsofMath][DSLsofMath: Domain-specific languages of Mathematics [Repo]]]. ~ Patrik Jansson (@patrikja) et als. #Haskell #FunctionalProgramming #Math

*** 19-Jan-21
+ [[https://youtu.be/S4xl0CtJIb4][A novice-friendly induction tactic for Lean]]. ~ Jannis Limperg. #ITP #LeanProver
+ [[https://bor0.wordpress.com/2021/01/18/towards-hoare-logic-for-a-small-imperative-language-in-haskell/][Towards Hoare logic for a small imperative language in Haskell]]. ~ Boro Sitnikovski (@BSitnikovski). #Haskell #FunctionalProgramming
+ [[https://www.informatics-europe.org/images/ECSS/ECSS2009/slides/Gottlob.pdf][Computer Science as the continuation of Logic by other means]]. ~ Georg Gottlob. #Logic #CompSci

*** 18-Jan-21
+ [[https://leanprover-community.github.io/lt2021/slides/thomas-LT2021-Galois-Theory.pdf][Formalizing Galois Theory in Lean [Slides]]]. ~ Thomas Browning, Patrick Lutz. #ITP #LeanProver #Math
+ [[https://youtu.be/-6z6qTD_vv8][Formalizing Galois Theory in Lean [Vídeo]]]. ~ Thomas Browning, Patrick Lutz. #ITP #LeanProver #Math
+ [[https://bit.ly/2XPH8Iq][Las Matemáticas son suficientes para mí]]. ~ Juan Arias de Reyna. #Matemáticas
+ [[https://alhassy.github.io/org-special-block-extras][org-special-block-extras (A unified interface for special blocks and links: defblock)]]. ~ Musa Al-hassy./#Judgements-Inference-rules-and-proof-trees #Emacs #OrgMode

*** 16-Jan-21
+ [[https://youtu.be/pMCZFrii4lA][Model theory in Lean]]. ~ Vaibhav Karve. #ITP #LeanProver #Logic
+ [[http://people.rennes.inria.fr/Assia.Mahboubi/assia_hdr_thesis.pdf][Machine-checked computer-aided mathematics]]. ~ Assia Mahboubi. #ITP #Coq #Math
+ [[https://martin.desharnais.me/public/documents/cpp2021-Dyn-Inca-Ubx.pdf][Towards efficient and verified virtual machines for dynamic languages]]. ~ Martin Desharnais, Stefan Brunthaler. #ITP #IsabelleHOL
+ [[https://youtu.be/wOQuW6QFdos][From Aristotle to the iPhone]]. ~ Moshe Y. Vardi (@vardi). #Logic #CompSci

*** 15-Jan-21
+ [[https://vaibhavkarve.github.io/leanteach_2020.html][Axiomatic Geometry in Lean]]. ~ Vaibhav Karve, Lawrence Zhao, Edward Kong, Alex Dolcos, Nicholas Phillips. #ITP #LeanProver #Math
+ [[https://youtu.be/K-kLck8BvDM][Axiomatic Geometry in Lean [Video]]]. ~ Vaibhav Karve. #ITP #LeanProver #Math
+ [[https://github.com/vaibhavkarve/leanteach2020][Axiomatic Geometry in Lean [Code]]]. ~ Vaibhav Karve, Lawrence Zhao, Edward Kong, Alex Dolcos, Nicholas Phillips. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2101.05678][Lebesgue integration]]. (Detailed proofs to be formalized in Coq). ~ François Clément, Vincent Martin. #ITP #Coq #Math
+ [[https://juliu.is/permutate-parsers/][Permutate parsers, don't validate]]. ~ Ju Liu (@arkh4m). #Haskell #FunctionalProgramming
+ [[https://youtu.be/9zuAsGk9xoM][An introduction to ghc-debug: precise memory analysis for Haskell programs]]. ~  Matthew Pickering. #Haskell #FunctionalProgramming
+ [[https://tek.brick.do/a6d9388a-208e-4b18-a219-85457faf69aa][Why exactly I want Boring Haskell to happen]]. ~ Artyom Kazak (@availablegreen). #Haskell #FunctionalProgramming
+ [[https://medium.com/cantors-paradise/beginners-guide-to-mathematical-constructivism-4015ca66825d][Beginner’s guide to mathematical constructivism]]. ~ Jan Gronwald. #Math
+ [[https://interstices.info/en-toute-logique-une-origine-de-lordinateur/][En toute logique: une origine de l’ordinateur]]. ~ Frédéric Prost. #Logic #CompSci
+ [[https://notxor.nueva-actitud.org/2021/01/13/publicar-html-con-org-mode.html][Publicar HTML con Org-Mode]]. #Emacs #OrgMode

*** 14-Jan-21
+ [[http://cl-informatik.uibk.ac.at/software/fortissimo/cpp2021/paper.pdf][A verified decision procedure for the first-order theory of rewriting for linear variable-separated rewrite systems]]. ~ Alexander Lochmann, Aart Middeldorp, Fabian Mitterwallner, Bertram Felgenhauer. #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/1911.00385][A formal proof of PAC learnability for decision stumps]]. ~ Joseph Tassarotti, Koundinya Vajjha, Anindya Banerjee, Jean-Baptiste Tristan. #ITP #LeanProver
+ [[https://github.com/leanprover-community/mathlib/blob/1509c2950946374803b265830452880816e0f0c1/archive/100-theorems-list/83_friendship_graphs.lean][The friendship theorem in Lean]]. ~ Aaron Anderson. #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2009.11403][CertRL: Formalizing convergence proofs for value and policy iteration in Coq]]. ~ Koundinya Vajjha, Avraham Shinnar, Vasily Pestun, Barry Trager, Nathan Fulton. #ITP #Coq
+ [[https://github.com/math-comp/Abel][Abel-Ruffini Theorem as a Mathematical Component]]. ~ Sophie Bernard, Cyril Cohen, Assia Mahboubi, Pierre-Yves Strub. #ITP #Coq #Math
+ [[https://cronokirby.com/posts/2021/01/making-an-io/][Making an IO]]. ~ Lúcás Meier (@cronokirby). #Haskell #FunctionalProgramming

*** 13-Jan-21
+ [[https://www.cs.au.dk/~birke/papers/2021-ms-queue.pdf][Contextual refinement of the Michael-Scott queue (Proof pearl)]]. ~ Simon Friis Vindum, Lars Birkedal. #ITP #Coq
+ [[https://cs.au.dk/~birke/papers/2021-monotone.pdf][Reasoning about monotonicity in separation logic]]. ~ Amin Timany, Lars Birkedal. #ITP #Coq
+ [[https://www-verimag.imag.fr/~monin/Publis/Docs/datalog-cpp21.pdf][Developing and certifying Datalog optimizations in Coq/MathComp]]. ~ Pierre-Léo Bégay, Pierre Crégut, Jean-François Monin. #ITP #Coq
+ [[http://cl-informatik.uibk.ac.at/isafor/papers/cpp2021.pdf][An Isabelle/HOL formalization of AProVE's termination method for LLVM IR]]. ~ Max W. Haslbeck, René Thiemann. #ITP #IsabelleHOL #Haskell
+ [[https://link.springer.com/article/10.1007/s10817-020-09584-7][Certified quantum computation in Isabelle/HOL]]. ~ Anthony Bordg, Hanna Lachnitt, Yijun He. #ITP #IsabelleHOL

*** 12-Jan-21
+ [[http://alexjbest.github.io/talks/lean-generalisation][Automatically generalising theorems using typeclasses in Lean [Slides]]]. ~ Alex  J. Best./#/#ITP #LeanProver #Math
+ [[https://bostonu.zoom.us/rec/play/yPZ5hwU7T5C2wwAUYMKEwed7Y83lsvPEci6CP-AiIel8A9u05OHbOLcAy-mi__tqgg3vBDvhXc4wVY_p.B9N6zDkf2SMpf2Nh?startTime=1609940780000][Automatically generalising theorems using typeclasses in Lean [Video]]]. ~ Alex J. Best. #ITP #LeanProver #Math
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2020.4.pdf][Implementation of two layers type theory in Dedukti and application to Cubical Type Theory]]. ~ Bruno Barras, Valentin Maestracci. #ITP #Dedukti
+ [[https://xenaproject.wordpress.com/2021/01/12/lean-together-2021/][Lean Together 2021]]. ~ Kevin Buzzard (@XenaProject). #ITP #LeanProver #Math
+ [[https://arxiv.org/abs/2005.07059][Formalizing category theory in Agda]]. ~ Jason Z.S. Hu, Jacques Carette. #ITP #Agda #CategoryTheory #Math
+ [[https://shemesh.larc.nasa.gov/people/amd/publications/CPP2021-SAS_RA-draft.pdf][Formal verification of semi-algebraic sets and real analytic functions]]. ~ J. Tanner Slagel, Lauren White, Aaron Dutle. #ITP #PVS #Math
+ [[https://www.dropbox.com/s/q1whqz0v2c0falm/CPP2021-Kolmogorov-complexity.pdf?dl=0][On the formalisation of Kolmogorov complexity]]. ~ Elliot Catt, Michael Norrish. #ITP #HOL4
+ [[https://melkornemesis.medium.com/haskell-explained-3f91658a67d3][Haskell: (.) . (.) explained (Let’s get a grasp of composition equivalences in Haskell)]]. #Haskell #FunctionalProgramming

*** 11-Jan-21
+ [[https://youtu.be/k-YncL7Cd4Q][Formalizing the ring of Witt vectors]]. ~ Robert Y. Lewis. #ITP #LeanProver #Math
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2020.1.pdf][Mechanisation of model-theoretic conservative extension for HOL with ad-hoc overloading]]. ~ Arve Gengelbach, Johannes Åman Pohjola, Tjark Weber. #ITP #HOL4
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2020.2.pdf][Object-level reasoning with logics encoded in HOL Light]]. ~ Petros Papapanagiotou, Jacques Fleuriot. #ITP #HOL_Light #Logic
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?LFMTP2020.3.pdf][Deductive systems and coherence for skew prounital closed categories]]. ~ Tarmo Uustalu, Niccolò Veltri, Noam Zeilberger. #ITP #Agda
+ [[https://www.foxhound.systems/blog/why-haskell-for-production/][Why Haskell is our first choice for building production software systems]]. ~ Christian Charukiewicz (@charukiewicz). #Haskell #FunctionalProgramming

*** 10-Jan-21
+ [[https://github.com/mhk119/fibonacci_squares][144 is the largest square in the Fibonacci Sequence (A formalisation of Cohn's Proof)]]. ~ Harun Khan #ITP #LeanProver #Math via @XenaProject
+ [[https://github.com/Lix0120/eudoxus/][The Eudoxus real numbers in Lean]]. ~ Xiang Li. #ITP #LeanProver #Math via @XenaProject
+ [[http://wwwf.imperial.ac.uk/~buzzard/xena/pdfs/Set_theory_Type_Theory_and_the_future_of_Proof_verification_software.pdf][Set theory, type theory and the future of proof verification software]]. ~ James Palmer. #ITP #LeanProver #Math via @XenaProject
+ [[https://github.com/mdickinson/snippets/blob/master/proofs/isqrt/src/isqrt.lean][A formal proof of correctness of a recursive integer square root algorithm]]. ~ Mark Dickinson. #ITP #LeanProver #Math

*** 09-Jan-21
+ [[https://arxiv.org/abs/2101.02602][Schemes in Lean]]. ~ Kevin Buzzard, Chris Hughes, Kenny Lau, Amelia Livingston, Ramon Fernández Mir, Scott Morrison. #ITP #LeanProver #Math
+ [[https://user.informatik.uni-bremen.de/fritjof/pdfs/performance-aspects-of-correctness-oriented-synthesis-flows.pdf][Performance aspects of correctness-oriented synthesis flows]]. ~ F. Bornebusch, C. Lüth, R. Wille, R. Drechsler. #ITP #Coq
+ [[https://hal.archives-ouvertes.fr/hal-03096253/document][An anti-locally-nameless approach to formalizing quantifiers]]. ~ Olivier Laurent. #ITP #Coq
+ [[https://arxiv.org/abs/2009.13761][Formal verification of arithmetic RTL: Translating Verilog to C++ to ACL2]]. ~ David M. Russinoff. #ITP #ACL2
+ [[http://www.cs.ru.nl/~freek/100][Formalizing 100 theorems]]. ~ Freek Wiedijk. #ITP #Math
+ [[https://leanprover-community.github.io/100.html][Formalizing 100 theorems in Lean]]. #ITP #Math #LeanProver
+ [[https://github.com/effectfully/sketches/tree/master/trouble-in-paradise-fibonacci][Trouble in paradise: Fibonacci]]. #Haskell #FunctionalProgramming
+ [[https://oleg.fi/gists/posts/2021-01-08-indexed-optics-dilemma.html][Indexed optics dilemma]]. ~ Oleg Grenrus (@phadej). #Haskell #FunctionalProgramming
+ [[https://jsannemo.se/aps.pdf][Algorithmic problem solving]]. ~ Johan Sannemo. #eBook #Programming #Algorithms
+ [[https://www.gaussianos.com/la-saga-del-infinito-de-mates-mike/][La saga del infinito, de Mates Mike]]. ~ M.A. Morales (@gaussianos). #Matemáticas

*** 08-Jan-21
+ [[https://youtu.be/eSXiClL4COw][LeanStep: a dataset and environment for (interactive) neural theorem proving [Video]]]. ~ Jason Rute. #ITP #Leanprover #MachineLearning
+ [[https://docs.google.com/presentation/d/1poOu2gP9mSGAdAFvOupHvf4tpgD33jACQLJAVcphA1g/edit?usp=sharing][LeanStep: a dataset and environment for (interactive) neural theorem proving [Slides]]]. ~ Jason Rute. #ITP #Leanprover #MachineLearning
+ [[https://arxiv.org/abs/2101.02690][Theorem proving and algebra]]. ~ Joseph A. Goguen. #eBook #ITP #Math
+ [[https://www.michaelpj.com/blog/2021/01/02/elementary-programming.html][Elementary programming]]. ~ Michael Peyton Jones. #Haskell #Programming
+ [[https://well-typed.com/blog/2021/01/first-look-at-hi-profiling-mode/][A first look at info table profiling]]. ~ Matthew Pickering, David Eichmann. #Haskell #FunctionalProgramming
+ [[https://oleg.fi/gists/posts/2021-01-07-discrimination-benchmarks.html][Benchmarks of discrimination package]]. ~ Oleg Grenrus (@phadej).  #Haskell #FunctionalProgramming
+ [[https://www.metalevel.at/prolog/clpz][CLP(FD) and CLP(ℤ): Prolog integer arithmetic]]. ~ Markus Triska (@MarkusTriska). #Prolog #LogicProgramming #CLP
+ [[https://eclipseclp.org/doc/tutorial.pdf][ECLIPSE (A tutorial introduction)]]. ~ Andrew M. Cheadle et als. #Prolog #LogicProgramming #CLP
+ [[https://www.cs.us.es/~jalonso/cursos/d-pl-03/temas/tema-8.pdf][Programación lógica con restricciones]]. #Prolog #CLP
+ [[https://www.cs.us.es/~jalonso/apuntes/Soluciones_logicas_de_problemas_logicos/Tema_2.html][Soluciones lógicas de problemas lógicos]]. #Prolog #ProgramaciónLógica #CLP

*** 07-Jan-21
+ [[https://www.cs.utexas.edu/users/moore/publications/acl2-induction-heuristics.pdf][ACL2 induction heuristics]]. ~ J Strother Moore. #ITP #ACL2
+ [[https://youtu.be/cLuEaAsUvL4][Word problem for one-relator groups]]. ~ Chris Hughes. #ITP #LeanProver #Math
+ [[https://github.com/gihanmarasingha/mth1001_tutorial][A Lean introduction to pure mathematics]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Logic #Math
+ [[https://github.com/gihanmarasingha/mth1001_sphinx][MTH1001 (Mathematical structures) in Lean]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Logic #Math
+ [[https://github.com/gihanmarasingha/ems_reals][EMS reals (A project for investigating the real number system via the interactive theorem prover Lean)]]. ~ Gihan Marasingha (@gihanmarasingha). #ITP #LeanProver #Logic #Math
+ [[https://people.mpi-sws.org/~eva/papers/cpp2021.pdf][Lassie: HOL4 tactics by example]]. ~ Heiko Becker et als.. #ITP #HOL4
+ [[https://gupea.ub.gu.se/bitstream/2077/67193/1/gupea_2077_67193_1.pdf][Formalizing domain models of the typed and the untyped lambda calculus in Agda]]. ~ David Lidell. #MSc_Thesis #ITP #Agda

*** 06-Jan-21
+ [[https://www.cs.rice.edu/~vardi/papers/SATSolvers21.pdf][On the unreasonable effectiveness of SAT Solvers]]. ~ Vijay Ganesh, Moshe Y. Vardi. #Logic #ATP #SAT_Solvers
+ [[https://github.com/bhgomes/lean-riemann-hypothesis][Riemann Hypothesis in Lean]]. ~ Brandon H. Gomes (@brandonhgomes), Alex Kontorovich. #ITP #LeanProver #Math
+ [[https://leanprover-community.github.io/lt2021/slides/Macbeth-slides.pdf][An example of a manifold [Slides]]]. ~ Heather Macbeth. #ITP #LeanProver #Math
+ [[https://youtu.be/deppJ2q_5a0][An example of a manifold [Video]]]. ~ Heather Macbeth. #ITP #LeanProver #Math
+ [[http://maude.cs.illinois.edu/w/images/7/70/Maude-tapas.pdf][Symbolic computation in Maude: Some tapas]]. ~ José Meseguer. #ITP #Maude
+ [[https://serokell.io/blog/compile-time-evaluation-haskell][Compile-time evaluation in Haskell]]. ~ Vladislav Zavialov. #Haskell #FunctionalProgramming
+ [[https://rjlipton.wordpress.com/2021/01/05/predictions-for-2021/][Predictions for 2021]]. | Gödel’s Lost Letter and P = NP. ~ R.J. Lipton & K.W. Regan. #CompSci

*** 05-Jan-21
+ [[https://arxiv.org/abs/2101.00127][Formalizing Hall's Marriage Theorem in Lean]]. ~ Alena Gusakov, Bhavik Mehta, Kyle A. Miller. #ITP #LeanProver #Math
+ [[https://doisinkidney.com/pdfs/masters-thesis.pdf][Finiteness in cubical type theory]]. ~ Donnacha Oisín Kidney (@oisdk). #MSc_Thesis #ITP #Agda #HoTT
+ [[https://youtu.be/UeGvhfW1v9M][An overview of Lean 4]]. ~ Leonardo de Moura, Sebastian Ullrich. #ITP #LeanProver
+ [[https://leanprover-community.github.io/lt2021/slides/floris-measure.pdf][Measure theory in Lean [slides]]]. ~ Floris van Doorn. #ITP #LeanProver #Math
+ [[https://youtu.be/yH3-zE0bYCU][Measure theory in Lean [video]]]. ~ Floris van Doorn. #ITP #LeanProver #Math
+ [[https://www.haskellforall.com/2021/01/the-visitor-pattern-is-essentially-same.html][The visitor pattern is essentially the same thing as Church encoding]]. ~ Gabriel Gonzalez (@GabrielG439). #Haskell #FunctionalProgramming
+ [[http://www.cs.nott.ac.uk/~pszgmh/123.pdf][Functional Pearl: It’s easy as 1,2,3]]. ~ Graham Hutton. #Haskell #FunctionalProgramming
+ [[https://iokasimov.github.io/posts/2021/01/composable-monad-transformers][Trying to compose non-composable: monads]]. ~ Murat Kasimov. #Haskell #FunctionalProgramming
+ [[https://youtu.be/l13D-CcwM5A][Learning TypeFamilies together! ~  Flavio Corpa (@FlavioCorpa)]]. #Haskell #FunctionalProgramming

*** 04-Jan-21
+ [[http://ceur-ws.org/Vol-2710/paper21.pdf][Tautology checkers in Isabelle and Haskell]]. ~ Jørgen Villadsen. #Logic #ITP #IsabelleHOL #Haskell #FunctionalProgramming
+ [[http://ceur-ws.org/Vol-2710/paper13.pdf][Theorem proving for Lewis logics of counterfactual reasoning]]. ~ Marianna Girlando, Bjoern Lellmann, Nicola Olivetti, Stefano Pesce, Gian Luca Pozzato. #ATP #Logic #Prolog #LogicProgramming
+ [[https://github.com/leanprover-community/mathlib/blob/384ba88bf56209e52a0bed1b7176805c09b05c9a/src/computability/DFA.lean][Deterministic Finite Automata (DFA) in Lean]]. ~ Fox Thomson. #ITP #LeanProver
+ [[https://github.com/leanprover-community/mathlib/blob/384ba88bf56209e52a0bed1b7176805c09b05c9a/src/computability/NFA.lean][Nondeterministic Finite Automata (NFA) in Lean]]. ~ Fox Thomson. #ITP #LeanProver
+ [[https://blog.poisson.chat/posts/2021-01-03-iterative-categories.html][Theory of iteration and recursion]]. ~ Li-yao Xia (@lysxia). #Haskell #FunctionalProgramming
+ [[https://bindthegap.news/issues/02dec2020.html][Bind the gap (Monthly digital functional programming magazine) [Issue 2, Dec 2020]]]. #Haskell #FunctionalProgramming
+ [[https://www.parsonsmatt.org/2020/02/04/mirror_mirror.html https://www.parsonsmatt.org/2020/02/04/mirror_mirror.html][Mirror mirror: Reflection and encoding via]]. ~ Matt Parsons (@mattoflambda). #Haskell #FunctionalProgramming
+ [[https://wespiser.com/posts/2021-01-03-Lessons-Learned-From-A-Year-Of-Haskell.html][Lessons learned from a year of writing Haskell]]. ~ Adam Wespiser (@wespiser). #Haskell #FunctionalProgramming
+ [[https://oleg.fi/gists/posts/2021-01-04-coindexed-optics.htm][Coindexed optics]]. ~ Oleg Grenrus (@phadej).l#Haskell #FunctionalProgramming

*** 03-Jan-21
+ [[https://github.com/leanprover-community/mathlib/blob/04f8fd744a1d8e9f5aec9fd8d4809d4345365916/src/group_theory/dihedral.lean][Dihedral groups in Lean]]. ~ Shing Tak Lam. #ITP #LeanProver #Math

*** 02-Jan-21
+ [[https://arxiv.org/abs/2012.14133v1][Verifying C11-style weak memory libraries]]. ~ Sadegh Dalvandi, Brijesh Dongol. #ITP #IsabelleHOL
+ [[https://leanprover.github.io/lean4/doc/whatIsLean.html][Lean 4 manual]]. #Lean4 #FunctionalProgramming #ITP
+ [[https://www.mdpi.com/2227-7390/9/1/38/pdf][Formalization of the equivalence among completeness theorems of real number in Coq]]. ~ Yaoshun Fu, Wensheng Yu. #ITP #Coq #Math
+ [[https://www.lri.fr/~keller/Documents-recherche/Publications/cpp21.pdf][A Coq formalization of data provenance]]. Véronique Benzaken et als. #ITP #Coq
+ [[https://www.ps.uni-saarland.de/~kirst/downloads/talk_TSEM_20.pdf][Synthetic undecidability proofs in Coq]]. ~ Dominik Kirst. #ITP #Coq

*** 01-Jan-21
+ [[https://schooloffp.co/2020/12/27/two-reasons-why-you-found-learning-haskell-hard.html][Two reasons why you found learning haskell hard]]. ~ School of FP (@schooloffp). #Haskell #FunctionalProgramming
+ [[https://tek.brick.do/64693fb8-39b4-40a5-8762-768009eeed91][Learn just enough about linear types]]. ~ Artyom Kazak (@availablegreen). #Haskell #FunctionalProgramming

* Previous readings
+ [[./Readings of the year 2020.org][Readings of the year 2020]]
+ [[./Readings of the year 2019.org][Readings of the year 2019]]
+ [[./Readings of the year 2018.org][Readings of the year 2018]]
+ [[./Readings of the year 2017.org][Readings of the year 2017]]
+ [[./Readings of the year 2016.org][Readings of the year 2016]]
+ [[./Readings of the year 2010 al 2015.org][Readings from the year 2010 to 2015]]
