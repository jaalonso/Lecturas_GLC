#+TITLE: Lecturas del Grupo de Lógica Computacional
#+OPTIONS: ^:nil

Este repositorio es una recopilación de lecturas compartidas en la lista
de correo del [[http://www.glc.us.es][grupo de lógica computacional]]. La recopilación está
ordenada por la fecha de su publicación en la lista. Al final de cada
artículo se encuentra etiquetas relativas a los sistemas que usa o a su
contenido.

* Contenido :TOC:
 - [[#lecturas-del-año-2018][Lecturas del año 2018]]
   - [[#enero-2018][Enero 2018]]
   - [[#febrero-2018][Febrero 2018]]
   - [[#marzo-2018][Marzo 2018]]
   - [[#abril-2018][Abril 2018]]
   - [[#mayo-2018][Mayo 2018]]
   - [[#junio-2018][Junio 2018]]
   - [[#julio-2018][Julio 2018]]
 - [[#lecturas-del-año-2017][Lecturas del año 2017]]
   - [[#enero-2017][Enero 2017]]
   - [[#febrero-2017][Febrero 2017]]
   - [[#marzo-2017][Marzo 2017]]
   - [[#abril-2017][Abril 2017]]
   - [[#mayo-2017][Mayo 2017]]
   - [[#junio-2017][Junio 2017]]
   - [[#julio-2017][Julio 2017]]
   - [[#agosto-2017][Agosto 2017]]
   - [[#septiembre-2017][Septiembre 2017]]
   - [[#octubre-2017][Octubre 2017]]
   - [[#noviembre-2017-][Noviembre 2017 ]]
   - [[#diciembre-2017][Diciembre 2017]]
 - [[#lecturas-del-año-2016][Lecturas del año 2016]]
   - [[#enero-2016][Enero 2016]]
   - [[#febrero-2016][Febrero 2016]]
   - [[#marzo-2016][Marzo 2016]]
   - [[#abril-2016][Abril 2016]]
   - [[#mayo-2016][Mayo 2016]]
   - [[#junio-2016][Junio 2016]]
   - [[#julio-2016][Julio 2016]]
   - [[#agosto-2016][Agosto 2016]]
   - [[#septiembre-2016][Septiembre 2016]]
   - [[#octubre-2016][Octubre 2016]]
   - [[#noviembre-2016][Noviembre 2016]]
   - [[#diciembre-2016][Diciembre 2016]]
 - [[#lecturas-anteriores-al-2016][Lecturas anteriores al 2016]]
   - [[#lecturas-del-año-2015][Lecturas del año 2015]]
   - [[#lecturas-del-año-2014][Lecturas del año 2014]]
   - [[#lecturas-del-año-2013][Lecturas del año 2013.]]
   - [[#lecturas-del-año-2012][Lecturas del año 2012.]]
   - [[#lecturas-del-año-2011][Lecturas del año 2011.]]
   - [[#lecturas-del-año-2010][Lecturas del año 2010.]]

* Lecturas del año 2018

** Enero 2018

+ [[http://www.glc.us.es/~jalonso/exercitium/posiciones-de-las-mayusculas][Exercitium: "Posiciones de las mayúsculas"]]. #Haskell #I1M2017
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesion-de-raices-enteras-de-los-numeros-primos][Exercitium: "Sucesión de raíces enteras de los números primos"]]. 
  #Haskell #I1M2017
+ [[http://www.glc.us.es/~jalonso/exercitium/recorrido-por-niveles-de-arboles-binarios][Exercitium: "Recorrido por niveles de árboles binarios"]]. 
  #Haskell #I1M2017
+ [[http://books.goalkicker.com/HaskellBook][Haskell notes for professionals book]]. #eBook #Haskell
+ [[https://arxiv.org/abs/1712.09288][An extensible ad hoc interface between Lean and Mathematica]]. ~ R.Y. Lewis
  #ITP #Lean #Mathematica
+ [[https://markkarpov.com/tutorial/th.html][Template Haskell tutorial]]. ~ M. Karpov (@mrkkrp) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/factorial-modulo][Exercitium: "Factorial módulo"]]. #Haskell #I1M2017
+ [[http://www.cs.us.es/~fsancho/?e=189][Algoritmo de Monte Carlo aplicado a búsquedas en espacios de estados]]. ~
  F. Sancho (@sanchocaparrini) #IA
+ [[https://github.com/A1kmm/proofsweeper][ProofSweeper: Play Minesweeper by formally proving your moves in Idris]]. ~
  Andrew Miller #Idris #Haskell
+ [[https://m-renaud-haskell-containers.readthedocs.io/en/docs/][Haskell containers package]]. ~ Matt Renaud #Haskell 
+ [[https://www.isa-afp.org/entries/Falling_Factorial_Sum.html][The falling factorial of a sum]]. ~ L. Bulwahn #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/ordenacion-segun-una-cadena][Exercitium: "Ordenación según una cadena"]]. #Haskell #I1M2017
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-panorama-de-la-demostracion-asistida-por-ordenador/][RA2017: Panorama de la demostración asistida por ordenador]]. #Prover9 #ACL2 #PVS #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-manejo-de-ficheros-en-haskell/][I1M2017: Manejo de ficheros en Haskell]]. #Haskell
+ [[https://matthias-endler.de/2018/functional-mathematics/][Functional programming for mathematical computing]]. ~ Matthias Endler
  (@matthiasendler) #Haskell
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/raw/master/Examenes_de_PF_con_Haskell.pdf][Libro de exámenes de programación funcional con Haskell (versión del 6 de
  enero de 2018)]]. #Haskell #I1M2017
+ [[https://www.math.wisc.edu/~miller/old/m771-10/kunen770.pdf][The foundations of mathematics]]. ~ K. Kunen #eBook #Logic #Math
+ [[http://comonad.com/reader/2018/the-state-comonad/][Is State a Comonad?]] ~ Edward Kmett (@kmett) #Haskell
+ [[https://pron.github.io/posts/computation-logic-algebra-pt1][Finite of sense and infinite of thought: a history of computation, logic and
  algebra, part I]]. ~ Ron Pressler #Logic #Math #CompSci
+ [[https://raywang.tech/2017/12/20/Formal-Verification:-The-Gap-between-Perfect-Code-and-Reality][Formal verification: the gap between perfect code and reality]]. ~ Ray Wang #Formal_methods
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-apocalipticos][Exercitium: Números apocalípticos]]. #Haskell #I1M2017
+ [[https://media.ccc.de/v/34c3-9105-coming_soon_machine-checked_mathematical_proofs_in_everyday_software_and_hardware_development][Coming soon: machine-checked mathematical proofs in everyday software and
  hardware development]]. ~ Adam Chlipala #ITP
+ [[http://ace.cs.ohio.edu/~gstewart/papers/snaarkl.pdf][Snårkl: Somewhat practical, pretty much declarative verifiable computing in Haskell]]. ~ G. Stewart, S. Merten, L. Leland #Haskell
+ [[https://arxiv.org/abs/1801.00471][TWAM: A certifying abstract machine for logic programs]]. ~ B. Bohrer, K. Crary
  #ITP #LF
+ [[https://www.isa-afp.org/entries/Kuratowski_Closure_Complement.html][The Kuratowski closure-complement theorem in Isabelle/HOL]]. ~ P. Gammie,
  G. Gioiosa #ITP #IsabelleHOL #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/enumeracion-de-los-numeros-enteros][Exercitium: Enumeración de los números enteros]]. #Haskell #I1M2017
+ [[http://kaygun.tumblr.com/post/169392012379/the-shoelace-formula-for-the-area-of-a-polygon][The Shoelace formula for the area of a polygon]]. ~ Atabey Kaygun
  (@Atabey_Kaygun) #CommonLisp #Math
+ [[https://blog.merovius.de/2018/01/08/monads-are-just-monoids.html][Monads are just monoids in the category of endofunctors]]. ~ Axel Wagner
  (@TheMerovius) #Haskell #Math
+ [[https://medium.freecodecamp.org/10-awkward-moments-in-math-history-d364706d902d][10 awkward moments in math history]]. ~ Elena Nisioti (@elennisioti1) #Math
  #History
+ [[https://github.com/joom/hezarfen][Hezarfen: a theorem prover for intuitionistic propositional logic in Idris]]. ~
  Joomy Korkut #Idris #Haskell #Logic
+ [[https://m.magnet.xataka.com/preguntas-no-tan-frecuentes/las-universidades-de-eeuu-al-fin-lo-han-reconocido-empezar-a-programar-por-java-es-una-mala-idea][Las universidades de EEUU al fin lo han reconocido: empezar a programar por
  Java es una mala idea]]. ~ Esther Miguel Trula
+ [[http://www.cs.us.es/~jalonso/cursos/i1m/ejercicios/ejercicios-I1M-2017.pdf][Libro con las soluciones de las 16 primeras relaciones de ejercicios de
  programación con Haskell]]. #Haskell #I1M2017
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-somirp][Exercitium: Números somirp]]. #Haskell #I1M2017
+ [[https://medium.com/@ptitfred/haskell-and-fp-a83b5b22f67f][Haskell et programmation fonctionnelle, ma conviction]]. ~ Frédéric Menou
  (@ptit_fred) #Haskell
+ [[https://www.isa-afp.org/entries/Taylor_Models.html][A formally verified implementation of multivariate Taylor models in
  Isabelle/HOL]]. ~ C. Traut, F. Immler #ITP #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/ordenacion-por-frecuencia][Exercitium: Ordenación por frecuencia]]. #Haskell #I1M2017
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-malvados-y-odiosos][Exercitium: Números malvados y odiosos]]. #Haskell #I1M2017
+ [[https://www.isa-afp.org/entries/Green.html][An Isabelle/HOL formalisation of Green's theorem]]. ~ M. Abdulaziz,
  L.C. Paulson #ITP #IsabelleHOL #Math
+ [[https://blog.jle.im/entry/introduction-to-singletons-2.html][Introduction to Singletons (Part 2)]]. ~ Justin Le (@mstk) #Haskell
+ [[https://openlibra.com/es/book/a-friendly-introduction-to-mathematical-logic][A friendly introduction to mathematical logic]]. ~ Christopher C. Leary #eBook
  #Logic
+ [[https://jeremykun.com/2017/12/29/np-hard-does-not-mean-hard/][NP-hard does not mean hard]]. ~ Jeremy Kun (@jeremyjkun) | Math ∩ Programming
  #CompSci
+ [[http://oeuf.uwplse.org/oeuf-cpp18.pdf][Œuf: Minimizing the Coq extraction TCB]]. ~ E. Mullen et als. #Coq
+ [[https://github.com/conal/talk-2018-essence-of-ad][The simple essence of automatic differentiation]]. ~ Conal Elliott (@conal)
  #Haskell
+ [[https://github.com/leftaroundabout/linearmap-family][linearmap-family: Purely-functional, coordinate-free linear algebra]]. ~ Justus
  Sagemüller #Haskell #Math
+ [[https://github.com/mandubian/neurocat][From neural networks to the Category of composable supervised learning
  algorithms in Scala with compile-time matrix checking based on
  singleton-types]]. ~ Pascal Voitot (@mandubian) #Scala
+ [[https://docs.google.com/presentation/d/1Zc2A7nkpuxnCRlILPeKRJCWIqv-gtsMJIizDQ9a3vPo][CodeWorld: The why, what, and how of teaching Haskell to children]]. ~ Chris
  Smith #Haskell
+ [[http://blog.stephenwolfram.com/2016/09/how-to-teach-computational-thinking][How to teach computational thinking]]. ~ Stephen Wolfram #Teaching #CompSci
+ [[https://blogs.ams.org/matheducation/2017/01/09/integrating-computer-science-in-math-the-potential-is-great-but-so-are-the-risks][Integrating computer science in math: the potential is great, but so are the
  risks]]. ~ Emmanuel Schanzer #Teaching #CompSci #Math
+ [[http://www.BootstrapWorld.org][Bootstrap]]: a research project at Brown University that offers a series of
  curricular modules built around purely mathematical
  programming. #Teaching #CompSci #Math 
+ [[http://www.glc.us.es/~jalonso/exercitium/sumas-parciales-de-nicomaco][Exercitium: Sumas parciales de Nicómaco]]. #Haskell #I1M2017
+ [[http://publicdomainreview.org/2016/11/10/let-us-calculate-leibniz-llull-and-computational-imagination]["Let us calculate!": Leibniz, Llull, and the computational imagination]]. ~
  Jonathan Gray 
+ [[https://arxiv.org/abs/1801.04163][A tableaux calculus for reducing proof size]]. ~ M.P. Lettmann, N. Peltier
  #Logic #ATP
+ [[http://wiki.science.ru.nl/tfpie/images/3/32/Alegre.pdf][Haskell in middle and high school mathematics]]. ~ F. Alegre, J. Moreno
  #Haskell #Math
+ [[https://github.com/alphalambda/k12math][Mathematics for middle and high school in Haskell]]. #Haskell #Math
+ [[https://codurance.com/2018/01/11/applicatives-validation][Applicative functors and data validation, part II]]. ~ Carlos Morera de la
  Chica #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/enumeracion-de-los-numeros-enteros/][Exercitium: "Enumeración de los números enteros"]].  #Haskell
  #I1M2017
+ [[https://hal.inria.fr/hal-01673518/file/dissertation.pdf][Extending higher-order logic with predicate subtyping: application to PVS]]. ~
  Frédéric Gilbert #ITP #PVS
+ [[http://www.cs.nott.ac.uk/~psxjb5/publications/2017-BrackerNilsson-SupermonadsAndSuperapplicatives-UnderConsideration.pdf][Supermonads and superapplicatives]]. ~ J. Bracker, H. Nilsson #Haskell #Agda
+ [[http://rewriting.gforge.inria.fr/1-33/main.pdf][Lecture notes on rewriting theory]]. ~ F. Blanqui 
+ [[http://www.ssrg.nicta.com.au/publications/csiro_full_text/Amani_BSB_18.pdf][Towards verifying Ethereum smart contract bytecode in Isabelle/HOL]]. ~
  S. Amani, M. Bégel, M. Bortin, M. Staples #ITP #IsabelleHOL
+ [[https://youtu.be/X_jVcWEgp4A][Guía turística de Sevilla con Scratch]]. ~ @programamos #Scratch
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-somirp][Exercitium: "Números somirp"]]. #Haskell #I1M2017
  #I1M2017
+ [[http://cl-informatik.uibk.ac.at/users/cek/docs/18/jpck-cpp18.pdf][Formal microeconomic foundations and the First Welfare Theorem]]. ~
  C. Kaliszyk, J. Parsert #ITP #IsabelleHOL
+ [[https://homes.cs.washington.edu/~emina/blog/2017-06-23-a-primer-on-sat.html][A primer on boolean satisfiability]]. ~ Emina Torlak #Logic #SAT #Racket via @ozanerdem 
+ [[https://courses.cs.washington.edu/courses/cse507/17wi/calendar.html][Course: Computer-aided reasoning for software]]. ~ E. Torlak
  #AutomatedReasoning #Logic
+ [[https://lamp.epfl.ch/files/content/sites/lamp/files/teaching/progfun/slides/week1-1-annot.pdf][Functional programming principles in Scala]]. ~ Martin Odersky
  #FunctionalProgramming #Scala
+ [[http://www.glc.us.es/~jalonso/exercitium/ordenacion-por-frecuencia][Exercitium: "Ordenación por frecuencia"]]. #Haskell #I1M2017
+ [[http://www.cs.unc.edu/~amos/data/csci2017-isse.pdf][Formalizing data management systems: a case study of Syndicate protocol]]. ~
  C.K. Wang, H. Xu #ITP #Coq
+ [[http://comonad.com/reader/2018/computational-quadrinitarianism-curious-correspondences-go-cubical/][Computational Quadrinitarianism (Curious Correspondences go Cubical)]]. ~
  Gershom Bazerman #CompSci
+ [[https://arxiv.org/abs/1801.05423][A random walk through experimental mathematics]]. ~ E.Y.S. Chan, R.M. Corless
  #Math #Programming
+ [[http://cl-informatik.uibk.ac.at/teaching/ws17/fp/pdfs/lambda.pdf][λ-calculus]]. ~ Christian Sternagel #Logic #Haskell #CompSci
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-malvados-y-odiosos][Exercitium: "Números malvados y odiosos"]]. #Haskell #I1M2017
  #I1M2017
+ [[http://www.cs.princeton.edu/~olivierb/papers/shrink.pdf][Shrink fast correctly!]] ~ Olivier Savary Bélanger, Andrew W. Appel #ITP #Coq
+ [[http://kaygun.tumblr.com/post/169730814509/hofstadters-q-sequence][Hofstadter’s Q sequence]]. ~ Atabey Kaygun (@Atabey_Kaygun) #CommonLisp #Math
+ [[http://admission.cs.cityu.edu.hk/CommonMyths][Ten common myths about Computer Science]]. #CompSci
+ [[http://cl-informatik.uibk.ac.at/teaching/ws17/fp/pdfs/reasoning.pdf][Reasoning about functional programs]]. ~ Christian Sternagel #Logic #Haskell 
+ [[https://avigad.github.io/formal_methods_in_education][Resources for teaching with formal methods]]. ~ Jeremy Avigad #FormalMethods 
+ [[http://arg.ciirc.cvut.cz/fmpa/slides/intro1.pdf][Computer understandable mathematics]]. ~ Josef Urban #ATP #ITP #Math
+ [[https://repositorio.inesctec.pt/bitstream/123456789/5441/1/P-00M-T6A.pdf][The specification and analysis of use properties of a nuclear control system]]. 
  ~ M.D. Harrison, P.M. Masci, J. Creissac Campos and P. Curzon #ITP #PVS
+ [[http://cl-informatik.uibk.ac.at/teaching/ws17/fp/pdfs/efficiency.pdf][Efficiency of functional programs]]. ~ Christian Sternagel and Harald Zankl
  #Haskell
+ [[http://www.cl.cam.ac.uk/~jrh13/papers/joerg.pdf][History of interactive theorem proving]]. ~ John Harrison, Josef Urban and
  Freek Wiedijk #ITP
+ [[https://es.slideshare.net/TiinaPartanen/computational-thinking-as-an-emergent-learning-trajectory-of-mathematics][Computational thinking as an emergent learning trajectory of mathematics]]. ~
  Tiina Partanen #Math #CompSci
+ [[https://hal.inria.fr/tel-01680213/document][Verification of a concurrent garbage collector]]. ~ Yannick Zakowski #PhDThesis
  #ITP #Coq
+ [[http://cl-informatik.uibk.ac.at/teaching/ws17/fp/pdfs/typing.pdf][Typing of functional programs]]. ~ Christian Sternagel #Logic
  #FunctionalProgramming
+ [[https://programamos.es/creando-un-videojuego-paso-a-paso-con-scratch-desde-cero][Creando un videojuego paso a paso con Scratch desde cero]]. ~ Jesús Moreno León
  (@J_MorenoL) #Scratch
+ [[https://coda.wickstrom.tech/episodes/2018-01-19-domain-modelling-with-haskell-data-structures.html][Domain modelling with Haskell: data structures]]. ~ Oskar Wickström #Haskell
+ [[https://popl18.sigplan.org/event/plmw-popl-2018-liquidhaskell-overview][Liquid Haskell: refinement types for Haskell]]. ~ Niki Vazou (@nikivazou)
  #Haskell #LiquidHaskell
+ [[http://www.glc.us.es/~jalonso/exercitium/sumas-parciales-de-nicomaco][Exercitium: "Sumas parciales de Nicómaco"]]. #Haskell #I1M2017
+ [[https://arxiv.org/abs/1801.05206][Sequences, yet functions: the dual nature of data-stream processing]]. ~
  S. Herbst, J. Tenschert, A.M. Wahl, K. Meyer-Wegener #ITP #Coq
+ [[http://cl-informatik.uibk.ac.at/teaching/ws17/fp/content.php][Course: Functional programming]]. ~ Christian Sternagel et als. #Haskell
+ [[https://dbp.io/essays/2018-01-16-how-to-prove-a-compiler-correct.html][How to prove a compiler correct]]. ~ Daniel Patterson #Haskell 
+ [[http://ozark.hendrix.edu/~yorgey/pub/explaining-errors-slides.pdf][Explaining type errors]]. ~ B. Yorgey, R. Eisenberg, H. Eades #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/fractal-hexagonal][Exercitium: "Fractal hexagonal"]]. #Haskell #I1M2017
+ [[https://arxiv.org/abs/1801.04026][Relational characterisations of paths]]. ~ R. Berghammer, H. Furusawa,
  W. Guttmann, P. Höfner #ITP #IsabelleHOL
+ [[https://mmhaskell.com/blog/2018/1/22/functors-done-quick][Functors done quick!]] ~ James Bowen (@james_OWA) #Haskell
+ [[https://programamos.es/laberinto-principiantes][Programando un laberinto con Scratch, ¡para principiantes!]] ~ Alejandra
  Sánchez Acosta #Scratch vía @programamos
+ [[https://popl18.sigplan.org/event/plmw-popl-2018-dafny-overview][Dafny overview]]. ~ K. Rustan M. Leino #Dafny
+ [[https://blog.jle.im/entry/interpreters-a-la-carte-duet.html]["Interpreters a la Carte" in Advent of Code 2017 Duet]]. ~ Justin Le (@mstk)
  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-como-diferencias-de-potencias][Exercitium: "Números como diferencias de potencias"]]. #Haskell
  #I1M2017
  #I1M2017
+ [[http://matryoshka.gforge.inria.fr/pubs/rp_paper.pdf][Formalization of Bachmair and Ganzinger's ordered resolution prover]]. ~
  A. Schlichtkrull, J.C. Blanchette, D. Traytel and U. Waldmann ([[https://www.isa-afp.org/entries/Ordered_Resolution_Prover.html][Code]]) #ITP
  #IsabelleHOL
+ [[https://eli.thegreenplace.net/2018/haskell-functions-as-functors-applicatives-and-monads][Haskell functions as functors, applicatives and monads]]. ~ Eli Bendersky
  (@elibendersky) #Haskell
+ [[https://argumatronic.com/posts/2018-01-23-the-nesting-instinct.html][The nesting instinct]]. ~ Julie Moronuki (@argumatronic) #Haskell
+ [[https://arxiv.org/abs/1801.06566][Model theory and machine learning]]. ~ H. Chase, J. Freitag #Logic #AI
+ [[http://www.glc.us.es/~jalonso/exercitium/escalada-hasta-un-primo][Exercitium: "Escalada hasta un primo"]]. #Haskell #I1M2017
+ [[https://arxiv.org/abs/1801.07528][Computer-assisted proving of combinatorial conjectures over finite domains: a
  case study of a chess conjecture]]. ~ P. Janičić, F. Marić, M. Maliković #ITP
  #IsabelleHOL
+ [[https://bartoszmilewski.com/2018/01/23/pointwise-kan-extensions][Pointwise Kan extensions]]. ~ Bartosz Milewski (@BartoszMilewski)
  #CategoryTheory #Haskell
+ [[http://inventwithpython.com/cracking][Cracking codes with Python: An introduction to building and breaking ciphers]]. 
  ~ Al Sweigart #eBook #Programming #Python
+ [[http://www.redprl.org][RedPRL: a proof assistant for Computational Higher-Dimensional Type Theory]]. 
  #ITP #RedPRL #SML
+ [[http://www.cs.cmu.edu/~rwh/talks/POPL18-Tutorial.pdf][Computational (higher) type theory]]. ~ R. Harper and C. Angiuli #RedPRL #SML
+ [[https://www.contextfreeart.org/gallery2/][Context Free/cfdg]]: a simple language for generating stunning images. With
  only a few lines you can describe abstract art, beautiful organic scenery,
  and many kinds of fractals.
+ [[https://github.com/ucsd-progsys/elsa][Elsa: a lambda calculus evaluator]]. ~ R. Jhala @RanjitJhala #Haskell #Logic
  #LambdaCalculus 
+ [[http://www.glc.us.es/~jalonso/exercitium/terna-pitagorica-a-partir-de-un-lado][Exercitium: "Terna pitagórica a partir de un lado"]]. #Haskell
  #I1M2017
+ [[https://www.nature.com/articles/d41586-018-00604-6][China enters the battle for AI talent]]. #AI  
+ [[https://arxiv.org/abs/1801.05950][Toward scalable verification for safety-critical deep networks]]. ~ L. Kuper et als. #NeuralNetworks #SMT
+ [[https://elpais.com/elpais/2018/01/24/el_aleph/1516812203_870138.amp.html][El curioso caso de la secuencia de Goodstein]]. ~ M.A. Morales (@gaussianos) |
  El Aleph #Matemáticas
+ [[https://plus.maths.org/content/conversation-stephen-cook-0][A conversation with Stephen Cook]]. #CompSci
+ [[http://kaygun.tumblr.com/post/170044995839/collatz-sequence-yet-again][Collatz sequence (yet again)]]. ~ Atabey Kaygun (@Atabey_Kaygun) #CommonLisp
  #Math
+ [[https://www.dataquest.io/blog/introduction-functional-programming-python/][Introduction to functional programming in Python]]. ~ Spiro Sideris
  #FunctionalProgramming #Python
+ [[https://arxiv.org/abs/1801.08441][Finitary-based domain theory in Coq: An early report]]. ~ M.A. AbdelGawad #ITP
  #Coq
+ [[https://coda.wickstrom.tech/episodes/2018-01-22-domain-modelling-with-haskell-generalizing-with-foldable-and-traversable.html][Domain modelling with Haskell: Generalizing with Foldable and Traversable]]. ~
  Oskar Wickström #Haskell
+ [[https://storm-country.com/blog/LambdaCase][LambdaCase in the wild]]. ~ Matt Noonan (@BanjoTragedy) #Haskell
+ [[http://blog.sumtypeofway.com/recursion-schemes-part-41-2-better-living-through-base-functors][Recursion schemes, Part 4½: Better living through base functors]]. ~ Patrick
  Thomson (@importantshock) #Haskell
+ [[https://codurance.com/2018/01/25/lambda-calculus-in-clojure-part-2/][Lambda calculus in Clojure (Part 2)]]. ~ Sergio Rodrigo Royo #LambdaCalculus
  #Clojure
+ [[http://www.openculture.com/2017/08/free-you-can-now-read-classic-books-by-mit-press-on-archive-org.html][Free: You can now read classic books by MIT Press on archive.org]] #eBooks
+ [[https://www.forbes.com/sites/quora/2018/01/24/when-is-haskell-more-useful-than-r-or-python-in-data-science/#6e0cdcc069e4][When is Haskell more useful than R or Python in Data Science?]] ~ Tikhon Jelvis
  (@tikhonjelvis) #Haskell #Rstats #Python #DataScience
+ [[https://www.tweag.io/posts/2015-09-08-programming-r-at-native-speed-in-haskell.html][Programming R at native speed using Haskell]]. ~ M. Boespflug, F. Domínguez,
  A. Vershilov #Haskell #Rstats
+ [[https://github.com/patrickdoc/hash-graph][A hashing-based graph implementation in Haskell]]. ~ Patrick Dougherty #Haskell
+ [[http://www.usrsb.in/selling-laziness.html][Selling laziness]]. ~ Alex Beal (@beala) #Programming
+ [[https://www.cs.kent.ac.uk/people/staff/dat/miranda/whyfp90.pdf][Why functional programming matters]]. ~ John Hughes #FunctionalProgramming
  #Miranda
+ [[http://community.wolfram.com/groups/-/m/t/943405][A toy Wolfram Language interpreter in Haskell]]. ~ Yonghao Jin #Haskell
+ [[http://www.usrsb.in/org-mode.html][Org-mode: An integrated language and editor]]. ~ Alex Beal (@beala) #Emacs
  #Haskell
+ [[https://medium.com/@willkurt/why-sum-types-matter-in-haskell-ba2c1ab4e372][Why sum types matter in Haskell]]. ~ Will Kurt (@willkurt) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/complemento-potencial][Exercitium: "Complemento potencial"]].  #Haskell #I1M2017
+ [[https://dl.acm.org/ft_gateway.cfm?id=3158104&ftid=1936978&dwn=1&CFID=3130691&CFTOKEN=c3031a6fe3e8c92e-6E2750E0-9DA8-6D3C-4BBD90D8137A463D][Intrinsically-typed definitional interpreters for imperative languages]]. ~
  C. Bach Poulsen, A. Rouvoet, A. Tolmach, R. Krebbers #ITP #Agda
+ [[http://tomasp.net/academic/drafts/monads/paper.pdf][Monads are not what they seem (Uncovering the hidden nature of programming concepts)]]. 
  ~ T. Petricek #Math #CompSci
+ [[http://www.cs.tufts.edu/comp/116/archive/fall2017/xqi.pdf][Securing complex software systems using formal verification and specification]]. 
  ~ X. Qi #FormalVerification
+ [[https://youtu.be/z3pm1dFvhMQ][Programación funcional: la programación del futuro]]. ~ Moises Vázquez
  #ProgramacionFuncional #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/sumas-parciales-de-juzuk][Exercitium: "Sumas parciales de Juzuk"]]. #Haskell #I1M2017
+ [[https://link.springer.com/content/pdf/10.1007%2Fs10817-017-9448-y.pdf][A verified ODE solver and the Lorenz attractor]]. ~ F. Immler #ITP #IsabelleHOL
+ [[https://youtu.be/0u3lY2eUHpA][Un vistazo al futuro: revisando demostraciones matemáticas con la computadora]]. 
  ~ Moisés Vázquez #DAO
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesion-de-digitos-0-y-1-alternados][Exercitium: "Sucesión de dígitos 0 y 1 alternados"]]. #Haskell
  #I1M2017
+ [[http://www.mathnet.or.kr/mathnet/thesis_file/JKMS-54-5-1521-1536.pdf][Formalizing the meta-theory of first-order predicate logic]]. ~ H. Herberlin,
  S.Y. Kim, G. Lee #ITP #Coq #Logic
+ [[http://www.logicmatters.net/2018/01/29/category-theory-a-gentle-introduction][Category theory: a gentle introduction]]. ~ Peter Smith (@PeterSmith)
  #CategoryTheory
+ [[https://pastel.archives-ouvertes.fr/tel-01691185/document][Investigations in computer-aided mathematics: experimentation, computation,
  and certification]]. ~ Thomas Sibut Pinote #PhDThesis #ITP #Coq
+ [[https://pps2018.soic.indiana.edu/files/2017/12/dselsam_pps_2018.pdf][Formal methods for probabilistic programming]]. ~ D. Selsam, P. Liang,
  D.L. Dill #ITP #Lean
+ [[https://github.com/dselsam/certigrad][Certigrad: Bug-free machine learning on stochastic computation graphs]]. ~
  D. Selsam #ITP #Lean

** Febrero 2018

+ [[http://www.glc.us.es/~jalonso/exercitium/sucesion-de-lichtenberg][Exercitium: "Sucesión de Lichtenberg"]]. #Haskell #I1M2017
+ [[http://diginole.lib.fsu.edu/islandora/object/fsu:407377/datastream/PDF/view][Homotopy type theory, univalent foundation, and binary trees]]. ~ R. Beauvile #ITP #Coq #HoTT
+ [[http://www.cse.chalmers.se/~patrikj/talks/DSLsofMath_FP_WM_2018_Jansson.pdf][DSLsofMath: typing mathematics]]. ~ Patrik Jansson (@patrikja), Cezar Ionescu
  #Haskell #Math
+ [[https://arxiv.org/abs/1801.10513][The Elfe system: Verifying mathematical proofs of undergraduate students]]. ~
  Maximilian Doré, Krysia Broda #Math #Elfe
+ [[https://www.slideshare.net/nckumar/ai-for-marketing-presentation-by-chandrakumar][AI for marketing]]. ~ Chandrakumar #AI 
+ [[http://www.glc.us.es/~jalonso/exercitium/relacion-definida-por-un-arbol][Exercitium: "Relación definida por un árbol"]]. #Haskell #I1M2017
+ [[https://arxiv.org/pdf/1802.00405][HOL Light QE]]. ~ Jacques Carette, William M. Farmer, Patrick Laskowski #ITP
  #HOL_Light
+ [[https://medium.com/@robbie0630/dissecting-the-state-monad-with-operational-and-free-monads-3b965479f13c][Dissecting the State monad with Operational and Free monads]]. ~ Robbie Langer
  #Haskell
+ [[http://www.lcc.uma.es/~blas/apuntes/PDAv/lambdaC.pdf][El λ–cálculo (sin tipos y con tipos)]]. ~ B.C. Ruiz y P. Guerrero #Matemáticas
  #Computación
+ [[https://arxiv.org/pdf/1503.09060][A tutorial introduction to the lambda calculus]]. ~ Raul Rojas #Logic #CompSci
+ [[http://www.ist.tugraz.at/projects/isac/publ/RR_neuper.pdf]["Speaking" mathematics with "systems that explain themselves"]]. ~ Walther
  Neuper #ITP #Math
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-deduccion-natural-proposicional-con-isabellehol][RA2017: Deducción natural proposicional con Isabelle/HOL]]. #IsabelleHOL
+ [[https://arxiv.org/abs/1801.08766][Relational equivalence proofs between imperative and MapReduce algorithms]]. ~
  B. Beckert et als. #ITP #Coq
+ [[http://www.joachim-breitner.de/blog/735-The_magic_%E2%80%9CJust_do_it%E2%80%9D_type_class][The magic “Just do it” type class]]. ~ J. Breitner (@nomeata) #Haskell
+ [[https://github.com/mikkokotila/jupyter4kids][Numerical computing is fun (A guide to principles of computer science and
  numerical computing for all ages)]]. ~ Mikko Kotila #CompSci #Python #Jupiter
+ [[http://learn.hfm.io/fractals.html][Spirals, snowflakes & trees: Recursion in pictures]]. ~ G. Keller (@gckeller) &
  M.M.T. Chakravarty (@TacticalGrace) #Haskell #Fractals
+ [[https://gregheartsfield.com/fractal-hs/][Fractals in Haskell (Escape-time fractals created with Haskell and GD)]]. ~
  Greg Heartsfield #Haskell #Fractals
+ [[http://fhtr.blogspot.com.es/2008/12/drawing-tree-with-haskell-and-cairo.html][Drawing trees with Haskell and Cairo]]. ~ Ilmari Heikkinen #Haskell #Fractals
+ [[https://github.com/fniessen/refcard-org-beamer][Org Beamer reference card]]. ~ Fabrice Niessen #Emacs #OrgMode #LaTeX
+ [[https://www.isa-afp.org/entries/LLL_Basis_Reduction.html][A verified Lenstra-Lenstra-Lovász basis reduction algorithm in
  Isabelle/HOL]]. ~ J. Divasón, S. Joosten, R. Thiemann and A. Yamada #ITP
  #IsabelleHOL #Math
+ [[https://medium.com/@sahabi/haskelling-bitcoin-7e7128a9d4b4][Haskelling Bitcoin (The case for Bitcoin development in Haskell)]]. ~
  M. Alshiekh (@MAlashiekh) #Haskell #Bitcoin
+ [[https://jncf2018.lip6.fr/files/lecture-notes/jncf2018-mahboubi.pdf][Calcul formel et preuves formelles]]. ~ Assia Mahboubi #ITP #Mizar #ACL2
  #IsabelleHOL #HOL_Light #Coq #Agda #Lean
+ [[https://dl.acm.org/citation.cfm?id=3167090][A monadic framework for relational verification: Applied to information
  security, program equivalence, and optimizations]]. ~ N. Grimm et als. #SMT
  #Fsharp
+ [[http://www.glc.us.es/~jalonso/exercitium/maxima-distancia-en-arbol][Exercitium: "Máxima distancia en árbol"]]. #Haskell #I1M2017
  #I1M2017
+ [[https://dl.acm.org/ft_gateway.cfm?id=3167103&type?pdf][Efficient certification of complexity proofs: formalizing the
  Perron–Frobenius theorem]]. ~ J. Divasón et als. #ITP #IsabelleHOL
+ [[http://bit.ly/2s78m03][Ciencias de la Computación (mejores programas y programadores)]]. ~ Lourdes del
  Carmen González Huesca #Computación
+ [[https://sites.google.com/ciencias.unam.mx/lcomp172-7040/inicio][Curso: Lógica computacional]]. ~ Lourdes del Carmen González Huesca #Lógica
  #Computación #Haskell #Prolog #Coq
+ [[http://vaibhavsagar.com/blog/2018/02/04/revisiting-monadic-parsing-haskell][Revisiting 'Monadic parsing in Haskell']]. ~ Vaibhav Sagar #Haskell
+ [[https://dodisturb.me/posts/2018-01-28-Cellular-Christmas-Tree.html][Cellular Christmas Tree]]. ~ Mistral Contrastin (@madgen_) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/relaciones-arboreas][Exercitium: "Relaciones arbóreas"]]. #Haskell #I1M2017
+ [[https://dl.acm.org/citation.cfm?id=3167091][A Coq formalization of normalization by evaluation for Martin-Löf type
  theory]]. ~ P. Wieczorek, D. Biernacki #ITP #Coq
+ [[https://arxiv.org/abs/1705.02601][Logic lectures: Gödel’s basic logic course at Notre Dame]]. #Logic
+ [[http://www.haskellforall.com/2018/02/the-wizard-monoid.html][The wizard monoid]]. ~ G. González #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/recorrido-del-robot][Exercitium: "Recorrido del robot"]]. #Haskell #I1M2017
+ [[https://arxiv.org/abs/1802.01795][A Lean formalization of Matiyasevič's theorem]]. ~ Mario Carneiro #ITP #Lean
+ [[https://github.com/lnds/9d9l][9 desafíos en 9 lenguajes de programación (#Clojure, #Erlang, #Fsharp, #Go,
  #Haskell, #Kotlin, #Rust, #Scala y #Swift)]]. ~ Eduardo Díaz Cortés
+ [[http://kaygun.tumblr.com/post/170534412629/egyptian-fractions][Egyptian fractions]]. ~ Atabey Kaygun (@Atabey_Kaygun) #CommonLisp #Math
+ [[https://www.tweag.io/posts/2018-02-05-free-monads.html][Free monads for cheap interpreters]]. ~ James Haydon #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/exponentes-de-hamming][Exercitium: "Exponentes de Hamming"]]. #Haskell #I1M2017
+ [[https://www.isa-afp.org/entries/First_Order_Terms.html][First-order terms in Isabelle/HOL]]. ~ Christian Sternagel, René Thiemann #ITP
  #IsabelleHOL
+ [[http://scholarship.claremont.edu/cgi/viewcontent.cgi?article=1369&context=jhm][Predicting the next US President by simulating the electoral college]]. ~
  B. Kostadinov #Rstats #DataScience #CompSci
+ [[http://ilyasergey.net/pnp/pnp.pdf][Programs and proofs (Mechanizing Mathematics with dependent types)]]. ~ Ilya
  Sergey (@ilyasergey) #ITP #Coq #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/digitos-iniciales][Exercitium: "Dígitos iniciales"]]. #Haskell #I1M2017
+ [[https://www.isa-afp.org/entries/Treaps.html][Treaps in Isabelle/HOL]]. ~ Manuel Eberl, Max Haslbeck and Tobias Nipkow #ITP
  #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-deduccion-natural-de-primer-orden-con-isabellehol][RA2017: Deducción natural de primer orden con Isabelle/HOL]]. #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-demostracion-en-isabelle-de-la-correccion-de-un-compilador][RA2017: Demostración en Isabelle/HOL de la corrección de un compilador]]. 
  #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/matrices-en-haskell-2/][I1M2017: Matrices en Haskell]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-sobre-vectores-y-matrices-en-haskell][I1M2017: Ejercicios sobre vectores y matrices en Haskell]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-presentacion-del-curso-de-logica-matematica-y-fundamentos-2/][LMF2017: Presentación del curso de “Lógica matemática y fundamentos”]]. #Lógica
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-sintaxis-y-semantica-de-la-logica-proposicional-3/][LMF2017: Sintaxis y semántica de la lógica proposicional]]. #Lógica
+ [[https://www.isa-afp.org/entries/Error_Function.html][The error function in Isabelle/HOL]]. ~ Manuel Eberl #ITP #IsabelleHOL
+ [[http://kaygun.tumblr.com/post/170645268864/linus-sequence][Linus sequence]]. ~ Atabey Kaygun (@Atabey_Kaygun) #CommonLisp
+ [[https://github.com/olligobber/lambdacalc][Lambda calculus tools and interpreter written in Haskell]]. #Haskell
  #LambdaCalculus
+ [[http://blog.computationalcomplexity.org/2018/02/for-love-of-algorithms.html][For the love of algorithms]]. ~ Lance Fortnow (@fortnow)  
+ [[https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018][An opinionated guide to Haskell in 2018]]. ~ Alexis King (@lexi_lambda)
  #Haskell
+ [[https://github.com/berewt/twerk][Twerk, a twitter archive parser with pipes utilities (in Haskell)]]. ~ Nicolas
  B. (@BeRewt) #Haskell
+ [[https://www.isa-afp.org/entries/LLL_Factorization.html][A verified factorization algorithm for integer polynomials with polynomial
  complexity]]. ~ Jose Divasón, Sebastiaan Joosten, René Thiemann and Akihisa
  Yamada #ITP #IsabelleHOL
+ [[https://arxiv.org/pdf/1802.01738][Formal verification of spacecraft control programs using a metalanguage for
  state transformers]]. ~ A. Mokhov, G. Lukyanov, J. Lechner #Haskell
+ [[https://arxiv.org/pdf/1802.00588][When good components go bad: formally secure compilation despite dynamic
  compromise]]. ~ G. Fachini et als. #ITP #Coq
+ [[http://www1.eafit.edu.co/asr/courses/ffpl-CM0848/ffpl-slides.pdf][Foundations of functional programming languages]]. ~ Andrés Sicard Ramírez
  #FunctionalProgramming #LambdaCalculus
+ [[http://www1.eafit.edu.co/asr/pubs/others/acevedo-acosta--echeverri-jurado-2017.una-formalisacion-del-sistema-de-los-numeros-reales-pantalla.pdf][Una formalización del sistema de los números reales]]. ~ Jorge O. Acevedo y
  José L. Echeverri #ITP #Agda #Math
+ [[https://www.campusmvp.es/recursos/post/que-lenguajes-de-programacion-se-usan-mas-los-fines-de-semana.aspx][¿Qué lenguajes de programación se usan más los fines de semana?]] ~ Julia Silge (@juliasilge) #DataScience #Haskell via @jeiped12
+ [[https://stackoverflow.blog/2017/02/07/what-programming-languages-weekends][What programming languages are used most on weekends?]] ~ Julia Silge
  (@juliasilge) #DataScience #Haskell via @jeiped12
+ [[http://www.glc.us.es/~jalonso/exercitium/celdas-interiores-de-una-reticula][Exercitium: "Celdas interiores de una retícula"]]. #Haskell #I1M2017
+ [[https://ts.data61.csiro.au/publications/nicta_full_text/8655.pdf][Verified over-approximation of the diameter of propositionally factored
  transition systems]]. ~ M. Abdulaziz, C. Gretton, M. Norrish #ITP #HOL4
+ [[https://github.com/jonaprieto/stlctalk/raw/master/slides/slides.pdf][The simply typed lambda calculus (in Agda)]]. ~ Jonathan Prieto-Cubides #ITP
  #Agda #LambdaCalculus
+ [[http://doisinkidney.com/posts/2018-02-11-monadic-list.functions.html][Monadic list functions]]. ~ Donnacha Oisín Kidney (@oisdk) #Haskell
+ [[http://bit.ly/2G9xoOv][Sn̊arkl: Somewhat practical, pretty much declarative verifiable computing in
  Haskell]]. ~ G. Stewart, S. Merten, L. Leland #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/division-equitativa][Exercitium: "División equitativa"]]. #Haskell #I1M2017
+ [[https://hal.archives-ouvertes.fr/hal-01684093/document][Hydra Ludica: Une preuve d'impossibilité de prouver simplement]]. ~ P. Castéran
  #ITP #Coq
+ [[https://blog.jle.im/entry/introducing-the-backprop-library.html][Introducing the backprop library]]. ~ Justin Le (@mstk) #Haskell
+ [[https://blog.desdelinux.net/puede-blockchain-hacernos-mas-libres][¿Cómo puede “Blockchain” hacernos más libres?]] #Blockchain
+ [[https://github.com/weirdNox/org-noter][Org-noter: A synchronized, Org-mode, document annotator]]. ~ Gonçalo Santos
  (@weirdNox) #Emacs
+ [[http://www.cl.cam.ac.uk/archive/mjcg/plans/Coinduction.html][Corecursion and coinduction: what they are and how they relate to recursion
  and induction]]. ~ Mike Gordon
+ [[https://www.forbes.com/sites/quora/2018/02/12/what-i-wish-id-known-when-i-started-functional-programming/#1ef1884348e1][What I Wish I'd Known When I Started Functional Programming]]. ~ Tikhon Jelvis
  (@tikhonjelvis) #FunctionalProgramming
+ [[https://arxiv.org/abs/1712.03894][Coqatoo: Generating natural language versions of Coq proofs]]. ~ A. Bedford
  #ITP #Coq
+ [[https://github.com/expipiplus1/exact-real][Exact real arithmetic implemented by fast binary Cauchy sequences]]. ~ Joe
  Hermaszewski (@expipiplus1) #Haskell #Math
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-sintaxis-y-semantica-de-la-logica-proposicional-2-2][LMF2017: Sintaxis y semántica de la lógica proposicional (2)]]. #Lógica
+ [[http://www.glc.us.es/~jalonso/exercitium/huecos-binarios][Exercitium: "Huecos binarios"]]. #Haskell #I1M2017
+ [[https://arxiv.org/pdf/1802.01336][Verifying asymptotic time complexity of imperative programs in Isabelle/HOL]]. 
  ~ B. Zhan, M.P.L. Haslbeck #ITP #IsabelleHOL
+ [[http://www.cl.cam.ac.uk/archive/mjcg/plans/Backpropagation.html][My attempt to understand the backpropagation algorithm for training neural networks]]. ~ Mike Gordon
+ [[https://arxiv.org/abs/1802.02732][The higher-order prover Leo-III]]. ~ A. Steen, C. Benzmüller #ITP
+ [[http://www.glc.us.es/~jalonso/exercitium/recorrido-de-arboles-en-espiral][Exercitium: "Recorrido de árboles en espiral"]]. #Haskell #I1M2017
+ [[http://www.cs.princeton.edu/~appel/papers/wand-frame.pdf][Proof pearl: Magic wand as frame]]. ~ Q. Cao, S. Wang, A. Hobor, A.W. Appel
  #ITP #Coq
+ [[https://codearsonist.com/reading-for-programmers][Reading for programmers]]. ~ P. Limanowski (@peel) #Emacs
+ [[http://blog.acthompson.net/2018/02/quotes-about-programming-and-computer.html][Quotes about programming and computer science]]. ~ A. Thompson (@alfredtwo)
  #Quote #Programming #CompSci
+ [[http://kaygun.tumblr.com/post/170731635904/van-ecks-sequence][Van Eck’s sequence]]. ~ Atabey Kaygun (@Atabey_Kaygun) #CommonLisp #Math
+ [[https://mmhaskell.com/blog/2018/2/12/applicative-parsing-i-building-the-foundation][Applicative parsing I: building the foundation]]. ~ James Bowen (@james_OWA)
  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/periodos-de-fibonacci][Exercitium: "Períodos de Fibonacci"]]. #Haskell #I1M2017
+ [[http://www.cs.princeton.edu/~appel/papers/VST-Floyd.pdf][VST-Floyd: A separation logic tool to verify correctness of C programs]]. ~
  Q. Cao, L. Beringer, S. Gruetter, J. Dodds, A.W. Appel #ITP #Coq
+ [[https://arxiv.org/abs/1802.03292][Mathematical Logic in Computer Science]]. ~ A. Kfoury #Logic #CompSci
+ [[https://cacm.acm.org/news/225322-do-computers-really-think/fulltext][Do computers really think?]] ~ R. Colin Johnson #AI 
+ [[http:arxiv.org/abs/1802.05340][From gameplay to symbolic reasoning: Learning SAT solver heuristics in the style of Alpha(Go) Zero]]. 
  ~ F. Wang, T. Rompf #ATP #SAT 
+ [[http://matryoshka.gforge.inria.fr/pubs/supdata_paper.pdf][Superposition with datatypes and codatatypes]]. ~ J.C. Blanchette, N. Peltier,
  S. Robillard #ATP #Vampire
+ [[http://kenta.blogspot.com.es/2018/02/omqzhxkn-lagrange-four-square-theorem.html][Lagrange four-square theorem examples]]. ~ Ken T Takusagawa #Haskell #Math
+ [[https://dzone.com/articles/conventional-interfaces-in-functional-programming][Conventional interfaces in functional programming]]. ~ Carlos Morera #Haskell 
+ [[https://emanueleviola.wordpress.com/2018/02/16/i-believe-pnp][I believe P=NP]]. ~ Emanuele Viola #CompSci #Math 
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-modulos-en-haskell][I1M2017: Módulos en Haskell]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-las-librerias-de-vectores-y-matrices-en-haskell/][I1M2017: Las librerías de vectores y matrices]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-estadistica-descriptiva-y-functores-aplicativos-en-haskell/][I1M2017: Estadística descriptiva (y functores aplicativos)]]. #Haskell 
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-de-estadistica-descriptiva-con-las-librerias-de-haskell][I1M2017: Ejercicios de estadística descriptiva con las librerías]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-ejercicios-de-sintaxis-y-semantica-de-la-logica-proposicional][LMF2017: Ejercicios de sintaxis y semántica de la lógica
  proposicional]]. #Lógica
+ [[https://arxiv.org/abs/1802.03685][Learning a SAT solver from single-bit supervision]]. ~ D. Selsam et als. #ATP
  #SAT #NeuralNetwork
+ [[https://github.com/hubbards/group-theory-haskell][Group theory in Haskell]]. ~ Spencer Hubbard #Haskell #Math
+ [[https://bartoszmilewski.com/2018/02/17/free-monoidal-functors][Free monoidal functors]]. ~ Bartosz Milewski (@BartoszMilewski) #Haskell
  #CategoryTheory
+ [[https://github.com/lehins/massiv][massiv: Efficient Haskell arrays featuring parallel computation]]. ~
  Alexey Kuleshevich #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-trimorficos][Exercitium: "Números trimórficos"]]. #Haskell #I1M2017
+ [[https://arxiv.org/abs/1802.04007][ProofWatch: Watchlist guidance for large theories in E]]. ~ Z. Goertzel,
  J. Jakubův, S. Schulz, J. Urban #APT
+ [[https://github.com/hubbards/relational-algebra-haskell][Relational algebra in Haskell]]. ~ Spencer Hubbard #Haskell #Math 
+ [[https://github.com/lehins/haskell-exercises][Haskell exercises with automatic tests]]. ~ Alexey Kuleshevich #Haskell
+ [[http://neilmitchell.blogspot.com.es/2018/02/atomic-expressions-generically.html][Atomic expressions generically]]. ~ Neil Mitchell #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/menor-numero-divisible-por-10n-cuyos-digitos-suman-n][Exercitium: "Menor número divisible por 10^n cuyos
  dígitos suman n"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://arxiv.org/abs/1802.03375][ATPboost: Learning premise selection in binary setting with ATP feedback]]. ~
  B. Piotrowski, J. Urban #ATP #ML
+ [[https://github.com/hubbards/stlc-haskell][Simply typed lambda calculus in Haskell]]. ~ Spencer Hubbard #Haskell #Math 
+ [[https://dl.acm.org/citation.cfm?id=3133911][A verified messaging system]]. ~ W. Mansky, A.W. Appel, A. Nogin #ITP #Coq
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-consecuencia-logica-y-demostrabilidad/][LMF2017: Consecuencia lógica y demostrabilidad]]. #Lógica
+ [[http://www.glc.us.es/~jalonso/exercitium/arboles-binarios-completos][Exercitium: "Árboles binarios completos"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://hal.archives-ouvertes.fr/hal-01703922/document][A formal proof of the minor-exclusion property for treewidth-two graphs]]. 
  ~ C. Doczkal, G. Combette, D. Pous #ITP #Coq
+ [[https://bartoszmilewski.com/2018/02/20/free-monoidal-profunctors][Free monoidal profunctors]]. ~ Bartosz Milewski (@BartoszMilewski)
  #Haskell #CategoryTheory
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-que-no-son-cuadrados][Exercitium: "Números que no son cuadrados"]]. #Haskell
  #I1M2017
  #Haskell #I1M2017
+ [[https://arxiv.org/abs/1802.04315][Higher groups in Homotopy Type Theory]]. ~ U. Buchholtz, F. van Doorn,
  E. Rijke #ITP #Lean #Math #HoTT
+ [[https://hal.inria.fr/hal-01707376/document][Journées francophones des langages applicatifs 2018 (JFLA 2018)]]. ~
  S. Boldo, N. Magaud
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TTFP/][Type theory and functional programming]]. ~ S. Thompson #eBook
  #FunctionalProgramming #TypeTheory
+ [[https://blog.infinitenegativeutility.com/2017/12/some-notes-about-how-i-write-haskell][Some notes about how I write Haskell]]. ~ @aisamanra #Haskell
+ [[http://www.cs.cornell.edu/courses/cs6180/2017fa/notes/week4/lecture8/Martin-Lof-ConstructiveMathematicsAndComputerProgramming][Constructive mathematics and computer programming]]. ~ P. Martin-Löf
  #Math #CompSci
+ [[http://www.cs.cornell.edu/courses/cs6180/2017fa/notes/week14/CS6180-Lect26.pdf][Automated reasoning and ultra-intuitionism]]. ~ R.L. Constable #Logic
  #ATP #ITP
+ [[http://www.scitepress.org/Papers/2017/62578/62578.pdf][Educating computer science educators online (A Racket MOOC for
  elementary math teachers of Finland)]]. ~ T. Partanen, P. Niemelä,
  L. Mannila, T. Poranen #Racket
+ [[http://www.glc.us.es/~jalonso/exercitium/vertices-de-un-cuadrado][Exercitium: "Vértices de un cuadrado"]]. #Haskell #I1M2017
  #I1M2017
+ [[http://www.cmm.uchile.cl/~mbodin/paperoj/coqpl18.pdf][A Coq formalisation of a core of R]]. ~ M. Bodin #ITP #Coq #Rstats
+ [[https://www.slideshare.net/JarekRatajski/eta-88717991][Beauty and the beast (Eta Haskell for JVM)]]. ~ Jarek Ratajski
  (@jarek000000) #Haskell
+ [[https://elpais.com/elpais/2018/02/19/ciencia/1519033592_636265.html][David Hilbert y la defensa del rigor matemático]]. ~ F. Bombal #Matemáticas
+ [[https://janmasrovira.gitlab.io/ascetic-slug/post/ascii-fractals/][ASCII fractals in Haskell]]. ~ Jan Mas Rovira  #Haskell
+ [[https://arxiv.org/abs/1802.07284][Logic programming applications: What are the abstractions and
  implementations?]] ~ Y.A. Liu #LogicProgramming
+ [[https://hal.archives-ouvertes.fr/hal-01702815/document][Making agile development processes fit for V-style certification
  procedures]]. ~ S. Bezzecchi, P. Crisafulli, C. Pichot, B. Wolff #ITP
  #IsabelleHOL
+ [[https://github.com/MaiaVictor/cedille-core][A minimal (<500 LOC) programming language capable of proving theorems
  about its own terms]]. #Haskell #Logic
+ [[http://www.microsiervos.com/archivo/espacio/fallo-programacion-desvio-primer-ariane-5-2018-de-trayectoria.html][Un fallo de programación desvió al primer Ariane 5 de 2018 de su
  trayectoria]]. ~ @Wicho #Programación
+ [[https://cacm.acm.org/blogs/blog-cacm/225148-lets-not-forget-the-science-in-computer-science/fulltext][Let's not forget the 'Science' in 'Computer Science']]. ~ W.S. Saba #CompSci 
+ [[https://arxiv.org/abs/1707.05371][Comparing classical and relativistic kinematics in first-order
  logic]]. ~ K. Lefever, G. Székely #Logic #Physics
+ [[http://openlogicproject.org/2018/02/22/modal-logic-propositional-logic-tableaux/][Modal logic! Propositional logic! Tableaux!]] ~ R. Zach (@RrrichardZach)
  #Logic via @OpenLogicProj
+ [[http://builds.openlogicproject.org/courses/boxes-and-diamonds/bd-screen.pdf][Boxes and diamonds (An open introduction to modal logic)]]. ~ R. Zach
  (@RrrichardZach) #eBook #Logic
+ [[https://www.jstatsoft.org/article/view/v046i03/v46i03.pdf][A multi-language computing environment for literate programming and reproducible research]]. ~ E. Schulte, D. Davison, T. Dye, C. Dominik
  #Emacs
+ [[https://github.com/erikriverson/org-mode-R-tutorial/blob/master/org-mode-R-tutorial.org][Org-mode and R: An introduction]]. ~ Erik Iverson #Emacs #OrgMode #Rstats
+ [[https://www.r-project.org/conferences/useR-2011/TalkSlides/Contributed/16Aug_1115_FocusI_4-ReportingWorkflows_3-Leha.pdf][The emacs org-mode (Reproducible research and beyond)]]. ~ A. Leha
  #Emacs #OrgMode #Rstats
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-combinatoria-en-haskell][I1M2017: Combinatoria en Haskell]]. #Haskell #Matemáticas
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-calculo-numerico-en-haskell][I1M2017: Cálculo numérico en Haskell]]. #Haskell #Matemáticas
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-calculo-simbolico-con-maxima][I1M2017: Cálculo simbólico con Maxima]]. #Maxima #Matemáticas
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-deduccion-natural-proposicional-1-2][LMF2017: Deducción natural proposicional (1)]]. #Lógica
+ [[http://www21.in.tum.de/~nipkow/pubs/dp.pdf][Verified memoization and dynamic programming]]. ~ S. Wimmer, S. Hu,
  T. Nipkow #ITP #IsabelleHOL
+ [[https://github.com/jwbuurlage/category-theory-programmers][Notes on category theory in the context of (functional) programming]]. ~
  J.W. Buurlage #FunctionalProgramming #Haskell #CategoryTheory
+ [[http://chrispenner.ca/posts/asts-with-fix-and-free.html][ASTs with Fix and Free]]. ~ Chris Penner #Haskell
+ [[https://youtu.be/SzA2YODtgK4][Getting started with Org mode]]. ~ Harry Schwartz #Emacs #OrgMode
+ [[http://www.glc.us.es/~jalonso/vestigium/slc2018-presentacion-del-seminario-de-logica-computacional-2018/][SLC2018: Presentación del “Seminario de Lógica Computacional” (2018)]].
+ [[https://idontgetoutmuch.wordpress.com/2018/02/25/reproducibility-and-old-faithful][Reproducibility and Old Faithful]]. ~ Dominic Steinitz (@idontgetoutmuch) 
  #Haskell #DataScience
+ [[http://www.glc.us.es/~jalonso/exercitium/matrices-dispersas][Exercitium: "Matrices dispersas"]]. #Haskell #I1M2017
  #Haskell #I1M2017 
+ [[https://arxiv.org/abs/1802.08437][Abstract completion, formalized]]. ~ N. Hirokawa, A. Middeldorp,
  C. Sternagel, S. Winkler #IsabelleHOL
+ [[http://archive.indianstatistics.org/tools/orgpapers.pdf][Using Emacs, Org-mode and R for research writing in social sciences]] (A
  toolkit for writing reproducible research papers and monographs). ~
  Vikas Rawal #Emacs #OrgMode #Rstats
+ [[https://github.com/andrew-bedford/coqatoo][Coqatoo: Generates natural language versions of Coq proofs]]. ~ Andrew
  Bedford #ITP #Coq
+ [[https://liquid.kosmikus.org][Liquid Haskell tutorial]]. ~ Andres Löh #Haskell #LiquidHaskell
+ [[http://www.glc.us.es/~jalonso/exercitium/representacion-reducida-de-matrices-dispersas][Exercitium: "Representación reducida de matrices dispersas"]]. #Haskell #I1M2017
+ [[https://arxiv.org/abs/1802.08454][Faithful semantical embedding of a dyadic deontic logic in HOL]]. ~
  C. Benzmüller, A. Farjami, X. Parent #ITP #IsabelleHOL #Logic
+ [[https://www.cs.auckland.ac.nz/~cristian/crispapers/56250217.pdf][Formal proof: reconciling correctness and understanding]]. ~
  C.S. Calude, C. Müller #ITP #Logic
+ [[http://eschulte.github.io/org-scraps][A collection of short Org-mode snippets demonstrating the usage of
  code blocks]]. ~ Eric Schulte #Emacs #OrgMode
+ [[http://www.livemint.com/Sundayapp/zDSjhU5IzcuI7ypo6W4WtL/Why-data-science-is-simply-the-new-astrology.html][Why data science is simply the new astrology]]. ~ Karthik Shashidhar
  #DataScience
+ [[http://www.glc.us.es/~jalonso/exercitium/representacion-ampliada-de-matrices-dispersas][Exercitium: "Representación ampliada de matrices
  dispersas"]]. #Haskell #I1M2017
  x pero no por y"]]. #Haskell #I1M2017
+ [[https://www.isa-afp.org/entries/Hoare_Time.html][Hoare logics for time bounds]]. ~ M.P.L. Haslbeck, T. Nipkow #ITP
  #IsabelleHOL #SLC2018
+ [[https://github.com/norvig/paip-lisp][Paradigms of artificial intelligence programming: case studies in
  Common Lisp]]. ~ Peter Norvig #eBook #AI #CommonLisp
+ [[https://pdfs.semanticscholar.org/1820/ffb9149248fd1673b7db8749db0171c412e2.pdf][A categorical manifesto]]. ~ J.A. Goguen #CategoryTheory #CompSci #Math 
+ [[https://lispcast.com/lambdup-2017-theory-functional-programming][A theory of functional programming]]. ~ Eric Normand (@ericnormand)
  #FunctionalProgramming
+ [[https://www.math.uh.edu/~tomforde/Links-Math.html][Links to some of the most famous articles about mathematics]]. #Math 
+ [[https://www.math.uh.edu/~tomforde/Articles/DeathOfProof.pdf][The death of proof]]. ~ John Horgan #Math
+ [[https://www.math.uh.edu/~tomforde/Articles/Immortaility-of-Proof.pdf][The immortaility of proof]]. ~ Steven G. Krantz #Math 
+ [[https://machinelearning.technicacuriosa.com/2017/03/19/a-darpa-perspective-on-artificial-intelligence/][A DARPA perspective on Artificial Intelligence]]. ~ John Launchbury #AI
+ [[https://christophm.github.io/interpretable-ml-book][Interpretable machine learning (A guide for making black box models
  explainable)]]. ~ Christoph Molnar (@ChristophMolnar) #MachineLearning
  #XAI
+ [[https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence][Timeline of artificial intelligence]]. #AI
+ [[https://www.tweag.io/posts/2018-02-28-bazel-haskell.html][Build large polyglot projects with Bazel ... now with Haskell support]]. 
  ~ M. Boespflug, M. Karpov, M. Kowalczyk #Haskell #Bazel
+ [[https://cs.famaf.unc.edu.ar/~hoffmann/rio18/][El sistema de tipos de Haskell/GHC y sus extensiones]]. ~ Guillaume
  Hoffmann (@guion19) #Haskell

** Marzo 2018

+ [[http://www.glc.us.es/~jalonso/exercitium/menor-potencia-de-2-que-comienza-por-n][Exercitium: "Menor potencia de 2 que comienza por n"]]. 
  #Haskell #I1M2017
+ [[http://www.andreas-lochbihler.de/pub/lochbihler2018.pdf][Fast machine words in Isabelle/HOL]]. ~ A. Lochbihler #ITP #IsabelleHOL
+ [[https://www.ethz.ch/en/news-and-events/eth-news/news/2018/02/teaching-quantum-physics-to-a-computer.html][Teaching quantum physics to a computer]]. ~ Oliver Morsch #MachineLearning
+ [[https://www.slideshare.net/ssuserc0b705/artificial-intelligence-and-its-applications-in-healthcare-and-pharmacy][Artificial intelligence and its applications in healthcare and pharmacy]]. ~ Atul Adhikari #AI
+ [[http://irreal.org/blog/?p=6987][A reproducible research toolkit]]. #Emacs #OrgMode #Rstats
+ [[https://github.com/vikasrawal/orgpaper/blob/master/orgpapers.org][Using Emacs, Org-mode and R for Research Writing in Social Sciences]]. ~
  Vikas Rawal #Emacs #OrgMode #Rstats
+ [[https://openlibra.com/es/book/matematica-discreta-en-haskell][Matemática discreta en Haskell]]. ~ María Dolores Valverde Rodríguez
  #Haskell #Matemáticas #OpenLibra
+ [[http://www.glc.us.es/~jalonso/exercitium/ceros-con-los-n-primeros-numeros][Exercitium: "Ceros con los n primeros números"]]. #Haskell #I1M2017
+ [[https://www.isa-afp.org/entries/Architectural_Design_Patterns.html][A theory of architectural design patterns in Isabelle/HOL]]. ~ Diego
  Marmsoler #ITP #IsabelleHOL
+ [[http://briansteffens.com/2017/02/20/from-math-to-machine.html][From math to machine: translating a function to machine code]]. ~ Brian
  Steffens #Programming #Math #Haskell #Imperative_language
  #Assembly_language #Machine_code #I1M2017
+ [[http://jxv.io/blog/2018-02-28-A-Game-in-Haskell.html][A Game in Haskell: Dino Rush]]. ~ Joe Vargas (@jxv_io) #Haskell #Game
+ [[http://blog.ielliott.io/comonad-transformers-in-the-wild/][Comonad Transformers in the Wild]]. ~ Isaac Elliott #Haskell
+ [[https://paulspontifications.blogspot.com.es/2018/02/haskell-with-reactive-banana-and-gtk3.html][Haskell with Reactive Banana and GTK3]]. ~ Paul Johnson #Haskell
+ [[https://functor.tokyo/blog/2018-03-02-pretty-simple-cli-exe][CLI program for pretty-printing Haskell datatypes]]. ~ Dennis Gosnell
  (@cdepillabout) #Haskell
+ [[https://two-wrongs.com/a-gentle-introduction-to-monad-transformers][A gentle introduction to monad transformers]]. #Haskell 
+ [[http://www.microsiervos.com/archivo/ia/curso-intensivo-gratuito-google-aprendizaje-automatico-inteligencia-artificial.html][Curso intensivo de Google sobre aprendizaje automático e inteligencia artificial (en español)]]. #IA
+ [[https://github.com/fniessen/stage-latex-dunkerque-2012/blob/master/stage-latex-dunkerque-2012-slides.pdf][Org mode pour LaTeXiens]]. ~ Fabrice Niessen #Emacs #OrgMode #LaTeX
+ [[https://whatthefunctional.wordpress.com/haskell-for-the-imperative][Haskell for the imperative]]. ~ Laurence Emms (@wtfunctional) #Haskell
+ [[https://whatthefunctional.wordpress.com/2018/02/26/getting-started-with-haskell/][Getting started with Haskell]]. ~ Laurence Emms (@wtfunctional) #Haskell
+ [[https://whatthefunctional.wordpress.com/2018/03/01/the-type-language/][The type language]]. ~ Laurence Emms (@wtfunctional) #Haskell
+ [[https://whatthefunctional.wordpress.com/2018/03/03/mandelbrot/][Mandelbrot fractal in Haskell]]. ~ Laurence Emms (@wtfunctional) #Haskell
+ [[http://www.cse.chalmers.se/~nicsma/papers/quickspec2.pdf][Quick specifications for the busy programmer]]. ~ N. Smallbone,
  M. Johansson, K. Claessen, M. Algehed #Haskell
+ [[https://dl.acm.org/ft_gateway.cfm?id=3159535&ftid=1946727&dwn=1&CFID=12174721&CFTOKEN=cc9104d69a4c2dc4-2F7E93CC-950A-56DC-0EBB03DD3F3E7470][Quick-Sort: a pet peeve]]. ~ A. Nunes-Harwitt, M. Gambogi, T. Whitaker #Haskell 
+ [[http://www.i-programmer.info/news/105-artificial-intelligence/11599-data-science-predicts-oscar-winner.html][Data Science predicts Oscar winner]]. ~ Lucy Black #AI #DataScience 
+ [[https://codesync.global/media/successful-companies-using-elixir-and-erlang/][Successful companies use Erlang and Elixir]]. #FunctionalProgramming
  #Erlang #Elixir
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ThEdu17.9.pdf][Natural deduction and the Isabelle proof assistant]]. ~ J. Villadsen,
  A. Halkjær, A. Schlichtkrull #ITP #IsabelleHOL #Logic
+ [[https://nadea.compute.dtu.dk][NaDeA: A Natural Deduction Assistant with a formalization in Isabelle]]. 
  #IsabelleHOL #Logic #NaDeA
+ [[http://www.uni-kassel.de/eecs/fachgebiete/fmv/projects/sequent-calculus-trainer.html][The Sequent Calculus Trainer]]: a tool that aims at supporting students
  in learning how to correctly construct proofs in the sequent calculus
  for propositional logic and first-order logic with equality. #Logic
+ [[https://www.uni-kassel.de/eecs/fileadmin/datas/fb16/Fachgebiete/FMV/Abschlussarbeiten/Masterarbeit_Arno_Ehle.pdf][Proof search in the sequent calculus for first-order logic with equality]]. 
  ~ Arno Ehle #ATP #Logic
+ [[https://www.stackbuilders.com/tutorials/haskell/image-processing][Image processing with Juicy Pixels and Repa]]. ~ Mark Karpov (@mrkkrp)
  #Haskell
+ [[http://sites.math.rutgers.edu/~zeilberg/math436_17.html][History of Mathematics]]. ~ Doron Zeilberger #Math #History
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ThEdu17.1.pdf][Learning how to prove: From the Coq proof assistant to textbook style]]. 
  ~ S. Böhne, C. Kreitz #ITP #Coq #Logic
+ [[http://www.math.rutgers.edu/~zeilberg/akherim/struik.pdf][Concise history of Mathematics]]. ~ Dirk J. Struik #eBook #Math #History 
+ [[https://web.hypothes.is][Hypothesis: Annotate the web, with anyone, anywhere]]. ~ @hypothes_is
  #Annotation
+ [[https://www.vacationlabs.com/haskell/index.html][Haskell without the theory]]. ~ Saurabh Nanda #Haskell
+ [[http://fuuzetsu.co.uk/blog/posts/2018-03-03-GHC-compact-regions-for-improved-latency.html][Trying out GHC compact regions for improved latency (Pusher case study)]]. 
  ~ Mateusz Kowalczyk #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/generacion-de-progresiones-geometricas][Exercitium: "Generación de progresiones geométricas"]]. #Haskell #I1M2017
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ThEdu17.2.pdf][The Sequent Calculus Trainer with automated reasoning (Helping
  students to find proofs)]]. ~ A. Ehle, N. Hundeshagen, M. Lange #Logic
+ [[https://nautil.us/issue/24/error/in-mathematics-mistakes-arent-what-they-used-to-be][In Mathematics, mistakes aren’t what they used to be]] (Computers can’t
  invent, but they’re changing the field anyway). ~ Siobhan Roberts
  #Math #CompSci 
+ [[https://idontgetoutmuch.wordpress.com/2018/03/04/implicit-runge-kutta-and-gnu-scientific-library][Implicit Runge Kutta and GNU scientific library]]. ~ Dominic Steinitz
  (@idontgetoutmuch) #Haskell #Math
+ [[https://www.slideshare.net/RodrigoDeFrutosBalle/qu-demonios-es-la-programacin-funcional][¿Qué demonios es la programación funcional?]] ~ Rodrigo de Frutos
  #ProgramacionFuncional
+ [[https://medium.com/@miguelsaddress/funtores-aplicativos-y-m%C3%B3nadas-en-im%C3%A1genes-21ab0e60fe23][Funtores, Aplicativos y Mónadas en imágenes]]. ~ Miguel Á. Moreno #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/la-funcion-de-smarandache][Exercitium: "La función de Smarandache"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://arxiv.org/abs/1803.00699][QWIRE practice: Formal verification of quantum circuits in Coq]]. ~
  R. Rand, J. Paykin, S. Zdancewic #ITP #Coq
+ [[https://patrickdoc.github.io/criterion.html][Measuring functions in Criterion]]. ~ Patrick Dougherty #Haskell
+ [[http://gitcommit.co.uk/2017/03/25/simple-fractals-in-haskell][Simple fractals in Haskell]]. ~ @Mike_K_Houghton #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-cuyos-factoriales-son-divisibles-por-x-pero-no-por-y][Exercitium: "Números cuyos factoriales son divisibles
  por x pero no por y"]]. #Haskell #I1M2017
  divisores"]].  #Haskell #I1M2017
+ [[https://link.springer.com/article/10.1007/s10817-018-9458-4][Hammer for Coq: automation for dependent type theory]]. ~ Ł. Czajka,
  C. Kaliszyk #ITP #Coq
+ [[http://www.usrsb.in/symbolic-execution-intuition-and-implementation.html][Symbolic execution: intuition and implementation]]. ~ Alex Beal(@beala) #Haskell
+ [[https://whatthefunctional.wordpress.com/2018/03/07/making-a-text-adventure-in-haskell-part-1][Making a text adventure in Haskell (Part 1)]]. ~ Laurence Emms
  (@wtfunctional) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/nodos-con-maxima-suma-de-hijos][Exercitium: "Nodos con máxima suma de hijos"]]. #Haskell
  #I1M2017
  #I1M2017
+ [[https://hal.archives-ouvertes.fr/hal-01716048/document][A Coq formalisation of SQL’s execution engines]]. ~ V. Benzaken et
  als. #ITP #Coq
+ [[https://github.com/qfpl/applied-fp-course/][Applied functional programming course]]. #Haskell
+ [[https://github.com/portnov/circles-puzzle][Simple puzzle with rotating circles]]. ~ Ilya V. Portnov #Haskell #Gloss
+ [[https://www.well-typed.com/blog/2018/03/oop-in-haskell/][Object oriented programming in Haskell]]. ~ Edsko de Vries #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/matrices-centro-simetricas][Exercitium: "Matrices centro simétricas"]]. #Haskell
  #I1M2017
+ [[https://members.loria.fr/DLarchey/files/papers/ITP_2018_paper_16.pdf][Proof Pearl: Constructive extraction of cycle finding algorithms]]. ~
  D. Larchey-Wendling #ITP #Coq #SLC2018
+ [[https://purelyfunctional.org/posts/2018-03-04-monadfix-lazy-strict-state.html][MonadFix and the lazy and strict state monad]]. ~ Moritz Kiefer
  (@cocreature) #Haskell
+ [[https://jaspervdj.be/posts/2018-03-08-handle-pattern.html][Haskell design patterns: The handle pattern]]. ~ Jasper Van der Jeugt
  (@jaspervdj) #Haskell
+ [[https://www.tweag.io/posts/2018-03-08-linear-sort.html][Implementing a safer sort with linear types]]. ~ Alexander Vershilov,
  Arnaud Spiwack #Haskell
+ [[https://members.loria.fr/DLarchey/files/papers/IJCAR-2018_paper_74.pdf][Constructive decision via redundancy-free proof-search]]. ~
  D. Larchey-Wendling #ITP #Coq #SLC2018
+ [[http://bulletin.eatcs.org/index.php/beatcs/article/download/522/513][Who needs category theory?]] ~ A. Blass, Y. Gurevich #CategoryTheory
  #CompSci
+ [[http://www.kovach.me/posts/2018-03-07-generating-art.html][Generating artwork with Haskell]]. ~ Benjamin Kovach (@BendotK) #Haskell 
+ [[https://cacm.acm.org/careers/225898-proposal-recommends-ai-training-in-chinas-primary-secondary-schools/fulltext][Proposal recommends AI training in China's primary, secondary schools]]. #AI
+ [[http://sachachua.com/blog/2018/03/using-org-mode-latex-beamer-and-medibang-paint-to-make-a-childrens-book/][Using Org Mode, LaTeX, Beamer, and Medibang Paint to make a children’s book]]. 
  ~ Sacha Chua #Emacs #OrgMode #LaTeX #Beamer
+ [[http://changelog.complete.org/archives/9861-emacs-1-ditching-a-bunch-of-stuff-and-moving-to-emacs-and-org-mode][Emacs #1: Ditching a bunch of stuff and moving to Emacs and org-mode]]. 
  ~ John Goerzen (@jgoerzen) #Emacs #OrgMode
+ [[https://changelog.complete.org/archives/9865-emacs-2-introducing-org-mode][Emacs #2: Introducing org-mode]]. ~ John Goerzen (@jgoerzen) #Emacs #OrgMode
+ [[https://changelog.complete.org/archives/9877-emacs-3-more-on-org-mode][Emacs #3: More on org-mode]]. ~ John Goerzen (@jgoerzen) #Emacs #OrgMode
+ [[http://home.in.tum.de/~wimmers/html-data/papers/PTA.pdf][MDP+TA = PTA: Probabilistic timed automata, formalized (short paper)]]. 
  ~ S. Wimmer, J. Hölzl #ITP #IsabelleHOL
+ [[https://soupi.github.io/rfc/writing_simple_haskell][Writing simple Haskell]]. ~ Gil Mizrahi (@_gilmi) #Haskell
+ [[https://whatthefunctional.wordpress.com/2018/03/10/making-a-text-adventure-in-haskell-part-2/][Making a text adventure in Haskell (Part 2)]]. ~ Laurence Emms
  (@wtfunctional) #Haskell
+ [[https://github.com/cerner/clara-rules][Clara-rules: Forward-chaining rules in Clojure]]. #Clojure
+ [[https://www.slideshare.net/MykhailoMichaelPersh/clojured-ai2018pubrastpng-90157567][Clojure and AI]]. ~ Michael Pershyn #Clojure #AI
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-introduccion-a-la-programacion-con-maxima][I1M2017: Introducción a la programación con Maxima]]. #Maxima
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-de-la-matematica-a-la-maquina/][I1M2017: De la matemática a la máquina]]. #Matemática #Programación
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-analisis-de-la-complejidad-de-los-algoritmos/][I1M2017: Análisis de la complejidad de los algoritmos]]. #Haskell #Algorítmica
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-calculo-numerico-en-haskell-2o-parte/][I1M2017: Cálculo numérico en Haskell (2º parte)]]. #Haskell #Matemáticas
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-de-programacion-de-calculo-numerico-en-maxima/][I1M2017: Ejercicios de programación de cálculo numérico en Maxima]]. 
  #Maxima #Matematicas
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-programacion-dinamica-en-haskell][I1M2017: Programación dinámica en Haskell]]. #Haskell #Algorítmica
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-deduccion-natural-proposicional-2-2/][LMF2017: Deducción natural proposicional (2)]]. #Lógica
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-ejercicios-de-deduccion-natural-proposicional/][LMF2017: Ejercicios de deducción natural proposicional]]. #Lógica
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-deduccion-natural-proposicional-con-isabellehol-2/][LMF2017: Deducción natural proposicional con Isabelle/HOL]]. #IsabelleHOL 
  #Lógica
+ [[http://www.glc.us.es/~jalonso/exercitium/cruce-de-listas][Exercitium: "Cruce de listas"]]. #Haskell #I1M2017
+ [[http://adam.chlipala.net/theses/jadep_meng.pdf][Correct-by-construction finite field arithmetic in Coq]]. ~ J. Philipoom
  #ITP #Coq #Math
+ [[https://lettier.github.io/posts/2016-06-01-data-visualization-with-haskell-nyc-public-urination.html][Data visualization with Haskell: NYC public urination]]. ~ David Lettier
  #Haskell #DataScience
+ [[http://shinyapps.org/apps/RGraphCompendium/index.php][A compendium of clean graphs in R (version 2.0)]]. ~ E.J.Wagenmakers,
  Q.F. Gronau #Rstats
+ [[http://www.glc.us.es/~jalonso/exercitium/suma-de-los-digitos-de-las-repeticiones-de-un-numero][Exercitium: "Suma de los dígitos de las repeticiones de
  un número"]]. #Haskell #I1M2017
  árbol"]]. #Haskell #I1M2017
+ [[http://www.owlofminerva.net/files/fom.pdf][Foundations of Mathematics]]. ~ Ken Kubota (@KenKubota_de) #Math #Logic
  #LamdaCalculus #ITP #IsabelleHOL #Coq #PVS #Agda
+ [[https://hal.inria.fr/hal-01719918/document][Formalization techniques for asymptotic reasoning in classical analysis]]. ~ R. Affeldt, C. Cohen, D. Rouhling #ITP #Coq #Math
+ [[https://lettier.github.io/posts/2016-04-29-breadth-first-search-in-haskell.html][Breadth-first search in Haskell]]. ~ David Lettier #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-representacion-del-conocimiento-mediante-logica-de-primer-orden][LMF2017: Representación del conocimiento mediante lógica de primer orden]]. 
  #Lógica
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-sintaxis-y-semantica-de-la-logica-de-primer-orden][LMF2017: Sintaxis y semántica de la lógica de primer orden]]. #Lógica
+ [[https://arxiv.org/abs/1803.04263][Intelligible Artificial Intelligence]]. ~ D.S. Weld, G. Bansal #AI #XAI
+ [[http://www.htdp.org/2018-01-06/Book][How to design programs (2nd edition, 2018)]]. ~ M. Felleisen,
  R.B. Findler, M. Flatt, S. Krishnamurthi #eBook #Programming #DrRacket
+ [[http://www.glc.us.es/~jalonso/exercitium/suma-de-las-sumas-de-los-cuadrados-de-los-divisores][Exercitium: "Suma de las sumas de los cuadrados de los
  divisores"]]. #Haskell #I1M2017
+ [[https://www.isa-afp.org/entries/Weight_Balanced_Trees.html][Weight-balanced trees in Isabelle/HOL]]. ~ T. Nipkow, S. Dirix
  #IsabelleHOL
+ [[https://lettier.github.io/posts/2016-04-14-max-subarray-in-haskell.html][Max subarray in Haskell]]. ~ David Lettier #Haskell
+ [[https://whatthefunctional.wordpress.com/2018/03/13/text-reflow-in-haskell/][Text Reflow in Haskell]]. ~ Laurence Emms (@wtfunctional) #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-4o-examen-de-programacion-funcional-con-haskell][I1M2017: 4º examen de programación funcional con Haskell]]. #Haskell
+ [[http://www.cse.buffalo.edu/~knepley/classes/cse191/ClassNotes.pdf][Discrete structures]]. ~ M.G. Knepley #eBook #Math #ITP #Coq
+ [[http://aperiodical.com/2018/03/the-oeis-now-contains-300000-integer-sequences][The OEIS now contains 300,000 integer sequences]]. ~ C. Lawson-Perfect #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/la-conjetura-de-gilbreath][Exercitium: "La conjetura de Gilbreath"]]. #Haskell #I1M2017
  matriz"]]. #Haskell #I1M2017
+ [[https://arxiv.org/abs/1803.04646][On cryptographic attacks using backdoors for SAT]]. ~ A. Semenov et
  als. #SAT
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-ejercicios-de-deduccion-natural-proposicional-en-isabellehol/][LMF2017: Ejercicios de deducción natural proposicional en Isabelle/HOL]]. 
  #Lógica #IsabelleHOL
+ [[https://040code.github.io/2018/03/04/verlet-integration/][Verlet integration (Physics simulation in Clojure)]]. ~ M. Metz (@MMz_)
  #Clojure #Physics
+ [[http://www.glc.us.es/~jalonso/exercitium/matrices-de-pascal][Exercitium: "Matrices de Pascal"]]. #Haskell #I1M2017
+ [[https://github.com/owickstrom/domain-modeling-with-haskell-data-structures][Domain modeling with Haskell data structures]]. ~ Oskar Wickström
  (@owickstrom) #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-el-tipo-abstracto-de-datos-de-las-pilas-en-haskell][I1M2017: El tipo abstracto de datos de las pilas en Haskell]]. #Haskell
  #Algorítmica
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-el-tipo-abstracto-de-datos-de-las-colas-en-haskell][I1M2017: El tipo abstracto de datos de las colas en Haskell]]. #Haskell
  #Algorítmica
+ [[http://bit.ly/2GAkWbX][Multiplicar es mas fácil de lo que piensas]]. ~ Juan Arias de Reyna
  #Matemáticas #Algorítmica
+ [[http://www2.imm.dtu.dk/pubdb/views/edoc_download.php/7095/pdf/imm7095.pdf][Formalized first-order logic. ~ A.H. From]] #ITP #IsabelleHOL #Logic 
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-4o-examen-de-programacion-funcional-con-haskell][I1M2017: 4º examen de programación funcional con Haskell]]. #Haskell
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/blob/master/Curso_2017-18/Grupo_1/examen_4_15_mar.hs][I1M2017: Soluciones del 4º examen de programación funcional con
  Haskell del grupo 1]]. #Haskell
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/blob/master/Curso_2017-18/Grupo_2/examen_4_12_mar.hs][I1M2017: Soluciones del 4º examen de programación funcional con
  Haskell del grupo 2]]. #Haskell
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/blob/master/Curso_2017-18/Grupo_3/examen_4_13_mar.hs][I1M2017: Soluciones del 4º examen de programación funcional con
  Haskell del grupo 3]]. #Haskell
+ [[http://www.hg.schaathun.net/FPIA/general.php][Course: Functional programming and intelligent algorithms]]. ~ Hans
  Georg Schaathun #Haskell #AI
+ [[https://arxiv.org/abs/1803.04870][Narcissus: Deriving correct-by-construction decoders and encoders from
  binary formats]]. S. Suriyakarn, C. Pit-Claudel, B. Delaware,
  A. Chlipala #ITP #Coq
+ [[http://www2.imm.dtu.dk/pubdb/views/edoc_download.php/7094/pdf/imm7094.pdf][Formalized unification algorithms]]. ~ K. Hvidtfeldt #ITP #IsabelleHOL
  #Logic
+ [[https://plato.stanford.edu/entries/mathematics-explanation][Explanation in Mathematics]] (in "The Stanford Encyclopedia of
  Philosophy"). ~ Paolo Mancosu #Math #Philosophy
+ [[http://doisinkidney.com/posts/2018-03-17-rose-trees-breadth-first.html][Rose trees, breadth-first]]. ~ Donnacha Oisín Kidney (@oisdk) #Haskell
+ [[https://whatthefunctional.wordpress.com/2018/03/18/lessons-learned/][Lessons learned]]. ~ Laurence Emms (@wtfunctional) #Haskell
+ [[https://medium.com/ventre-tech/haskells-triangle-or-more-fun-with-recursion-9350155689ac][Haskell’s triangle: or, more fun with recursion]]. ~ Thomas Cothran
  (@thomas_cothran) #Math #Haskell #JavaScript
+ [[https://elpais.com/tecnologia/2018/03/16/actualidad/1521204836_317670.html][Máquinas listas, pero sin sentido común]]. ~ Ramon López de Mántaras #IA
+ [[http://www.glc.us.es/~jalonso/exercitium/la-conjetura-de-levy][Exercitium: "La conjetura de Levy"]]. #Haskell #I1M2017
+ [[http://www2.imm.dtu.dk/pubdb/views/edoc_download.php/7091/pdf/imm7091.pdf][Formalization of a near-linear time algorithm for solving the
  unification problem]]. ~ K.F. Brandt #ITP #IsabelleHOL #Logic
+ [[https://whatthefunctional.wordpress.com/2018/03/19/making-a-text-adventure-in-haskell-part-3/][Making a text adventure in Haskell (Part 3)]]. ~ Laurence Emms
  (@wtfunctional) #Haskell
+ [[https://arxiv.org/abs/1803.05316][Seven sketches in compositionality: An invitation to applied category
  theory]]. ~ B. Fong, D.I Spivak #CategoryTheory
+ [[https://medium.com/q-e-d/fundamental-tools-for-math-in-2018-78739b86d15][Fundamental tools for Math in 2018]]. ~ Robert L. Read #Math
+ [[https://cocalc.com][CoCalc: Collaborative Calculation in the Cloud]]. ~ @cocalc_com #Math #SageMath via @paul_snively 
+ [[http://www.glc.us.es/~jalonso/exercitium/suma-de-las-alturas-de-los-nodos-de-un-arbol][Exercitium: "Suma de las alturas de los nodos de un
  árbol"]]. #Haskell #I1M2017
+ [[http://www.cs.tau.ac.il/~nachumd/papers/Union.pdf][Well-founded unions]]. ~ J. Dawson, N. Dershowitz, R. Goré #ITP #IsabelleHOL
+ [[https://www.microsoft.com/en-us/research/uploads/prod/2018/03/build-systems.pdf][Build systems à la carte]]. ~ A. Mokhov, N. Mitchell, Simon Peyton Jones
  #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-semantica-de-la-logica-de-primer-orden][LMF2017: Semántica de la lógica de primer orden]]. #Lógica
+ [[http://www.glc.us.es/~jalonso/exercitium/caminos-en-una-matriz][Exercitium: "Caminos en una matriz"]]. #Haskell #I1M2017
+ [[https://arxiv.org/abs/1803.06494][Attack trees in Isabelle: CTL semantics, correctness and completeness]]. 
  ~ F. Kammüller #ITP #IsabelleHOL #Logic
+ [[https://www.nature.com/articles/d41586-018-03423-x]['Grand unified theory of maths' nets Abel Prize]] ~ D. Castelvecchi #Math  
+ [[https://medium.com/@raxwunter/from-logic-and-math-to-code-for-dummies-part-iii-c4ffd4407b16][From logic and math to code. For dummies. Part III. Dependent types]]. ~
  R. Krivtsov #Logic #FunctionalProgramming
+ [[http://www.glc.us.es/~jalonso/exercitium/maximo-de-las-sumas-de-los-caminos-en-una-matriz][Exercitium: "Máximo de las sumas de los caminos en una matriz"]]. #Haskell #I1M2017
+ [[https://arxiv.org/abs/1803.06500][Argumentation theory for mathematical argument]]. ~ J. Corneli et
  als. #Math #Logic
+ [[http://robertylewis.com/files/dissertation.pdf][Two tools for formalizing mathematical proofs]]. ~ R.Y. Lewis
  #PhD_Thesis #Math #ITP #Lean #Mathematica
+ [[https://arxiv.org/abs/1803.07199][Eleven simple algorithms to compute Fibonacci numbers]]. ~ A. Dasdan
  #Math #Programming #Python 
+ [[http://www.glc.us.es/~jalonso/exercitium/camino_de_maxima_suma_en_una_matriz][Exercitium: "Camino de máxima suma en una matriz"]]. 
  #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://arxiv.org/abs/1803.06960][Ready, set, verify! Applying hs-to-coq to real-world Haskell code]]. ~
  J. Breitner et als. #Coq #Haskell
+ [[https://hackage.haskell.org/package/containers-verified][containers-verified: Formally verified drop-in replacement of containers]]. 
  ~ J. Breitner (@nomeata) #Haskell #Coq
+ [[https://elpais.com/elpais/2018/03/21/el_aleph/1521672989_799957.html][La historia del error de división de los primeros Pentium]]. ~
  M.A. Morales (@gaussianos) | El Aleph #Matemáticas
+ [[https://etorreborre.blogspot.com.es/2018/03/haskell-modules-for-masses.html][(Haskell) modules for the masses]]. ~ E. Torreborre (@etorreborre) #Haskell
+ [[https://www.quantamagazine.org/gunter-ziegler-and-martin-aigner-seek-gods-perfect-math-proofs-20180319/][In search of God’s perfect proofs]]. ~ E. Klarreich (@EricaKlarreich) #Math
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-el-tipo-abstracto-de-datos-de-las-colas-de-prioridad-en-haskell/][I1M2017: El tipo abstracto de datos de las colas de prioridad en Haskell]]. 
  #Haskell #Algorítmica
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-programacion-dinamica-caminos-en-una-reticula][I1M2017: Programación dinámica: Caminos en una retícula]]. #Haskell #Algorítmica
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-programacion-dinamica-apilamiento-de-barriles][I1M2017: Programación dinámica: Apilamiento de barriles]]. #Haskell #Algorítmica
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-escritura-de-documentos-latex-pdf-y-html-con-el-modo-org-de-emacs/][I1M2017: Escritura de documentos, LaTeX, PDF y HTML con el modo Org de Emacs]]. 
  #Emacs
+ [[https://www.isa-afp.org/entries/Fishburn_Impossibility.html][The incompatibility of Fishburn-Strategyproofness and Pareto-efficiency]]. 
  ~ F. Brandt, M. Eberl, C. Saile and C. Stricker #ITP #IsabelleHOL
+ [[http://softwaresimply.blogspot.com.es/2018/03/efficiently-improving-test-coverage.html?m=1][Efficiently improving test coverage with algebraic data types]]. #Haskell
+ [[http://www.parsonsmatt.org/2018/03/22/three_layer_haskell_cake.html][Three layer Haskell cake]]. ~ Matt Parsons (@mattoflambda) #Haskell
+ [[http://mpickering.github.io/posts/2018-03-20-recordsvstypeclasses.html][Replacing type classes with records affects optimisation]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-ejercicios-de-deduccion-natural-proposicional-en-isabellehol-2/][LMF2017: Ejercicios de deducción natural proposicional en Isabelle/HOL (2)]]. 
  #Lógica #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-ejercicios-de-sintaxis-y-semantica-de-la-logica-de-primer-orden/][LMF2017: Ejercicios de sintaxis y semántica de la lógica de primer orden]]. 
  #Lógica
+ [[http://www.glc.us.es/~jalonso/vestigium/slc2018-programcion-funcional-en-coq/][SLC2018: Programación funcional en Coq]]. #ITP #Coq
+ [[http://www.glc.us.es/~jalonso/vestigium/slc2018-demostraciones-por-induccion-en-coq/][SLC2018: Demostraciones por inducción en Coq]]. #ITP #Coq
+ [[http://www.techiedelight.com][Techie Delight (Coding made easy)]]: 500+ data structure and algorithms
  problems. ~ @techie_delight #Programming
+ [[http://www.glc.us.es/~jalonso/vestigium/slc2018-datos-estructurados-en-coq/][SLC2018: Datos estructurados en Coq]]. #ITP #Coq
+ [[http://www.glc.us.es/~jalonso/exercitium/la-sucesion-de-sylvester][Exercitium: "La sucesión de Sylvester"]]. #Haskell #I1M2017
+ [[https://whatthefunctional.wordpress.com/2018/03/22/everyday-haskell][Everyday Haskell (Haskell for the working programmer)]]. ~ Laurence Emms
  (@wtfunctional) #Haskell
+ [[https://github.com/haskell-perf/csv][Simple comparative benchmarks for CSV parsing libraries]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/particiones-primas][Exercitium: "Particiones primas"]]. #Haskell #I1M2017
+ [[http://www.andreas-lochbihler.de/pub/lammich2018jar.pdf][Automatic refinement to efficient data structures: a comparison of two
  approaches]]. ~ P Lammich, A Lochbihler #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/conjetura-de-goldbach][Exercitium: "Conjetura de Goldbach"]]. #Haskell #I1M2017
  #I1M2017
+ [[https://realpython.com/python-thinking-recursively][Thinking recursively in Python]]. ~ A. Awasthi #Python
+ [[http://www.math.utah.edu/~carlson/notes/python.pdf][Computations in number theory using Python: A brief introduction]]. ~
  J. Carlson #Python #Math
+ [[http://swc.math.arizona.edu/aws/2003/03MacintyreNotes.pdf][A history of interactions between Logic and Number Theory]]. ~
  A. Macintyre #Logic #NumberTheory
+ [[http://logika.uwb.edu.pl/studies/download.php%3Fvolid%3D35%26artid%3Dkt%26format%3DPDF][Philosophy of mathematics and computer science]]. ~ K. Trzęsicki #Math
  #Logic #CompSci
+ [[http://www.cs.nott.ac.uk/~psztxa/g51mcs/notes.pdf][Mathematics for computer scientists (Lecture notes)]]. ~ T. Altenkirch
  #Math #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/mayores-sublistas-crecientes-2][Exercitium: "Mayores sublistas crecientes"]]. #Haskell #I1M2017
  dada"]]. #Haskell #I1M2017
+ [[https://arxiv.org/pdf/1803.09237v1][Goldbach's function approximation using deep learning]]. ~ A. Stekel,
  M. Chkroun, A. Azaria #DeepLearning #Math
+ [[https://arxiv.org/pdf/1803.10202v1][Language-integrated provenance in Haskell]]. ~ J. Stolarek, J. Cheney #Haskell
+ [[https://speakerdeck.com/mchakravarty/demystifying-functional-programming-and-what-that-means-for-learning-and-teaching][Demystifying functional programming (And what that means for learning
  & teaching)]]. ~ Manuel M T Chakravarty (@TacticalGrace) and Gabriele
  Keller #Haskell
+ [[https://interstices.info/jcms/p_84122/l-intelligence-artificielle-mythes-et-realites][L’intelligence artificielle, mythes et réalités]]. ~ Nicolas Rougier #IA
  via @interstices_eu
+ [[http://www.jmlr.org/reviewing-papers/knuth_mathematical_writing.pdf][Mathematical writing]]. ~ D,E. Knuth, T. Larrabee, and P.M. Roberts #Math
+ [[https://whatthefunctional.wordpress.com/2018/03/29/making-l-systems-with-haskell-and-logo/][Making L-Systems with Haskell and Logo]]. ~ Laurence Emms
  (@wtfunctional) #Haskell
+ [[http://ecs.inria.fr][Encyclopedia of Combinatorial Structures (ECS)]]. #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/maxima-longitud-de-sublistas-crecientes-2][Exercitium: "Máxima longitud de sublistas crecientes"]]. 
  #Haskell #I1M2017
+ [[https://blog.poisson.chat/posts/2018-03-28-generic-data.html][An old and a new library for generic deriving]]. #Haskell
+ [[https://icidasset.com/writings/building-blocks/][Building blocks (a more visual approach to the topic of purely-typed
  functional programming)]]. ~ Steven Vandevelde (@icidasset)
  #FuncionalProgramming #Haskell
+ [[https://www.scottaaronson.com/blog/?p=3679][Scott Aaronson: 30 of my favorite books]]. 
+ [[https://typeclasses.com/contravariance][Understanding contravariance]]. ~ Julie Moronuki and Chris Martin
  #Haskell
+ [[https://typeclasses.com/news/2018-03-typeclasses-born][Welcome to Type Classes!]] ~ Julie Moronuki (@argumatronic) and Chris
  Martin (@chris__martin) #Haskell

** Abril 2018

+ [[http://www.elmundo.es/ciencia-y-salud/ciencia/2018/03/29/5abd1886e5fdeaf1328b45bc.html][Francia invertirá 1.500 millones de euros en inteligencia artificial]]. #IA
+ [[https://byorgey.wordpress.com/2018/03/30/parametricity-for-bifunctor][Parametricity for Bifunctor]]. ~ Brent Yorgey #Haskell
+ [[https://arxiv.org/pdf/1803.06636][Complexity problems in enumerative combinatorics]]. ~ Igor Pak #Math #CompSci
+ [[https://interstices.info/jcms/p_95018/l-algorithme-quantique-de-shor][L'algorithme quantique de Shor]]. ~ André Chailloux #CompSci
+ [[http://vaibhavsagar.com/blog/2018/03/31/ihaskell-mybinder/][IHaskell on mybinder.org]] ~ Vaibhav Sagar #Haskell #Jupyter #IHaskell
+ [[http://reasonablypolymorphic.com/blog/free-lenses][Free lenses for higher-kinded data]]. ~ Sandy Maguire #Haskell
+ [[https://pjreddie.com/coq-tactics/][Coq tactics index]]. ~ Joe Redmon (@pjreddie) #ITP #Coq
+ [[http://www.glc.us.es/~jalonso/exercitium/multiplos-repitunos][Exercitium: "Múltiplos repitunos"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://changelog.complete.org/archives/9898-emacs-4-automated-emails-to-org-mode-and-org-mode-syncing][Emacs #4: Automated emails to org-mode and org-mode syncing]]. ~ John
  Goerzen (@jgoerzen) #Emacs #OrgMode
+ [[https://yetanothermathblog.com/2018/04/01/ring-theory-via-coding-theory-and-cryptography/][Ring theory, via coding theory and cryptography]]. ~ W. David Joyner
  #eBook #Math #Sagemath
+ [[https://yetanothermathblog.com/2018/04/01/calculus-on-graphs/amp/][Calculus on graphs]]. ~ W. David Joyner #eBook #Math #Sagemath
+ [[https://terrytao.wordpress.com/career-advice/theres-more-to-mathematics-than-rigour-and-proofs][There’s more to mathematics than rigour and proofs]]. ~ Terence Tao #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-tetranacci][Exercitium: "Números tetranacci"]]. #Haskell #I1M2017
  dígitos"]]. #Haskell #I1M2017
+ [[http://www.robertvesco.com/blog/2015-01-emacs-for-data-science.html][Emacs for Data Science]]. ~ Robert Vesco (@robertvesco) #Emacs #DataScience
+ [[https://ahsanijaz.github.io/2016-09-20-Emacs/][Emacs for Data Science]]. ~ Ahsan Ijaz #Emacs #DataScience
+ [[https://github.com/dfeich/org-babel-examples][Examples using emacs org mode babel inline source code with different
  backend languages]]. ~ Derek Feichtinger #Emacs #OrgMode
+ [[http://www.glc.us.es/~jalonso/exercitium/operaciones-binarias-con-matrices][Exercitium: "Operaciones binarias con matrices"]]. 
  #Haskell #I1M2017
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesiones-de-numeros-consecutivos-con-suma-dada][Exercitium: "Sucesiones de números consecutivos con suma
  dada"]]. #Haskell #I1M2017
+ [[https://arxiv.org/pdf/1804.01172][Applying computer algebra systems and SAT solvers to the Williamson conjecture]]. ~ C. Bright, I. Kotsireas, V. Ganesh #Logic #SAT #Math #CAS
+ [[https://www.cs.us.es/~jalonso/apuntes/Emacs_para_ciencias_del_dato/Emacs_para_ciencias_del_dato.html][Emacs para ciencias del dato]]. #Emacs #OrgMode
+ [[https://misshula.org/articles/cunyHask.html][Why teaching FP to undergrads is important]]. ~ Evan Misshula (@emisshula)
  #FunctionalProgramming #Haskell
+ [[https://plus.maths.org/content/unreasonable-relationship-between-mathematics-and-physics][The unreasonable relationship between mathematics and physics]]. ~ David Tong
  #Math #Physics
+ [[https://github.com/rstudio/RStartHere][RStartHere: A guide to some of the most useful R Packages that we know about,
  organized by their role in data science]]. #Rstat #DataScience
+ [[https://www.youtube.com/playlist?list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE][OrgMode tutorial]]. ~ Rainer König  #Emacs #OrgMode
+ [[http://www.glc.us.es/~jalonso/exercitium/arbol-de-subconjuntos][Exercitium: "Árbol de subconjuntos"]]. #Haskell #I1M2017
+ [[http://tomasp.net/academic/papers/monads/monads-programming.pdf][What we talk about when we talk about monads]]. ~ T. Petricek #Haskell
+ [[https://www.cs.us.es/~fsancho/?p=seminario-ia3][Seminario (I+A)A (Inteligencia Artificial + Aprendizaje Automático)]] #IA #AA
+ [[https://www.theregister.co.uk/2018/04/05/openai_challenge_developers_to_play_sonic_the_hedgehog_with_ai][OpenAI challenges you to beat 1990s classic Sonic the Hedgehog using
  machine learning]]. ~ #AI
+ [[https://techcrunch.com/2018/04/05/cometml-wants-to-do-for-machine-learning-what-github-did-for-code][Comet.ml wants to do for machine learning what GitHub did for code]]. ~
  F. Lardinois (@fredericl) #IA #ML
+ [[https://www.kosmikus.org/DerivingVia/deriving-via-paper.pdf][Deriving Via (or, how to turn hand-written instances into an anti-pattern)]]. 
  ~ B. Blöndal, A. Löh, R. Scott #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-deduccion-natural-en-logica-de-primer-orden/][LMF2017: Deducción natural en lógica de primer orden]]. #Lógica
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-deduccion-natural-de-primer-orden-con-isabellehol/][LMF2017: Deducción natural de primer orden con Isabelle/HOL]]. #Lógica
  #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-el-tad-de-los-conjuntos-en-haskell][I1M2017: El TAD de los conjuntos en Haskell]]. #Haskell #Algorítmica 
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-las-librerias-de-conjuntos-y-de-diccionarios-en-haskell/][I1M2017: Las librerías de conjuntos y de diccionarios en Haskell]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-el-tad-de-los-polinomios-en-haskell/][I1M2017: El TAD de los polinomios en Haskell]]. #Haskell #Algorítmica
  #Matemáticas
+ [[https://arxiv.org/pdf/1804.00596][Learning to prove with tactics]]. ~ T. Gauthier, C. Kaliszyk, J. Urban,
  R. Kumar, M. Norrish #ITP #HOL4 #ML
+ [[https://github.com/EvanMisshula/rr][Org-mode and reproducible research]]. ~ Evan Misshula (@emisshula)
  #Emacs #OrgMode
+ [[https://www.aiforhumanity.fr][AI for humanity]]. #AI
+ [[https://www.technologyreview.com/s/610379/heres-how-the-us-needs-to-prepare-for-the-age-of-artificial-intelligence/amp/][Here’s how the US needs to prepare for the age of artificial intelligence]]. 
  ~ Will Knight #AI
+ [[http://binaire.blog.lemonde.fr/2018/04/05/quel-langage-pour-le-secondaire][Quel langage pour le secondaire?]] ~ Laurent Bloch #Programming
+ [[https://dl.acm.org/citation.cfm?id=3110252][A unified approach to solving seven programming problems (functional pearl)]]. 
  ~ W.E. Byrd, M. Ballantyne, G. Rosenblatt, M. Might
  #FunctionalProgramming #Racket 
+ [[https://www.dataquest.io/blog/jupyter-notebook-tutorial][Jupyter notebook for beginners: a tutorial]]. ~ Benjamin Pryke
  (@BenjaminPryke) #Jupyter #Python
+ [[https://arxiv.org/pdf/1801.05894][Deep Learning: an introduction for applied mathematicians]]. ~
  C.F. Higham, D.J. Higham #AI #ML #DeepLearning
+ [[https://hub.packtpub.com/plotting-haskell/][Plotting in Haskell]]. ~ James Church #FunctionalProgramming #Haskell
+ [[https://arxiv.org/pdf/1804.00746][The simple essence of automatic differentiation (Differentiable
  functional programming made easy)]]. ~ Conal Elliott (@conal)
  #FunctionalProgramming #Haskell
+ [[https://www.irif.fr/_media/users/cauderlier/article_itp18.pdf][Tactics and certificates in Meta Dedukti]]. ~ R. Cauderlier #ITP #Dedukti
+ [[http://www.cs.jhu.edu/~roe/root.pdf][Toward a tool to verify complex data structure invariants]]. ~ K.D. Roe
  #PhD_Thesis #ITP #Coq
+ [[https://www.metalevel.at/swiclpb.pdf][The boolean constraint solver of SWI-Prolog: system description]]. ~
  M. Triska (@MarkusTriska) #Prolog #ConstraintProgramming
+ [[https://github.com/theoremprover-museum/logic-theorist][Logic-Theorist: The sources of the first theorem prover]]. #ATP  
+ [[http://vaibhavsagar.com/blog/2018/04/08/ihaskell-cocalc][IHaskell on CoCalc!]] ~ Vaibhav Sagar (@vbhvsgr) #FunctionalProgramming
  #Haskell #CoCalc
+ [[https://cocalc.com/share/20e4a191-73ea-4921-80e9-0a5d792fc511/haskell.ipynb?viewer=share][Welcome Haskell on CoCalc]]. #FunctionalProgramming #Haskell #CoCalc
+ [[https://www.theglobeandmail.com/opinion/article-deep-learning-why-its-time-for-ai-to-get-philosophical][Deep learning: Why it’s time for AI to get philosophical]]. ~ Catherine
  Stinson (@cathnotcathy) #AI #Philosophy
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesion-de-antecesores-y-sucesores][Exercitium: "Sucesión de antecesores y sucesores"]]. 
  #Haskell #I1M2017
  #I1M2017
+ [[https://whatthefunctional.wordpress.com/2018/04/09/dynamic-programming-in-haskell][Dynamic programming in Haskell]]. ~ Laurence Emms (@wtfunctional)
  #FunctionalProgramming #Haskell
+ [[https://github.com/SimplyNaOH/voronoi][Voronoi: A Haskell implementation of Fortune's algorithm]]. 
  #FunctionalProgramming #Haskell
+ [[https://www.elsaltodiario.com/musica/live-coding-desnudando-maquinas-golpe-musica][‘Live coding’: desnudando a las máquinas a golpe de música]]. ~ Álvaro
  Lorite #Música #Programación vía @elsaltodiario
+ [[https://opensource.com/life/16/2/intro-to-emacs][Getting started with Emacs text editor]]. ~ Sachin Patil #Emacs #OrgMode
  #I1M2017
+ [[https://opensource.com/article/18/4/how-create-latex-documents-emacs][How to create LaTeX documents with Emacs]]. ~ Sachin Patil #Emacs
  #OrgMode #LaTeX #I1M2017
+ [[http://www.glc.us.es/~jalonso/exercitium/mayor-numero-obtenido-intercambiando-dos-digitos][Exercitium: "Mayor número obtenido intercambiando dos dígitos"]]. 
  #Haskell #I1M2017
+ [[https://arxiv.org/abs/1804.02645][A footnote to "The crisis in contemporary mathematics"]]. ~ B. Katz,
  M.G. Katz, S. Sanders #Logic #Math
+ [[http://irreal.org/blog/?p=7085][Magit interface walkthrough]]. #Emacs #Magit
+ [[https://www.stackbuilders.com/tutorials/haskell/cloud-haskell/][Using Cloud Haskell to write a type-safe distributed chat]]. ~ Sebastian
  Pulido Gomez #Haskell
+ [[https://www.hillelwayne.com/post/equals-as-assignment/][Why does "=" mean assignment?]] ~ Hillel Wayne (@Hillelogram) #Programming
+ [[http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005399][Ten simple rules for responsible big data research]]. #BigData
+ [[http://www.glc.us.es/~jalonso/exercitium/la-carrera-de-collatz][Exercitium: "La carrera de Collatz"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-tableros-semanticos/][LMF2017: Tableros semánticos]]. #Lógica
+ [[http://haskelldata.com/][Over 130 practical recipes for data analysis and machine learning]]. 
  #Haskell #DataScience
+ [[https://arxiv.org/abs/1804.03579][Introduction to Iltis: An interactive, Web-Based system for teaching
  logic]]. ~ G. Geck et als. #Teaching #Logic
+ [[http://rkirsling.github.io/][Modal logic playground (A graphical semantic calculator for modal propositional logic)]]. ~ Ross Kirsling #Teaching #Logic
+ [[https://www.oreilly.com/ideas/data-engineers-vs-data-scientists][Data engineers vs. data scientists]]. ~ Jesse Anderson #DataScience
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-emacs-para-ciencias-del-dato/][I1M2017: Emacs para ciencias del dato]]. #Emacs
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-haskell-para-ciencias-del-dato/][I1M2017: Haskell para ciencias del dato]]. #Haskell #DataScience 
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-con-el-tipo-abstracto-de-dato-de-las-pilas/][I1M2017: Ejercicios con el tipo abstracto de dato de las pilas]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/clases-de-equivalencia][Exercitium: "Clases de equivalencia"]]. #Haskell #I1M2017
+ [[https://functional.works-hub.com/learn/property-based-integration-testing-using-haskell-6c25c][Property based integration testing using Haskell!]] ~ Kristijan Šarić #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/diccionario-de-frecuencias][Exercitium: "Diccionario de frecuencias"]]. #Haskell #I1M2017
+ [[https://www.euractiv.com/section/digital/news/twenty-four-eu-countries-sign-artificial-intelligence-pact-in-bid-to-compete-with-us-china][Twenty-four EU countries sign artificial intelligence pact in bid to
  compete with US & China]]. #AI
+ [[https://mystelven.github.io/Association-Automated-Reasoning//Newsletters/123-2018-04.html#guest][Mike Gordon and hardware verification]]. ~ L. Paulson #ITP 
+ [[https://arxiv.org/abs/1804.03922][Evaluating winding numbers through Cauchy indices in Isabelle/HOL]]. ~
  W. Li, L.C. Paulson #ITP #IsabelleHOL #Math
+ [[http://tpetricek.github.io/Talks/2018/monads-what-we-talk-about/nice/index.html#/][What we talk about when we talk about monads]]. ~ T. Petricek
  (@tomaspetricek) #Haskell
+ [[https://jeremykun.com/2018/04/13/for-mathematicians-does-not-mean-equality/][For mathematicians, = does not mean equality]]. ~ Jeremy Kun
  (@jeremyjkun) | Math ∩ Programming #Math #CompSci
+ [[https://blogs.scientificamerican.com/observations/math-music-and-imagination/][Math, music and imagination]]. ~ Marcus Miller #Math #Music
+ [[https://www.oreilly.com/ideas/jupyter-is-where-humans-and-data-science-intersect][Jupyter is where humans and data science intersect]]. ~ Paco Nathan
  (@pacoid) #Jupyter #DataScience
+ [[http://droettboom.com/blog/2018/04/04/python-in-the-browser/][Scientific Python in the browser]]. ~ M. Droettboom (@MDroettboom)
  #Python #DataScience
+ [[http://www.howardism.org/Technical/Emacs/literate-programming-tutorial.html][Introduction to literate programming]]. ~ Howard Abrams (@howardabrams)
  #Emacs #OrgMode
+ [[https://www.cs.us.es/~jalonso/apuntes/Soluciones_logicas_de_problemas_logicos/Tema_2.html][SLC2018: Soluciones lógicas de problemas lógicos]]. #Logic #Prolog #CLP 
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-ejercicios-de-logica-de-primer-orden][LMF2017: Ejercicios de lógica de primer orden]]. #Lógica #IsabelleHOL
+ [[https://books.google.com/talktobooks/][Talk to Books (Browse passages from books using experimental AI)]]. #AI
+ [[https://github.com/chris-taylor/aima-haskell][Algorithms from AIMA (Artificial intelligence: a modern approach) in Haskell]]. ~ Chris Taylor #AI #Haskell 
+ [[https://github.com/aimacode/aima-python][Python implementation of algorithms from Russell And Norvig's
  "Artificial Intelligence: A Modern Approach"]]. #AI #Python #Jupyter
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-relaciones-binarias-homogeneas-con-la-libreria-de-conjuntos-de-haskell/][I1M2017: Relaciones binarias homogéneas con la librería de conjuntos
  de Haskell]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-con-el-tad-de-los-polinomios-en-haskell][I1M2017: Ejercicios con el TAD de los polinomios en Haskell]]. #Haskell
+ [[http://kitchingroup.cheme.cmu.edu/pycse/pycse.pdf][pycse - Python3 computations in science and engineering]]. ~ John
  Kitchin (@johnkitchin) #eBook #Python
+ [[https://github.com/jkitchin/scimax][Scimax: an Emacs starterkit designed for people interested in
  reproducible research and publishing]]. ~ John Kitchin (@johnkitchin)
  #Emacs #OrgMode
+ [[http://altermundus.fr/downloads/documents/NamedGraphs.pdf][Gallery of named graphs (with tkz-berge.sty)]]. ~ Alain Matthes #LaTeX #Math
+ [[https://www.stackbuilders.com/tutorials/haskell/cloud-haskell/][Using Cloud Haskell to write a type-safe distributed chat]]. ~ Sebastian
  Pulido Gomez #Haskell
+ [[https://www.hillelwayne.com/post/equals-as-assignment][Why does "=" mean assignment?]] ~ Hillel Wayne #Programming
+ [[https://www.brucker.ch/bibliography/download/2018/brucker.ea-core-dom-2018.pdf][A formal semantics of the core DOM in Isabelle/HOL]]. ~ A.D. Brucker,
  M. Herzberg #ITP #IsabelleHOL
+ [[https://github.com/jkitchin/pycse]["Python computations in science and engineering" in Org mode]] ~ John
  Kitchin (@johnkitchin) #Emacs #OrgMode #Python
+ [[https://www.cs.us.es/~jalonso/apuntes/Preguntas_y_respuestas_del_modo_Org/index.html][I1M2018: Preguntas y respuestas sobre el modo Org]]. #Emacs #OrgMode
+ [[https://www.cs.us.es/~jalonso/apuntes/Preguntas_y_respuestas_del_modo_Org/Portada_indice_cabeceras_y_simbolos_matematicos/index.html][I1M2018: Preguntas y respuestas sobre el modo Org: Portada, índice,
  cabeceras y símbolos matemáticos]]. #Emacs #OrgMode
+ [[http://aitp-conference.org/2018/aitp18-proceedings.pdf][AITP 2018: The Third Conference on Artificial Intelligence and Theorem
  Proving (Abstracts of the talks)]]. #AI #ATP #ITP
+ [[https://arxiv.org/abs/1609.01493][Axiomatizing category theory in free logic]]. ~ C. Benzmüller,
  D.S. Scott #ITP #IsabelleHOL #CategoryTheory
+ [[http://nfulton.org/papers/aaai18.pdf][Safe reinforcement learning via formal methods (Toward safe control
  through proof and learning)]]. ~ N. Fulton, A. Platzer #AI #ML #ATP
+ [[http://aitp-conference.org/2018/slides/JH.pdf][Let’s make set theory great again!]] ~ John Harrison #ITP 
+ [[http://aitp-conference.org/2018/slides/DMA.pdf][If mathematical proof is a game, what are the states and moves?]] ~
  David McAllester #AI #ATP #ML #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/ampliacion-de-arboles-binarios][Exercitium: "Ampliación de árboles binarios"]]. #Haskell
  #I1M2017
  #Haskell #I1M2017
+ [[https://pdfs.semanticscholar.org/presentation/833c/fec364e11bcfa8bdd7c25a36118bcd840f2f.pdf][Interactive Theorem Proving in Higher-Order Logics]]. ~ J. Blanchette
  #ITP #IsabelleHOL
+ [[https://www.causeur.fr/intelligence-artificielle-cedric-villani-ethique-150544][Intelligence artificielle: les angles morts du rapport Villani]]. ~
  Hervé Mariton (@HerveMariton) et Cyrille Dalmont (@CyrilleDalmont) #AI
+ [[http://www.glc.us.es/~jalonso/exercitium/alturas-primas][Exercitium: "Alturas primas"]]. #Haskell #I1M2017
+ [[https://kozikow.com/2016/05/21/very-powerful-data-analysis-environment-org-mode-with-ob-ipython/][Very powerful data analysis environment – org mode with ob-ipython]]. ~
  Robert Kozikowski #Emacs #OrgMode #Python #DataScience
+ [[http://sachachua.com/blog/2014/01/tips-learning-org-mode-emacs][Some tips for learning Org Mode for Emacs]]. ~ Sacha Chua (@sachac)
  #Emacs #OrgMode
+ [[http://www.glc.us.es/~jalonso/exercitium/calculo-de-pi-mediante-la-serie-de-nilakantha][Exercitium: "Cálculo de pi mediante la serie de Nilakantha"]]. 
  #Haskell #I1M2017
+ [[https://arxiv.org/abs/1610.06996][Efficient verification of imperative programs using auto2]]. ~ B. Zhan
  #IsabelleHOL
+ [[https://www.metalevel.at/equality][The meaning of = for logic programmers]]. ~ Markus Triska
  (@MarkusTriska) #LogicProgramming #Prolog
+ [[https://arxiv.org/abs/1804.05677][Boolos' hardest logic puzzle ever in its purest form]]. ~
  J.J. Colomina-Almiñana, P.R. Stinga #Logic
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-superpares][Exercitium: "Números superpares"]]. #Haskell #I1M2017
+ [[https://www.reddit.com/r/haskell/comments/8cvr6l/a_better_programming_language_for_data][A better programming language for Data Science/Machine Learning]]. 
  #Haskell #DataScience
+ [[https://whatthefunctional.wordpress.com/2018/04/17/working-with-lists][Working with lists]]. ~ Laurence Emms (@wtfunctional) #Haskell
+ [[https://medium.freecodecamp.org/python-collection-of-my-favorite-articles-8469b8455939][The best of Python: a collection of my favorite articles from 2017 and
  2018 (so far)]]. ~ Gergely Szerovay #Python
+ [[https://blogs.scientificamerican.com/observations/what-the-history-of-math-can-teach-us-about-the-future-of-ai][What the history of Math can teach us about the future of AI]]. ~ Nathan
  Myhrvold #Math #AI
+ [[https://www.fpcomplete.com/blog/why-haskell-is-hot-for-cryptocurrencies][Why Haskell is hot for cryptocurrencies]]. ~ Niklas Hambüchen #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/busqueda-en-los-digitos-de-pi-2][Exercitium: "Búsqueda en los dígitos de pi"]]. #Haskell #I1M2017
  #Haskell #I1M2017 
+ [[http://newartisans.com/2018/04/win-for-recursion-schemes][Program reduction: a win for recursion schemes]]. ~ John Wiegley
  (@jwiegley) #Haskell
+ [[https://medium.freecodecamp.org/why-you-need-python-environments-and-how-to-manage-them-with-conda-85f155f4353c][Why you need Python environments and how to manage them with Conda]]. ~ 
  Gergely Szerovay (@gergoszerovay) #Python
+ [[https://www.elperiodico.com/es/ciencia/20180121/peligro-algoritmos-al-mando-en-la-escuela-6567047][Peligro: algoritmos al mando en la escuela]]. ~ Cathy O'Neill 
+ [[http://capitanswing.com/libros/armas-de-destruccion-matematica/][Armas de destrucción matemática: Cómo el big data aumenta la
  desigualdad y amenaza la democracia]]. ~ Cathy O'Neil #Libro
  #Matemáticas #BigData
+ [[https://openlibra.com/en/book/linear-algebra-with-applications][Linear algebra with applications]]. ~ W. Keith Nicholson #eBook #Math
  #OpenLibra
+ [[http://agendapublica.elperiodico.com/limites-y-paradojas-de-la-evaluacion-cientifica/][Límites y paradojas de la evaluación científica]]. ~ Daniel Innerarity
  (@daniInnerarity)
+ [[http://cl-informatik.uibk.ac.at/teaching/ws17/vs/reports/SWreport.pdf][History of interactive theorem proving]]. ~ J. Schöpf, S. Widauer #ITP
  #DAO2018
+ [[http://cl-informatik.uibk.ac.at/teaching/ss18/mltp/content.php][Course: Machine learning for theorem proving]]. ~ C. Kaliszyk #ATP #AI #ML
+ [[https://arxiv.org/abs/1804.04967][Constructive analysis of S1S and Büchi automata]]. ~ M. Lichter,
  G. Smolka #ITP #Coq
+ [[https://umazalakain.info/static/report.pdf][Evidence-providing problem solvers in Agda]]. ~ U. Zalakain #ITP #Agda
+ [[https://pdfs.semanticscholar.org/presentation/a5b4/e0b6fa4316651eeb3d793e670662c6ce942d.pdf][Erlang: The power of functional programming]]. ~ S. Thompson
  #FunctionalProgramming #Erlang
+ [[https://pdfs.semanticscholar.org/presentation/a75a/224f2f6d6b0114f225dbea2ae2f92c3117f8.pdf][Functional reactive programming]]. ~ B. Siegel #FunctionalProgramming
+ [[https://pdfs.semanticscholar.org/presentation/8cac/2b1b64bc76e9222219c7576d9f99f715800b.pdf][Semantic Web and Machine Learning]]. ~ F. Železný #ILP
+ [[https://www.genbetadev.com/paradigmas-de-programacion/el-resurgir-de-la-programacion-funcional][El resurgir de la programación funcional]]. #ProgramaciónFuncional
  #Haskell #Erlang #Elixir #Scala #Clojure #Fsharp vía @genbetadev
+ [[https://www.slideshare.net/LucaBelli/typelevel-summit-91328863][Why monads?]] ~ Luca Belli (@__lucab) #Haskell
+ [[https://blog.jupyter.org/jupyterlab-is-ready-for-users-5a6f039b8906][JupyterLab is ready for users]]. #Jupyter
+ [[https://medium.com/@ageitgey/machine-learning-is-fun-80ea3ec3c471][Machine Learning is fun! (The world’s easiest introduction to Machine Learning)]]. ~ Adam Geitgey (@ageitgey) #AI #MachineLearning
+ [[https://medium.com/@dmery/un-futuro-incierto-hacia-donde-marchamos-7ea7845c51b][Un futuro incierto ¿hacia donde marchamos?]] ~ Daniel Mery (@dmery)
+ [[https://github.com/chrisdone/elisp-guide][A quick guide to Emacs Lisp programming]]. ~ Chris Done
  (@christopherdone) #Emacs #Lisp
+ [[http://emacs.sexy][Emacs is sexy!]] #Emacs
+ [[https://github.com/emacs-tw/awesome-emacs][Awesome Emacs: A community driven list of useful Emacs packages,
  libraries and others]]. #Emacs
+ [[https://towardsdatascience.com/why-so-many-data-scientists-are-leaving-their-jobs-a1f0329d7ea4][Here’s why so many data scientists are leaving their jobs]]. ~ Jonny
  Brooks-Bartlett (@Jonny_CBB) #DataScience
+ [[http://hyperpolyglot.org][Programming languages commonly used features in a side-by-side format]]. 
  #Programming
+ [[http://www.glc.us.es/~jalonso/exercitium/decidir-si-existe-un-subconjunto-con-suma-dada][Exercitium: "Decidir si existe un subconjunto con suma dada"]]. 
  #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://blogs.herdereditorial.com/filco/diez-libros-filosofia-imprescindibles][10 libros de filosofía imprescindibles]]. ~  Filosofía&Co (@_filco) #Filosofía
+ [[http://irreal.org/blog/?p=7138][Org Babel recipes]]. #Emacs #OrgMode #Babel
+ [[http://reasonablypolymorphic.com/blog/higher-kinded-data/index.html][Higher-Kinded Data]]. ~ Sandy Maguire #Haskell
+ [[https://whatthefunctional.wordpress.com/2018/04/22/making-a-text-adventure-in-haskell-part-4][Making a text adventure in Haskell (Part 4)]]. ~ Laurence Emms
  (@wtfunctional) #Haskell #Game
+ [[http://www.joachim-breitner.de/blog/738-Verifying_local_definitions_in_Coq][Verifying local definitions in Coq]]. ~ J. Breitner (@nomeata) #Haskell
  #Coq
+ [[http://www.glc.us.es/~jalonso/exercitium/matrices-de-hadamard][Exercitium: "Matrices de Hadamard"]]. #Haskell #I1M2017
+ [[https://medium.freecodecamp.org/how-to-think-like-a-programmer-lessons-in-problem-solving-d1d8bf1de7d2][How to think like a programmer (lessons in problem solving)]]. ~ Richard
  Reis (@richardreeze) #Programming
+ [[https://cacm.acm.org/magazines/2018/5/227202-using-functions-for-easier-programming/fulltext][Using functions for easier programming]]. ~ N. Savage #FunctionalProgramming 
  #Haskell
+ [[https://arxiv.org/abs/1804.07860][Formalising mathematics in simple type theory]]. ~ L.C. Paulson #ITP
  #Math #IsabelleHOL #HOL_Light
+ [[https://changelog.complete.org/archives/9900-emacs-5-documents-and-presentations-with-org-mode][Emacs #5: Documents and presentations with Org-Mode]]. ~ John Goerzen
  (@jgoerzen) #Emacs #OrgMode #LaTex #Beamer
+ [[http://www.glc.us.es/~jalonso/exercitium/reduccion-de-opuestos][Exercitium: "Reducción de opuestos"]]. #Haskell #I1M2017
+ [[https://arxiv.org/abs/1804.07951][Formal verification of platoon control strategies]]. ~ A. Rashid,
  U. Siddique, O. Hasan #ITP #HOL_Light
+ [[https://www.tweag.io/posts/2018-04-25-funflow.html][Funflow: typed resumable workflows]]. ~ N. Clarke, A. Hermann,
  T. Nielsen #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/notas-de-evaluacion-acumulada][Exercitium: "Notas de evaluación acumulada"]]. #Haskell #I1M2017
+ [[https://www.isa-afp.org/entries/BNF_CC.html][Bounded natural functors with covariance and contravariance in Isabelle/HOL]]. 
  ~ A. Lochbihler, J. Schneider #ITP #IsabelleHOL
+ [[http://usblogs.pwc.com/emerging-technology/machine-learning-evolution-infographic][Machine learning evolution (infographic)]]. ~ A. Morrison
  (@AlanMorrison) and A. Rao (@AnandSRao) #AI #MachineLearnig #History
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-compuestos-por-un-conjunto-de-primos][Exercitium: "Números compuestos por un conjunto de primos"]]. 
  #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://www.onlinebooksreview.com/articles/haskell-programming-book][Best Haskell programming books for functional programming]]. #Haskell 
+ [[https://www.the-tls.co.uk/articles/public/kurt-godel-incompleteness-theorems][Kurt Gödel and the mechanization of mathematics]]. ~ J. Kennedy #Logic
  #Math
+ [[https://www.slideshare.net/JarekRatajski/beauty-and-the-beast-haskell-on-jvm][Beauty and the beast (Eta Haskell on JVM)]]. ~ Jarek Ratajski
  (@jarek000000) #Haskell
+ [[http://www.cs.nmsu.edu/ALP/wp-content/uploads/2018/04/alp-2018-DLV2-1.pdf][DLV: Evolution and perspectives]]. ~ M. Alviano et als. #LogicProgramming 
  #ASP #DLV
+ [[https://www.futurity.org/artificial-intelligence-bayou-coding-1740702/][New A.I. application can write its own code]]. ~ J. Boyd-Rice #AI
+ [[http://richardzach.org/2018/04/10/the-significance-of-philosophy-to-mathematics][The significance of Philosophy to Mathematics]]. ~ Richard Zach
  (@RrrichardZach) #Math #Philosophy
+ [[https://arxiv.org/abs/1804.06398][Modelling bitcoin in Agda]]. ~ A. Setzer #ITP #Agda
+ [[https://arxiv.org/abs/1804.10037][Quantifier elimination for reasoning in economics]]. ~ C.B. Mulligan et
  als. #Logic
+ [[https://www.fpcomplete.com/blog/2018/04/async-exception-handling-haskell][Asynchronous exception handling in Haskell]]. ~ M. Snoyman (@snoyberg) #Haskell 
+ [[https://github.com/pdlla/smarties][Smarties: a general purpose behavior tree library written in Haskell]]. 
  #Haskell #AI
+ [[https://mathlesstraveled.com/2018/04/26/iterating-squared-digit-sum][Iterating squared digit sum]]. ~ Brent Yorgey #Haskell #Math
+ [[https://github.com/RyanGlScott/ghc-software-foundations][The Software Foundations book, in GHC]]. ~ Ryan Scott #Haskell
+ [[https://www.kdnuggets.com/2018/02/introduction-functional-programming-python.html][Introduction to functional programming in Python]]. ~ Spiro Sideris
  #Python #FunctionalProgramming
+ [[https://www.ams.org/notices/201111/rtx111101580p.pdf][Proof and other dilemmas: Mathematics and Philosophy (Reviewed by
  Jeremy Avigad)]]. #Math #Philosophy
+ [[http://i.cs.hku.hk/~bruno/papers/itp2018.pdf][Formalization of a polymorphic subtyping algorithm]]. ~ J. Zhao,
  B.C.S. Oliveira, T. Schrijvers #ITP #Abella
+ [[https://codicalist.wordpress.com/about/][The Babel of languages and the substrate of nature]]. ~ Philip Thrift
  (@philipthrift) #Programming
+ [[https://johncarlosbaez.wordpress.com/2018/04/07/applied-category-theory-course-part-2][Applied category theory course: ordered sets]]. ~ John Carlos Baez
  (@johncarlosbaez) #Math #CategoryTheory
+ [[https://arxiv.org/abs/1706.08605][Developing bug-free machine learning systems with formal mathematics]]. 
  ~ D. Selsam, P. Liang, D.L. Dill #ITP #Lean #MachineLearnig
+ [[https://speakerdeck.com/larrytheliquid/martin-lofs-type-theory-mltt][Martin-Löf's type theory (MLTT)]]. ~ Larry Diehl (@larrytheliquid) #Logic
+ [[http://pirilampo.org/org-mode/syntax/][Org mode syntax example]]. ~  Fabrice Niessen (@f_niessen) #Emacs #OrgMode
+ [[https://www.cs.us.es/~jalonso/apuntes/Preguntas_y_respuestas_del_modo_Org/Bibliografia/index.html][Formas de incluir bibliografías en documentos Org]]. #Emacs #OrgMode
  #I1M2017
+ [[http://www.glc.us.es/~jalonso/exercitium/subsucesiones-crecientes-de-elementos-consecutivos][Exercitium: "Subsucesiones crecientes de elementos
  consecutivos"]]. #Haskell #I1M2017
+ [[https://hal.inria.fr/hal-01772272/document][A formally-proved algorithm to compute the correct average of decimal
  floating-point numbers]]. ~ S. Boldo, F. Faissole, V. Tourneur #ITP #Coq
  #Math
+ [[https://www.quantamagazine.org/decades-old-graph-problem-yields-to-amateur-mathematician-20180417][Decades-old graph problem yields to amateur mathematician]]. ~ Evelyn
  Lamb #Math
+ [[http://www.abc.es/ciencia/abci-famoso-guru-vida-eterna-resuelve-problema-matematico-hace-60-anos-201804271200_noticia.html][Un famoso «gurú» de la vida eterna resuelve un problema matemático de
  hace 60 años]]. #Matemáticas vía @jborrego
+ [[http://leventerkok.github.io/sbv/][SBV: SMT Based Verification in Haskell (Released: April 29th, 2018)]]. 
  #Haskell #SMT #SBV
+ [[https://ec.europa.eu/digital-single-market/en/news/communication-artificial-intelligence-europe][Communication Artificial Intelligence for Europe]]. #AI

** Mayo 2018

+ [[http://www.glc.us.es/~jalonso/exercitium/sumas-de-subconjuntos][Exercitium: "Sumas de subconjuntos"]]. #Haskell #I1M2017
+ [[https://www.cl.cam.ac.uk/~caw77/papers/mechanising-and-verifying-the-webassembly-specification.pdf][Mechanising and verifying the WebAssembly specification]]. ~ C. Watt
  #IsabelleHOL #WebAssembly
+ [[https://www.isa-afp.org/entries/WebAssembly.html][WebAssembly in Isabelle/HOL]]. ~ C. Watt #IsabelleHOL #WebAssembly
+ [[https://mmhaskell.com/blog/2018/4/25/dockerizing-our-haskell-app][Dockerizing our Haskell app]]. ~ James Bowen (@james_OWA) #Haskell #Docker
+ [[https://computinged.wordpress.com/2018/04/30/indian-supreme-court-rules-that-cs-degrees-cannot-be-provided-on-line][Indian Supreme Court rules that CS degrees cannot be provided on-line]]. 
  ~ Mark Guzdial (@guzdial) #Education #CompSci
+ [[https://arxiv.org/abs/1804.10520][Using machine learning to improve cylindrical algebraic decomposition]]. 
  ~ Z. Huang, M. England, D. Wilson, J.H. Davenport, L.C. Paulson
  #MachineLearning #Logic 
+ [[http://www.i-programmer.info/news/150-training-a-education/11751-mathematical-thinking.html][Courses on mathematical thinking now underway]]. ~ Sue Gee #Math #Logic
  #CompSci 
+ [[https://escher.ntr.nl/en][The Metamorphosis of Escher through tours]].
+ [[http://www.glc.us.es/~jalonso/exercitium/subconjuntos-con-suma-dada][Exercitium: "Subconjuntos con suma dada"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://arxiv.org/abs/1805.00304][Gröbner bases of modules and Faugère's F4 algorithm in Isabelle/HOL]]. ~
  A. Maletzky, F. Immler #ITP #IsabelleHOL #Math
+ [[https://github.com/adjoint-io/aos-signature][Abe-Ohkubo-Suzuki linkable ring signatures]]. ~ A. Centelles, S. Diehl
  #Haskell
+ [[http://www.abc.es/ciencia/abci-matematicas-descifraron-maquina-enigma-nazis-201804301647_noticia.html][Las matemáticas que descifraron la máquina «Enigma» de los nazis]]. ~
  Paz Jiménez Seral y Manuel Vázquez Lapuente #Matemáticas
+ [[https://arxiv.org/abs/1805.00068][Exploiting Answer Set Programming with external sources for
  meta-interpretive learning]]. ~ T. Kaminski, T. Eiter, K. Inoue #ASP
  #ILP
+ [[http://www.doc.ic.ac.uk/~rak/papers/swish.pdf][Using SWISH to realise interactive web based tutorials for logic based languages]]. ~ J. Wielemaker, F. Riguzzi, R. Kowalski, T. Lager,
  F. Sadri, M. Calejo. #LogicProgramming #Prolog #SWISH
+ [[http://cattheory.com/editTimeTacticsDraft.pdf][Edit-time tactics in Idris]]. ~ Joomy Korkut (@cattheory). #Idris
+ [[http://reduction.io/essays/rosetta-haskell.html][Rosetta Haskell]] (how abstractions are used by sequentially rewriting a
  program to do exactly the same thing using different techniques). ~
  Chas Leichner #Haskell
+ [[https://blog.d46.us/advanced-emacs-startup][Advanced techniques for reducing Emacs startup time]]. ~ Joe Schafer #Emacs
+ [[http://www.glc.us.es/~jalonso/exercitium/diccionario-inverso][Exercitium: "Diccionario inverso"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://personal.cis.strath.ac.uk/fredrik.nordvall-forsberg/papers/variationsIR_mfcs2017.pdf][Variations on inductive-recursive definitions]]. ~ N. Ghani et als. #Agda
+ [[https://www.isa-afp.org/entries/VerifyThis2018.html?utm_source=dlvr.it&utm_medium=twitter][VerifyThis 2018 - Polished Isabelle solutions]]. ~ P. Lammich and
  S. Wimmer #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/operaciones-con-series-de-potencias][Exercitium: "Operaciones con series de potencias"]]. #Haskell
  #I1M2017
+ [[http://blog.ploeh.dk/2018/04/30/parametrised-unit-tests-in-haskell][Parametrised unit tests in Haskell]]. ~ Mark Seemann #Haskell
+ [[https://arxiv.org/abs/1805.00808v1][Formal process virtual machine for smart contracts verification]]. ~
  Z. Yang, H. Lei #Coq
+ [[http://www.andrew.cmu.edu/user/avigad/Papers/learning_logic_and_proof.pdf][Learning logic and proof with an interactive theorem prover]]. ~
  J. Avigad #Logic #ITP #Lean
+ [[http://leanprover.github.io/logic_and_proof][Logic and proof (Release 0.1)]]. ~ J. Avigad, R.Y. Lewis, F. van Doorn
  #Logic #ITP #Lean
+ [[http://irreal.org/blog/?p=7168][Writing LaTeX with Org Mode]]. #Emacs #OrgMode #LaTeX 
+ [[https://github.com/hugrubsan/Offline-Handwriting-Recognition-with-TensorFlow][Sistema de Deep Learning para el reconocimiento de palabras manuscritas implementado en TensorFlow y entrenado con IAM Handwriting
  Database]]. ~ Hugo Rubio #DeepLearning
+ [[https://www.toptal.com/machine-learning/de-resolver-ecuaciones-a-aprendizaje-profundo-un-tutorial-de-tensorflow-python/es][De resolver ecuaciones a aprendizaje profundo: Un tutorial de
  TensorFlow Python]]. ~ Oliver Holloway #DeepLearning
+ [[https://www.toptal.com/machine-learning/tensorflow-python-tutorial][From solving equations to Deep Learning: A TensorFlow Python
  tutorial]]. ~ Oliver Holloway #DeepLearning
+ [[https://doisinkidney.com/posts/2018-05-05-induction.html][Type-level induction in Haskell]]. ~ Donnacha Oisín Kidney (@oisdk)
  #Haskell
+ [[https://plato.stanford.edu/entries/lambda-calculus/][The lambda calculus]]. ~ J. Alama, J. Korbmacher #Logic  
+ [[https://news.stanford.edu/2018/05/04/deep-learning-comes-full-circle/][Deep learning comes full circle]]. ~ N. Collins #DeepLearning
+ [[https://cardanodocs.com/technical/formal-specification-for-a-cardano-wallet/][Formal specification for a Cardano wallet]]. ~ D. Coutts, E. de Vries #Cardano
+ [[http://www.sciencemag.org/news/2018/05/ai-researchers-allege-machine-learning-alchemy][AI researchers allege that machine learning is alchemy]]. ~ M. Hutson
  #MachineLearnig
+ [[http://www.glc.us.es/~jalonso/exercitium/las-sucesiones-de-loomis][Exercitium: "Las sucesiones de Loomis"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://whatthefunctional.wordpress.com/2018/05/07/making-an-ecosystem-simulation-in-haskell-part-1/][Making an ecosystem simulation in Haskell (Part 1)]]. ~ Laurence Emms
  (@wtfunctional) #Haskell
+ [[http://travis.athougies.net/posts/2018-05-05-dynamic-programming-is-recursion.html][Dynamic programming in Haskell is just recursion]]. ~ Travis Athougies
  #Haskell
+ Machine learning tutorial: 
  + [[http://bit.ly/2FS50zv][ML basics and experimenting]] 
  + [[http://bit.ly/2FQbjUc][From text to features and NLP-oriented intro to selected learning algorithms]].
  + [[http://bit.ly/2FQ2ZUE][Mallet in UIMA: experiments with ClearTK and Lab]].
  + [[http://bit.ly/2FQ37DC][WEKA API brief and highlight of further topics]].
+ [[https://github.com/luqui/polyrhythmia][Procedural generation of polyrhythmic beats]]. ~ Luke Palmer (@luqui) #Haskell
+ [[https://byorgey.wordpress.com/2018/05/06/conversations-with-a-six-year-old-on-functional-programming][Conversations with a six-year-old on functional programming]]. ~ Brent Yorgey
  #FunctionalProgramming
+ [[http://www.glc.us.es/~jalonso/exercitium/polinomio-digital][Exercitium: "Polinomio digital"]]. #Haskell #I1M2017
  conjunto dado"]]. #Haskell #I1M2017
+ [[http://ul.io/nb/2018/04/30/literate-analytics-with-org-babel][A brief introduction to literate analytics with Org-Babel]]. ~ Nick
  Barnwell #Emacs #OrgMode
+ [[https://github.com/PythonistaMX/py101][Introducción a la programación con Python 3]]. ~ José Luis Chiquete
  Valdivieso #Python
+ [[https://queue.acm.org/detail.cfm?id=3212479][C is not a low-level language (Your computer is not a fast PDP-11)]]. ~
  David Chisnall #Programming
+ [[http://www.glc.us.es/~jalonso/exercitium/clausura-respecto-de-una-operacion-binaria][Exercitium: "Clausura respecto de una operación binaria"]]. 
  #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://unpocologico.wordpress.com/2018/05/08/the-humanities-of-maths-computer-science][The Humanities of Maths/Computer Science]]. ~ L.P. Cruz #Math #CompSci
+ [[http://nautilus.cs.miyazaki-u.ac.jp/~skata/MagicHaskeller.html][MagicHaskeller: An inductive functional programming system for
  casual/beginner Haskell programmers]]. ~ Susumu Katayama #Haskell
+ [[https://blog.jle.im/entry/const-applicative-and-monoids.html][The Const Applicative and Monoids]]. ~ Justin Le (@mstk) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/maximos-de-expresiones-aritmeticas][Exercitium: "Máximos de expresiones aritméticas"]]. #Haskell #I1M2017
+ [[http://briansteffens.com/2017/02/20/from-math-to-machine.html][From math to machine: translating a function to machine code]]. ~ Brian
  Steffens #Programming #Math #Haskell #Imperative_language
  #Assembly_language #Machine_code #I1M2017 
+ [[https://www.isa-afp.org/entries/Modular_Assembly_Kit_Security.html][An Isabelle/HOL formalization of the modular assembly kit for security
  properties]]. ~ O. Bračevac et als. #IsabelleHOL
+ [[https://abhiroop.github.io/vectorization.pdf][Vectorization in Haskell]]. ~ Abhiroop Sarkar #Haskell
+ [[https://github.com/TechBookHunter/Free-Haskell-Books][A curated collection of free eBooks about Haskell]]. #Haskell
+ [[http://adrianmejia.com/blog/2018/04/05/most-popular-algorithms-time-complexity-every-programmer-should-know-free-online-tutorial-course][8 time complexities that every programmer should know]]. ~ Adrián Mejía
  (@amejiarosario) #Algorithmic
+ [[https://arxiv.org/abs/1805.03496][Revisiting decision diagrams for SAT]]. ~ T. van Dijk, R. Ehlers,
  A. Biere #Logic #ATP #SAT
+ [[https://arxiv.org/abs/1805.03107][Machine learning guidance and proof certification for connection
  tableau]]. ~ M. Färber, C. Kaliszyk, J. Urban #MachineLearning #ATP
  #Prolog
+ [[https://github.com/DanBurton/runmemo/blob/cccc5a378264b3fe002d73089ad7c690f39cb86f/examples/lcs.hs][Explicit memoization can be elegant; a response to "Dynamic programming in Haskell is just recursion"]]. ~ Dan Burton #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesiones-suaves][Exercitium: "Sucesiones suaves"]]. #Haskell #I1M2017
+ [[https://doisinkidney.com/posts/2018-05-05-induction.html][Type-level induction in Haskell]]. ~ Donnacha Oisín Kidney (@oisdk) #Haskell
+ [[http://reasonablypolymorphic.com/blog/follow-the-denotation/][Follow the denotation]]. ~ Sandy Maguire #Haskell
+ [[https://arxiv.org/abs/1705.04680][Proof mining with dependent types]]. ~ E. Komendantskaya, J. Heras #ITP #Coq
  #MachineLearning
+ [[http://h2.jaguarpaw.co.uk:8000/posts/hkd-pattern-type-level-ski][The HKD pattern and type-level SKI]]. ~ Tom Ellis #Haskell
+ [[https://www.oreilly.com/ideas/machine-learning-a-quick-and-simple-definition][Machine learning: A quick and simple definition]]. ~ James Furbush
  (@JamesFurbush) #AI #MachineLearning
+ [[http://bit.ly/2G8iRC0][La hipótesis de Riemann y el problema P = NP]]. ~ Juan Arias de Reyna
  #Matemáticas #Computación
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?TFPIE2017.3][Functional baby talk: Analysis of code fragments from novice Haskell programmers]]. ~ J. Singer (@jsinger_compsci), B. Archibald #Haskell
+ [[https://github.com/miguelibagar/EulerianPath][Los puentes de Königsberg: Estudio y resolución con Haskell]]. ~ Miguel
  Ibáñez #Hakell #Matemáticas
+ [[https://www.cl.cam.ac.uk/events/arw2018/arw2018-proc.pdf][Proceedings of the 25th Automated Reasoning Workshop (Bridging the Gap
  between Theory and Practice)]]. #ATP
+ [[https://elpais.com/tecnologia/2018/05/09/actualidad/1525854596_328159.html][Qué hacer ante la "tecnupidez"]]. ~ Mario Bunge #Ciencia #Tecnología
+ [[http://www.laetoli.es/las-dos-culturas/155-que-es-la-tecnologia-9788492422999.html][¿Qué es la tecnología?]] ~ Dominique Raynaud #Ciencia #Tecnología
+ [[http://ruleml.org/talks/FrancescoRicca-ASPinIndustrContxt-RuleMLWebinar-2018-03-23.pdf][ASP in industrial contexts: applications and toolchain]]. ~ Francesco Ricca #Logic #Programming #ASP
+ [[http://bit.ly/2jSW30v][Writing bug-free code using theorem provers]]. ~ Aaron Stump #ITP
+ [[http://bit.ly/2GdYX8G][Proof assistants: from symbolic logic to real mathematics?]] ~ Lawrence
  C Paulson #ITP #Logic #Math
+ [[https://www.eff.org/deeplinks/2018/05/math-cant-solve-everything-questions-we-need-be-asking-deciding-algorithm-answer][Math can’t solve everything: questions we need to be asking before
  deciding an algorithm is the answer]]. ~ J. Williams, L. Gunn
  #Algorithms
+ [[http://www.glc.us.es/~jalonso/exercitium/numero-de-triangulaciones-de-un-poligono][Exercitium: "Número de triangulaciones de un polígono"]]. 
  #Haskell #I1M2017
+ [[http://www.robots.ox.ac.uk/~gunes/assets/pdf/baydin-2018-ad-machinelearning.pdf][Automatic differentiation in machine learning: a survey]]. ~ Atılım
  Güneş Baydin et als. #AD #AutomaticDifferentiation #ML
  #MachineLearning
+ [[https://github.com/ekmett/ad][Automatic differentiation]]. ~ Edward Kmett (@kmett) #Haskell #AD
  #AutomaticDifferentiation
+ [[http://lab.elmundo.es/inteligencia-artificial/que-es.html][La Inteligencia Artificial no es como en las películas. ¿Qué es?]] #IA
+ [[https://www.gnu.org/gnu/rms-lisp.html][My Lisp experiences and the development of GNU Emacs]]. ~ Richard
  Stallman #Lisp #Emacs
+ [[http://binaire.blog.lemonde.fr/2018/05/14/intelligence-artificielle-et-pensee-humaine][Intelligence artificielle et pensée humaine]]. ~ Margarida Romero
  (@margaridaromero) #IA
+ [[http://repositorium.sdum.uminho.pt/bitstream/1822/54476/1/exercicios-sbc3.pdf][Exercícios resolvidos em Prolog sobre sistemas baseados em conhecimento]]. ~ Paulo Cortez #Prolog
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-construidos-con-los-digitos-de-un-conjunto-dado][Exercitium: "Números construidos con los dígitos de un
  conjunto dado"]]. #Haskell #I1M2017
  #I1M2017
+ [[https://blog.jle.im/entry/purely-functional-typed-models-1.html][A purely functional typed approach to trainable models (Part 1)]]. ~
  Justin Le (@mstk) #Haskell #MachineLearning
+ [[http://www.cs.cmu.edu/~rwh/papers/lfmtp18.pdf][The RedPRL proof assistant]]. ~ C. Angiuli, E. Cavallo, K.B. Hou,
  R. Harper, J. Sterling. #ITP
+ [[https://venturebeat.com/2018/05/10/carnegie-mellon-university-starts-first-ai-degree-program-in-u-s/][Carnegie Mellon University starts first AI degree program in U.S.]] ~
  K. Johnson @kharijohnson #AI
+ [[https://www.cs.cmu.edu/bs-in-artificial-intelligence/curriculum][Bachelor of Science in Artificial Intelligence (CMU): Curriculum]]. #AI
+ [[http://andrew-wohlgemuth.com/DMmathed.pdf][Deductive mathematics (an introduction to proof and discovery for
  mathematics education)]]. ~ A. Wohlgemuth #eBook #Math
+ [[http://revue.sesamath.net/spip.php?article1096][Pensée informatique et géométrie]]. ~ A. Busser, P. Debrabant, S. Gonifei #Math #Programming
+ [[https://www.eldiario.es/tecnologia/Dimite-Google-aplicacion-inteligencia-artificial_0_771673028.html][Dimiten varios empleados de Google por la aplicación de su
  inteligencia artificial a un proyecto militar]]. #AI vía @eldiariotec
+ [[https://www.bloomberg.com/news/articles/2018-05-14/inside-google-a-debate-rages-should-it-sell-artificial-intelligence-to-the-military][Inside Google, a debate rages: should it sell Artificial Intelligence
  to the military?]]. ~ Mark Berge #AI
+ [[http://www.glc.us.es/~jalonso/exercitium/mayor-numero-de-atracciones-visitables][Exercitium: "Mayor número de atracciones visitables"]]. 
  #Haskell #I1M2017
+ [[https://www.haskell.org/communities/05-2018/html/report.html][Haskell communities and activities report (May 2018)]]. #Haskell
+ [[http://jips-k.org/file/down?pn=545 ][Verifying code toward trustworthy software]]. ~ Hyong-Soon Kim and
  Eunyoung Lee #FormalVerification
+ [[http://www.mais.informatik.tu-darmstadt.de/WebBibPHP/papers/2018/TUD-CS-2018-0056-I-MAKS-Tr.pdf][I-MAKS (A framework for information-flow security in Isabelle/HOL)]]. ~
  S Grewe, H Mantel, M Tasch, R Gay, H Sudbrock #ITP #IsabelleHOL
+ [[https://arxiv.org/abs/1805.03740][High-level signatures and initial semantics]]. ~ B. Ahrens,
  A. Hirschowitz, A. Lafont, M. Maggesi #ITP #Coq
+ [[http://irreal.org/blog/?p=7198][Emacs tools for writers]]. #Emacs
+ [[https://opensource.com/article/18/5/emacs-modes-writers][5 Emacs modes for writers]]. ~ Scott Nesbit (@ScottWNesbitt) #Emacs
+ [[http://www.glc.us.es/~jalonso/exercitium/problema-de-las-jarras][Exercitium: "Problema de las jarras"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://www.quantamagazine.org/to-build-truly-intelligent-machines-teach-them-cause-and-effect-20180515/][To build truly intelligent machines, teach them cause and effect]]. #AI
+ [[https://www.kdnuggets.com/2018/05/pearl-book-science-cause-effect.html][The book of why (The new science of cause and effect)]]. ~ Judea Pearl,
  Dana Mackenzie #Science #AI
+ [[https://medium.com/@olxc/catamorphisms-and-f-algebras-b4e91380d134][Catamorphisms and F-algebras]]. ~ Alexey Avramenko (@vvviiimmm) #Haskell
+ [[https://medium.com/coinmonks/create-blockchain-in-haskell-e65df30878bc][Create Blockchain in Haskell]]. ~ Gaurav Agrawal (@gaurav_zen) #Haskell
  #Blockchain
+ [[https://www.cs.princeton.edu/~appel/papers/wand-frame.pdf][Proof pearl: Magic wand as frame]]. ~ Qinxiang Cao, Shengyi Wang,
  Aquinas Hobor, and Andrew W. Appel #ITP #Coq
+ [[https://mmhaskell.com/blog/2018/5/14/advanced-github-webhooks-and-automation][Advanced Github: Webhooks and automation]]. ~ James Bowen (@james_OWA)
  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesion-de-recaman][Exercitium: "Sucesión de Recamán"]]. #Haskell #I1M2017
+ [[http://www.joachim-breitner.de/blog/740-Proof_reuse_in_Coq_using_existential_variables][Proof reuse in Coq using existential variables]]. ~ J. Breitner
  (@nomeata) #ITP #Coq
+ [[https://hal.inria.fr/hal-01728828/document][A Coq formalization of digital filters]]. ~ Diane Gallois-Wong, Sylvie
  Boldo, and Thibault Hilaire #ITP #Coq
+ [[https://hal.inria.fr/hal-01483457/document][Formalization of the arithmetization of euclidean plane geometry and
  applications]]. ~ Pierre Boutry, Gabriel Braun, Julien Narboux #ITP #Coq
  #Math
+ [[https://arxiv.org/abs/1803.00403][A general formal memory framework in Coq for verifying the properties of programs based on higher-order logic theorem proving with increased
  automation, consistency, and reusability]]. ~ Zheng Yang, Hang Lei #ITP
  #Coq
+ [[http://reasonablypolymorphic.com/blog/ecstasy-case-study/index.html][Performance and feature case studies in ecstasy]]. ~ Sandy Maguire
  #Haskell
+ [[https://www.carnegiecouncil.org/publications/articles_papers_reports/artificial-intelligences-ethical-challenges][Artificial Intelligence's ethical challenges]]. ~ L. Zacharias #AI #Ethics
+ [[https://idontgetoutmuch.wordpress.com/2018/05/19/cartography-in-haskell][Cartography in Haskell]]. ~ Dominic Steinitz (@idontgetoutmuch) #Haskell
+ [[https://arxiv.org/abs/1805.06869][Revisiting the tree edit distance and its backtracing: A tutorial]]. ~
  B. Paaßen #Algorithms
+ [[https://arxiv.org/abs/1805.06502][First experiments with neural translation of informal to formal
  mathematics]]. ~ Q. Wang, C. Kaliszyk, J. Urban #MachineLearning #Math
+ [[https://bartoszmilewski.com/2018/05/16/free-monoidal-functors-categorically/amp/][Free monoidal functors, categorically!]] ~ Bartosz Milewski
  (@BartoszMilewski) #haskell #CategoryTheory
+ [[http://www.glc.us.es/~jalonso/exercitium/grafo-de-divisibilidad/][Exercitium: "Grafo de divisibilidad"]]. #Haskell #I1M2017
+ [[http://www.tom-ridge.com/resources/doc/whitington17ocaml_workshop_post_proceedings-ocamli.pdf][Direct interpretation of functional programs for debugging]]. ~
  J. Whitington, T. Ridge #FunctionalProgramming
+ [[https://arxiv.org/abs/1805.05124v1][Vector Programming using structural recursion (An introduction to vectors for beginners)]]. ~ M.T. Morazán #Racket
+ [[https://arxiv.org/abs/1805.05125v1][Using Elm to introduce algebraic thinking to K-8 students]]. ~
  C. d'Alves et als. #Elm
+ [[https://arxiv.org/abs/1805.05127v1][Teaching Erlang through the Internet: an experience report]]. ~ S. Adams
  #Erlang
+ [[http://www.glc.us.es/~jalonso/exercitium/el-problema-de-las-celebridades][Exercitium: "El problema de las celebridades"]]. #Haskell
  #I1M2017
  #I1M2017
+ [[http://www.haskellforall.com/2018/05/how-i-evaluate-haskell-packages.html][How I evaluate Haskell packages]]. ~ G. Gonzalez (@GabrielG439) #Haskell
+ [[https://whatthefunctional.wordpress.com/2018/05/21/making-an-ecosystem-simulation-in-haskell-part-2/amp/][Making an ecosystem simulation in Haskell (Part 2)]]. ~ Laurence Emms
  (@wtfunctional) #Haskell
+ [[https://arxiv.org/abs/1805.07433][DeepLogic: end-to-end logical reasoning]]. ~ N. Cingillioglu, A. Russo
  #Logic #MachineLearnig
+ [[https://arxiv.org/abs/1805.07563][Reinforcement learning of theorem proving]]. ~ C. Kaliszyk, J. Urban,
  H. Michalewski, M. Olšák #Logic #ATP #MachineLearnig
+ [[https://arxiv.org/abs/1805.07431][Can machine learning identify interesting mathematics? An exploration
  using empirically observed laws]]. ~ Chai Wah Wu #MachineLearning #Math 
+ [[https://www.brucker.ch/bibliography/download/2018/brucker.ea-standard-compliance-testing-2018.pdf][Formalizing (Web) standards: an application of test and proof]]. ~
  A.D. Brucker, M. Herzberg #ITP #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/problema-del-domino][Exercitium: "Problema del dominó"]]. #Haskell #I1M2017
+ [[https://arxiv.org/abs/1805.07494][Number sequence prediction problems and computational powers of neural
  network models]]. ~ H. Nam, S. Kim, K. Jung #MachineLearning #Math
+ [[https://cacm.acm.org/blogs/blog-cacm/228006-teaching-two-programming-languages-in-the-first-cs-course/fulltext][Teaching two programming languages in the first CS course]]. ~
  M. Guzdial #Teaching #Programming
+ [[http://www.glc.us.es/~jalonso/exercitium/sustitucion-de-pares-de-elementos-consecutivos-iguales][Exercitium: "Sustitución de pares de elementos
  consecutivos iguales"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[http://www.glc.us.es/~jalonso/exercitium/caminos-en-un-grafo][Exercitium: "Caminos en un grafo"]]. #Haskell #I1M2017
+ [[https://www.quantamagazine.org/a-classical-math-problem-gets-pulled-into-the-modern-world-20180523/][A classical math problem gets pulled into the modern world]]. ~
  K. Hartnett #Math
+ [[https://www.isa-afp.org/entries/Probabilistic_Timed_Automata.html][Probabilistic timed automata in Isabelle/HOL]]. ~ S. Wimmer, J. Hölzl
  #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Hidden_Markov_Models.html][Hidden Markov models]]. ~ S. Wimmer #IsabelleHOL
+ [[https://ro-che.info/articles/2018-05-25-quickcheck-vs-smallcheck][QuickCheck vs SmallCheck]]. ~ R. Cheplyaka (@shebang) #Haskell
+ [[https://elpais.com/elpais/2018/05/18/ciencia/1526642306_475745.html][Polinomios contra ordenadores cuánticos]]. ~ I. Luengo #Matemáticas
  #Computación
+ [[https://two-wrongs.com/technical-writing-learning-from-kernighan][Technical writing: Learning from Kernighan]]. ~ Two Wrongs #Programming
+ [[https://www.technologyreview.com/s/611138/microsoft-is-creating-an-oracle-for-catching-biased-ai-algorithms][Microsoft is creating an oracle for catching biased AI algorithms]]. ~
  W. Knight #AI
+ [[https://www.technologyreview.com/s/611146/the-us-military-is-funding-an-effort-to-catch-deepfakes-and-other-ai-trickery][The US military is funding an effort to catch deepfakes and other AI trickery]]. ~ W. Knight #AI
+ [[http://www.cs.nmsu.edu/~epontell/ALP/uploads/alp_Amelia_Harrison.pdf][Proving program correctness using the AG semantics: an example with
  n-Queens]]. ~ A. Harrison #ASP
+ [[http://www.i-programmer.info/news/150-training-a-education/11822-free-ai-course-from-finland.html][Free AI course from Finland]]. ~ S. Gee #AI 
+ [[https://github.com/takenobu-hs/haskell-symbol-search-cheatsheet][Haskell/GHC symbol search cheatsheet]]. ~ Takenobu Tani #Haskell
+ [[https://books.google.es/books?id=Y3nRBQAAQBAJ][Combinatorics of permutations]]. ~ M. Bona #Math
+ [[https://vynm.github.io/Comutations/posts/2018-05-25-00Introduction.html][Combinatorics of permutations in Haskell: Introduction]]. ~ Vinay
  Madhusudanan #Haskell #Math
+ [[http://hsyl20.fr/home/files/talks/shenry-2013-02-05-haskell-intro.pdf][Haskell: an introduction]]. ~ Sylvain Henry #Haskell
+ [[http://hsyl20.fr/home/posts/2018-05-22-extensible-adt.html][Extensible ADT (EADT)]]. ~ Sylvain Henry #Haskell
+ [[https://blog.roman-gonzalez.ca/post/174140457777/fast-haskell-coding-with-cushions][Fast Haskell coding with cushions]]. ~ Roman Gonzalez #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/polinomios-de-fibonacci][Exercitium: "Polinomios de Fibonacci"]]. #Haskell #I1M2017
+ [[https://www.isa-afp.org/entries/Irrationality_J_Hancl.html][Irrational rapidly convergent series in Isabelle/HOL]]. ~ A. Koutsoukou
  Argyraki, W. Li #ITP #IsabelleHOL #Math
+ [[https://medium.com/urbint-engineering/haskell-lens-operator-onboarding-a235481e8fac][Haskell Lens Operator Onboarding]]. ~ Russell Matney (@RussMatney) #Haskell
+ [[https://en.wikipedia.org/wiki/Definitions_of_mathematics][Definitions of mathematics]]. #Math
+ [[https://arxiv.org/pdf/1805.08059][One Monad to prove them all (Functional pearl)]]. ~ J- Christiansen,
  S. Dylus, F. Teegen #ITP #Coq #Haskell
+ [[https://arxiv.org/pdf/1805.07797][One formalization of virtue ethics via learning]]. ~ N.S. Govindarajulu, 
  S. Bringjsord, R. Ghosh #AI
+ [[https://hal.inria.fr/hal-01783851/document][A toolchain to produce correct-by-construction OCaml programs]]. ~ J.C. 
  Filliâtre et als. #FunctionalProgramming #OCaml #Why3
+ [[http://www.glc.us.es/~jalonso/exercitium/representaciones-de-grafos][Exercitium: "Representaciones de grafos"]]. #Haskell #I1M2017
+ [[https://www.isa-afp.org/entries/AxiomaticCategoryTheory.html][Axiom systems for category theory in free logic]]. ~ C. Benzmüller and
  D. Scott #ITP #IsabelleHOL #Math #Logic
+ [[https://arxiv.org/pdf/1805.07239][Translation of algorithmic descriptions of discrete functions to SAT with applications to cryptanalysis problems]]. ~ A Semenov et als. #SAT
+ [[http://www.comlab.ox.ac.uk/ralf.hinze/publications/ICFP09.pdf][Functional pearl: La tour d’Hanoï]]. ~ R. Hinze #FuncionalProgramming #Haskell
+ [[https://scss.tcd.ie/publications/theses/diss/2015/TCD-SCSS-DISSERTATION-2015-068.pdf][Simulation of mathematical games using functional programming]]. ~
  D. Murphy #FuncionalProgramming #Haskell #Math #Games
+ [[https://books.goalkicker.com/LaTeXBook/LaTeXNotesForProfessionals.pdf][LaTeX notes for professionals book]]. #LaTeX
+ [[http://mrhonner.com/archives/18665][Visualizing Cantor’s zig zag]]. ~ Patrick Honner (@MrHonner) #Math
+ [[https://arxiv.org/pdf/1804.00485v1][Lisp, Jazz, Aikido (three expressions of a single essence)]]. ~ Didier
  Verna #FunctionalProgramming #Lisp
+ [[http://kitchingroup.cheme.cmu.edu/blog/2018/05/14/f-strings-in-emacs-lisp][f-strings in emacs-lisp]]. ~ John Kitchin (@johnkitchin) #Emacs #Elisp
+ [[https://arxiv.org/pdf/1805.09938][Automated verification of neural networks: Advances, challenges and
  perspectives]]. ~ F. Leofante et als. #AutomatedReasoning
  #MachineLearning
+ [[http://www.glc.us.es/~jalonso/exercitium/problema-de-las-3-jarras][Exercitium: "Problema de las 3 jarras"]]. #Haskell #I1M2017
+ [[https://www.isa-afp.org/entries/Monad_Memo_DP.html][Monadification, memoization and dynamic programming in Isabelle/HOL]]. ~
  S. Wimmer, S. Hu and T. Nipkow #ITP #IsabelleHOL #Algorithms
+ [[https://github.com/seroron/hblock][Block puzzle in Haskell]]. ~ @__seroron #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/descomposiciones-de-n-como-sumas-de-1-3-o-4][Exercitium: "Descomposiciones de N como sumas de 1, 3 ó 4"]]. #Haskell #I1M2017
+ [[https://www.lix.polytechnique.fr/Labo/Dale.Miller/papers/cada-draft.pdf][Computation-as-deduction in Abella: work in progress]]. ~ K. Chaudhuri, 
  U. Gérard, D. Miller #ITP #Abella
+ [[https://research.fb.com/announcing-the-facebook-testing-and-verification-request-for-research-proposals/][Announcing the Facebook Testing and Verification request for research
  proposals]].  
+ [[https://www.eldiario.es/hojaderouter/robots/Realidad-ficcion-algoritmos-enganan-magia_0_776572603.html][¿Realidad o ficción? Inteligencia artificial que nos engaña como por
  arte de magia]]. ~ Cristina Sánchez (@CristinaSanzM) #IA
+ [[https://mmhaskell.com/blog/2018/5/21/nix-haskell-concepts-for-package-managment][Nix: Haskell concepts for package managment]]. ~ James Bowen
  (@james_OWA) #Haskell #Nix
+ [[https://arxiv.org/pdf/1805.11799][Automated proof synthesis for propositional logic with deep neural networks]]. ~ T. Sekiyama, K. Suenaga #Logic #ATP #DeepLearning
+ [[https://two-wrongs.com/purely-functional-avl-trees-in-common-lisp][Purely functional AVL trees in Common Lisp]]. #CommonLisp
+ [[https://arxiv.org/pdf/1805.10872][DeepProbLog: Neural probabilistic logic programming]]. ~ R. Manhaeve et
  als. #LogicProgramming #DeepLearning
+ [[https://www.scientificamerican.com/article/how-close-are-we-really-to-building-a-quantum-computer][How close are we—really—to building a quantum computer?]] ~ Larry
  Greenemeier #CompSci
+ [[https://plato.stanford.edu/entries/mathematics-constructive/][Constructive Mathematics]]. ~ D. Bridges #Logic #Math
+ [[http://www.microsiervos.com/archivo/ordenadores/mainframe-ibm-1401-fortran.html][Un mainframe IBM 1401 de 1959 compilando Fortran]]. ~ @Alvy
  #Programación #Computación  
+ [[https://en.wikipedia.org/wiki/History_of_programming_languages][History of programming languages]]. #Programming #CompSci
+ [[https://en.wikipedia.org/wiki/Timeline_of_programming_languages][Timeline of programming languages]]. #Programming #CompSci

** Junio 2018

+ [[http://www.glc.us.es/~jalonso/exercitium/caminos-reducidos][Exercitium: "Caminos reducidos"]]. #Haskell #I1M2017
+ [[https://www.isa-afp.org/entries/Optimal_BST.html][Optimal binary search trees in Isabelle/HOL]]. ~ T. Nipkow and
  D. Somogyi #ITP #IsabelleHOL #Algorithms
+ [[http://www.diva-portal.org/smash/get/diva2:1209426/FULLTEXT01.pdf][Functional programming and legacy software (Using PureScript to extend a legacy JavaScript system)]]. ~ C. Fischer #PureScript
+ [[https://people.cs.kuleuven.be/~tom.schrijvers/Research/papers/lics2018.pdf][Syntax and semantics for operations with scopes]]. ~ M. Piróg,
  T. Schrijvers, N. Wu, M. Jaskelioff #Haskell
+ [[https://mat-web.upc.edu/people/sebastia.xambo/QC/qc.pdf][Mathematical essentials of quantum computing]]. ~ J. Rué, S. Xambó #Math
  #CompSci
+ [[https://dslsofmath.github.io/BScProj2018/index.html][Learn You a Physics for Great Good!]] ~ B. Werner, E. Sjöström,
  J. Johansson, O. Lundström #eBook #Haskell #Physics
+ [[https://arxiv.org/pdf/1805.10090][Certified ordered completion in Isabelle/HOL]]. ~ C. Sternagel,
  S. Winkler #ITP #IsabelleHOL
+ [[https://hal.inria.fr/hal-01799712/document][Modular verification of programs with effects and effect handlers in Coq]]. ~
  T. Letan, Y. Régis-Gianas, P. Chifflier, G. Hiet #ITP #Coq
+ [[https://hal.inria.fr/hal-01799629/document][A more precise, more correct stack and register model for CompCert]]. ~
  G. Barany #ITP #Coq
+ [[http://staff.mmcs.sfedu.ru/~ulysses/Papers/2018-TFP-dgp-recursion.pdf][Handling recursion in generic programming using closed type families]]. ~
  A. Bolotina, A. Pelenitsyn #FunctionalProgramming #Haskell
+ [[https://books.goalkicker.com/AlgorithmsBook][Algorithms notes for professionals]]. #eBook #Algorithms
+ [[https://github.com/owickstrom/gi-gtk-declarative][Purely functional and declarative GTK+ programming in Haskell]]. ~ Oskar
  Wickström (@owickstrom) #Haskell
+ [[https://github.com/DSLsofMath/DSLsofMath/raw/master/L/snapshots/DSLsofMathNotes_2018-02-28.pdf][Domain specific languages of mathematics: lecture notes]]. ~ Patrik
  Jansson (@patrikja), Cezar Ionescu. #Haskell #Math
+ [[http://www.well-typed.com/blog/2018/05/semi-formal-development/][Semi-formal development: The Cardano wallet]]. ~ Edsko de Vries #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-de-church][Exercitium: "Números de Church"]]. #Haskell #I1M2017
+ [[http://www.posteriorscience.net/?p=206][Programming by poking: why MIT stopped teaching SICP (The Structure
  and Interpretation of Computer Programs)]]. ~ Yarden Katz #Programming
+ [[http://www.cs.cmu.edu/~15150][Course CMU 15-150: Functional programming, summer 2018]]. 
  #FunctionalProgramming #SML
+ [[http://reports-archive.adm.cs.cmu.edu/anon/2010/CMU-CS-10-140.pdf][Introductory Computer Science Education at Carnegie Mellon University: A Deans’ Perspective]]. ~ R.E. Bryant, K. Sutner, M.J. Stehlik #Teaching
  #CompSci
+ [[https://existentialtype.wordpress.com/2011/04/17/some-advice-on-teaching-fp][Some thoughts on teaching functional programming]]. ~ R. Harper
  #Teaching #FuncionalProgramming
+ [[https://github.com/cascala/galileo][Galileo is the genesis of a symbolic and numerical math tool written
  in Scala; a Computer Algebra System (CAS)]].  #Scala #Math #CAS
+ [[https://whatthefunctional.wordpress.com/2018/06/02/making-an-ecosystem-simulation-in-haskell-part-3][Making an ecosystem simulation in Haskell (Part 3)]]. ~ Laurence Emms
  (@wtfunctional) #Haskell
+ [[https://arxiv.org/pdf/1806.00069][Explaining explanations: an approach to evaluating interpretability of
  machine learning]]. ~ L.H. Gilpin et als. #XAI #AI #MachineLearning
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-taxicab][Exercitium: "Números taxicab"]]. #Haskell #I1M2017
+ [[https://github.com/coinmetrics-io/haskell-tools][Haskell-based CoinMetrics.io tools]]. #Haskell
+ [[https://mmhaskell.com/blog/2018/6/4/bxit5i954uafn0n4gah3yrzcxnc3q6][Codeworld: Haskell as a first programming language]]. ~ James Bowen
  (@james_OWA) #Haskell #Codeworld #Teaching
+ [[https://dev.to/allanmacgregor/you-should-learn-functional-programming-in-2018-4nff][You should learn functional programming in 2018]]. ~ Allan MacGregor
  (@allanmacgregor) #FunctionalProgramming
+ [[https://books.goalkicker.com/LinuxBook/][Linux notes for professionals]]. #eBook #Linux
+ [[https://github.com/pedritomelenas/Software-Matematicas-GAP][Bloque de GAP de la asignatura Software Matemáticas]]. ~ Pedro
  A. García-Sánchez #CAS #SageMath
+ [[https://www.gap-system.org][GAP (groups, algorithms, programming) a system for computational
  discrete algebra]]. #CAS
+ [[https://github.com/TheWizardTower/monadTransformers/raw/master/Slides.pdf][Monad transformers for the easily confused]]. ~ @TheWizardTower #Haskell
+ [[https://techspree.net/github-alternatives/][GitHub alternative top 7 sites to host your open source project]]. #GitHub
+ [[https://itsfoss.com/github-alternatives][Top GitHub alternatives to host your open source project]]. ~ Abhishek
  Prakash #GitHub
+ [[http://www.glc.us.es/~jalonso/exercitium/la-regla-de-los-signos-de-descartes][Exercitium: "La regla de los signos de Descartes"]]. #Haskell #I1M2017
+ [[https://arxiv.org/pdf/1806.00608][GamePad: a learning environment for theorem proving]]. ~ D. Huang,
  P. Dhariwal, D. Song, I. Sutskever #ITP #Coq #MachineLearning
+ [[https://arxiv.org/pdf/1806.00810][A new style of mathematical proof]]. ~ W.M. Farmer #Logic #Math
+ [[https://jfr.unibo.it/article/download/8212/7877][A decision procedure for univariate polynomial systems based on root
  counting and interval subdivision]]. ~ C. Munoz, A. Narkawicz, A. Dutle
  #ITP #PVS #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/subexpresiones-aritmeticas][Exercitium: "Subexpresiones aritméticas"]]. #Haskell #I1M2017
+ [[https://arxiv.org/pdf/1806.02101][Calculational verification of reactive programs with reactive
  relations and Kleene algebra]]. ~ S. Foster, K. Ye, A. Cavalcanti,
  J. Woodcock #ITP #IsabelleHOL
+ [[https://paytonturnage.com/writing/2018-06-05-generating-art-with-haskell][Generating art with Haskell]].  #Haskell
+ [[https://doisinkidney.com/posts/2018-06-03-breadth-first-traversals-in-too-much-detail.html][Breadth-first traversals in far too much detail]]. ~ Donnacha Oisín
  Kidney (@oisdk) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/ancestro-comun-mas-bajo][Exercitium: "Ancestro común más bajo"]]. #Haskell #I1M2017
+ [[http://www.riptutorial.com/haskell][Haskell RIP tutorial]]. ~ @RipTutorial #Haskell
+ [[https://www.kosmikus.org/DerivingVia/deriving-via-paper.pdf][Deriving via (or, how to turn hand-written instances into an anti-pattern)]]. ~
  B. Blöndal, A. Löh, R. Scott #Haskell
+ [[https://www.technologyreview.com/s/611272/this-algorithm-can-tell-which-number-sequences-a-human-will-find-interesting][This algorithm can tell which number sequences a human will find
  interesting]]. #AI #MachineLearning #Math
+ [[https://shemesh.larc.nasa.gov/people/cam/publications/WoLLIC2018-draft.pdf][Formalization of the undecidability of the halting problem for a
  functional language]]. ~ T. M. Ferreira Ramos et al. #ITP #PVS
+ [[https://sketis.net/wp-content/uploads/2018/05/isabelle-jedit-fide2018.pdf][Isabelle/jEdit as IDE for domain-specific formal languages and informal text documents]]. ~ M. Wenzel #ITP #IsabelleHOL
+ [[https://www.sodavision.com/essential-cheat-sheets-for-machine-learning-and-deep-learning-engineers/][Essential cheat sheets for machine learning and deep learning
  engineers]]. ~ Vivian Chong #MachineLearning #DeepLearning
+ [[https://mpg.is/papers/gissurarson2018suggesting.pdf][Suggesting valid hole fits for typed-holes]]. ~ Matthías Páll Gissurarson
  #Haskell
+ [[http://sitr.us/2014/05/05/category-theory-proofs-in-idris.html][Category theory proofs in Idris]]. ~ Jesse Hallett (@hallettj) #Idris
  #CategoryTheory
+ [[https://www.quora.com/How-does-Idris-compare-to-other-dependently-typed-programming-languages][How does Idris compare to other dependently-typed programming languages?]] 
  ~ Edwin Brady #Idris
+ [[http://www.glc.us.es/~jalonso/exercitium/valores-de-polinomios-y-de-expresiones][Exercitium: "Valores de polinomios y de expresiones"]]. #Haskell #I1M2017
+ [[http://bit.ly/2JIFD9w][Las matemáticas del fútbol y el nuevo ministro de cultura]]. ~ Juan
  Arias de Reyna #Matemáticas #Computación
+ [[https://arxiv.org/pdf/1806.03049][Formalization of Lerch's theorem using HOL Light]]. ~ A. Rashid,
  O. Hasan #ITP #HOL_Light #Math
+ [[https://arxiv.org/pdf/1806.03205][Formal small-step verification of a call-by-value lambda calculus
  machine]]. ~ F. Kunze, G. Smolka, Y. Forster #ITP #Coq
+ [[http://www.glc.us.es/~jalonso/exercitium/el-problema-de-las-n-torres][Exercitium: "El problema de las N torres"]]. #Haskell #I1M2017
+ [[https://blog.jle.im/entry/lenses-products-prisms-sums.html][Lenses embody Products, Prisms embody Sums]]. ~ Justin Le (@mstk) #Haskell  
+ [[https://gupea.ub.gu.se/bitstream/2077/56128/1/gupea_2077_56128_1.pdf][Formalizing constructive quantifier elimination in Agda]]. ~ J. Pope
  #ITP #Agda #Logic
+ [[http://page.mi.fu-berlin.de/cbenzmueller/papers/C71.pdf][A dyadic deontic logic in HOL]]. ~ C. Benzmüller, A. Farjami, X. Parent
  #ITP #IsabelleHOL #Logic
+ [[http://group-mmm.org/~ayamada/DJTY18.pdf][A formalization of the LLL basis reduction algorithm]]. ~ J. Divasón,
  S. Joosten, R. Thiemann, A. Yamada #ITP #IsabelleHOL
+ [[https://www.technologyreview.com/s/611397/machine-learning-predicts-world-cup-winner][Machine learning predicts World Cup winner]]. #MachineLearning
+ [[https://arxiv.org/pdf/1806.03208][Prediction of the FIFA World Cup 2018: A random forest approach with
  an emphasis on estimated team ability parameters]]. ~ A. Groll et
  als. #MachineLearning
+ [[https://sigma.software/about/media/lisp-back-future-tribute-60th-anniversary][LISP: back to the future (a tribute to 60th anniversary)]]. ~ Nikolay
  Mozgovoy #Programming #Lisp
+ [[http://www.cccblog.org/2018/06/13/the-surprising-security-benefits-of-end-to-end-formal-proofs][The surprising security benefits of end-to-end formal proofs]]. ~ Adam
  Chlipala
+ [[https://arxiv.org/pdf/1806.04774][Goal-oriented conjecturing for Isabelle/HOL]]. ~ Y. Nagashima,
  J. Parsert #ITP #IsabelleHOL
+ [[https://www.newton.ac.uk/seminar/20170713100011001][Mining the Archive of Formal Proofs]]. ~ J. Blanchette, M. Haslbeck,
  D. Matichuk, T. Nipkow #ITP #IsabelleHOL
+ [[http://binaire.blog.lemonde.fr/2018/06/12/mettre-lethique-dans-lalgorithme/][Mettre l’éthique dans l’algorithme?]] ~ Catherine Tessier, Vincent
  Bonnemains, Claire Saurel
+ [[http://revue.sesamath.net/spip.php?article1110][Séquences d’algorithmique en mathématique en Python 3, de la seconde à
  la terminale]]. ~ Hubert Raymondaud #Python
+ [[http://irreal.org/blog/?p=7270][A complete computing environment]]. #Emacs
+ [[http://doc.rix.si/cce/cce.html][Emacs as a complete computing environment]]. ~ Ryan Rix #Emacs
+ [[https://plato.stanford.edu/entries/paradox-skolem/][Skolem's paradox]]. ~ Timothy Bays #Logic
+ [[https://people.kth.se/~kurlberg/colloquium/2005/MartinLooef.pdf][100 years of Zermelo’s axiom of choice: what was the problem with it?]]
  ~ Per Martin-Löf #Logic #Math
+ [[https://arxiv.org/pdf/1806.03541][Functional Pearl: Theorem Proving for all (Equational reasoning in
  Liquid Haskell)]]. ~ N. Vazou, J. Breitner, W. Kunkel, D. van Horn,
  G. Hutton #Hakell #LiquidHaskell
+ [[https://www.ps.uni-saarland.de/~kirst/hok/thesis.pdf][Foundations of Mathematics: a discussion of sets and types]]. ~ Dominik
  Kirst #Logic #Math
+ [[https://arxiv.org/pdf/1806.03205][Formal small-step verification of a call-by-value lambda calculus
  machine]]. ~ F. Kunze, G. Smolka, Y. Forster #ITP #Coq
+ [[https://files.sketis.net/Isabelle_Workshop_2018/Isabelle_2018_paper_3.pdf][Substitutionless first-order logic: a formal soundness proof]]. ~
  A.H. From, J.B Larsen, A. Schlichtkrull, J. Villadsen #ITP
  #IsabelleHOL #Logic
+ [[https://hal.inria.fr/hal-01811922/document][Ghosts for lists: from axiomatic to executable specifications]]. ~
  F. Loulergue, A. Blanchard, N. Kosmatov #ITP #Coq
+ [[https://arxiv.org/pdf/1806.03527][Engaging millennials into learning formal methods]]. ~ N. Cataño
  #Teaching #FormalMethods
+ [[https://files.sketis.net/Isabelle_Workshop_2018/Isabelle_2018_paper_8.pdf][PaMpeR: a proof method recommendation system for Isabelle/HOL]]. ~
  Y. Nagashima, Y. He #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Projective_Geometry.html][Projective geometry in Isabelle/HOL]]. ~ Anthony Bordg #ITP #IsabelleHOL
  #Math
+ [[https://markkarpov.com/post/smart-constructors-that-cannot-fail.html][Smart constructors that cannot fail]]. ~ Mark Karpov (@mrkkrp) #Haskell
+ [[https://www.isa-afp.org/entries/Localization_Ring.html][The localization of a commutative ring in Isabelle/HOL]]. ~ Anthony
  Bordg #ITP #IsabelleHOL #Math
+ [[https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2018-June/msg00072.html][International Olympiad in Isabelle?]] #IsabelleHOL
+ [[https://128.84.21.199/pdf/1806.06114][Formalizing category theory and presheaf models of type theory in Nuprl]]. 
  ~ Mark Bickford #ITP #Nuprl #CategoryTheory
+ [[http://mpickering.github.io/posts/2018-06-11-source-plugins.html][Source Plugins: Four ways to build a typechecked Haskell expression]]. ~
  Matthew Pickering #Haskell
+ [[https://arxiv.org/pdf/1803.07130.pdf][A promise checked is a promise kept: inspection testing]]. ~ Joachim
  Breitner (@nomeata) #Haskell
+ [[https://books.goalkicker.com/PythonBook][Python notes for professionals]]. #Python
+ [[https://qz.com/1307091/the-inside-story-of-how-ai-got-good-enough-to-dominate-silicon-valley][The inside story of how AI got good enough to dominate Silicon Valley]]. #AI
+ [[https://www.cs.us.es/~fsancho/?e=204][Diálogos entre Arquitectura, Ciudad y Computación]]. ~ F. Sancho
  (@sanchocaparrini) #NetLogo
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/blob/master/Curso_2017-18/Grupo_1/examen_6_12_jun.hs][I1M2017: Soluciones del 6º examen de programación funcional con
  Haskell de los grupos 1, 2 y 3]]. #Haskell
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/blob/master/Curso_2017-18/Grupo_4/examen_6_12_jun.hs][I1M2017: Soluciones del 6º examen de programación funcional con
  Haskell de los grupos 4 y 5]]. #Haskell
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/blob/master/Curso_2017-18/Grupo_1/examen_5_03_may.hs][I1M2017: Soluciones del 5º examen de programación funcional con Haskell del grupo 1]]. #Haskell 
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/blob/master/Curso_2017-18/Grupo_2/examen_5_30_abr.hs][I1M2017: Soluciones del 5º examen de programación funcional con Haskell del grupo 2]]. #Haskell 
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/blob/master/Curso_2017-18/Grupo_3/examen_5_26_abr.hs][I1M2017: Soluciones del 5º examen de programación funcional con Haskell del grupo 3]]. #Haskell 
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/blob/master/Curso_2017-18/Grupo_5/examen_5_07_may.hs][I1M2017: Soluciones del 5º examen de programación funcional con Haskell del grupo 5]]. #Haskell 
+ [[https://www.jaist.ac.jp/is/labs/ishihara-lab/mla2018/doc/slides/Norbert_Preining.pdf][Hyper natural deduction for Gödel Logic: a natural deduction system
  for parallel reasoning]]. ~ A. Beckmann, N. Preinin #Logic
+ [[https://www.johndcook.com/blog/r_language_for_programmers/][R language for programmers]]. ~ John D. Cook #Rstats
+ [[http://github.com/Web-Prolog/swi-web-prolog/raw/master/book/web-prolog.pdf][Web Prolog and the programmable Prolog Web (An attempt to revive and
  rebrand Prolog)]]. ~ Torbjörn Lager #Prolog
+ [[https://www.andrew.cmu.edu/user/avigad/Papers/formal_epistemology.pdf][Proof theory]]. ~ Jeremy Avigad #Logic
+ [[http://www.cs.nott.ac.uk/~pszgmh/autobench.pdf][AutoBench: Comparing the time performance of Haskell programs]]. ~
  M.A.T. Handley, G. Hutton #Haskell
+ [[http://www.microsiervos.com/archivo/ia/ibm-debater-inteligencia-artificial-debate-humano.html][IBM Debater: la primera inteligencia artificial que gana un debate a
  un ser humano]]. ~ @Alvy #IA
+ [[http://www.microsiervos.com/archivo/ia/introduccion-aprendizaje-automatico-sesgos.html][Una introducción visual al aprendizaje automático y otra a los sesgos
  que pueden sufrir sus algoritmos]]. ~ @Alvy #IA #AprendzajeAutomático
+ [[http://www.r2d3.us/visual-intro-to-machine-learning-part-1][A visual introduction to machine learning]]. ~ Stephanie Yee
  (@stephaniejyee), Tony Chu (@tonyhschu) #AI #MachineLearning
+ [[http://www.r2d3.us/visual-intro-to-machine-learning-part-2][Model tuning and the bias-variance tradeoff]]. ~ Stephanie Yee
  (@stephaniejyee), Tony Chu (@tonyhschu) #AI #MachineLearning
+ [[https://anthonybonato.com/2018/06/20/the-p-vs-np-problem-2/][The P vs NP problem]]. ~ Anthony Bonato #CompSci
+ [[https://www.johndcook.com/blog/2013/06/06/seven-dogmas-of-category-theory/][Seven dogmas of category theory]]. ~ John D. Cook #CategoryTheory
+ [[https://medium.com/@kurtcagle/why-you-dont-need-data-scientists-a9654cc9f0e4][Why you don’t need data scientists]]. ~ Kurt Cagle #DataScience
+ [[http://www.microsiervos.com/archivo/puzzles-y-rubik/algoritmo-inteligente-cubo-rubik.html][Un algoritmo que ha aprendido a resolver el Cubo de Rubik «sin
  asistencia humana»]]. ~ @Alvy #IA #AprendizajeAutomático
+ [[https://arxiv.org/pdf/1805.07470][Solving the Rubik's cube without human knowledge]]. ~ S. McAleer et
  als. #AI #MachineLearning
+ [[https://www.researchgate.net/profile/Ricardo_Pena5/publication/277290326_La_programacion_funcional_en_Haskell/links/5a9545bca6fdccecff07c72e/La-programacion-funcional-en-Haskell.pdf][La programación funcional en Haskell]]. ~ R. Peña #ProgramaciónFuncional
  #Haskell
+ [[https://arxiv.org/pdf/1806.07523][Schematic polymorphism in the Abella proof assistant]]. ~ G. Nadathur,
  Y. Wang #ITP #Abella
+ [[http://simonmar.github.io/posts/2018-06-20-Finding-fixing-space-leaks.html][Fixing 17 space leaks in GHCi, and keeping them fixed]]. ~ Simon Marlow
  (@simonmar) #Haskell
+ [[http://konn.github.io/computational-algebra][Computational algebra system in Haskell (Dependently-typed
  computational algebra system written in Haskell)]]. ~ Hiromi Ishii
  #Haskell #CAS
+ [[https://cs.uwaterloo.ca/~plragde/flaneries/FDS/index.html][Functional data structures]]. ~ Prabhakar Ragde #FunctionalProgramming
  #Algorithms #OCaml
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/files/2128201/Examenes_de_PF_con_Haskell.pdf][Libro de exámenes de programación funcional con Haskell (versión del
  22 de junio de 2018)]]. #Haskell #I1M2017
+ [[https://www.cs.us.es/~jalonso/cursos/i1m/ejercicios/ejercicios-I1M-2017.pdf][I1M2017: Libro de ejercicios resueltos de programación funcional en Haskell del curso 2017-18]]. #Haskell
+ [[https://blog.goodaudience.com/introduction-to-deep-learning-a46e92cb0022][Introduction to deep learning (What is deep learning and how can I
  study it?)]]. ~ Tyler Bettilyon (@TebbaVonMaths) #AI #DeepLearning
+ [[https://medium.com/@TebbaVonMathenstien/deep-neural-networks-as-computational-graphs-867fcaa56c9][Deep neural networks as computational graphs (DNNs don’t need to be a
  black box)]]. ~ Tyler Bettilyon (@TebbaVonMaths) #AI #DeepLearning
+ [[https://diessi.ca/blog/computer-and-human-languages][Computer and human languages]]. ~ Diéssica Gurskas (@diessicode)
  #Programming
+ [[https://people.eng.unimelb.edu.au/tobym/papers/secdev2018.pdf][BP: Formal proofs, the fine print and side effects]]. ~ T- Murray,
  P.C. van Oorschot #FormalVerification
+ [[http://simonmar.github.io/posts/2018-06-22-New-SRTs.html][Rethinking static reference tables in GHC]]. ~ Simon Marlow (@simonmar)
  #Haskell
+ [[http://ozark.hendrix.edu/~yorgey/pub/GCBP-author-version.pdf][What’s the difference? (A functional pearl on subtracting bijections)]]. 
  ~ B.A. Yorgey, K. Foner #Haskell
+ [[https://eng.uber.com/queryparser][Queryparser, an open source tool for parsing and analyzing SQL]]. ~ Matt
  Halverson #Haskell
+ [[http://webdelprofesor.ula.ve/ingenieria/jacinto/libros/logica-practica-aprendizaje-computacional.pdf][Lógica práctica y aprendizaje computacional]]. ~ Jacinto Dávila
  (@jacintodavila) #Lógica #IA #AprendizajeAutomático
+ [[http://www.doc.ic.ac.uk/%7Erak/papers/newbook.pdf][Computational logic and human thinking: How to be artificially intelligent]]. 
  ~ Robert Kowalski #eBook #IA #Logic
+ [[https://www.isa-afp.org/entries/Pell.html][Pell's equation in Isabelle/HOL]]. ~ Manuel Eberl #ITP #IsabelleHOL #Math
+ [[http://hal.univ-lille3.fr/hal-01814822/document][Making the history of computing. The history of computing in the
  history of technology and the history of mathematics]]. ~ L. de Mol,
  M. Bullynck #History #CompSci #Math
+ [[http://cs.yale.edu/homes/aspnes/classes/202/notes.pdf][Notes on discrete mathematics]]. ~ James Aspnes #eBook #Math
+ [[https://abhinavsarkar.net/posts/fast-sudoku-solver-in-haskell-1][Fast Sudoku solver in Haskell #1: a simple solution]]. ~ Abhinav Sarkar
  (@abhin4v) #Haskell
+ [[https://github.com/norvig/paip-lisp][Paradigms of Artificial Intelligence programming: case studies in Common Lisp]].
  ~ Peter Norvig #AI #CommonLisp
+ [[https://github.com/hasktorch/hasktorch][Hasktorch: a library for tensors and neural networks in Haskell]]. #Haskell #AI
  #MachineLearning
+ [[http://www.cs.rice.edu/~vardi/papers/nsf16.pdf][The automated-reasoning revolution: from theory to practice and back]]. ~
  Moshe Y. Vardi (@vardi) #ATP
+ [[http://cachestocaches.com/2018/6/org-literate-programming/][Literate programming with Org-mode]]. ~ Gregory J Stein (@CachesToCaches)
  #Emacs #OrgMode
+ [[https://leanprover.github.io/logic_and_proof/logic_and_proof.pdf][Logic and proof (Release 0]].1). ~ Jeremy Avigad, Robert Y. Lewis, and
  Floris van Doorn #Logic #LeanTheoremProver
+ [[http://reasonablypolymorphic.com/blog/roles/][Coercions and roles for dummies]]. #Haskell
+ [[https://benlynn.blogspot.com/2018/06/why-laziness-matters.html][Why laziness matters]]. ~ Ben Lynn #Haskell 
+ [[https://www.cs.us.es/~jalonso/apuntes/inst-Lean.html][Instalación de "Lean theorem prover"]]. #ITP #LeanProver
+ [[https://github.com/avigad/formal_methods_in_education/blob/gh-pages/index.md][A web page with resources for teaching with formal methods and tools]]. 
  ~ Jeremy Avigad #ITP #Logic #Math
+ [[https://leanprover.github.io/talks/stanford2017.pdf][Formal methods in mathematics and the Lean theorem prover]]. ~ Jeremy
  Avigad #ITP #Logic #Math
+ [[https://arxiv.org/pdf/1806.10920][Machine learning for mathematical software]]. ~ M. England
  #MachineLearning #MathematicalSoftware
+ [[https://arxiv.org/pdf/1611.04838v4][Fast verifying proofs of propositional unsatisfiability via window
  shifting]]. ~ Jingchao Chen #SAT
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/blob/master/Curso_2017-18/Grupo_4/examen_7_27_jun.hs][I1M2017: Soluciones del 7º examen de programación funcional con
  Haskell]]. #Haskell
+ [[https://github.com/jaalonso/Examenes_de_PF_con_Haskell/releases/download/v9.7/Examenes_de_PF_con_Haskell.pdf][Libro de exámenes de programación funcional con Haskell]] (versión 9.7
  del 30 de junio de 2018). #Haskell #I1M2017
+ [[http://irreal.org/blog/?p=7308][The Emacs Commune]]. #Emacs #History
+ [[http://forallx.openlogicproject.org/][forall x: Calgary Remix (An introduction to formal logic)]]. ~
  P.D. Magnus, T. Button, J. Robert Loftis, Aaron Thomas-Bolduc, R. Zach
  #eBook #Logic
+ [[https://github.com/sinahab/shamir-secret-sharing][The Shamir secret sharing algorithm in Haskell]]. ~ Sina Habibian
  (@sinahab) #Haskell
+ [[http://very.science/pdf/StrictCheck_arxiv.pdf][Keep your laziness in check]]. ~ K. Foner et als. #Haskell

** Julio 2018

+ [[http://philsci-archive.pitt.edu/14825/1/comprm-2018-06-28.pdf][Computational reverse mathematics and foundational analysis]]. ~
  Benedict Eastaugh #Logic #Math
+ [[http://www.glc.us.es/~jalonso/vestigium/resumen-de-lecturas-compartidas-durante-octubre-de-2017][GLC: Resumen de lecturas compartidas (octubre de 2017)]]. 
+ [[http://www.glc.us.es/~jalonso/vestigium/resumen-de-lecturas-compartidas-durante-noviembre-de-201][GLC: Resumen de lecturas compartidas (noviembre de 2017)]]. 
+ [[http://www.glc.us.es/~jalonso/vestigium/resumen-de-lecturas-compartidas-diciembre-de-2017][GLC: Resumen de lecturas compartidas (diciembre de 2017)]]. 
+ [[http://www.glc.us.es/~jalonso/vestigium/resumen-de-lecturas-compartidas-enero-de-2018][GLC: Resumen de lecturas compartidas (enero de 2018)]]. 
+ [[http://www.glc.us.es/~jalonso/vestigium/resumen-de-lecturas-compartidas-febrero-de-2018][GLC: Resumen de lecturas compartidas (febrero de 2018)]]. 
+ [[https://www.ideals.illinois.edu/bitstream/handle/2142/100116/K-semantics-tech-report.pdf][IsaK: A complete semantics of K]]. ~ L. Li, E.L. Gunter #ITP
  #IsabelleHOL #Logic
+ [[https://arthurxavierx.github.io/RealWorldAppComonadicUI.pdf][A real-world application with a comonadic user interface]]. ~ Arthur
  Xavier #FunctionalProgramming #Haskell #PureScript
+ [[https://whatthefunctional.wordpress.com/2018/07/01/google-sheets-and-haskell][Google Sheets and Haskell]]. ~ Laurence Emms #Haskell
+ [[http://irreal.org/blog/?p=7312][Zamansky 50: Presentations]]. #Emacs
+ [[http://www.glc.us.es/~jalonso/vestigium/resumen-de-lecturas-compartidas-durante-marzo-de-2018][GLC: Resumen de lecturas compartidas durante marzo de 2018]]. 
+ [[http://www.glc.us.es/~jalonso/vestigium/resumen-de-lecturas-compartidas-durante-abril-de-2018][GLC: Resumen de lecturas compartidas durante abril de 2018]]. 
+ [[http://www.glc.us.es/~jalonso/vestigium/resumen-de-lecturas-compartidas-durante-mayo-de-2018][GLC: Resumen de lecturas compartidas durante mayo de 2018]]. 
+ [[http://www.glc.us.es/~jalonso/vestigium/resumen-de-lecturas-compartidas-durante-junio-de-2018][GLC: Resumen de lecturas compartidas durante junio de 2018]]. 
+ [[http://www.glc.us.es/~jalonso/vestigium/resumen-de-lecturas-compartidas-durante-el-curso-2017-18][GLC: Resumen de lecturas compartidas durante el curso 2017-18]]. 
+ [[https://dspace.library.uu.nl/bitstream/handle/1874/364837/3705269.pdf][Compiling an Haskell EDSL to C (A new C back-end for the Copilot
  runtime verification framework)]]. ~ Frank Dedden Haskell
+ [[https://dspace.library.uu.nl/bitstream/handle/1874/364838/thesis.pdf][Implementing analytic tableaux for justification logic]]. ~
  N. Steenbergen #Haskell #Logic
+ [[https://github.com/slakkenhuis/judge][judge: Tableau-based theorem prover for justification logic]]. ~
  N. Steenbergen #Haskell #Logic
+ [[https://identicalsnowflake.github.io/Rank2Modeling.html][Redis data modeling with rank 2 types]]. #Haskell
+ [[https://culturacientifica.com/2015/07/01/el-problema-del-cambio-de-moneda][El problema del cambio de moneda]]. R. Ibáñez #Matemáticas
+ [[https://medium.com/@Francesco_AI/a-brief-history-of-ai-baf0f362f5d6][A brief history of AI (An outline of what happened in the last 60
  years in AI)]]. ~ Francesco Corea #AI
+ [[https://arxiv.org/pdf/1608.02621v2][The machine that builds itself: how the strengths of Lisp family
  languages facilitate building complex and flexible bioinformatic
  models]]. ~ B.B. Khomtchouk, E. Weitz, C. Wahlestedt #Lisp
+ [[http://philsci-archive.pitt.edu/14825/1/comprm-2018-06-28.pdf][Computational reverse mathematics and foundational analysis]]. ~
  B. Eastaugh #Logic #Math
+ [[https://www.politesi.polimi.it/bitstream/10589/140161/1/Tesi.pdf][Toward a more expressive pattern matching in Haskell]]. ~ G. Servadei #Haskell 
+ [[http://www.inf.u-szeged.hu/~cscs/pdf/cscs2018.pdf][The 11th conference of PhD students in Computer Science (Volume of short papers)]]. 
+ [[https://www.preprints.org/manuscript/201806.0474/download/final_file][Scope of Artificial Intelligence in Law]]. ~ J. Dabass, B.S. Dabass #AI
  #MachineLearning #DeepLearning
+ [[http://www.csl.sri.com/users/rushby/papers/modalpvs.pdf][PVS embeddings of propositional and quantified modal logic]]. ~
  J. Rushby #ITP #PVS #Logic
+ [[https://francis.naukas.com/2012/02/19/para-que-le-sirve-a-un-investigador-cientifico-estar-en-twitter][Para qué le sirve a un investigador científico estar en Twitter]]. ~
  Francisco R. Villatoro (#Ciencia
+ [[https://arxiv.org/pdf/1202.2461][How the scientific community reacts to newly submitted preprints:
  article downloads, Twitter mentions, and citations]]. ~ X. Shuai,
  A. Pepe, J. Bollen #Science
+ [[https://medium.com/@mikhail.barash.mikbar/papers-on-programming-languages-ideas-from-70s-for-today-2931891d4dbd][Papers on programming languages: ideas from 70's for today]]. ~ Mikhail
  Barash #Programming
+ [[http://tweetsverse.blogspot.com/2018/07/why-i-love-haskell.html][Why I love Haskell]]. ~ @PLT_cheater #Haskell
+ [[http://mat.unb.br/~ayala/tcs_20171215i.pdf][A formalisation of nominal α-equivalence with A, C, and AC function
  symbols]]. ~ M. Ayala et als. #ITP #Coq
+ [[https://arxiv.org/pdf/1807.01456][A purely functional computer algebra system embedded in Haskell]]. ~
  Hiromi Ishii #Haskell #CAS #Math
+ [[https://konn.github.io/computational-algebra/][Computational algebra system in Haskell (Dependently-typed
  computational algebra system written in Haskell)]]. ~ Hiromi Ishii
  #Haskell #CAS #Math
+ [[https://github.com/konn/fibs][Benchmarks on various Fibonacci computation]]. ~ Hiromi Ishii #Haskell
  #Algorithms #Math
+ [[https://github.com/konn/lk-proof-assistant][Simple proof assistant for LK calculus (First-Order logic)]]. ~ Hiromi
  Ishii #Haskell #Logic
+ [[https://doisinkidney.com/posts/2018-06-30-probability-5-ways.html][Probability 5 ways]]. ~ Donnacha Oisín Kidney #Haskell
+ [[https://arxiv.org/pdf/1807.01871][Formalization in constructive type theory of the standardization
  theorem for the lambda calculus using multiple substitution]]. ~
  M. Copes, N. Szasz, A. Tasistro #ITP #Agda
+ [[http://bit.ly/2u2EqRh][Matemática misteriosa]]. ~ Juan Arias de Reyna #Matemáticas
+ [[https://arxiv.org/pdf/1807.01873][Sharing a library between proof assistants: reaching out to the HOL
  family]]. ~ F. Thiré #ITP #OpenTheory # Coq #Matita
+ [[https://ifipwg21wiki.cs.kuleuven.be/pub/IFIP21/Brandenburg/Talk-Moa.pdf][Theory exploration in Hipster (or how to automate an undergraduate
  AI&CS student)]]. ~ Moa Johansson #IsabelleHOL #Haskell
+ [[https://ifipwg21wiki.cs.kuleuven.be/pub/IFIP21/Brandenburg/wouter-slides.pdf][From algebra to abstract machine]]. ~ W. Swierstra, C. Tomé Cortiñas
  #Haskell
+ [[https://ifipwg21wiki.cs.kuleuven.be/pub/IFIP21/Brandenburg/slides_botta.pdf][Specifications in small and large contexts]]. ~ N. Botta [Slides] #Idris
+ [[https://ifipwg21wiki.cs.kuleuven.be/pub/IFIP21/Brandenburg/ifip_kuifje.pdf][Kuifje: Quantified information flow with monads in Haskell]]. ~ Tom
  Schrijvers #Haskell
+ [[http://reasonablypolymorphic.com/blog/prospecting-free-monads/][Static analysis of free monads]]. #Haskell
+ [[http://www.di.uminho.pt/~jno/ps/wg21-77a-sl.pdf][Compiling quantamorphisms for the IBM Q-Experience]]. ~ J.N. Oliveira,
  A. Neri, R.S. Barbosa #Haskell
+ [[http://www.cse.chalmers.se/~patrikj/talks/WG2.1_Brandenburg_Jansson_slides.pdf][Examples and results from a BSc-level course on domain specific languages of mathematics]]. ~ P. Jansson et als. #Haskell
  #Math
+ [[https://arxiv.org/pdf/1806.04002][Michael John Caldwell Gordon (FRS 1994), 28 February 1948 - 22 August 2017]]. 
  ~ Lawrence C Paulson #ITP #Biography
+ [[https://slideslive.com/38908214/differentiable-functional-programming][Differentiable functional programming]]. ~ Noel Welsh #DeepLearning
  #FunctionalProgramming #Scala
+ [[https://whatthefunctional.wordpress.com/2018/07/08/a-thought-experiment-category-theory-and-quantum-computing/][A thought experiment: category theory and quantum computing]]. ~
  Laurence Emms #Haskell #CategoryTheory
  #QuantumComputing
+ [[http://www.lavanguardia.com/vida/20180708/45762804454/alan-turing-genio-descodifico-naturaleza.html][Alan Turing, el genio que descodificó la naturaleza]]. ~ Núria Jar
  #Turing #Biografía #Computación vía @lavanguardia
+ [[http://neilmitchell.blogspot.com/2018/07/inside-paper-build-systems-la-carte.html][Inside the paper: Build systems à la carte]]. ~ Neil Mitchell #Haskell 
+ [[http://blog.poisson.chat/posts/2018-07-08-deriving-twist.html][Deriving instances with a twist]]. ~ Xia Li-yao #Haskell
+ [[http://flaviomoura.mat.br/files/articles/MSNorm.pdf][A constructive formalisation of the modular strong normalisation theorem]]. 
  ~ FLC de Moura et als. #ITP #Coq
+ [[https://hal.inria.fr/hal-01823507/document][Using SMT engine to generate symbolic automata]]. ~ X. Qin et als. #SMT
+ [[https://devel.isa-afp.org/entries/Neumann_Morgenstern_Utility.html][Von-Neumann-Morgenstern utility theorem in Isabelle/HOL]]. ~ J. Parsert,
  C. Kaliszyk #ITP #IsabelleHOL
+ [[https://www.johndcook.com/blog/2018/07/08/weak-groups/][Weakening the requirements of a group]]. ~ J.D. Cook #Math
+ [[https://arxiv.org/pdf/1807.02192][A survey of knowledge representation and retrieval for learning in
  service robotics]]. ~ D. Paulius, Y. Sun #KRR
+ [[https://arxiv.org/pdf/1807.02957][Scaling-up reasoning and advanced analytics on BigData]]. ~ T. Condie et
  als. #LogicProgramming #BigData
+ [[http://blog.poisson.chat/posts/2018-07-09-type-gadt.html][Type is an extensible GADT]]. ~ Xia Li-yao #Haskell
+ [[https://www.abc.es/ciencia/abci-otro-millon-dolares-espera-201807100208_noticia.html][Otro millón de dólares te espera: ¿Es P = NP?]]  ~ Alfonso J. Población
  #Matemáticas #Computación
+ [[https://link.springer.com/content/pdf/10.1007%2F978-3-319-94821-8_2.pdf][Towards certified meta-programming with typed template-Coq]]. ~ A. Anand
  et als. #ITP #Coq
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?MSFP2018.3.pdf][Relating idioms, arrows and monads from monoidal adjunctions]]. ~
  E. Rivas #Haskell
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?MSFP2018.5.pdf][Backward induction for repeated games]]. ~ J. Hedges
  #FunctionalProgramming #Haskell
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?MSFP2018.6.pdf][Everybody’s got to be somewhere]]. ~ C. McBride #Agda
+ [[https://dev.to/aspittel/daily-coding-puzzles-4ce9][Daily coding puzzles]]. ~ Ali Spittel #CodingPuzzle
+ [[https://colmbaston.co.uk/files/Common-Knowledge.pdf][The coinductive formulation of common knowledge]]. ~ C. Baston,
  V. Capretta #ITP #Coq #Agda
+ [[http://www.ortegaygasset.edu/admin/descargas/Rev_OccidenteJulio-Agosto2018_J_L_Suarez.pdf][La nacionalización de la estrategia en torno a la inteligencia artificial]]. 
  (Estado, política y futuro). ~ Juan Luis Suárez #IA
+ [[https://abhinavsarkar.net/posts/fast-sudoku-solver-in-haskell-2/][Fast Sudoku solver in Haskell #2: A 200x faster solution]]. ~ Abhinav
  Sarkar #Haskell
+ [[https://www.tweag.io/posts/2018-07-10-funflow-make.html][Funflow example: emulating make]]. ~ Divesh Otwani, Nicholas Clarke
  #Haskell
+ [[https://link.springer.com/content/pdf/10.1186%2Fs40537-018-0132-9.pdf][Categories for (Big) Data models and optimization]]. ~ L. Thiry,
  H. Zhao, M. Hassenforder #BigData #CategoryTheory
  #FunctionalProgramming #Haskell
+ [[https://www21.in.tum.de/~eberlm/random_trees.pdf][Verified analysis of random binary tree structures]]. ~ M. Eberl,
  M.W. Haslbeck, T. Nipkow #ITP #IsabelleHOL
+ [[https://carrv.github.io/2018/papers/CARRV_2018_paper_5.pdf][A formally verified cryptographic extension to a RISC-V processor]]. ~
  J.R. Kiniry et als. #FormalVerification
+ [[https://plato.stanford.edu/entries/artificial-intelligence/][Artificial Intelligence]]. ~ Selmer Bringsjord #AI
+ [[https://people.csail.mit.edu/jgross/personal-website/papers/2018-reification-by-parametricity-itp-draft.pdf][Reification by parametricity (Fast setup for proof by reflection, in
  two lines of Ltac)]]. ~ J. Gross, A. Erbsen, A. Chlipala #ITP #Coq
+ [[https://icfp18.sigplan.org/event/icfp-2018-papers-mtac2-typed-tactics-for-backward-reasoning-in-coq][Mtac2: Typed tactics for backward reasoning in Coq]]. ~ J. Kaiser et
  als. #ITP #Coq
+ [[https://www21.in.tum.de/~traytel/papers/frp/frp.pdf][A verified automatic prover based on ordered resolution]]. ~
  A. Schlichtkrull, J.C .Blanchette, D. Traytel #ITP #IsabelleHOL #SML
  #Logic
+ [[https://hal.inria.fr/hal-01639819/document][A formal proof in Coq of a control function for the inverted pendulum]]. 
  ~ D. Rouhling #ITP #Coq
+ [[https://cakeml.org/itp18.pdf][Verifying the LTL to Büchi automata translation via very weak
  alternating automata]]. ~ S. Jantsch, M. Norrish #ITP #HOL4
+ [[https://shemesh.larc.nasa.gov/fm/PRECiSA/eliminating-unstable-tests-draft.pdf][Eliminating unstable tests in floating-point programs]]. ~ L. Titolo,
  C. Muñoz, M.A. Feliú, M.M. Moscato #ITP #PVS
+ [[http://ksiresearchorg.ipage.com/seke/seke18paper/seke18paper_24.pdf][Reo2PVS: Formal specification and verification of component connectors]]. 
  ~ M.S. Nawaz, M. Sun #ITP #PVS
+ [[https://www.irif.fr/~thib/thesis.pdf][Differential program semantics]]. ~ T. Girka #ITP #Coq
+ [[https://markkarpov.com/post/lisp-and-haskell.html][Lisp and Haskell]]. ~ Mark Karpov #Lisp #Haskell
+ [[https://archive.alvb.in/msc/thesis/reading/typesafe-observable-sharing.pdf][Type-safe observable sharing in Haskell]]. ~ Andy Gill #Haskell
+ [[https://cacm.acm.org/blogs/blog-cacm/229543-algorithms-have-been-around-for-4000-years/fulltext][Algorithms have been around for 4,000 years]]. ~ Herbert Bruderer
  #Algorithms
+ [[http://www.andreas-lochbihler.de/pub/lochbihler2018itp.pdf][Fast machine words in Isabelle/HOL]]. ~ A. Lochbihler #ITP #IsabelleHOL
+ [[https://www.student.informatik.tu-darmstadt.de/~xx00seba/publications/arrow-abstract-interp.pdf][Compositional soundness proofs of abstract interpreters]]. ~ S. Keidel,
  C.B. Poulsen, S. Erdweg #Haskell
+ [[https://www.ethz.ch/content/dam/ethz/special-interest/infk/inst-infsec/information-security-group-dam/research/publications/pub2018/LochbihlerSchneider2018.pdf][Relational parametricity and quotient preservation for modular
  (co)datatypes]]. ~ A. Lochbihler, J. Schneider #ITP #IsabelleHOL
+ [[https://arxiv.org/pdf/1807.05174][First steps towards a formalization of Forcing]]. ~ E. Gunther,
  M. Pagano, P. Sánchez #ITP #Isabelle #Logic
+ [[https://arxiv.org/pdf/1807.05054][AI reasoning systems: PAC and applied methods]]. ~ J. Cheng #AI #Logic
+ [[https://speakerdeck.com/frasertweedale/taming-the-c-monster-haskell-ffi-techniques][Taming the C monster (Haskell FFI techniques)]].  #Haskell
+ [[https://www21.in.tum.de/~haslbema/documents/provingcontests_draft18.pdf][Competitive proving for fun]]. ~ M.P.L Haslbeck, S. Wimmer #ITP #IsabelleHOL
+ [[https://books.google.es/books?id=QNNjDwAAQBAJ&printsec=frontcover&hl=es#v=onepage&q&f=false ][Computational artifacts: Towards a philosophy of computer science]]. ~
  R. Turner #CompSci
+ [[http://cl-informatik.uibk.ac.at/users/griff/publications/Messner-Parsert-Schoepf-Sternagel-ITP18.pdf][A formally verified solver for homogeneous linear diophantine
  equations]]. ~ F. Meßner et als. #ITP #IsabelleHOL
+ [[https://doisinkidney.com/posts/2018-07-17-probability-presentation.html][Probabilistic functional programming]]. ~ Donnacha Oisín Kidney   #FunctionalProgramming #Haskell
+ [[https://arxiv.org/pdf/1807.05641][The consistency of arithmetic]]. ~ T.Y. Chow #Logic
+ [[https://arxiv.org/pdf/1807.05377][SAT encodings for sorting networks, single-exception sorting networks
  and ε−halvers]]. ~ J.A.R. Fonollosa #Logic #SAT
+ [[https://github.com/jrclogic/SMCDEL/raw/master/SMCDEL.pdf][SMCDEL: An implementation of symbolic model checking for dynamic
  epistemic logic with binary decision diagrams]]. ~ M. Gattinger #Logic
  #Haskell
+ [[https://plato.stanford.edu/entries/type-theory/][Type theory]]. ~ Thierry Coquand #Logic
+ [[https://hal.inria.fr/hal-01703524/document][Formalizing implicative algebras in Coq]]. ~ É. Miquey #ITP #Coq 
+ [[http://irreal.org/blog/?p=7346][Building an initial Emacs configuration]]. #Emacs
+ [[https://arxiv.org/pdf/1805.06798][Generic deriving of generic traversals]]. ~ C. Kiss, M. Pickering, N. Wu
  #FunctionalProgramming #Haskell
+ [[https://medium.com/@cdsmithus/codeworld-update-july-14-2018-9fa5a2c27102][CodeWorld update — July 14, 2018]]. ~ Chris Smith #Haskell
  #CodeWorld
+ [[https://medium.com/@cdsmithus/teaching-algebraic-expressions-with-tracking-arithmetic-fba090ea7fff][Teaching algebraic expressions with tracking arithmetic]]. ~ Chris Smith
  #Teaching #Math #Haskell #CodeWorld
+ [[https://anthonybonato.com/2018/07/18/mathematics-and-computation-2/][Mathematics and computation]]. ~ A. Bonato #Math
  #CompSci
+ [[https://www.genbeta.com/desarrollo/test-automaticos-con-quickcheck-como-analizar-nuestro-codigo-en-busca-de-bugs][Test automáticos con QuickCheck ¿Cómo analizar nuestro código en busca
  de bugs?]]. ~ @__josejuan__ #Programación #QuickCheck
+ [[https://medium.com/axiomzenteam/functor-applicative-and-why-8a08f1048d3d][Functor, Applicative and why]]. ~ Leo Zhang #FunctionalProgramming 
  #Haskell
+ [[https://nickhigham.wordpress.com/2015/10/20/the-rise-of-mixed-precision-arithmetic/][The rise of mixed precision arithmetic]]. ~ Nick Higham #Programming
+ [[https://www.simonsfoundation.org/2018/07/18/ar2017-scott-aaronson/][The limits of classical and quantum computing]]. ~ Scott Aaronson
  #CompSci
+ [[https://plus.maths.org/content/intuitionism][Intuitive mathematics]]. ~ Marianne Freiberger #Logic #Math
+ [[https://plus.maths.org/content/paradise][Paradise lost and rescued]]. ~ Marianne Freiberger #Logic #Math
+ [[https://anthonybonato.com/2018/07/18/mathematics-and-computation-2/][Mathematics and computation]]. ~ Anthony Bonato #Math #CompSci
+ [[https://shemesh.larc.nasa.gov/people/cam/publications/ITP2018-draft.pdf][Boosting the reuse of formal specifications]]. ~ M.M. Moscato et
  als. #ITP #PVS
+ [[http://www.cs.nott.ac.uk/~pszgmh/mind-the-gap.pdf][Closing the gap between correctness and efficiency]]. ~ G. Hutton
  #FunctionalProgramming #Haskell
+ [[http://ksiresearchorg.ipage.com/seke/seke18paper/seke18paper_23.pdf][Towards formal modeling and verification of probabilistic connectors
  in Coq]]. ~ X. Zhang, M. Sun #ITP #Coq
+ [[https://www.isa-afp.org/entries/DiscretePricing.html][Pricing in discrete financial models]]. ~ M. Echenim #ITP #IsabelleHOL
+ [[http://www.unirioja.es/cu/jodivaso/publications/2018/EACA_2018.pdf][Towards a verified Smith normal form algorithm in Isabelle/HOL]]. ~
  J. Divasón, J. Aransay #ITP #IsabelleHOL #Math
+ [[https://vanemden.wordpress.com/2018/07/21/dijkstra-and-logic/][A bridge too far: E.W. Dijkstra and logic]]. ~ Maarten van Emden #Logic
  #CompSci
+ [[https://chrispenner.ca/posts/intro-to-finger-trees][A practical introduction to finger trees]]. ~ Chris Penner
  #Haskell
+ [[https://tarski.cs.us.es/~jalonso/exercitium/tren-de-potencias/][Exercitium: Tren de potencias]]. #Haskell
+ [[http://ksiresearchorg.ipage.com/seke/seke18paper/seke18paper_4.pdf][A systematic approach for developing cyber physical systems]]. ~ X. He,
  Z. Dong, Y. Fu #ITP #Coq
+ [[https://litx.io/blog-instance-map.html][Dependent typing and existential (de)serialization]]. #Haskell
+ [[https://www.joachim-breitner.de/blog/742-WebGL%2C_Fragment_Shader%2C_GHCJS_and_reflex-dom][WebGL, Fragment Shader, GHCJS and reflex-dom]]. ~ Joachim Breitner
  #Haskell
+ [[https://hub.zhox.com/posts/chocolatey-introduction/][Haskell & AppVeyor Chocolatey introduction]]. ~ Tamar Christina #Haskell
+ ~ Chris Penner #Haskell 
+ [[https://gist.github.com/atondwal/ee869b951b5cf9b6653f7deda0b7dbd8][Popularity of Haskell extensions]]. ~ Anish Tondwalkar #Haskell
+ [[https://openlibra.com/es/book/mathematical-reasoning-writing-and-proof][Mathematical reasoning]]. Writing and proof. ~ Ted Sundstrom #eBook #Math
+ [[https://www.wlkl.ch/literature/docs/KlKr14.pdf][Supercompilation: ideas and methods]]. ~ I. Klyuchnikov, D. Krustev #Haskell
+ [[https://tarski.cs.us.es/~jalonso/exercitium/numero-medio][Exercitium: Número medio]]. #Haskell
+ [[http://www.ittc.ku.edu/research/thesis/documents/justin_dawson_thesis.pdf][The remote monad]]. ~ Justin Dawson #PhD_Thesis #Haskell 
+ [[http://ceur-ws.org/Vol-2095/paper2.pdf][A simple semi-automated proof assistant for first-order modal logics]]. 
  ~ T. Libal #Logic #ATP #Prolog
+ [[http://ceur-ws.org/Vol-2095/invited1.pdf][Implementations of natural logics]]. ~ Lawrence S. Moss #Logic
  #AutomatedReasoning
+ [[http://ceur-ws.org/Vol-2095/invited2.pdf][Some thoughts about FOL-translations in Vampire]]. ~ Giles Reger
  #AutomatedReasoning #Vampir
+ [[https://www.brucker.ch/bibliography/download/2018/brucker.ea-isabelle-ontologies-2018.pdf][Using the Isabelle Ontology Framework]] (Linking the formal with the informal). ~ A.D. Brucker et als. #ITP
  #Isabelle
+ [[http://www0.cs.ucl.ac.uk/staff/b.cook/CAV18_invited.pdf][Formal reasoning about the security of AWS (Amazon Web Services)]]. ~
  Byron Cook #AutomatedReasoning
+ [[http://www.cse.chalmers.se/~slrn/papers/into_infinite.pdf][Into the infinite-theory exploration for coinduction]]. ~
  S.H. Einarsdóttir, M. Johansson, J.Å. Pohjola #IsabelleHOL
+ [[http://www.cs.cmu.edu/~aldrich/papers/interdisciplinary-pl-design.pdf][Interdisciplinary programming language design]]. ~ Michael Coblenz et
  als. #Programming
+ [[https://arxiv.org/pdf/1807.08711][Constructive Galois connections]]. ~ D. Darais, D. van Horn #ITP #Agda
  #Math
+ [[https://arxiv.org/pdf/1807.08058][Learning heuristics for automated reasoning through deep reinforcement
  learning]]. ~ G. Lederman et als. #MachineLearnig #AutomatedReasoning
+ [[https://arxiv.org/pdf/1807.08204][Towards neural theorem proving at scale]]. ~ P. Minervini et
  als. #AutomatedReasoning #MachineLearning
+ [[http://www.pl-enthusiast.net/2018/07/24/teaching-programming-languages][Teaching programming languages]]. ~ Michael Hicks   #Programming #Teaching
+ [[http://mathesaurus.sourceforge.net/matlab-python-xref.pdf][Reference comparing R, Python, and MATLAB syntax]]. #Python #Rstats #MatLAB 
+ [[https://itsfoss.com/apt-get-linux-guide/][Using apt-get commands in Linux (complete beginners guide)]]. ~
  A. Prakash #Linux
+ [[https://hal.inria.fr/hal-01828344/file/main.pdf][CoqTL: an internal DSL for model transformation in Coq]]. ~ M. Tisi,
  Z. Cheng #ITP #Coq
+ [[https://hal.archives-ouvertes.fr/hal-01832031/file/RLR-Coq.pdf][Regular language representations in the constructive type theory of
  Coq]]. ~ C. Doczkal, G. Smolka #ITP #Coq
+ [[https://xenaproject.wordpress.com/2018/07/25/quadratic-reciprocity-and-p2-1-8/][Quadratic reciprocity and (p^2-1)/8]]. ~ The Xena Project #ITP #Lean #Math
+ [[https://arxiv.org/pdf/1807.08588][Automating verification of state machines with reactive designs and
  Isabelle/UTP]]. ~ S. Foster et als. #ITP #IsabelleHOL
+ [[https://tarski.cs.us.es/~jalonso/DAOconCoq/index.php/Demostraci%C3%B3n_Asistida_por_Ordenador_con_Coq][DAOconCoq: Demostración Asistida por Ordenador con Coq]]. #DAO #Coq
+ [[https://tarski.cs.us.es/~jalonso/DAOconCoq/index.php/Tema_1:_Programaci%C3%B3n_funcional_y_m%C3%A9todos_elementales_de_demostraci%C3%B3n_en_Coq][DAOconCoq: Programación funcional y métodos elementales de
  demostración en Coq]]. #DAO #Coq
+ [[https://medium.com/@cdsmithus/patience-in-k-8-computer-science-5bc2eb9dc562][Patience in K-8 Computer Science]]. ~ Chris Smith #Teaching
  #Programming #CodeWorld
+ [[https://www.springerprofessional.de/formally-verified-montgomery-multiplication/15968616][Formally verified Montgomery multiplication]]. ~ C. Walther #ITP
  #VeriFun #Math
+ [[https://idus.us.es/xmlui/handle/11441/77572][Teoría de categorías y programación funcional]]. ~ Diego Pedraza
  #Haskell #Matemáticas
+ [[https://www.forbes.com/sites/quora/2018/07/27/why-purely-functional-programming-is-a-great-idea-with-a-misleading-name][Why purely functional programming is a great idea with a misleading
  name]]. ~ Tikhon Jelvis #FunctionalProgramming
+ [[https://arxiv.org/pdf/1807.09873][Formalizing the Cox-Ross-Rubinstein pricing of European derivatives in
  Isabelle/HOL]]. ~ M. Echenim, H. Guiol, N. Peltier #ITP #IsabelleHOL
+ [[http://www.cs.swan.ac.uk/~csetzer/articles/PPDP18/PPDP18adelsbergerSetzerWalkingshawAccepted.pdf][Declarative GUIs: simple, consistent, and verified]]. ~ S. Adelsberger,
  A. Setzer, E. Walkingshaw #Agda
+ [[http://andreipopescu.uk/pdf/bindings.pdf][Bindings are functors]]. ~ J.C. Blanchette, L. Gheri, A. Popescu,
  D. Traytel #ITP #IsabelleHOL
+ [[https://medium.com/@cdsmithus/novices-and-motivation-when-learning-to-code-19a35a5ff851][Novices and motivation when learning to code]]. ~ Chris Smith
  #Teaching #CodeWorld
+ [[https://terrytao.wordpress.com/2018/07/28/gamifying-propositional-logic-qed-an-interactive-textbook][Gamifying propositional logic: QED, an interactive textbook]]. ~ Terence
  Tao #Teaching #Logic
+ [[http://www.math.ucla.edu/~tao/QED/QED.html][QED: a short interactive text in propositional logic arranged in the
  format of a computer game]]. ~ Terence Tao #Teaching #Logic
+ [[https://www.lirmm.fr/~retore/PRESENTATIONS/UMjeudisRetoreLogique.pdf][Une histoire de la logique mathématique (de la philosophie à
  l’informatique)]]. ~ Christian Retoré #Logic
+ [[https://www.cs.cornell.edu/courses/cs3110/2017fa/][Course: Data structures and functional programming]]. ~ Michael Clarkson
  #FunctionalProgramming #OCaml #ITP #Coq
+ [[https://raywang.tech/2017/09/25/formal-reasoning-in-coq/][Formal reasoning in Coq: a beginner's guide]]. ~ Ray Wang 
  #ITP #Coq
+ [[https://github.com/readablesystems/cs260r-17/blob/master/naivecoq.md][Coq cheatsheet]]. ~ Eddie Kohler #ITP #Coq
+ [[https://www.i-programmer.info/news/216-python/11996-python-the-future-of-programming.html][Python the future of programming?]] ~ Mike James #Programming #Python
+ [[http://www.mgsloan.com/posts/ghcinception/][GHCinception: Running GHCi in GHCi]]. ~ Michael Sloan #Haskell
+ [[http://cadenaser.com/ser/2018/07/27/internacional/1532719014_366615.html][Un error informático envía información confidencial a 1.500 criminales]]. #Programación
+ [[https://en.wikipedia.org/wiki/List_of_software_bugs][List of software bugs]]. ~ Wikipedia #Programming
+ [[https://github.com/cpitclaudel/company-coq][Company-coq: A collection of extensions for Proof General's Coq mode]]. 
  #Emacs #Coq
+ [[https://arxiv.org/pdf/1807.07892][Bridging the gap between programming languages and hardware weak
  memory models]]. ~ A. Podkopaev, O. Lahav, V. Vafeiadis #ITP #Coq
+ [[https://ac1235.github.io/haskell.pdf][Haskell for JavaScript developers]]. ~ Anthony N Cipriano #Haskell
  #JavaScript
+ [[https://vaibhavsagar.com/blog/2018/07/29/hamts-from-scratch/][HAMTs (Hash Array Mapped Tries) from scratch]]. ~ Vaibhav Sagar #Haskell
+ [[https://plus.maths.org/content/constructivists-expert][Constructivism: An expert's view]]. ~ Harvey Friedman #Logic #Math
+ [[http://www.enseignement.polytechnique.fr/informatique/INF551/][Computational logic: artificial intelligence in mathematical
  reasoning]]. ~ S. Graham-Lengrand and R. Blanco #Course #Logic
  #FunctionalProgramming #OCaml #ITP #Coq
+ [[http://www-sop.inria.fr/members/Yves.Bertot/courses/coq-master1-1.pdf][Verifying programs and proofs (Part I. describe algorithms)]]. ~ Yves
  Bertot #ITP #Coq
+ [[https://team.inria.fr/marelle/en/coq-winter-school-2018/][Coq Winter School 2018]]. ~ Yves Bertot #Course #ITP #Coq
+ [[https://medium.freecodecamp.org/the-art-of-computer-programming-by-donald-knuth-82e275c8764f]["The art of computer programming" by Donald Knuth]]. ~ Carl Tashian
  #Programming 
+ [[https://tarski.cs.us.es/~jalonso/DAOconCoq/index.php/Tema_2:_Demostraciones_por_inducci%C3%B3n_sobre_los_n%C3%BAmeros_naturales_en_Coq][DAOconCoq T2: Demostraciones por inducción sobre los números naturales
  en Coq]]. #ITP #Coq
+ [[http://cl-informatik.uibk.ac.at/users/swinkler/research/papers/ZWM14.pdf][Beyond polynomials and Peano arithmetic: automation of elementary and
  ordinal interpretations]]. ~ H. Zankl, S. Winkler, A. Middeldorp #Logic
  #Math #ATP
+ [[http://danghica.blogspot.com/2018/03/copying-vs-sharing-in-functional.html][Copying vs. sharing in functional languages]]. ~ Dan Ghica   #FunctionalProgramming
+ [[https://doisinkidney.com/posts/2018-07-30-verified-avl.html][Verified AVL trees in Haskell and Agda]]. ~ Donnacha Oisín Kidney
  #Haskell #Agda
+ [[http://danghica.blogspot.com/2018/07/haskell-if-monads-are-solution-what-is.html][Haskell: If monads are the solution, what is the problem?]] ~ Dan Ghica
  #FunctionalProgramming #Haskell
+ [[https://bartoszmilewski.com/2018/07/30/free-monoid-from-free-algebra-part-1][Free Monoid from Free Algebra, Part 1: Free Algebras]]. ~ Bartosz
  Milewski #Haskell #CategoryTheory
+ [[https://bartoszmilewski.com/2018/07/30/free-monoid-from-free-algebra-part-1][Free Monoid from Free Algebra, Part 2: Free Monoids]]. ~ Bartosz
  Milewski #Haskell #CategoryTheory
+ [[https://grain-lang.org][Grain: a strongly-typed functional programming language built for the
  modern web]]. #FunctionalProgramming
+ [[https://korban.net/posts/elm/2018-07-31-learning-elm-2018-comprehensive-list-resources][Learning Elm in 2018: comprehensive list of resources]]. #FunctionalProgramming 
  #Elm

* Lecturas del año 2017

** Enero 2017

+ [[https://www.researchgate.net/profile/Wolfgang_Bibel/publication/311509743_Advances_in_Connection-Based_Automated_Theorem_Proving/links/584d67f308aed95c25011f8c.pdf][Advances in connection-based automated theorem proving]]. ~ J. Otten & W. Bibel
  #Logic #ATP #Prolog 
+ [[http://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.1001745][Best practices for scientific computing]]. ~ G. Wilson et als.
  #Programming
+ [[https://www.researchgate.net/profile/Andreas_Prlic/publication/233870994_Ten_Simple_Rules_for_the_Open_Development_of_Scientific_Software/links/00b7d51daf837601a1000000.pdf][Ten simple rules for the open development of scientific software]]. ~ A. Prlić
  & J.B. Procter #Programming
+ [[http://weijr-note.blogspot.com/2017/01/2017-is-not-just-another-prime-number.html][2017 is not just another prime number]]. ~ T.J. Wei #Matemáticas
+ [[https://github.com/jaalonso/Lecturas_GLC][Lecturas sobre lógica computacional, programación funcional y razonamiento
  automático del 2016]]. ~ J.A. Alonso #GLC
+ [[https://www.isa-afp.org/entries/Twelvefold_Way.shtml][The Twelvefold Way]]. ~ Lukas Bulwahn #IsabelleHOL #Math #AFP
+ [[http://www.glc.us.es/~jalonso/exercitium/ternas-coprimas][Exercitium: "Ternas coprimas"]]. #Haskell #I1M2016
+ [[http://kseo.github.io/posts/2016-12-28-lazy-vs-strict-state-monad.html][Lazy vs strict state monad]]. ~ Kwang Yul Seo @kwangyulseo #Haskell 
+ [[http://kseo.github.io/posts/2016-12-30-write-you-an-interpreter.html][Write you an interpreter]]. ~ Kwang Yul Seo @kwangyulseo #Haskell 
+ [[https://arxiv.org/pdf/1612.09375v1][Basic category theory]]. ~ Tom Leinster #Math #eBook
+ [[https://within-parens.blogspot.com.es/2016/12/rcreational-common-lisp.html][(R)creational Common Lisp]]. ~ Marco Antoniotti #Lisp #Rstats
+ [[http://kseo.github.io//posts/2016-12-21-foldl-vs-foldl'.html][foldl vs foldl']]. ~ Kwang Yul Seo @kwangyulseo #Haskell 

+ [[http://www.dc.fi.udc.es/~cabalar/igpl16.pdf][Verification for ASP denotational semantics: a case study using the PVS
  theorem prover]]. ~ F. Aguado et als. #PVS #ASP
+ [[http://www.snoyman.com/blog/2017/01/functors-applicatives-and-monads][Functors, applicatives, and monads]]. ~ M. Snoyman @snoyberg #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-super-pandigitales][Exercitium: "Números super pandigitales"]]. #Haskell #I1M2016
+ [[https://github.com/Gabriel439/haskell-nix][Nix and Haskell in production]]. ~ G. Gonzalez @GabrielG439 #Haskell #Nix
+ [[https://www.gitbook.com/book/wizardforcel/sicp-in-python/details][SICP (Structure and Interpretation of Computer Programs) in Python]]. ~ GitBook
  #eBook #Python
+ [[http://raganwald.com/2016/12/27/recursive-data-structures.html][Why recursive data structures?]]. ~ Reginald Braithwaite #Algorithms
  #JavaScript

+ [[http://www.cs.princeton.edu/~appel/papers/certicoq-coqpl.pdf][CertiCoq: A verified compiler for Coq]]. ~ A.W. Appel et als. #Coq
+ [[https://wiki.haskell.org/Typeclassopedia][Typeclassopedia]]. ~ Brent Yorgey #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/minima-suma-de-las-ramas-de-un-arbol][Exercitium: "Mínima suma de las ramas de un árbol"]]. ~ #Haskell
  #I1M2016
  #Haskell #I1M2016 
+ [[http://www.math.upenn.edu/~wilf/website/CombinatorialAlgorithms.pdf][Combinatorial algorithms (for computers and calculators)]]. ~ A. Nijenhuis &
  H.S. Wilf #eBook #Math
+ [[https://github.com/unisonweb/unison/tree/cac3ab3a6bddd8b91bf17cd9e1b45950ab1a6c71/yaks/easytest][EasyTest: a Haskell simple testing toolkit]]. ~ Paul Chiusano @pchiusano
  #Haskell

+ [[https://www.isa-afp.org/entries/FOL_Harrison.shtml][First-order logic according to Harrison]]. ~ A.B. Jensen, A. Schlichtkrull & J. Villadsen #IsabelleHOL #Logic #AFP
+ [[https://www.stackbuilders.com/tutorials/haskell/ghc-optimization-and-fusion][GHC optimization and fusion]]. ~ Mark Karpov #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-de-perrin][Exercitium: "Números de Perrin"]]. #Haskell #I1M2016
+ [[https://www.technologyreview.com/s/603216/5-big-predictions-for-artificial-intelligence-in-2017][5 big predictions for Artificial Intelligence in 2017]]. ~ Will Knight #AI
+ [[http://kseo.github.io//posts/2017-01-03-writing-an-interpreter-using-fold.html][Writing an interpreter using fold]]. ~ Kwang Yul Seo @kwangyulseo #Haskell
+ [[http://ren.zone/articles/opaleye-sot][Opaleye’s sugar on top]]. ~ Renzo Carbonara #Haskell
+ [[https://github.com/takenobu-hs/haskell-ghc-illustrated][GHC (STG,Cmm,asm) illustrated for hardware persons (exploring some mental
  models and implementations)]]. ~ Takenobu Tani #Haskell
+ [[http://www.corecursion.net/post/2017-01-01-Formalizing_Eventsourcing][Formalizing eventsourcing]]. ~ @yoeight #Haskell

+ [[https://www.isa-afp.org/entries/Concurrent_Ref_Alg.shtml][Concurrent refinement algebra and rely quotients in Isabelle/HOL]]. ~ J. Fell,
  I. Hayes, A. Velykis #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/segmentos-comunes-maximales][Exercitium: "Segmentos comunes maximales"]]. #Haskell #I1M2016
+ [[https://github.com/jaalonso/Pensamientos][Recopilación de pensamientos]]. 

+ [[https://www.isa-afp.org/entries/Password_Authentication_Protocol.shtml][Verification of a Diffie-Hellman password-based authentication protocol]]. ~
  P. Noce #IsabelleHOL
+ [[http://jakewheat.github.io/intro_to_parsing][Intro to Parsing with Parsec in Haskell]]. ~ Jake Wheat #Haskell

+ [[http://approximateinference.org/accepted/ScibiorGhahramani2016.pdf][Modular construction of Bayesian inference algorithms]]. ~ A Scibior, Z
  Ghahramani #Haskell
+ [[https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53#.4tm9wspww][Goodbye, Object Oriented Programming]]. ~ Charles Scalfani @cscalfani
  #Programming
+ [[https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-6-db502830403#.rrilnbd5l][So you want to be a functional programmer]]. ~ Charles Scalfani @cscalfani
  #Programming #FP
+ [[http://kseo.github.io/posts/2017-01-04-type-defaulting-in-haskell.html][Type defaulting in Haskell]]. ~ Kwang Yul Seo @kwangyulseo #Haskell
+ [[http://kseo.github.io/posts/2017-01-05-implementing-a-call-by-value-interpreter-in-haskell.html][Implementing a call-by-value interpreter in Haskell]]. ~ Kwang Yul Seo
  @kwangyulseo #Haskell
+ [[http://lorepub.com/post/2016-12-17-Haskell-Pitfalls][Haskell pitfalls]]. ~ Chris Allen @bitemyapp, Mark Wotton #Haskell
+ [[http://www.scottaaronson.com/papers/pnp.pdf][P =? NP: A survey]]. ~ Scott Aaronson #Math #CompSci #History
+ [[http://www.elconfidencial.com/tecnologia/2016-12-04/software-libre-informatica-open-source-linux-github_1298849/][3.000 millones de archivos: así es la mayor biblioteca de código abierto del
  mundo]]. ~ José Manuel Blanco @josemblanco #Programación
+ [[https://www.softwareheritage.org/archive][The Software Heritage archive]]. 

+ [[https://kseo.github.io//posts/2017-01-08-visible-type-application-ghc8.html][Visible type application in GHC 8]]. ~ Kwang Yul Seo @kwangyulseo #Haskell
+ [[http://www.haskellforall.com/2015/10/polymorphism-for-dummies.html][Polymorphism for dummies]]. ~ G. Gonzalez @GabrielG439 #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/terminaciones-de-fibonacci][Exercitium: "Terminaciones de Fibonacci"]]. #Haskell #I1M2016

+ [[http://kseo.github.io/posts/2017-01-09-continuation-passing-style-interpreter.html][Continuation passing style interpreter]]. ~ Kwang Yul Seo @kwangyulseo #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/estratificacion-de-un-arbol][Exercitium: "Estratificación de un árbol"]]. #Haskell #I1M2016
+ [[https://gist.github.com/mikehaertl/3258427][Learn you a Haskell - In a nutshell]]. ~ Michael Härtl #Haskell 
+ [[http://blogs.ams.org/matheducation/2017/01/09/integrating-computer-science-in-math-the-potential-is-great-but-so-are-the-risks/][Integrating Computer Science in Math: The potential is great, but so are the risks]]. ~ E.  Schanzer #Math #CompSci
+ [[https://mail.haskell.org/pipermail/haskell-cafe/2017-January/125907.html][Call for interest: Haskell in middle school math education]]. ~ Chris Smith
  #Haskell #Math 
  
+ [[https://www.isa-afp.org/entries/UPF_Firewall.shtml][Formal network models and their application to firewall policies]]. ~
  A.D. Brucker, L. Brügger & B. Wolff #IsabelleHOL
+ [[http://michaeljflynn.net/2017/01/09/simple-rna-folding-in-130-lines-of-haskell][Simple RNA folding in 130 lines of Haskell]]. ~ Michael J. Flynn #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/familias-de-numeros-con-algun-digito-en-comun][Exercitium: "Familias de números con algún dígito en
  común"]]. #Haskell #I1M2016
+ [[http://m.bib.oxfordjournals.org/content/early/2016/12/31/bib.bbw130.full][How the strengths of Lisp-family languages facilitate building complex and
  flexible bioinformatics applications]]. ~ B.B. Khomtchouk et als. #Lisp 
+ [[https://blog.grakn.ai/grakn-ai-and-haskell-c166c7cc1d23#.j4zri5fzw][GRAKN.AI and Haskell: Data processing using Haskell and the Grakn knowledge
  graph]]. ~ Felix Chapman #Haskell  
+ [[https://www.codementor.io/codementorteam/tutorials/cheat-sheet-python-for-data-science-xe3m6wy4q][Cheat sheet: Python for Data Science]]. ~ Martijn #Python #DataScience 
+ [[https://github.com/rgleichman/glance/blob/master/README.md][Glance, a visual Haskell]]. ~ Robbie Gleichman #Haskell 

+ [[http://edsko.net/2017/01/08/linearity-in-haskell][Linearity, uniqueness, and Haskell]]. ~ Edsko de Vries @EdskoDeVries #Haskell  
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesion-de-cuadrados-reducidos][Exercitium: "Sucesión de cuadrados reducidos"]]. #Haskell
  #I1M2016
+ [[http://eta-lang.org][Eta: a pure, lazy, strongly typed functional programming language on the
  JVM]]. #Haskell #Eta
+ [[http://www.cs.ox.ac.uk/jeremy.gibbons/publications/iterator.pdf][The essence of the iterator pattern]]. ~ J Gibbons, BCS Oliveira #Haskell
+ [[http://www.corecursion.net/post/2017-01-12-Why_Traversable_is_the_real_deal][Why Traversable is the real deal]]. ~ @yoeight #Haskell 
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2016-representacion-grafica-de-funciones-en-haskell][I1M2016: Representación gráfica de funciones en Haskell]]. #Haskell 
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2016-manejo-de-ficheros-en-haskell][I1M2016: Manejo de ficheros en Haskell]]. #Haskell
+ [[http://chrisdone.com/posts/fast-haskell-c-parsing-xml][Fast Haskell: Competing with C at parsing XML]]. ~ Chris Done @christopherdone
  #Haskell

+ [[https://arxiv.org/pdf/1701.03320v1][An introduction to Liquid Haskell]]. ~ Ricardo Peña #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-dorados][Exercitium: "Números dorados"]]. #Haskell #I1M2016
  ordenadas"]]. #Haskell #I1M2016
+ [[http://www.bbenson.co/post/refactoring-with-applicatives-in-haskell][Refactoring with Applicatives in Haskell]]. ~ Brendan Benson #Haskell 
+ [[https://medium.freecodecamp.com/programming-mental-models-47ccc65eb334#.5ugikcqnp][The Great Programming Jargon Bake-off (Imperative vs. Declarative. Pure
  vs. Impure. Static vs. Dynamic)]]. ~ Preethi Kasireddy #Programming
+ [[https://hackhands.com/lazy-evaluation-works-haskell][How lazy evaluation works in Haskell]]. ~ Heinrich Apfelmus #Haskell 
+ [[http://math-blog.com/should-you-get-started-in-data-science/][Should you get started in Data Science?]] ~ John F. McGowan #DataScience 
+ [[https://aeon.co/essays/the-rise-and-fall-and-rise-of-logic][The rise and fall and rise of logic]]. ~ C. Dutilh Novaes @cdutilhnovaes #Logic 
+ [[http://www.johndcook.com/blog/2017/01/12/safe-primes-sylow-theorems-and-cryptography/][Safe primes, Sylow theorems, and Cryptography]]. ~ J.D. Cook @JohnDCook #Math
  #CompSci  

+ [[https://www.isa-afp.org/entries/E_Transcendental.shtml][The transcendence of e in Isabelle/HOL]]. ~ Manuel Eberl #IsabelleHOL #Math 
+ [[http://www.johndcook.com/blog/2017/01/11/automated-theorem-proving][Automated theorem proving]]. ~ J.D. Cook @JohnDCook #Math #CompSci 
+ [[https://openlibra.com/en/book/practicas-de-matematicas-con-maxima-matematicas-usando-software-libre][Prácticas de Matemáticas con Maxima: Matemáticas usando Software Libre]]. ~
  A.J. Arriaza et als. #Libro #Matemáticas #Maxima

+ [[http://www2.tcs.ifi.lmu.de/~abel/jlamp17.pdf][Equational reasoning about formal languages in coalgebraic style]]. ~ Andreas
  Abel #Agda 
+ [[http://www.stephendiehl.com/posts/monads.html][Monads made difficult: A short, fast and analogy-free introduction to Haskell
  monads derived from a categorical perspective]]. ~ S. Diehl @smdiehl #Haskell
+ [[https://www.researchgate.net/profile/Bruno_Woltzenlogel_Paleo/publication/311456139_Leibniz%27s_Characteristica_Universalis_and_Calculus_Ratiocinator_Today/links/5847ded008ae2d21757350ea.pdf][Leibniz’s characteristica universalis and calculus ratiocinator today]]. ~
  Bruno Woltzenlogel Paleo #Logic
+ [[https://github.com/FormalTheology/GoedelGod][Computer-assisted theoretical philosophy (computer-assisted formalizations of
  ontological proofs)]]. #Coq #IsabelleHOL
+ [[https://t.co/LK9Wdh6ooD][The essence of functional structures]]. ~ Adil Akhter @adilakhter #Scala
+ [[http://www.staff.city.ac.uk/~ross/papers/Applicative.html][Applicative programming with effects]]. ~ Conor McBride & Ross
  Paterson. #Haskell
+ [[http://ozark.hendrix.edu/~yorgey/360/f16/][Course: Programming languages (Fall 2016)]]. ~ Brent Yorgey #Haskell 
+ [[https://www.oreilly.com/ideas/how-we-got-linux-on-windows][How we got Linux on Windows (From "Linux is a cancer" to Windows Subsystem for Linux)]]. ~ Brian Jepson #Linux
+ [[https://begriffs.com/posts/2017-01-14-design-use-quickcheck.html][The design and use of QuickCheck]]. ~ Joe Nelson #Haskell #QuickCheck

+ [[http://hvg.ece.concordia.ca/Publications/TECH_REP/BDIID_TR16.pdf][Formalization of Birth-Death and IID Processes in Higher-order Logic]]. ~
  L. Liu, O. Hasan & S. Tahar #HOL4
+ [[https://kseo.github.io//posts/2017-01-14-memoization-in-hasekll.html][Memoization in Haskell]]. ~ Kwang Yul Seo @kwangyulseo #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/sumas-y-restas-alternativas][Exercitium: "Sumas y restas alternativas"]]. #Haskell #I1M2016
+ [[https://ucsd-progsys.github.io/liquidhaskell-blog/][LiquidHaskell: a static verifier for Haskell, based on Liquid Types]]. #Haskell 
+ [[https://arxiv.org/abs/1701.03602][Automatic verification and interactive theorem proving]]. ~ Andrea Asperti #ATP
  #ITP

+ [[https://jfr.unibo.it/article/download/5595/6224][Formalization of the pumping lemma for context-free languages]]. ~ M.V M. Ramos
  et als. #ITP #Coq
+ [[http://www.glc.us.es/~jalonso/exercitium/nodos-con-k-sucesores][Exercitium: "Nodos con k sucesores"]] #Haskell #I1M2016
+ [[http://www.win.tue.nl/%7Eberry/papers/crypto99.pdf][A simple Publicly Verifiable Secret Sharing Scheme and its application to
  electronic voting]]. ~ Berry Schoenmakers
+ [[https://github.com/input-output-hk/pvss-haskell][Haskell implementation of the Public Verifiable Secret Scheme based on Berry
  Schoenmakers's paper]]. ~ Carlos D'Agostino #Haskell
+ [[https://jaspervdj.be/posts/2017-01-17-lazy-io-graphs.html][Lazy I/O and graphs (Finding the shortest path in a lazily loaded infinite
  graph)]]. ~ Jasper Van der Jeugt @jaspervdj #Haskell
+ [[http://rextester.com][Rextester]]: A nice online IDE that supports multiple prog lang #Fsharp
  #Haskell #erlang #Scala #OCaml #Swift #elixirlang #Go ...

+ [[http://arxiv.org/abs/1701.04481][A tutorial on using Dafny to construct verified software]]. ~ Paqui Lucio
  #Dafny
+ [[https://josejuan.github.io/posts/2017-01-05-zipped-finger-tree.html][Zipped finger tree (o porqué los `ArrayList` son ineficientes)]]. ~
  @__josejuan__ #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesion-de-capicuas][Exercitium: "Sucesión de capicúas"]]. #Haskell #I1M2016

+ [[https://www.isa-afp.org/entries/Bertrands_Postulate.shtml][Bertrand's postulate in Isabelle/HOL]]. ~ J. Biendarra & M. Eberl #IsabelleHOL
  #Math
+ [[http://www.fpcomplete.com/blog/2017/01/speeding-up-distributed-computation][Speeding up a distributed computation in Haskell]]. ~ Francesco Mazzoli
  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/sumas-de-tres-capicuas][Exercitium: "Sumas de tres capicúas"]]. #Haskell #I1M2016
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2016-deduccion-natural-en-logica-de-primer-orden-con-isabellehol][RA2016: Deducción natural en lógica de primer orden con Isabelle/HOL]]. #Lógica
  #IsabelleHOL
+ [[http://haskellpad.org][Haskell Pad: Run your Haskell on the browser]]. ~ Kwang Yul Seo @kwangyulseo
  #Haskell 
+ [[http://go-talks.appspot.com/github.com/kseo/haskell-talks/2016/intro.slide#1][Introduction to Haskell]]. ~ Kwang Yul Seo @kwangyulseo #Haskell 

+ [[https://www.math.nagoya-u.ac.jp/~garrigue/papers/rs_isita2016.pdf][Formalization of Reed-Solomon codes and progress report on formalization of
  LDPC codes]]. ~ R. Affeldt, J. Garrigue, T. Saikawa #Coq
+ [[http://mlg.eng.cam.ac.uk/adam/pps2017.pdf][Building inference algorithms from monad transformers]]. ~ Adam Ścibior et
  als. #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/suma-ordenada-de-listas-infinitas-ordenadas][Exercitium: "Suma ordenada de listas infinitas ordenadas"]]. #Haskell #I1M2016
+ [[http://go-talks.appspot.com/github.com/kseo/haskell-talks/2016/monad.slide#1][What is monad?]] ~ Kwang Yul Seo @kwangyulseo #Haskell  
+ [[http://hojaynumeros.blogspot.com/2017/01/numero-de-descomposiciones-en.html][Número de descomposiciones en diferencia de cuadrados]]. ~ Antonio Roldán
  @Connumeros #Matemáticas #Programación
+ [[http://mutanatum.com/posts/2017-01-12-Browser-FP-Head-to-Head.html][Selecting a platform (JavaScript vs Elm vs PureScript vs GHCjs vs Scalajs)]]. ~
  Isaac Shapira
+ [[https://codesachin.wordpress.com/2016/04/03/a-practical-introduction-to-functional-programming-for-python-coders/][A practical introduction to Functional Programming for Python coders]]. ~
  Sachin Joglekar #FP #Python
+ [[https://www.oreilly.com/ideas/putting-the-science-back-in-data-science][Putting the science back in data science (Best practices and scalable workflows for reproducible data science)]]. ~ D. Whitenack #DataScience
+ [[http://math-blog.com/invasion-of-the-physicists/][Invasion of the physicists]]. ~ John F. McGowan 
+ [[http://www.microsiervos.com/archivo/ordenadores/10-algoritmos-frecuentes-entrevistas-trabajos-programacion.html][Los 10 algoritmos más frecuentes que surgen en entrevistas de trabajo de
  programación]]. ~ @Alvy #Programación
+ [[http://kseo.github.io//posts/2017-01-19-fun-with-hint.html][Fun with hint]]. ~ Kwang Yul Seo @kwangyulseo #Haskell 

+ [[http://tooslowexception.com/characterology-of-programmers][Characterology of programmers]]. ~ Konrad Kokosa #Programming 

+ [[https://kseo.github.io/posts/2017-01-21-writer-monad.html][Writer monad]]. ~ Kwang Yul Seo @kwangyulseo #Haskell
+ [[http://ceur-ws.org/Vol-1782/paper_8.pdf][A verified decision procedure for pseudo-boolean formulas]]. ~ T Philipp, A
  Tigunova #Coq #Haskell #Logic
+ [[https://dzone.com/articles/functional-programming-is-not-what-you-probably-th][Functional programming is not what you (probably) think]]. ~ Sean Toner
  #FunctionalProgramming

+ [[http://www.snoyman.com/blog/2017/01/stackage-design-choices][Stackage design choices: making Haskell curated package sets]]. ~ Michael
  Snoyman @snoyberg #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/inversa-del-factorial][Exercitium: "Inversa del factorial"]]. #Haskell #I1M2016 
+ [[http://www.cs.us.es/~fsancho/?e=146][¿Se puede liberar la programación del estilo de von Neumann?]] ~ F. Sancho
  @sanchocaparrini #Programación
+ [[http://elpais.com/elpais/2017/01/17/ciencia/1484670954_785850.html][La otra cara del Big Data]]. ~ David Gómez-Ullate #BigData
+ [[https://blogs.scientificamerican.com/roots-of-unity/review-weapons-of-math-destruction][Review: Weapons of Math Destruction]]. ~ Evelyn Lamb #BigData 
+ [[https://webtap.princeton.edu/][Princeton Web Transparency & Accountability Project]]. 
+ [[https://www.reddit.com/r/haskell/comments/5pan74/looking_for_haskell_companies_outside_usa][Looking for Haskell companies outside USA]]. #Haskell 

+ [[http://www.asjp.cerist.dz/downPassifArticle/3789][Formal specification by Coq of Date and Darwen's object/relational model]]. ~
  A. Benabbou, S.N. Bahloul #Coq
+ [[http://www.glc.us.es/~jalonso/exercitium/sumas-de-dos-capicuas][Exercitium: "Sumas de dos capicúas"]]. #Haskell #I1M2016
+ [[http://www.microsiervos.com/archivo/ordenadores/software-inteligente-x2.html][Software inteligente que aprende a escribir software inteligente]]. ~ @Alvy
  #Programación #IA
+ [[https://www.technologyreview.com/s/603381/ai-software-learns-to-make-ai-software/][AI software learns to make AI software]]. ~ Tom Simonite #Programming #IA  
+ [[https://www.fpcomplete.com/blog/2017/01/quickcheck][QuickCheck and magic of testing]]. ~ A. Kuleshevich #Haskell 

+ [[https://www.isa-afp.org/entries/Bernoulli.shtml][Bernoulli numbers in Isabelle/HOL]]. ~ L. Bulwahn #IsabelleHOL #Math 
+ [[http://cmsc-22311.cs.uchicago.edu/2015/lectures.php][Course: Functional systems in Haskell]]. ~ S. Kurtz #Haskell  
+ [[http://www.glc.us.es/~jalonso/exercitium/sustitucion-en-una-posicion][Exercitium: "Sustitución en una posición"]]. #Haskell #I1M2016

+ [[http://perugini.cps.udayton.edu/teaching/courses/Spring2016/cps499/projects/korenewychs1/korenewychs1-paper.pdf][An alpha-beta heuristic implementation of tic-tac-toe in Haskell]]. ~
  S.G. Korenewych #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/la-conjetura-de-rodolfo][Exercitium: "La conjetura de Rodolfo"]]. #Haskell #I1M2016
  #I1M2016
+ [[http://perugini.cps.udayton.edu/teaching/courses/Spring2016/cps499/projects/volka1/volka1-paper.pdf][Graph algorithms in Prolog]]. ~ A.C. Volk #Prolog #Math 

+ [[http://arxiv.org/abs/1701.07127][Interactive proof presentations with Cobra]]. ~ M. Ring, C. Lüth #Cobra
  #IsabelleHOL #Haskell #Scala
+ [[https://haskellweekly.news/issues/39.html][Haskell Weekly 39: News from the Haskell community (January 26 2017)]]. 
  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/notacion-polaca-inversa][Exercitium: "Notación polaca inversa"]]. #Haskell #I1M2016
  consecutivos"]]. #Haskell #I1M2016
+ [[http://www.studiainformatica.polsl.pl/index.php/SI/article/viewFile/790/759][Enumeration of words in context-free languages using Haskell]]. ~ W. Wieczorek
  #Haskell
+ [[http://www.dcc.fc.up.pt/dcc/Pubs/TReports/TR13/dcc-2013-06.pdf][Verifying a simple compiler using property-based random testing]]. ~ Pedro
  Vasconcelos #Haskell
+ [[https://e.xtendo.org/monad#1][The Monad Fear]]. ~ @xtendo_org #Haskell
+ [[http://www.infoworld.com/article/3155704/java/new-functional-language-for-jvm-builds-on-haskell-clojure-ml.html][Lux: New functional language for JVM builds on Haskell, Clojure, ML]]. ~
  @syegulalp #Lux 
+ [[https://www.gitbook.com/book/luxlang/the-lux-programming-language/details][The Lux Programming Language]]. #eBook #Lux 
+ [[http://cacm.acm.org/news/212583-how-ai-is-changing-software-development/fulltext][How AI is changing software development]]. ~ Esther Shein #Programming #AI 

+ [[http://ceur-ws.org/Vol-1785/W38.pdf][Formalization of polynomially bounded and negligible functions using the
  computer-aided proof-checking system Mizar]]. ~ H. Okazaki, Y. Futa #Mizar
+ [[https://byorgey.wordpress.com/2017/01/27/advent-of-code-16-solution-an-algebra-of-bitstrings][Advent of code #16 solution: an algebra of bitstrings]]. ~ Brent Yorgey
  #Haskell
+ [[http://homepages.inf.ed.ac.uk/wadler/papers/marktoberdorf/baastad.pdf][Monads for functional programming]]. ~ Philip Wadler #Haskell 
+ [[https://kseo.github.io/posts/2017-01-27-how-i-learned-haskell.html][How I learned Haskell]]. ~ Kwang Yul Seo @kwangyulseo #Haskell 
+ [[https://ocharles.org.uk/blog/pages/2014-12-01-24-days-of-ghc-extensions.html][24 days of GHC extensions]]. #Haskell 
+ [[https://arxiv.org/abs/1701.07769][Ethical considerations in Artificial Intelligence courses]]. ~ E. Burton et
  als.#AI

+ [[http://ceur-ws.org/Vol-1785/F2.pdf][Tarski’s geometry and the euclidean plane in Mizar]]. ~ A. Grabowski,
  R. Coghetto. #Mizar
+ [[http://www.cs.nott.ac.uk/~pszgmh/fold.pdf][A tutorial on the universality and expressiveness of fold]]. ~ Graham Hutton
  #Haskell
+ [[https://kseo.github.io/posts/2017-01-28-build-your-haskell-project-continuously.html][Build your Haskell project continuously]]. ~ Kwang Yul Seo @kwangyulseo
  #Haskell
+ [[https://www.johndcook.com/blog/2011/02/07/twin-prime-conjecture-pentium-bug/][Twin prime conjecture and the Pentium division bug]]. ~ J.D. Cook @JohnDCook
  #Math #CompSci
+ [[http://oshl.edu.umh.es/2016/07/12/software-privativo-y-analfabetismo-informatico/][Software privativo y analfabetismo informático]]. 

+ [[http://ceur-ws.org/Vol-1785/T2-ThEdu.pdf][Rigor of TP (computer theorem proving) in educational engineering software]]. ~
  W. Neuper #ATP
+ [[http://www.cs.nott.ac.uk/~pszgmh/pearl.pdf][Monadic parsing in Haskell]]. ~ G. Hutton, E. Meijer #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/cadena-de-primos][Exercitium: "Cadena de primos"]]. #Haskell #I1M2016
  #I1M2016
+ [[http://www.cs.toronto.edu/~hehner/aPToP][A practical theory of programming]]. ~ E.C.R. Hehner #eBook #Programming 
+ [[http://www.slideshare.net/GiancarloValente/functional-programming-per-tutti][Functional programming per tutti]]. ~ Giancarlo Valente #FuncionalProgramming 
+ [[https://github.com/cem3394/hr-haskell][Solutions to various Haskell problems on HackerRank For Work]]. ~ Chris
  Mckinlay @cem3394 #Haskell
+ [[https://denibertovic.com/posts/haskell-and-docker-down-the-rabbit-hole-and-back][Haskell and Docker: Down the rabbit hole and back]]. ~ Deni Bertovic @denibertovic #Haskell 

+ [[http://ceur-ws.org/Vol-1785/W23.pdf][Initial experiments with statistical conjecturing over large formal
  corpora]]. ~ T. Gauthier, C. Kaliszyk, J. Urban #ML #ATP
+ [[http://haskell.cs.yale.edu/wp-content/uploads/2011/02/POPL96-Modular-interpreters.pdf][Monad transformers and modular interpreters]]. ~ S. Liang, P. Hudak, M. Jones
  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/la-sucesion-mira-y-di][Exercitium: "La sucesión 'Mira y di'"]]. #Haskell #I1M2016

** Febrero 2017

+ [[https://hal.inria.fr/hal-01414753/document][Formal foundations of 3d geometry to model robot manipulators]]. ~ R. Affeldt,
  C. Cohen #Coq
+ [[http://www.cs.ru.nl/~W.Swierstra/Publications/DataTypesALaCarte.pdf][Data types à la carte]]. ~ W. Swierstra #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/arboles-continuos][Exercitium: "Árboles continuos"]]. #Haskell #I1M2016
+ [[http://www.practice.geeksforgeeks.org/recent.php][GeeksforGeeks Practice]]: Platform to practice programming problems.
  #Programming
+ [[https://www.reddit.com/r/haskell/comments/5rcfyd/haskell_maxims_and_arrows][Haskell maxims and arrows]]. #Haskell
+ [[http://two-wrongs.com/intuition-for-time-complexity-of-algorithms][Intuition for time complexity of algorithms]]. #Algorithms
+ [[http://www.slideshare.net/mendezfe/an-introduction-into-philosophy-of-science-for-software-engineers][An introduction into philosophy of science for software engineers]]. ~ Daniel
  Méndez @mendezfe
+ [[http://philsci-archive.pitt.edu/id/eprint/12782][Meaning, truth, and physics]]. ~ László E. Szabó 

+ [[http://ceur-ws.org/Vol-1785/F2.pdf][Tarski’s geometry and the euclidean plane in Mizar]]. ~ A. Grabowski,
  R. Coghetto #ITP #Mizar #Math
+ [[https://www.st.cs.uni-saarland.de/edu/seminare/2005/advanced-fp/docs/huet-zipper.pdf][The Zipper]]. ~ G. Huet #OCaml 
+ [[http://www.glc.us.es/~jalonso/exercitium/maxima-potencia-que-divide-al-factorial][Exercitium: "Máxima potencia que divide al factorial"]]. #Haskell
  #I1M2016
+ [[http://www.lihaoyi.com/post/WhatsFunctionalProgrammingAllAbout.html][What's functional programming all about?]] ~ Li Haoyi @li_haoyi
  #FuncionalProgramming
+ [[https://kseo.github.io/posts/2017-01-30-type-level-insertion-sort.html][Type-level insertion sort]]. ~ Kwang Yul Seo @kwangyulseo #Haskell 
+ [[http://arxiv.org/abs/1701.02401][A linear algebra formulation for boolean satisfiability testing]]. ~ C. Fang,
  J. Liu #Logic  
+ [[http://www.atamo.com/articles/how-to-read-pearls-by-richard-bird][How to read "Pearls of functional algorithm design"]]. ~ Kim-Ee Yeoh
  #FunctionalProgramming #Haskell

+ [[http://www.math3ma.com/mathema/2017/1/17/what-is-category-theory-anyway][What is category theory anyway?]] ~ Tai-Danae Bradley @math3ma #Math 
+ [[http://www.math3ma.com/mathema/2017/1/23/what-is-a-category][What is a category? Definition and examples]]. ~ Tai-Danae Bradley #Math 
+ [[http://www.math3ma.com/mathema/2017/1/31/what-is-a-functor-part-1][What is a functor? Definitions and examples, part 1]]. ~ Tai-Danae Bradley
  @math3ma #Math
+ [[http://www.math3ma.com/mathema/2017/2/1/what-is-a-functor-part-2][What is a functor? Definitions and examples, part 2]]. ~ Tai-Danae Bradley
  @math3ma #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/suma-minimal-de-productos-de-pares-de-elementos-consecutivos][Exercitium: "Suma minimal de productos de pares de  elementos"]].
  #Haskell #I1M2016
  #Haskell #I1M2016
+ [[https://haskellweekly.news/issues/40.html][Haskell Weekly 40: News from the Haskell community (February 2 2017)]].
  #Haskell 
+ [[https://hackernoon.com/easing-haskells-intimidating-glare-2341095e88aa#.9pl8imo29][Easing Haskell’s intimidating glare]]. ~ James Bowen #Haskell 
+ [[https://mmhaskell.com/blog/2017/1/30/the-easiest-haskell-idiom][The easiest Haskell idiom]]. ~ James Bowen #Haskell 
+ [[http://www.kovach.me/posts/2017-01-30-haskell-bits-randomness.html][Haskell Bits #1: Randomness]]. ~ Ben Kovach @BendotK #Haskell 
+ [[http://www.microsiervos.com/archivo/ciencia/mapa-matematicas.html][El mapa de las matemáticas]]. ~ @Alvy #Matemáticas
+ [[https://www.flickr.com/photos/95869671@N08/32264483720/][Map of Mathematics poster (All of mathematics summarised in one poster)]]. ~
  Dominic Walliman #Math
+ [[https://kseo.github.io/posts/2017-02-02-context-reduction.html][Context reduction]]. ~ Kwang Yul Seo @kwangyulseo #Haskell 
 
+ [[https://www.isa-afp.org/entries/Key_Agreement_Strong_Adversaries.shtml][Refining authenticated key agreement with strong adversaries]]. ~ J. Lallemand
  & C. Sprenger #IsabelleHOL
+ [[http://www.csl.sri.com/users/rushby/slides/gm04.pdf][Software verification/validation methods and tools ... or practical formal
  methods]]. ~ John Rushby
+ [[http://www.kovach.me/posts/2017-02-03-haskell-bits-application-beginnings.html][Haskell bits #2: Application beginnings]]. ~ Ben Kovach @BendotK #Haskell 
+ [[https://medium.com/ai-roadmap-institute/unsolved-problems-in-ai-38f4ce18921d#.kpjy6nmud][Unsolved problems in AI]]. ~ Simon Andersson #AI 
+ [[http://binaire.blog.lemonde.fr/2017/02/03/demontrer-sans-donner-la-preuve][Démontrer sans donner la preuve!]] ~ Fabrice Benhamouda #Math #CompSci 

+ [[https://github.com/mrkkrp/req][Req: Easy-to-use, type-safe, expandable, high-level HTTP library]]. ~ Mark
  Karpov #Haskell
+ [[http://fun.cs.tufts.edu/stream-fusion.pdf][Stream fusion: From lists to streams to nothing at all]]. ~ D. Coutts,
  R. Leshchinskiy, D. Stewart #Haskell
+ [[http://tomasp.net/academic/drafts/failures/failures-v2.pdf][Miscomputation in software: Learning to live with errors]]. ~ Tomas Petricek
  #Programming
+ [[http://www.kovach.me/posts/2016-06-01-categories.html][Categories in theory and in Haskell]]. ~ Ben Kovach @BendotK #Haskell 
+ [[http://www.kovach.me/posts/2016-06-08-monoids.html][Monoids in theory and in Haskell]]. ~ Ben Kovach @BendotK #Haskell 

+ [[http://www.glc.us.es/~jalonso/exercitium/aplicaciones-de-operaciones][Exercitium: Aplicaciones de operaciones]].  #Haskell #I1M2016
+ [[https://www.cs.us.es/~jalonso/cursos/lmf-16/index.php][LMF2017: Curso de "Lógica matemática y fundamentos" (2016-17)]].
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-comienzo-del-curso][LMF2017: Comienzo del curso]]. 
+ [[http://kovach.me/posts/2014-08-09-twitter.html][Posting to Twitter via HTTP in Haskell]]. ~ Ben Kovach @BendotK #Haskell  
+ [[https://bartoszmilewski.com/2017/02/06/applicative-functors][Applicative functors]]. ~ Bartosz Milewski @BartoszMilewski #Haskell 
+ [[https://mmhaskell.com/blog/2017/2/6/applicatives-one-step-further][Applicatives: One step further]]. ~ James Bowen #Haskell
+ [[https://deque.blog/2017/02/03/code-your-own-quickcheck][Code your own QuickCheck]]. #Haskell 

+ [[https://github.com/alexanderlhicks/IsabelleGuide][A practical guide to formalised mathematics in Isabelle]]. ~ A. Hicks,
  J. Siqueira #IsabelleHOL #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/prefijo-con-suma-acotada][Exercitium: Prefijo con suma acotada]]. #Haskell #I1M2016
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-presentacion-del-curso-de-logica-matematica-y-fundamentos][LMF2017: Presentación del curso de "Lógica matemática y fundamentos"]]. #Lógica
+ [[http://www.joachim-breitner.de/blog/717-Why_prove_programs_equivalent_when_your_compiler_can_do_that_for_you_][Why prove programs equivalent when your compiler can do that for you?]] ~
  Joachim Breitner @nomeata #Haskell
+ [[http://mathforum.org/isaac/mathhist.html][Famous problems in the history of Mathematics]]. ~ Isaac Reed #Math 
+ [[https://kseo.github.io/posts/2017-02-06-reified-dictionaries.html][Reified dictionaries]]. ~ Kwang Yul Seo @kwangyulseo #Haskell
+ [[http://arxiv.org/abs/1702.01135][Reluplex: An efficient SMT solver for verifying deep neural networks]]. ~
  G. Kat et als. #SMT
+ [[http://kovach.me/posts/2014-08-04-markov-chains.html][Modeling and simulating Markov chain evolution]]. ~ Ben Kovach @BendotK
  #Haskell

+ [[http://www.glc.us.es/~jalonso/exercitium/caminos-desde-la-raiz-en-un-arbol-binario][Exercitium: Caminos desde la raíz en un árbol binario]]. #Haskell #I1M2016
+ [[https://www.schoolofhaskell.com/school/starting-with-haskell/basics-of-haskell/the-tao-of-monad][The TAO of monad]]. ~ Bartosz Milewski @BartoszMilewski #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2016-matrices-en-haskell][I1M2016: Matrices en Haskell]]. #Haskell #Matemáticas 
+ [[https://www.math.ias.edu/vladimir/sites/math.ias.edu.vladimir/files/2014_08_27_NUS.pdf][Computer proof assistants (the future of mathematics)]]. ~ Vladimir Voevodsky
  #ITP #Math

+ [[https://www.isa-afp.org/browser_info/current/AFP/Berlekamp_Zassenhaus/document.pdf][The factorization algorithm of Berlekamp and Zassenhaus]]. ~ J. Divasón et
  als. #IsabelleHOL #Math
+ [[https://www.johndcook.com/blog/2017/02/07/tidying-up-trivial-details/][Tidying up trivial details (the value of abstract mathematics)]]. ~ J.D. Cook
  @JohnDCook #Math
+ [[http://www.cs.nott.ac.uk/~pszgmh/fifty.pdf][Functional pearl: Compiling a fifty year journey]]. ~ G. Hutton, P. Bahr
  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/maximo-comun-divisor-de-x-e-y-veces-n][Exercitium: Máximo común divisor de x e y veces n]]. #Haskell #I1M2016

+ [[http://www.glc.us.es/~jalonso/exercitium/caminos-en-un-arbol-binario-con-suma-dada][Exercitium: Caminos en un árbol binario con suma dada]]. #Haskell #I1M2016
+ [[https://haskellweekly.news/issues/41.html][Haskell Weekly 41: News from the Haskell community (February 9 2017)]].
  #Haskell 
+ [[https://andyshiue.github.io/functional/programming/2017/02/06/monad.html][Monads in category theory for laymen]]. ~ AndyShiue #Haskell 
+ [[https://blogs.msdn.microsoft.com/commandline/2017/02/09/haskell-on-bashwsl/][Haskell on Bash/WSL]]. ~ Rich Turner #Haskell 

+ [[https://www.isa-afp.org/entries/Stone_Relation_Algebras.shtml][Stone relation algebras in Isabelle/HOL]]. ~ W. Guttmann #ITP #IsabelleHOL
  #Math
+ [[https://deque.blog/2017/02/06/code-your-own-quickcheck-hof/][Code your own QuickCheck (HOF)]]. Part 2 #Haskell
+ [[http://cacm.acm.org/careers/213247-supercomputers-for-quantum-computers][Supercomputers for quantum computers]]. 
+ [[https://stackbuilders.com/tutorials/haskell/generics][GHC generics explained]]. ~ M. Karpov #Haskell
+ [[https://github.com/thorlucas/Sandpiles][Haskell implementation of the Abelian sandpile model using Gloss]]. #Haskell
  #Gloss
+ [[https://code.world/haskell#PUA5SiqJxCnMvFgl9eua8Ew][Haskell implementation of the Abelian sandpile model using CodeWorld]]. ~
  C. Smith #Haskell #CodeWorld
+ [[http://www.mat.unb.br/ayala/EVENTS/11SemInf2013Mauricio.pdf][Computational logic for computer science]]. ~ M. Ayala-Rincón & F.L.C. de Moura
  #Logic
+ [[http://www.di.unito.it/~padovani/Didattica/ProgrammazioneFunzionale/lnhp.pdf][Lecture notes on Haskell programming]]. ~ L. Padovani #Haskell
+ [[http://www.cs.ox.ac.uk/people/jeremy.gibbons/publications/spigot.pdf][Unbounded spigot algorithms for the digits of pi]]. ~ J. Gibbons #Haskell #Math
  #Pi
+ [[http://www.cs.umb.edu/~offner/files/pi.pdf][Computing the digits in π]]. ~ C.D. Offner #Math #Algorithms #Pi 
  
+ [[ftp://ftp.irit.fr/IRIT/ACADIE/IRIT-RR-2017-01-FR.pdf][A formal study of boolean games with random formulas as pay functions]]. ~
  E. Martin-Dorel & S. Soloviev #ITP #Coq
+ [[https://arunraghavan.net/2017/02/stricter-json-parsing-with-haskell-and-aeson][Stricter JSON parsing with Haskell and Aeson]]. ~ A. Raghavan #Haskell  
+ [[http://shhaumb.github.io/arithmetical-theorems-with-lambda-calculus][Arithmetical theorems with Lambda Calculus]]. ~ Shubham Jain #Haskell 
+ [[https://elephly.net/posts/2017-01-09-bootstrapping-haskell-part-1.html][Bootstrapping Haskell]]. ~ rekado #Haskell
+ [[https://deque.blog/2017/02/10/code-your-own-quickcheck-shrink][Code your own QuickCheck (Shrink)]]. ~ DeQue #Haskell
+ [[http://elpaissemanal.elpais.com/documentos/la-inteligencia-artificial][El cerebro artificial que piensa por ti]]. ~ Joseba Elola #IA
+ [[http://elpais.com/elpais/2017/02/10/ciencia/1486759726_219935.html][Cuando políticos de EE UU decidieron que el número pi era 3,2]]. ~ M. Ansede
  @manuelansede #Matemáticas
+ [[http://nbviewer.jupyter.org/github/akittas/presentations/blob/master/pythess/func_py/func_py.ipynb][Using functional programming in Python like a boss: generators, iterators and decorators]].  #Python
+ [[https://github.com/danielSanchezQ/FP-Programming-Python-Madrid][Programación funcional en Python]]. ~ D. Sánchez #Python

+ [[https://people.mpi-inf.mpg.de/~jblanche/compl2.pdf][Soundness and completeness proofs by coinductive methods]]. ~ J. C. Blanchette,
  A. Popescu, D. Traytel #IsabelleHOL #Logic
+ [[https://www.isa-afp.org/entries/Abstract_Soundness.shtml][Abstract soundness in Isabelle/HOL]].~ J. C. Blanchette, A. Popescu, D. Traytel
  #IsabelleHOL #Logic
+ [[http://stefan-klinger.de/files/monadGuide.pdf][The Haskell programmer’s guide to the IO Monad (don’t panic)]]. ~ S. Klinger
  #Haskell #Math 
+ [[http://www.glc.us.es/~jalonso/exercitium/calculo-de-pi-usando-el-producto-de-wallis][Exercitium: Cálculo de pi usando el producto de Wallis]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-sintaxis-y-semantica-de-la-logica-proposicional][LMF2017: Sintaxis y semántica de la lógica proposicional]]. #Lógica

+ [[http://www.glc.us.es/~jalonso/exercitium/calculo-de-pi-usando-la-formula-de-vieta][Exercitium: Cálculo de pi usando la fórmula de Vieta]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-sintaxis-y-semantica-de-la-logica-proposicional-2][LMF2017: Sintaxis y semántica de la lógica proposicional (2)]]. #Lógica
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-deduccion-natural-proposicional-1][LMF2017: Deducción natural proposicional (1)]]. #Lógica

+ [[https://www.isa-afp.org/entries/Differential_Dynamic_Logic.shtml][Differential dynamic logic]]. ~ B. Bohrer #IsabelleHOL #Logic
+ [[http://kovach.me/posts/2017-02-08-connecting-to-databases.html][Haskell bits #3: Connecting to databases]]. ~ Ben Kovach @BendotK #Haskell
+ [[https://www.fpcomplete.com/blog/2016/11/mastering-time-to-market-haskell][Mastering time-to-market with Haskell]]. ~ Chris Done @christopherdone #Haskell
+ [[https://deque.blog/2017/02/14/quickcheck-in-action][Playing with QuickCheck on an arithmetic DSL]]. ~ DeQue  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/busqueda-en-los-digitos-de-pi][Exercitium: Búsqueda en los dígitos de pi]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2016-las-librerias-de-vectores-y-matrices][I1M2016: Las librerías de vectores y matrices]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2016-calculo-numerico-en-haskell][I1M2016: Cálculo numérico en Haskell]]. #Haskell #Matemáticas
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-sintaxis-de-la-logica-proposicional-y-representacion-del-conocimiento][LMF2017: Ejercicios de sintaxis y semántica de la lógica proposicional y
  representación del conocimiento]]. #Lógica 

+ [[http://arxiv.org/abs/1702.04478][VMDV: A 3D visualization tool for modeling, demonstration, and
  verification]]. ~ Jian Liu et als. #ATP #ITP
+ [[https://docs.google.com/presentation/d/1a4GvI0dbL8sfAlnTUwVxhq4_j-QiDlz02_t0XZJXnzY/preview#slide=id.p][How to sell excellence]]. ~ Michael O. Church #Haskell
+ [[http://philsci-archive.pitt.edu/12823/1/THOUGHT%20EXPERIMENTS%20IN%20MATHEMATICS.pdf][Thought experiments in mathematics]]. ~ I. Starikova & M. Giaquinto #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/distribucion-de-digitos-de-pi][Exercitium: Distribución de dígitos de pi]]. #Haskell

+ [[http://www.glc.us.es/~jalonso/exercitium/sucesion-de-trazas-de-digitos-de-pi][Exercitium: Sucesión de trazas de dígitos de pi]]. #Haskell
+ [[http://teh.id.au/posts/2017/02/13/interactive-print/index.html][Replacing GHCi's pretty-printer]]. ~ Tim Humphries #Haskell
+ [[https://functor.tokyo/blog/2017-02-17-xml-html-qq][Quasiquoters for XML and HTML documents in Haskell]]. ~ Dennis Gosnell
  @cdepillabout #Haskell 

+ [[https://www.microsoft.com/en-us/research/wp-content/uploads/2016/11/trees-that-grow-2.pdf][Trees that grow]]. ~ S. Najd & Simon Peyton Jones #Haskell 
+ [[http://www.snoyman.com/blog/2017/02/better-exception-messages][Better exception messages]]. ~ Michael Snoyman @snoyberg #Haskell
+ [[https://deque.blog/2017/02/17/quickcheck-is-fun-deal-with-it][QuickCheck is fun, deal with it]]. ~ DeQue #Haskell 

+ [[https://arxiv.org/pdf/1702.03277][Local lexing]]. ~ S. Obua, P. Scott & J. Fleuriot #IsabelleHOL 
+ [[http://osl.ugr.es/CTAN/info/spanish/guia-atx/guia-atx.pdf][Creación de ficheros LaTeX con GNU Emacs]]. ~ Joaquín Ataz López #LaTeX #Emacs
+ [[http://www.numberworld.org/y-cruncher/][y-cruncher: A multi-threaded pi-program]]. ~ Alexander J. Yee #Math #Programming #Pi 

+ [[http://arxiv.org/abs/1702.05383][Theorem proving based on semantics of DNA strand graph]]. ~ K.S. Ray & M. Mondal #ATP
+ [[http://www.euterpea.com][Euterpea: A Haskell library for music creation]]. #Haskell #Music
+ [[http://haskellexists.blogspot.com.es/2017/02/ten-example-uses-of-monads.html][Ten example uses of Monads]]. ~ Philipp Schuster #Haskell
+ [[http://www.cs.us.es/~fsancho/?e=165][Entrenamiento de redes neuronales: mejorando el gradiente descendiente]]. ~
  F. Sancho #IA
+ [[http://www.haskellforall.com/2017/02/the-curry-howard-correspondence-between.html][The Curry-Howard correspondence between programs and proofs]]. ~ G. Gonzalez
  @GabrielG439 #Haskell #Logic
+ [[http://www.glc.us.es/~jalonso/exercitium/regresion-lineal][Exercitium: Regresión lineal]]. #Haskell 

+ [[https://briansteffens.github.io/2017/02/20/from-math-to-machine.html][From math to machine: translating a function to machine code]]. ~ Brian
  Steffens @brian_steffens #Haskell #Math
+ [[https://github.com/libreim/curryHoward/blob/master/CurryHoward.pdf][El isomorfismo de Curry-Howard y una introducción a Coq]]. ~ M. Román #Lógica
  #Coq
+ [[http://www.cs.us.es/~fsancho/?e=166][La tiranía de las publicaciones]]. ~ F. Sancho @sanchocaparrini #Investigación
+ [[https://mmhaskell.com/blog/2017/2/20/how-to-read-and-write-with-monads][How to read and write (with monads!)]] ~ James Bowen @james_OWA #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/calculo-de-pi-mediante-la-variante-de-euler-de-la-serie-armonica][Exercitium: Cálculo de pi mediante la variante de Euler de la serie armónica]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/calculo-de-pi-mediante-la-fraccion-continua-de-lange][Exercitium: Cálculo de pi mediante la fracción continua de Lange]]. #Haskell

+ [[http://production.datastore.cvt.dk/oafilestore?oid=57de73be1f4bfa107d000031&targetid=57de73bf1f4bfa107d000033][Development and verification of a proof assistant]]. ~ A.B. Jensen. #Thesis
  #Logic #IsabelleHOL
+ [[http://ims.nus.edu.sg/preprints/2017-05.pdf][To be or not to be constructive (that is not the question)]]. ~ Sam Sanders
  #Math #Logic
+ [[http://arxiv.org/abs/1702.06334][Synthesizing imperative programs for introductory programming assignments]]. ~
  Sunbeom So, Hakjoo Oh #Programming
+ [[http://fgiasson.com/blog/index.php/2016/06/21/optimal-emacs-settings-for-org-mode-for-literate-programming][Optimal Emacs settings for org-mode for literate programming]]. ~ F. Giasson
  #Emacs #Programming
+ [[https://github.com/zk-phi/magic-latex-buffer][Emacs magical syntax highlighting for LaTeX-mode buffers]]. #LaTeX #Emacs 
+ [[https://ekaschalk.github.io/post/prettify-mode/][Mathematical notation in Emacs]]. ~ Eric Kaschalk #Emacs 
+ [[https://medium.com/the-theam-journey/effective-array-computation-in-haskell-11e5c334c68a#.af55e6ry7][Effective array computation in Haskell (Because we all want highly performant
  and beautiful code)]]. ~ Samuel Schlesinger #Haskell #Math
+ [[http://crypto.stanford.edu/~blynn/haskell/ga.html][All hail geometric algebra!]] ~ Ben Lynn #Haskell #Math 
+ [[http://crypto.stanford.edu/~blynn/haskell/enigma.html][From Atbash to Enigma: 2500 years of cryptography in a few lines of
  Haskell]]. ~ Ben Lynn #Haskell #Cryptography
+ [[http://markbucciarelli.com/2017-02-21_hello_elm_and_haskell.html][Hello Elm and Haskell!]] ~ Mark Bucciarelli @mbucc #Elm #Haskell
+ [[https://sourceforge.net/blog/february-2017-community-choice-project-of-the-month-maxima][Maxima was elected as the Sourceforge February 2017 Community Project of the
  Month]]. #Maxima #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/calculo-de-pi-mediante-los-metodos-de-gregory-leibniz-y-de-beeler][Exercitium: Cálculo de pi mediante los métodos de Gregory-Leibniz y de Beeler]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2016-ejercicios-sobre-vectores-y-matrices-con-las-librerias][I1M2016: Ejercicios sobre vectores y matrices con las librerías]]. #Haskell #Matemáticas
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2016-estadistica-descriptiva-en-haskell][I1M2016: Estadística descriptiva en Haskell]]. #Haskell #Matemáticas #Estadística
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2016-calculo-simbolico-con-maxima][I1M2016: Cálculo simbólico con Maxima]]. #Maxima
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-logica-y-programacion][LMF2017: Lógica y programación]]. #Lógica #Programación
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-deduccion-natural-proposicional-2][LMF2017: Deducción natural proposicional (2)]]. #Lógica #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-ejercicios-de-deduccion-natural-proposicional-con-pandora][LMF2017: Ejercicios de deducción natural proposicional con Pandora]]. #Lógica
+ [[http://www.glc.us.es/~jalonso/vestigium/lmf2017-deduccion-natural-proposicional-con-isabellehol][LMF2017: Deducción natural proposicional con Isabelle/HOL]]. #Lógica
  #IsabelleHOL

+ [[http://www.glc.us.es/~jalonso/exercitium/calculo-de-pi-mediante-el-metodo-de-newton][Exercitium: Cálculo de pi mediante el método de Newton]]. #Haskell
+ [[http://crypto.stanford.edu/~blynn/haskell][Haskell sorcery]]. ~ Ben Lynn #Haskell 
+ [[http://queue.acm.org/detail.cfm?id=3055303][Making money using math: Modern applications are increasingly using probabilistic machine-learned models]]. ~ E. Meijer  
+ [[http://www.microsiervos.com/archivo/ia/inteligencia-artificial-programa-robando-codigo-otros-programas.html][Inteligencia artificial que programa robando código de otros programas]]. ~
  Nacho Palou @nachop #IA
+ [[https://www.newscientist.com/article/mg23331144-500-ai-learns-to-write-its-own-code-by-stealing-from-other-programs][AI learns to write its own code by stealing from other programs]]. ~ Matt
  Reynolds #AI
+ [[http://softlang.uni-koblenz.de/book/languages.pdf][The notion of software language]]. ~ Ralf Lämmel 
+ [[http://kovach.me/posts/2017-02-22-environment-variables.html][Haskell Bits #4: Environment variables]]. ~ Ben Kovach @BendotK #Haskell 
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2016-introduccion-a-la-programacion-con-maxima][I1M2016: Introducción a la programación con Maxima]]. #Programación #Maxima

+ [[https://arxiv.org/pdf/1702.04603][Relational convolution, generalised modalities and incidence algebras]]. ~
  B. Dongol, I.J. Hayes, G. Struth #IsabelleHOL
+ [[https://byorgey.wordpress.com/2017/02/24/signed-sets-and-ballots-part-2/][Signed sets and ballots, part 2]]. ~ Brent Yorgey #Haskell 
+ [[http://crypto.stanford.edu/~blynn/haskell/brute.html][Brute force for beginners]]. ~ Ben Lynn #Haskell 
+ [[http://crypto.stanford.edu/~blynn/play][Browser games in Haskell]]. ~ Ben Lynn #Haskell #Games 

+ [[http://crypto.stanford.edu/~blynn/haskell/io.html][A problem with I/O]]. ~ Ben Lynn #Haskell 
+ [[http://www.stat.umn.edu/geyer/3701/notes/basic.pdf][Basics of R]]. ~ Charles J. Geyer #Rstats 
+ [[http://www.hansdieterhiep.nl/tutorials/model-checking-an-introduction-to-bisimulation/][Model checking: an introduction to bisimulation]]. ~ Hans-Dieter Hiep
  @hansdieterhiep #Haskell
+ [[https://youtu.be/8d1vqd9_YqA][Introducción a generar sitios web estáticos con Hakyll]]. ~ Anler Hernández
  Peral #Haskell [[https://github.com/anler/talks/tree/master/hakyll-intro][Código]]
+ [[http://www.masteringemacs.org/article/fun-games-in-emacs][Fun and games in Emacs]]. ~ Mickey Petersen #Emacs 
+ [[https://openreview.net/pdf?id=ByldLrqlx][DeepCoder: learning to write programs]]. ~ M. Balog et als. #DeepLearning 

+ [[https://www.isa-afp.org/entries/Menger.shtml][Menger's theorem in Isabelle/HOL]]. ~ C. Dittmann #IsabelleHOL 
+ [[http://www.glc.us.es/~jalonso/exercitium/precision-de-aproximaciones-de-pi][Exercitium: Precisión de aproximaciones de pi]]. #Haskell
+ [[http://crypto.stanford.edu/~blynn/haskell/curry-howard.html][Bug-free code]]. ~ Ben Lynn #Haskell #Math 
+ [[http://www.cs.ox.ac.uk/people/jeremy.gibbons/publications/apl-extabs.pdf][APLicative programming with naperian functors]]. ~ J. Gibbons #Haskell
+ [[https://github.com/bjornbm/dimensional][Dimensional: a library providing data types for performing arithmetic with
  physical quantities and units]]. #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/dao7/talks/haskell-type-constraints-10-fun.pdf][Haskell type constraints unleashed]]. ~ D. Orchard, T. Schrijvers #Haskell

+ [[https://www.isa-afp.org/entries/Key_Agreement_Strong_Adversaries.shtml][Refining authenticated key agreement with strong adversaries]]. ~ J. Lallemand,
  C. Sprenge #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesiones-alicuotas][Exercitium: Sucesiones alícuotas]]. #Haskell
+ [[http://crypto.stanford.edu/~blynn/haskell/parse.html][Parser combinators]]. ~ Ben Lynn #Haskell

** Marzo 2017

+ [[http://www.dominik-peters.de/publications/sat-chapter.pdf][Computer-aided methods for social choice theory]]. ~ C. Geist, D. Peters #ATP 
+ [[https://repl.it/site/blog/haskell][GHCi in the browser]]. ~ @replit #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/calculo-de-pi-mediante-la-serie-de-nilakantha][Exercitium: Cálculo de pi mediante la serie de Nilakantha]]. #Haskell
+ [[http://crypto.stanford.edu/~blynn/haskell/count.html][Code that counts: Combinatorial calculations with combinator calculus]]. ~ Ben
  Lynn #Haskell #Math
+ [[https://arxiv.org/pdf/1702.06556][Computability theory, nonstandard analysis, and their connections]]. ~
  D. Normann, S. Sanders #Math #CompSci
+ [[https://haskell.libhunt.com][Awesome Haskell: some of the most popular and actively developed packages]].  
  #Haskell
+ [[https://www.reddit.com/r/haskell/comments/5wvd56/how_we_secretly_introduced_haskell_and_got_away/][How we secretly introduced Haskell and got away with it]]. ~ Arian van Putten &
  Ruud van Asseldonk #Haskell
  
+ [[https://www.ps.uni-saarland.de/autosubst][Autosubst: Automation for de Bruijn syntax and substitution in Coq]]. #Coq
+ [[https://mmhaskell.com/blog/2017/2/27/the-monadic-state-of-mind][The monadic state of mind]]. ~ James Bowen @james_OWA #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/contando-en-la-arena][Exercitium: Contando en la arena]]. #Haskell
+ [[http://crypto.stanford.edu/~blynn/haskell/lazy.html][Laziness in action]]. ~ Ben Lynn #Haskell 
+ [[http://eckyputrady.com/2017/02/18/Haskell-Heroku-Mailgun-Redis/index.html][Haskell, Redis, Mailgun and Heroku Scheduler]]. ~ Ecky Putrady @eckyputrady
  #Haskel
+ [[http://ssomayyajula.github.io/posts/2015-11-07-proofs-of-functor-laws-with-Haskell.html][Proofs of functor laws in Haskell]]. ~ Siva Somayyajula #Haskell 
+ [[https://github.com/dredozubov/fby16/blob/master/fby16.pdf][How to sell FP?]] ~ Denis Redozubov @rufuse #FuncionalProgramming #Haskell 

+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-construibles-como-sumas-de-dos-dados][Exercitium: Números construibles como sumas de dos dados]]. #Haskell
+ [[http://crypto.stanford.edu/~blynn/haskell/hga.html][Homogeneous geometric algebra]]. ~ Ben Lynn #Haskell #Math 

+ [[https://www.isa-afp.org/entries/Elliptic_Curves_Group_Law.shtml][The group law for elliptic curves in Isabelle/HOL]]. ~ S. Berghofer
  #IsabelleHOL #Math #CompSci
+ [[http://crypto.stanford.edu/~blynn/haskell/cga.html][Conformal geometric algebra]]. ~ Ben Lynn #Haskell #Math 
+ [[http://languagengine.co/blog/proof-refinement-basics][Proof refinement basics]]. ~ Darryl #Haskell #Logic  
+ [[https://alpacaaa.net/blog/post/elm-purescript-in-depth-overview/][In depth overview of Elm and Purescript. Lessons learned porting a game from Purescript to Elm]]. ~ Marco Sampellegrini @_alpacaaa #Haskell #Elm #Purescript
+ [[https://www.fpcomplete.com/blog/2017/02/typed-process][The typed-process library]]. ~ Michael Snoyman @snoyberg #Haskell 
+ [[https://medium.com/ai-society/the-lisp-approach-to-ai-part-1-a48c7385a913#.7zrd5oezq][The Lisp approach to AI (Part 1)]]. ~ S. Valencia #Lisp #IA
+ [[https://kunigami.blog/2017/02/28/notes-on-courseras-functional-programming-principles-in-scala][Notes on Coursera’s functional programming principles in Scala]].  ~
  G. Kunigami @kunigami #FunctionalProgramming #Scala
+ [[http://students.brown.edu/seeing-theory][Seeing theory: a visual introduction to probability and statistics]]. ~ Daniel
  Kunin #Math #Statistics.
+ [[https://interstices.info/jcms/p_93098/au-pays-des-illumines-du-nombre-pi][Au pays des illuminés du nombre Pi]]. ~Jean-Paul Delahaye #Math 
+ [[https://interstices.info/jcms/p_93101/le-nombre-pi-est-partout][Le nombre Pi est partout]]. ~ Jean-Paul Delahaye #Math 
+ [[https://jeremykun.com/2017/02/27/the-reasonable-effectiveness-of-the-multiplicative-weights-update-algorithm/amp/][The reasonable effectiveness of the Multiplicative Weights Update Algorithm]]. ~ Jeremy Kun | Math ∩ Programming #Algorithms 

+ [[https://www.depositonce.tu-berlin.de/bitstream/11303/6135/3/dittmann_christoph.pdf][Parity games, separations, and the modal μ-calculus]]. ~ C. Dittmann
  #PhD_Thesis #IsabelleHOL
+ [[http://crypto.stanford.edu/~blynn/haskell/brain.html][Get a brain (neural network in Haskell)]]. ~ Ben Lynn #Haskell #Math 
+ [[https://github.com/snowleopard/alga-paper][A minimalistic, elegant and powerful approach to working with graphs in a
  functional programming language]]. #Haskell
+ [[https://github.com/snowleopard/alg][A library for algebraic construction and manipulation of graphs in Haskell]]. #Haskell
+ [[https://existentialtype.wordpress.com/2017/03/04/a-proof-by-contradiction-is-not-a-proof-that-derives-a-contradiction/][A "proof by contradiction" is not a proof that ends with a contradiction]]. ~ R. Harper #Logic 
+ [[http://www.microsiervos.com/archivo/ciencia/introduccion-pensamiento-critico-32-comodos-videos-y-mooc.html][Una introducción al pensamiento crítico en 32 cómodos vídeos y un MOOC]]. ~
  @Wicho
+ [[https://www.newscientist.com/article/2123322-first-hint-of-how-dna-calculators-could-supercharge-computing/][First hint of how DNA calculators could supercharge computing]]. ~ M. Reynolds
  #Computing #DNA
+ [[http://cacm.acm.org/news/214260-microsofts-ai-is-learning-to-write-code-by-itself-not-steal-it/fulltext][Microsoft's AI is learning to write code by itself, not steal it]].
  #Programming #AI
+ [[http://openlogicproject.org/2017/02/27/proof-checker-for-forall-x-cambridge-and-calgary/][Proof checker for forall x: Cambridge and Calgary]]. ~ R. Zach @RrrichardZach
  #Logic
+ [[http://informatica.blogs.uoc.edu/2017/02/27/el-boom-de-la-inteligencia-artificial][El boom de la Inteligencia Artificial]]. #IA
+ [[http://www.principiamarsupia.com/2017/03/03/codifican-una-pelicula-en-adn-y-la-vuelven-a-recuperar/][Codifican una película en ADN y la vuelven a recuperar]]. | Principia Marsupia
  #Computación
+ [[http://science.sciencemag.org/content/355/6328/950][DNA Fountain enables a robust and efficient storage architecture]]. ~
  Y. Erlich, D. Zielinski #CompSci
+ [[https://www.newton.ac.uk/event/bprw01][Computer-aided mathematical proof]], Cambridge (England), 10-14 July 2017. #ITP
  #Logic #Math #CompSci

+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-binarios-invertidos][Exercitium: Números binarios invertidos]]. #Haskell
+ [[https://www.researchgate.net/profile/Bruno_Woltzenlogel_Paleo/publication/311456135_Analysis_of_an_Ontological_Proof_Proposed_by_Leibniz/links/5847ddee08ae8e63e6338e6f/Analysis-of-an-Ontological-Proof-Proposed-by-Leibniz.pdf][Analysis of an ontological proof proposed by Leibniz]]. ~ M. Bentert et
  als. #IsabelleHOL
+ [[http://www.nada.kth.se/~gkreitz/kattis-fie11/kattis-fie11.pdf][Five years with Kattis: using an automated assessment system in teaching]]. ~
  E. Enström et als. #Teaching #Programming

+ [[http://ltrc.iiit.ac.in/icon2016/proceedings/icon2016/pdf/W16-6310.pdf][Dependency grammars as Haskell programs]]. ~ T. Obrebski #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/la-codificacion-de-luka][Exercitium: La codificación de Luka]]. #Haskell

+ [[http://orbit.dtu.dk/ws/files/128492094/document.pdf][First-order logic according to Harrison]]. ~ AB Jensen, A Schlichtkrull, J
  Villadsen #IsabelleHOL #Logic
+ [[http://d-nb.info/112663039X/34][Highly automated formal verification of arithmetic circuits]]. ~ A Sayed-Ahmed
  #PhD_thesis
+ [[http://www.glc.us.es/~jalonso/exercitium/numero-de-islas-rectangulares-de-una-matriz-4][Exercitium: Número de islas rectangulares de una matriz]]. #Haskell

+ [[http://www.glc.us.es/~jalonso/exercitium/generadores-de-numeros-de-gabonacci][Exercitium: Generadores de números de Gabonacci]]. #Haskell
+ [[https://technology.nasa.gov/NASA_Software_Catalog_2017-18.pdf][NASA Software Catalog 2017-2018]]. 
+ [[https://rjlipton.wordpress.com/2017/03/08/is-computer-security-possible/][Is computer security possible?]] ~ RJ Lipton, KW Regan #CompSci

+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-construibles-como-sumas-de-dos-dados][Exercitium: "Números construibles como sumas de dos
  dados"]]. #Haskell #I1M2016
  #I1M2016

+ [[http://www.cs.uu.nl/research/techreps/repo/CS-2017/2017-002.pdf][Structure-aware version control (A generic approach using Agda)]]. ~
  V. Cacciari, W. Swierstra #Agda #Haskell
+ [[https://www.media.mit.edu/posts/disobedience-award][Rewarding Disobedience]]. ~ MIT Media Lab 
+ [[http://www.fpcomplete.com/blog/2017/03/partial-patterns-do-blocks][Partial patterns in do blocks: let vs return]]. ~ M. Snoyman @snoyberg #Haskell
+ [[https://www.inkandben.com/org-mode-resources][Emacs and Org mode resources]]. ~ Ben Elijah @inkandben #Emacs #OrgMode 
+ [[http://abstract.ups.edu/download/aata-20160809-sage-7.3.pdf][Abstract algebra: theory and applications]]. ~ T.W. Judson & R.A. Beezer #Math
  #Sage #eBook
+ [[http://elvishjerricco.github.io/2017/03/10/profunctors-arrows-and-static-analysis.html][Profunctors, arrows, & static analysis]]. ~ Will Fancher #Haskell 
+ [[http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2017-03.html#e2017-03-10T14_51_56.htm][Reading is a profoundly creative act]]. ~ E. Wallingford #Teaching #Learning 
+ [[http://informatica.blogs.uoc.edu/2017/03/09/inteligencia-artificial-algoritmos-geneticos/][Inteligencia artificial: algoritmos genéticos]]. ~ Daniel Riera #IA 
+ [[http://www.imn.htwk-leipzig.de/~waldmann/etc/untutorial/list-or-not-list][When you should use lists in Haskell (mostly, you should not)]]. ~ J. Waldmann
  #Haskell
+ [[http://duplode.github.io/posts/whats-in-a-fold.html][What's in a fold: The basic catamorphism in recursion-schemes]]. ~ Duplode
  #Haskell

+ [[https://arxiv.org/pdf/1703.00055][A monadic framework for relational verification (Functional pearl)]]. ~
  N. Grimm et als. #Fstar  
+ [[https://github.com/Michaelt293/isotope][Isotope: a chemistry library for calculating masses of elements and molecules]]. 
  ~ M. Thomas #Haskell 
+ [[https://www.johndcook.com/blog/2017/03/08/mathematical-balance-of-trade/][Mathematical balance of trade]]. ~ J.D. Cook @JohnDCook #Math
+ [[https://www.johndcook.com/blog/2017/03/09/how-areas-of-math-are-connected/][How areas of math are connected]]. ~ J.D. Cook @JohnDCook #Math 
+ [[https://www.scientificamerican.com/article/will-democracy-survive-big-data-and-artificial-intelligence/][Will democracy survive big data and artificial intelligence?]] ~ Dirk Helbing
  et als. #AI

+ [[http://arxiv.org/abs/1703.02819][Introduction to formal concept analysis and its applications in information
  retrieval and related fields]]. ~ D.I. Ignatov #AFC
+ [[https://gist.github.com/Sam-Serpoosh/f955fc5b5c670298160bbdc5b2d937da][Making a simple parametric Parser which is both a Functor and Applicative in
  Haskell!]]. ~ @sam2code #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-binarios-invertidos][Exercitium: "Números binarios invertidos"]]. #Haskell #I1M2016

+ [[https://jfr.unibo.it/article/download/6237/6566][Formalizing restriction categories]]. ~ J. Chapman, T. Uustalu & N. Veltri #ITP
  #Agda
+ [[http://www.glc.us.es/~jalonso/exercitium/la-codificacion-de-luka][Exercitium: "La codificación de Luka"]]. #Haskell #I1M2016
  de pi"]]. #Haskell #I1M2016
+ [[https://wiki.haskell.org/Haskell_programming_tips][Haskell programming tips]]. ~ HaskellWiki #Haskell

+ [[http://www.glc.us.es/~jalonso/exercitium/numero-de-islas-rectangulares-de-una-matriz-4][Exercitium: "Número de islas rectangulares de una matriz"]].
  #Haskell #I1M2016
+ [[https://github.com/skaslev/why-types/blob/master/why-types.pdf][Why types matter]]. ~ Slavomir Kaslev @skaslev #Haskell #Logic #CompSci
+ [[http://andrew.gibiansky.com/blog/haskell/haskell-syntax][Intro to Haskell syntax]]. ~ Andrew Gibiansky #Haskell 
+ [[http://andrew.gibiansky.com/blog/haskell/haskell-gloss/][Your first Haskell application (with Gloss)]]. ~ Andrew Gibiansky #Haskell 
+ [[http://andrew.gibiansky.com/blog/haskell/haskell-typeclasses/][Typeclasses: Polymorphism in Haskell]]. ~ Andrew Gibiansky #Haskell 
+ [[http://andrew.gibiansky.com/blog/haskell/haskell-abstractions/][Abstraction in Haskell (Monoids, Functors, Monads)]]. ~ Andrew Gibiansky
  #Haskell
+ [[https://bartoszmilewski.com/2017/03/14/algebras-for-monads/][Algebras for Monads]]. ~ Bartosz Milewski @BartoszMilewski #Haskell
+ [[https://wiki.haskell.org/Performance][The Haskell Performance Resource: the collected wisdom on how to make your Haskell programs go faster]]. ~ HaskellWiki #Haskell 

+ [[https://www.isa-afp.org/entries/Euler_MacLaurin.shtml][The Euler–MacLaurin formula in Isabelle/HOL]]. ~ Manuel Eberl #ITP #IsabelleHOL
  #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/generadores-de-numeros-de-gabonacci][Exercitium: "Generadores de números de Gabonacci"]]. #Haskell
  #I1M2016

+ [[http://www.glc.us.es/~jalonso/exercitium/caminos-minimales-en-un-arbol-numerico][Exercitium: "Caminos minimales en un arbol numérico"]]. #Haskell #I1M2016
+ [[http://www.cs.us.es/~fsancho/?e=169][Fundamentos matemáticos del aprendizaje (I)]]. ~ F. Sancho @sanchocaparrini #IA  
+ [[https://jpvillaisaza.github.io/2017/03/14/minimal-cabal-files][Minimal Cabal files]]. ~ J.P. Villa @jpvillaisaza #Haskell 
+ [[https://www.fpcomplete.com/blog/2013/06/haskell-from-c][Haskell from C: Where are the for Loops? ~ C]]. Scherrer #Haskell 
+ [[http://kaygun.tumblr.com/post/158387923879][My first Idris proof]]. ~ A. Kaygun @Atabey_Kaygun #Idris 
+ [[http://wadler.blogspot.com/2017/03/papers-we-love-john-reynolds.html][Papers We Love: John Reynolds, Definitional interpreters for Higher-Order Languages, now in Haskell]]. #Haskell

+ [[http://matryoshka.gforge.inria.fr/pubs/processing_report.pdf][An efficient proof-producing framework for formula processing]]. ~ H. Barbosa,
  J.C. Blanchette, P. Fontaine #IsabelleHOL
+ [[http://hbtvl.banquise.net/series/Gamebook%20solver.html][Solving a game book, as blog post series about modelling and optimization]]. ~ @bartavelle #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-de-catalan][Exercitium: "Números de Catalan"]]. #Haskell #I1M2016
  #I1M2016
+ [[https://vanemden.wordpress.com/2017/03/18/children-of-the-miracle-from-algol-to-prolog/][Children of the miracle: from Algol to Prolog]]. ~ Maarten van Emden
  #Programming #History
+ [[https://kunigami.blog/2017/03/18/amortization-and-persistence-via-lazy-evaluation/][Amortization and persistence via lazy evaluation]]. ~ G. Kunigami @kunigami
  #DataStructures #OCaml

+ [[https://arxiv.org/pdf/1703.06133][Fully mechanized proofs of Dilworths theorem and Mirskys theorem]]. ~ Abhishek
  Kr Singh #ITP #Coq #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/distribucion-de-diferencias-de-digitos-consecutivos-de-pi][Exercitium: "Distribución de diferencias de dígitos
  consecutivos de pi"]]. #Haskell #I1M2016
+ [[http://www.tcs.tifr.res.in/~abhishek/itp_slides.pdf][Interactive theorem proving in Coq and the Curry-Howard isomorphism]]. ~
  Abhishek Kr Singh #ITP #Coq #Math
+ [[https://slawekk.wordpress.com/2017/03/20/isarmathlib-updated-to-isabelle2016-1][IsarMathLib (a library of formalized mathematics) updated to Isabelle2016-1]].
  #ITP #Isabelle #Math

+ [[http://www.seas.upenn.edu/~sweirich/papers/systemd-submission.pdf][A specification for dependently-typed Haskell]]. ~ S. Weirich et als. #Haskell
  #Coq
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-cubifinitos][Exercitium: "Números cubifinitos"]]. #Haskell #I1M2016
  intervalos"]]. #Haskell #I1M2016

+ [[https://hal.inria.fr/hal-01483457/document][Formalization of the arithmetization of euclidean plane geometry and
  applications]]. ~ P Boutry, G Braun, J Narboux #ITP #Coq #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/por-3-o-mas-5][Exercitium: "Por 3 o más 5"]]. #Haskell #I1M2016

+ [[https://hal.inria.fr/hal-01178236v2/document][Parallel postulates and continuity axioms: a mechanized study in
  intuitionistic logic using Coq]]. ~ P. Boutry et als, #Coq
+ [[http://www.glc.us.es/~jalonso/exercitium/suma-de-subconjuntos][Exercitium: "Suma de subconjuntos"]]. #Haskell #I1M2016
+ [[https://mpickering.github.io/posts/2017-03-20-inlining-and-specialisation.html][Inlining and specialisation]]. ~ Matthew Pickering #Haskell  
+ [[https://elvishjerricco.github.io/2017/03/23/applicative-sorting.html][Applicative sorting]]. ~ Will Fancher @ElvishJerricco #Haskell 
+ [[https://hackernoon.com/obey-the-type-laws-ffb2fa4e5fe2#.gydph3pa1][Obey the (type) laws!]] ~ James Bowen #Haskell 
+ [[https://github.com/noschinl/cyp][CYP (short for "Check Your Proof") verifies proofs about Haskell-like
  programs]]. ~ L. Noschinski #Haskell #Logic

+ [[http://www.open.ou.nl/hjo/papers/itasec17.pdf][Analysing privacy analyses]]. ~ G Bella, D Butin, H Jonker #IsabelleHOL 
+ [[http://kseo.github.io/posts/2017-01-30-type-level-insertion-sort.html][Type-level insertion sort]]. ~ Kwang Yul Seo @kwangyulseo #Haskell 

+ [[https://torchhound.github.io/posts/haskellOneSentence.html][Haskell concepts in one sentence]]. ~ Joseph Cieslik #Haskell 
+ [[https://www.theatlantic.com/technology/archive/2017/03/aristotle-computer/518697/][How Aristotle created the computer]]. ~ Chris Dixon #History #CompSci #Logic 
+ [[http://computers-are-fast.github.io/][Do you know how much your computer can do in a second?]] ~ @kamalmarhubi @b0rk
  #Programming
+ [[https://openlibra.com/book/category-theory-for-the-sciences][Category theory for the sciences]]. ~ David I. Spivak #eBook #Math #CompSci 
+ [[https://www.slideshare.net/JR0cket/thinking-functionally-with-clojure][Thinking functionally with Clojure]]. ~ J. Stevenson @jr0cket #FP #Clojure 
+ [[http://lambda-the-ultimate.org/node/5419][Logic Production Systems (LPS)]]: A new mixed logic/imperative programming
  language. ~ Bob Kowalski and Fariba Sadri. #Logic #Programming
  
+ [[http://www.glc.us.es/~jalonso/exercitium/reduccion-de-repeticiones-consecutivas][Exercitium: "Reducción de repeticiones consecutivas"]]. #Haskell
  #I1M2016

+ [[http://cj-xu.github.io/notes/dst_implementation.pdf][Towards an implementation of a functional interpretation for nonstandard
  arithmetic]]. ~ C. Xu #ITP #Agda #Math
+ [[https://mmhaskell.com/blog/2017/3/27/learning-to-learn-haskell][Learning to learn Haskell]]. ~ James Bowen @james_OWA #Haskell  
+ [[http://www.glc.us.es/~jalonso/exercitium/representacion-de-conjuntos-mediante-intervalos][Exercitium: "Representación de conjuntos mediante intervalos"]]. #Haskell #I1M2016 
  #Haskell #I1M2016 
+ [[https://www.slideshare.net/cover_drive/category-theory-made-easy-with-ugly-pictures-73745930][Category theory made easy with (ugly) pictures]]. ~ Ashwin Rao #Haskell #Math 

+ [[http://www.glc.us.es/~jalonso/exercitium/codificacion-matricial][Exercitium: "Codificación matricial"]]. #Haskell #I1M2016
+ [[https://m.genbeta.com/a-fondo/22-trucos-para-ser-un-ninja-de-ubuntu][22 trucos para ser un ninja de Ubuntu]]. 

+ [[http://www2.mmu.ac.uk/media/mmuacuk/content/documents/computing/tmt17/CircularFunctions.pdf][An axiomatic formalisation of trigonometric functions in Isabelle]]. ~
  I.I. Morris #ITP #IsabelleHOL #Math  
+ [[http://www.glc.us.es/~jalonso/exercitium/numero-de-digitos-del-factorial][Exercitium: "Número de dígitos del factorial"]]. #Haskell
  #I1M2016
  impares"]]. #Haskell #I1M2016

+ [[http://dl.acm.org/ft_gateway.cfm?id=3051092&ftid=1861711&dwn=1&CFID=918158185&CFTOKEN=56807169][Certifying a file system using Crash Hoare Logic: correctness in the presence
  of crashes]]. ~ T. Chajed et als. #Coq
+ [[http://www.glc.us.es/~jalonso/exercitium/puntos-alcanzables-en-un-mapa][Exercitium: "Puntos alcanzables en un mapa"]]. #Haskell #I1M2016
+ [[https://openlibra.com/book/mathematical-reasoning-writing-and-proof][Mathematical reasoning. Writing and proof]]. ~ T. Sundstrom #eBook #Math 

** Abril 2017

+ [[http://www.proofpeer.net/papers/proofscript/proofscript.pdf][ProofScript: Proof scripting for the masses]]. ~ S. Obua, P. Scott, J. Fleuriot
  #ProofScript
+ [[https://arxiv.org/pdf/1404.6186][ProofPeer: Collaborative theorem proving]]. ~ S. Obua, J. Fleuriot, P. Scott,
  D. Aspinall #ITP #ProofPeer
+ [[https://github.com/proofpeer/proofpeer-proofscript/wiki][ProofScript: the language component of ProofPeer]]. 
+ [[https://arxiv.org/pdf/1703.09620][Universal reasoning, rational argumentation and human-machine interaction]]. ~
  C. Benzmüller #ITP
+ [[https://www.irif.fr/_media/seminaires/irif/sem_irif_20170303_katoen.pdf][Principles of probabilistic programming]]. ~ J.P. Katoen

+ [[https://www.cas.mcmaster.ca/~lawford/papers/Formalise17MooreLawford.pdf][Correct safety critical hardware descriptions via static analysis and theorem
  proving]]. ~ N. Moore, M. Lawford #ITP #PVS
+ [[https://blog.jle.im/entry/verified-instances-in-haskell.html][Verify your typeclass instances in Haskell today!]] ~ Justin Le #Haskell 

+ [[http://arxiv.org/abs/1703.10977][Formalization of some central theorems in combinatorics of finite sets]]. ~
  A.K. Singh #ITP #Coq #Math
+ [[https://josejuan.github.io/posts/2017-04-02-lazy-priority-heap.html][Lazy priority heap]]. @__josejuan__ #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/orden-simetrico][Exercitium: "Orden simétrico"]]. #Haskell #I1M2016
+ [[https://opensource.com/article/17/4/introduction-functional-programming][Introduction to functional programming]]. ~ Fraser Tweedale @hackuador #Haskell, #OCaml #Scala 

+ [[http://kenta.blogspot.com.es/2017/04/cpsjxejd-implementing-goodstein.html][Implementing Goodstein]]. ~ Ken T Takusagawa #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/el-problema-del-reciclado][Exercitium: "El problema del reciclado"]]. #Haskell #I1M2016
  #I1M2016

+ [[https://www.isa-afp.org/entries/Random_BSTs.shtml][Expected shape of random binary search trees in Isabelle/HOL]]. ~ M. Eberl
  #IsabelleHOL #Algorithms
+ [[http://www.glc.us.es/~jalonso/exercitium/termino-ausente-en-una-progresion-aritmetica-2][Exercitium: "Término ausente en una progresión
  aritmética"]]. #Haskell #I1M2016

+ [[http://www.glc.us.es/~jalonso/exercitium/sumas-con-sumandos-distintos-o-con-sumandos-impares][Exercitium: "Sumas con sumandos distintos o con sumandos
  impares"]]. #Haskell #I1M2016
+ [[http://www.jotdown.es/2017/04/la-carrera-ordenador-cuantico/][La carrera por el ordenador cuántico]]. ~ D. Manzano #Computación 
+ [[https://gilkalai.wordpress.com/2017/04/03/the-race-to-quantum-technologies-and-quantum-computers-useful-links/][The race to quantum technologies and quantum computers (useful links)]]. ~ Gil
  Kalai #CompSci
+ [[https://www.metalevel.at/prolog][The power of Prolog]]. ~ Markus Triska #eBook #Prolog 

+ [[http://www.glc.us.es/~jalonso/exercitium/potencias-perfectas][Exercitium: "Potencias perfectas"]]. #Haskell #I1M2016
  deficientes"]]. #Haskell #I1M2016
+ [[https://functor.tokyo/blog/2017-04-07-undecidable-instances][When is UndecidableInstances safe?]] ~ Dennis Gosnell @cdepillabout #Haskell
+ [[https://medium.com/position-development-blog/2-2-5-and-why-compiler-warnings-are-good-e50bc5cfab22][2 + 2 = 5... !? and why compiler warnings are good]]. ~ @jezenthomas #Haskell 
+ [[https://github.com/hansroland/reflex-dom-inbits/blob/84189eb93f87060a1bfa9128ffea43447a2d5c8f/tutorial.md][A beginner-friendly step by step tutorial for Reflex-Dom]]. #Haskell
+ [[http://www.acceleratehs.org][Accelerate: High-performance parallel arrays for Haskell]]. #Haskell
+ [[https://colah.github.io/posts/2015-09-NN-Types-FP][Neural networks, types, and functional programming]]. ~ C. Olah @ch402 #Haskell

+ [[https://www.isa-afp.org/entries/Subresultants.shtml][The theory of subresultants and the subresultant polynomial remainder
  sequence in Isabelle/HOL]]. ~ S. Joosten et als. #IsabelleHOL

+ [[http://fm.csl.sri.com/SSFT16/speaklogicV6.pdf][Speaking Logic]] (propositional, modal, equational, first-order, and
  higher-order logic). ~ N. Shankar #Logic
+ [[http://fm.csl.sri.com/SSFT16/Main.pdf][Type theory]] (in "Sixth Summer School on Formal Techniques"). ~ Stéphane
  Graham-Lengrand #Logic #CompSci
+ [[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.296.8782&rep=rep1&type=pdf][Automated deduction for verification]]. ~ N. Shankar #ATP #ITP #Logic #CompSci
+ [[http://fm.csl.sri.com/SSFT16/slides.pdf][Satisfiability Modulo Theories]]. ~ Clark Barrett #Logic #CompSci
+ [[http://blog.sigfpe.com/2006/01/eleven-reasons-to-use-haskell-as.html][Eleven reasons to use Haskell as a mathematician]]. ~ Dan Piponi @sigfpe
  #Haskell #Math

+ [[http://ijmcs.info/current_issue/IJMCS170233.pdf][Evolution and adoption of programming languages]]. ~ A. Jain, M. Gupta
  #Programming
+ [[http://www.glc.us.es/~jalonso/exercitium/rotaciones-divisibles-por-4][Exercitium: "Rotaciones divisibles por 4"]]. #Haskell #I1M2016
+ [[https://www.metalevel.at/ediprolog/][ediprolog: Emacs does interactive Prolog]]. ~ Markus Triska #Emacs #Prolog 

+ [[http://cs.ioc.ee/~niccolo/msfp16.pdf][Variations on noetherianness]]. ~ D. Firsov, T. Uustalu, N. Veltri #ITP #Agda
  #Math
+ [[https://theorylunch.wordpress.com/2013/12/03/natural-numbers-with-addition-form-a-monoid][Natural numbers with addition form a monoid]]. ~ James Chapman #Tutorial #Agda 
+ [[http://www.glc.us.es/~jalonso/exercitium/distancias-entre-primos-consecutivos][Exercitium: "Distancias entre primos consecutivos"]]. #Haskell
  #I1M2016
+ [[https://jeltsch.wordpress.com/2013/04/18/miu-in-haskell][MIU (puzzle from Douglas Hofstadter’s book "Gödel, Escher, Bach") in
  Haskell]]. ~ Wolfgang Jeltsch #Haskell #Logic
+ [[https://jeltsch.wordpress.com/2016/02/22/generic-programming-in-haskell][Generic programming in Haskell]]. ~ Wolfgang Jeltsch #Haskell 
+ [[http://cs.ioc.ee/~tarmo/tsem11/jeltsch1904-slides.pdf][An introduction to category theory and categorical logic]]. ~ Wolfgang Jeltsch
  #Logic
+ [[https://jeltsch.wordpress.com/2012/04/30/dependently-typed-programming-and-theorem-proving-in-haskell/][Dependently typed programming and theorem proving in Haskell]].~ Wolfgang
  Jeltsch #Logic #Haskell #Agda
+ [[https://mmhaskell.com/blog/2017/4/4/bayhac-summary][BayHac (the Bay Area Haskell Hackathon) 2017 summary!]] ~ James Bowen
  @james_OWA #Haskell
+ [[https://cdsmith.wordpress.com/2017/04/11/codeworld-and-summer-of-haskell-2017][CodeWorld and Summer of Haskell 2017]]. ~ Chris Smith #Haskell 
+ [[https://summer.haskell.org][Summer of Haskell 2017]]. #Haskell 

+ [[https://arxiv.org/pdf/1703.10857][Profunctor optics (modular data accessors)]]. ~ M Pickering, J Gibbons, N Wu
  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/agrupamiento-segun-valores][Exercitium: "Agrupamiento según valores"]]. #Haskell #I1M2016
+ [[https://www.autodraw.com][AutoDraw: Fast drawing for everyone]]. #AI #ML
+ [[https://www.cnet.com/es/noticias/autodraw-de-google-como-se-usa][Cómo convertirte en un artista con Autodraw de Google]]. ~ M. Marcaletti
  @Mariamrom #IA #AutoDraw
+ [[http://www.cs.ru.nl/~herman/PUBS/IntroTT.pdf][Introduction to type theory]]. ~ Herman Geuvers #Math #Logic 
+ [[http://eli.thegreenplace.net/2017/on-recursion-continuations-and-trampolines/][On recursion, continuations and trampolines]]. ~ Eli Bendersky @elibendersky
  #Python #Clojure
+ [[http://www.i-programmer.info/programming/other-languages/1706-a-programmers-guide-to-r.html][A programmer's guide To R: The vector, vector expressions & attributes]]. ~
  Mike James #RStats
+ [[https://speakerdeck.com/holgerpeters/data-science-python-and-the-functional-programming-revolution][Data science, Python and the functional programming revolution]]. ~ Holger
  Peters @data_hope #DataScience #Python #FuncionalProgramming
+ [[https://www.safaribooksonline.com/library/view/functional-programming-in/9781484227466/?utm_source=twitter.com&utm_medium=social&utm_campaign=newsafaribooks][Functional programming in R: Advanced statistical programming for data
  science, analysis and finance]]. ~ Thomas Mailund #RStats

+ [[https://github.com/adelbertc/bayhac17][All about Applicative]]. ~ Adelbert Chang @adelbertchang #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/enumeracion-de-arboles-binarios][Exercitium: "Enumeración de árboles binarios"]]. #Haskell #I1M2016
+ [[http://jelv.is/blog/Lazy-Dynamic-Programming][Lazy dynamic programming]]. ~ Tikhon Jelvis #Haskell 
+ [[https://github.com/nstack/nstack][NStack: Composable, typed streams and microservices for data
  analytics]]. #Haskell #DataScience
+ [[https://github.com/jyp/dante][Dante: Emacs mode for Interactive Haskell]]. ~ Jean-Philippe Bernardy #Haskell
  #Emacs
+ [[http://cs.brynmawr.edu/~rae/courses/17spring380/index.html][Modern functional programming]]. ~ R. Eisenberg #Haskell #Course 
+ [[http://cs.brynmawr.edu/~rae/papers/2016/thesis/eisenberg-thesis.pdf][Dependent types in Haskell: theory and practice]]. ~ R.A. Eisenberg #PhD_Thesis
  #Haskell
+ [[https://docs.google.com/presentation/d/1Zc2A7nkpuxnCRlILPeKRJCWIqv-gtsMJIizDQ9a3vPo/view#slide=id.g1d46100280_0_0][CodeWorld: The why, what, and how of teaching Haskell to children]]. ~ Chris
  Smith #Haskell
+ [[http://cid.uni-trier.de/index.php/about][CID project: Computing with Infinite Data]]. #CompSci #Logic #Math 

+ [[http://www.glc.us.es/~jalonso/exercitium/densidades-de-numeros-abundantes-perfectos-y-deficientes][Exercitium: "Densidades de números abundantes, perfectos y deficientes"]]. #Haskell #I1M2016
+ [[https://github.com/halfaya/BayHac/raw/master/slides/bayhac.pdf][Dependent types in GHC]]. ~ J. Leo #Haskell 
+ [[https://docs.google.com/presentation/d/1tLCWCx-5vNmAmBf1AiYg-VJoTR3W-6rcmRHhQnPTq-g/edit#slide=id.p][TensorFlow Haskell API]]. ~ J. Jacobson, F. Mayle, G. Steuck #Haskell 
+ [[https://www.dropbox.com/s/lasx6zxkoe07jyq/AdjunctionsHaskell.pdf?dl=0][Adjunctions in everyday life (Or: what we talk about when we talk about monads)]]. ~ Rúnar Bjarnason #Haskell
+ [[http://reasonablypolymorphic.com/dont-eff-it-up][Don't eff it up: freer monads in action]]. ~ Sandy Maguire #Haskell 
+ [[https://github.com/ucsd-progsys/elsa][Elsa: a lambda calculus evaluator]]. ~ R. Jhala @RanjitJhala #Haskell #Logic 
+ [[https://arxiv.org/pdf/1704.03391][Testing a saturation-based theorem prover: Experiences and challenges]]. ~
  G. Reger, M. Suda, A. Voronkov #ATP #Logic

+ [[https://arxiv.org/pdf/1704.03202][Symbolic computation and automated reasoning for program analysis]]. ~
  L. Kovacs #ATP
+ [[https://github.com/jpvillaisaza/cain/raw/master/docs/cain.pdf][Category theory applied to functional programming]] [PDF]. ~ J.P. Villa
  #Haskell #Agda #Math #eBook
+ [[https://github.com/jpvillaisaza/abel][Category theory applied to functional programming]] [Code]. ~ J.P. Villa
  #Haskell #Agda #Math #eBook
+ [[http://www.fpcomplete.com/blog/2017/04/pure-functional-programming][What pure functional programming is all about: Part 1]]. ~ Chris Done #Haskell
  #FP @christopherdone
+ [[https://cses.fi/book.pdf][Competitive programmer's Handbook]]. ~ A. Laaksonen #Programming 
+ [[https://eiriktsarpalis.wordpress.com/2017/04/02/programming-in-the-point-free-style][Programming in the point-free style]]. ~ Eirik Tsarpalis #PF #Fsharp 
+ [[http://teh.id.au/posts/2017/03/29/these-align-crosswalk/index.html][These, Align, and Crosswalk]]. ~ Tim Humphries #Haskell 

+ [[https://github.com/hedgehogqa/haskell-hedgehog][Hedgehog: a modern property-based testing system, in the spirit of QuickCheck]]. #Haskell
+ [[http://www.cs.nott.ac.uk/~psztxa/g53cfr/][Computer aided formal reasoning]]. ~ T. Altenkirch #ITP #Agda 

+ [[https://arxiv.org/pdf/1704.02253][Formalizing mathematical knowledge as a biform theory graph: a case study]]. ~
  J. Carette, W.M. Farmer #ITP #Agda
+ [[http://www.glc.us.es/~jalonso/exercitium/el-problema-de-las-n-torres][Exercitium: "El problema de las N torres"]]. #Haskell #I1M2016
  #I1M2016

+ [[http://ucsd-pl.github.io/veridrone/papers/ricketts-dissertation.pdf][Verification of sampled-data systems using Coq]]. ~ D. Ricketts #PhD_Thesis
  #Coq
+ [[https://mmhaskell.com/blog/2017/4/17/haskell-and-deliberate-practice][Haskell and deliberate practice]]. ~ James Bowen @james_OWA #Haskell
+ [[https://ro-che.info/articles/2016-04-02-descending-sort-haskell][Descending sort in Haskell]]. ~ R. Cheplyaka @shebang #Haskell
+ [[http://semantic.org/post/there-is-no-haskell-topology][There is no Haskell topology]]. ~ Semantic Dreams #Haskell #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/problema-de-las-jarras][Exercitium: "Problema de las jarras"]]. #Haskell #I1M2016

+ [[http://www.glc.us.es/~jalonso/exercitium/ampliacion-de-una-matriz][Exercitium: "Ampliación de una matriz"]] #Haskell #I1M2016
  #I1M2016
+ [[https://hal.archives-ouvertes.fr/hal-01505598/document][A Coq tactic for equality learning in linear arithmetic]]. ~ S. Boulmé,
  A. Maréchal #ITP #Coq #Math
+ [[http://newartisans.com/2017/04/haskell-and-z3][Submitting Haskell functions to Z3]]. ~ John Wiegley @jwiegley #Haskell  

+ [[http://www.glc.us.es/~jalonso/exercitium/clases-de-equivalencia][Exercitium: "Clases de equivalencia"]]. #Haskell #I1M2016
+ [[https://youtu.be/E2vE0RQ5eLk][SAS para aprendizaje automático y Haskell para ciencia de datos]]. #Haskell
  #DataScience  
+ [[https://idontgetoutmuch.wordpress.com/2017/04/18/trouble-with-tribbles][Trouble with Tribbles]]. ~ Dominic Steinitz #Haskell 
+ [[http://informatica.blogs.uoc.edu/2017/04/20/computacion-cuantica-i-el-fin-de-los-ordenadores-clasicos][Computación cuántica (I): el fin de los ordenadores clásicos]]. ~ Robert
  Clarisó @robertclariso #Computación
+ [[https://youtu.be/IKm-YYPaohQ][Modern software development with Haskell]]. ~ Runar Bjarnason #Haskell
+ [[http://jvns.ca/blog/2017/04/17/statistics-for-programmers/][Some good "Statistics for programmers" resources]]. ~ Julia Evans @b0rk
  #Statistics #Programming

+ [[http://www.glc.us.es/~jalonso/exercitium/buscaminas][Exercitium: "Buscaminas"]]. #Haskell #I1M2016
  #I1M2016
+ [[https://youtu.be/zYg-Uywz9YM][Introducción a Elm a través de sistemas de tipos]]. ~ @anler #Elm
  #FunctionalProgramming

+ [[https://arxiv.org/pdf/1704.05320][EPTL: A temporal logic for weakly consistent systems]]. ~ M Weber, A Bieniusa,
  A Poetzsch-Heffter #IsabelleHOL #Logic
+ [[http://akc.is/hops][HOPS: a DSL for power series and integer sequences]]. ~ Anders Claesson
  #Haskell #Math
+ [[https://hackage.haskell.org/package/codeworld-api-0.2.1.0][CodeWorld-API: Graphics library for CodeWorld]]. ~ Chris Smith #Haskell
  #CodeWorld
+ [[http://ucsd-progsys.github.io/liquidhaskell-blog/2016/10/06/structural-induction.lhs/][Refinement reflection on ADTs: Lists are Monoids]]. ~ Niki Vazou @nikivazou
  #Haskell #LiquidHaskell
+ [[https://youtu.be/GgD0KUxMaQs][The influence of dependent types]]. ~ Stephanie Weirich #Haskell 
+ [[https://queertypes.com/posts/59-applicatives-alternatives.html][Applicatives and Alternatives]]. ~ @queertypes #Haskell 

+ [[http://kar.kent.ac.uk/61349/1/158thesis.pdf][Solvers for type recovery and decompilation of binaries]]. ~ Ed Robbins
  #PhD_Thesis #SMT #CHR
+ [[http://stackoverflow.com/questions/43525193/how-can-i-re-assign-a-variable-in-a-function-in-haskell/43526565#43526565][Haskell is a great imperative language]]. ~ Chris Martin @chris__martin
  #Haskell
+ [[http://dev.stephendiehl.com/fun/lambda_calculus.html][Lambda calculus in Haskell]]. ~ S. Diehl @smdiehl #Haskell #Logic 
+ [[http://matt.might.net/articles/implementing-a-programming-language][7 lines of code, 3 minutes: Implement a programming language from scratch]]. ~
  Matthew Might @mattmight #Racket
+ [[https://techiedelight.quora.com/500-Data-structures-and-algorithms-interview-questions-and-their-solutions][500 Data structures and algorithms interview questions and their solutions]]. ~
  Vivek Srivastava #Programming
+ [[https://youtu.be/7CGuI9HcfqQ][CodeWorld: Teaching Haskell to childre (Video)]]. ~ Chris Smith #Haskell
+ [[https://youtu.be/ZJvHOpMnvpE][How to create a new Haskell project (Video)]] ~ G. Gonzalez @GabrielG439
  #Haskell
+ [[https://github.com/Gabriel439/slides/tree/master/bayhac2017][How to create a new Haskell project (Slides)]] ~ G. Gonzalez @GabrielG439
  #Haskell

+ [[https://arxiv.org/pdf/1704.04558][Verifying safety of functional programs with Rosette/Unbound]]. ~ D Mordvinov,
  G Fedyukovich #Verification #FuncionalProgramming
+ [[http://www.staff.science.uu.nl/~swier004/talks/2017-utrecht.pdf][QuickCheck: a lightweight tool for random testing Haskell programs]]. ~
  W. Swierstra @wouterswierstra #Haskell #QuickCheck
+ [[http://www.glc.us.es/~jalonso/exercitium/elementos-con-su-doble-en-el-conjunto][Exercitium: "Elementos con su doble en el conjunto"]]. #Haskell
  #I1M2016
+ [[http://informatica.blogs.uoc.edu/2017/04/24/computacion-cuantica-ii-un-nuevo-paradigma/][Computación cuántica (II): un nuevo paradigma]]. ~ Robert Clarisó
  @robertclariso #Computación

+ [[https://arxiv.org/pdf/1704.05124][The pebbling comonad in finite model theory]]. ~ S Abramsky, A Dawar, P Wang
  #Logic #FunctionalProgramming
+ [[http://www.glc.us.es/~jalonso/exercitium/subnumeros-pares][Exercitium: "Subnúmeros pares"]]. #Haskell #I1M2016
+ [[https://purelyfunctional.tv/article/why-functional-programming][Why functional programming? (11 reasons to learn functional
  programming)]]. #FunctionalProgramming
+ [[https://tonyday567.github.io/naperian][Naperian tensors]]. #Haskell

+ [[http://www.staff.science.uu.nl/~swier004/Publications/XmonadInCoq.pdf][xmonad in Coq (experience report): Programming a window manager with a proof assistant]]. ~ W. Swierstra #Coq #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-como-sumas-de-primos-consecutivos][Exercitium: "Números como sumas de primos
  consecutivos"]]. #Haskell #I1M2016
  #Haskell #I1M2016
+ [[http://clrnd.com.ar/posts/2017-04-21-the-water-jug-problem-in-hedgehog.html][The water jug problem in Hedgehog]]. ~ E.A. Alvarez #Haskell
+ [[https://jaxenter.com/eta-pirates-of-the-jvm-133518.html][Functional programming made easy: Here comes Eta]]. #FunctionalProgramming
+ [[https://t.co/0NP0kLGwCe][Improving Haskell types with SMT]]. I.S. Diatchki #Haskell #SMT
 
+ [[http://www.staff.science.uu.nl/~swier004/publications/2017-scp.pdf][Embedding the refinement calculus in Coq]]. ~ J. Alpuim, W. Swierstra #Coq
+ [[http://www.glc.us.es/~jalonso/exercitium/operaciones-con-polinomios-como-diccionarios][Exercitium: "Operaciones con polinomios como diccionarios"]]. 
  #Haskell #I1M2016
+ [[http://doisinkidney.com/posts/2017-04-23-verifying-data-structures-in-haskell-lhs.html][Verifying data structures in Haskell]]. ~ D.O. Kidney @oisdk #Haskell 
+ [[http://www.parsonsmatt.org/2017/04/26/basic_type_level_programming_in_haskell.html][Basic type level programming in Haskell]]. ~ @mattoflambda #Haskell 

+ [[http://www.staff.science.uu.nl/~swier004/publications/2016-ifl-draft.pdf][Structure-aware version control: A generic approach using Agda]]. ~
  V. Cacciari, W. Swierstra #Agda #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/operaciones-con-series-de-potencias][Exercitium: "Operaciones con series de potencias"]]. #Haskell
  #I1M2016
+ [[https://github.com/antalsz/hs-to-coq][hs-to-coq: Convert Haskell source code to Coq source code]]. ~ Antal
  Spector-Zabusky #Haskell #Coq
+ [[https://terrytao.wordpress.com/2017/04/13/counting-objects-up-to-isomorphism-groupoid-cardinality/][Counting objects up to isomorphism: groupoid cardinality]]. ~ T. Tao #Math 
+ [[https://blogs.scientificamerican.com/guest-blog/programming-as-a-way-of-thinking][Programming as a way of thinking]]. ~ A. Downey @AllenDowney #Programming
  #Python
+ [[http://aitp-conference.org/2017/aitp17-proceedings.pdf][AITP 2017: The Second Conference on Artificial Intelligence and Theorem
  Proving. (Abstracts of the talks)]]. #AI #ATP #ITP
+ [[http://www-formal.stanford.edu/jmc/basis1.pdf][A basis for a mathematical theory of computation]]. ~ J. McCarthy #Math
  #CompSci  
+ [[http://aitp-conference.org/2017/slides/JH.pdf][What has Artificial Intelligence ever done for us? (formalizers)]]. ~
  J. Harrison #AI #ATP #ITP
+ [[http://aitp-conference.org/2017/slides/StSDeep.pdf][Deep reasoning: a vision for automated deduction]]. ~ S. Schulz #AI #ATP
+ [[http://aitp-conference.org/2017/slides/Tim_aitp.pdf][Deep Prolog: End-to-end differentiable proving in knowledge bases]]. ~
  T. Rocktäschel @_rockt #DeepLearning #Prolog
+ [[https://specfun.inria.fr/seminar/20170306-DamienRouhling.pdf][Refinement: a reflection on proofs and computations]]. ~ C. Cohen & D. Rouhling
  #Coq
+ [[https://specfun.inria.fr/seminar/20160314-PierreBoutry.pdf][On the formalization of foundations of Tarski's system of geometry]]. ~ P
  Boutry #Math #Coq
+ [[https://lexi-lambda.github.io/blog/2017/04/28/lifts-for-free-making-mtl-typeclasses-derivable/][Lifts for free: making mtl typeclasses derivable]]. ~ Alexis King @lexi_lambda
  #Haskell
+ [[https://github.com/dylanmc/CryptoBook][Learning Cryptography, math and programming with Cryptol]]. ~ Dylan McNamee
  #Math #Haskell #Cryptol
+ [[http://www.findstat.org][FindStat: The Combinatorial Statistic Finder]]. ~ M. Rubey, C. Stump, et
  als. #Programming #Math  
+ [[http://www.lmfdb.org][LMFDB: an extensive database of mathematical objects arising in Number Theory]].
  #Math 
+ [[http://aitp-conference.org/2017/slides/MK_aitp17.pdf][Tapping sources of Mathematical (Big) Data]]. ~ M. Kohlhase #MKM
+ [[http://wiki.c2.com/?LazinessImpatienceHubris][Laziness, impatience, hubris]] Larry Wall (Programming Perl) #Quote
  #Programming  

+ [[https://arxiv.org/pdf/1606.04422][Logic tensor networks: Deep learning and logical reasoning from data and knowledge]]. ~ L. Serafini & A. d'Avila #Logic #DeepLearning
+ [[http://aitp-conference.org/2017/slides/David_AITP.pdf][What can logic do for AI?]] ~ David McAllester #Logic #AI 
+ [[http://matryoshka.gforge.inria.fr/pubs/bentkamp_msc_thesis.pdf][An Isabelle formalization of the expressiveness of deep learning]]. ~
  A. Bentkamp #MsC_Thesis #IsabelleHOL #DeepLearning
+ [[http://metameso.org/~joe/docs/aitp-math-wiki-2pp.pdf][math.wikipedia.org: A vision for a collaborative semi-formal, language independent math(s) encyclopedia]]. ~ J. Corneli & M. Schubotz
+ [[https://www.sci.unich.it/gncs2017/slides/urban.pdf][Learning-assisted theorem proving and formalization]]. ~ J. Urban #AI #ATP #ITP
+ [[http://aitp-conference.org/2017/slides/BVJJ.pdf][Towards AI methods for clause selection]]. ~ J. Jakubův, J. Urban & B. Veroff
  #AI #ATP #Logic

** Mayo 2017

+ [[http://matryoshka.gforge.inria.fr/pubs/deep_learning_paper.pdf][A formal proof of the expressiveness of deep learning]]. ~ A. Bentkamp,
  J.C. Blanchette & D. Klakow #IsabelleHOL #DeepLearning
+ [[https://github.com/cydparser/demo-emacs-haskell][A tutorial for using Emacs with Haskell projects]]. #Haskell #Emacs 
+ [[https://crunchytype.wordpress.com/2017/04/27/quotient-inductive-types-their-dual/][Quotient inductive types & their dual]]. #Haskell 
+ [[https://speakerdeck.com/proger/the-programming-language-of-mathematics][The programming language of mathematics]]. ~ Vladimir Kirillov #Math 
+ [[https://arxiv.org/pdf/1610.01044][DeepAlgebra: an outline of a program]]. ~ P. Chojecki #ITP #Coq #Math  
+ [[http://logicaltypes.blogspot.com.es/2017/05/april-2017-1haskelladay-problems-and.html][April 2017 1HaskellADay problems and solutions]]. ~ @geophf | Typed Logic
  #Haskell #1HaskellADay
+ [[https://wit.ai/blog/2017/05/01/new-duckling][Open Sourcing our new Duckling (more Haskell at Facebook)]]. ~ Team Wit
  #Haskell
+ [[https://github.com/alexprengere/FormalSystems][A Python implementation of Douglas Hofstadter formal systems, from his book
  "Gödel, Escher, Bach"]]. #Logic #Python
+ [[https://mmhaskell.com/blog/2017/4/10/putting-your-haskell-to-the-test][Putting your Haskell to the test!]] ~ James Bowen @james_OWA #Haskell 
+ [[https://github.com/filopodia/open][Filopodia: open source projects, mostly related to data science, machine
  learning and statistics in Haskell]]. #Haskell #DataScience
+ [[https://www.isa-afp.org/entries/Types_Tableaus_and_Goedels_God.shtml][Types, tableaus and Gödel’s God in Isabelle/HOL]]. ~ D. Fuenmayor &
  C. Benzmüller #IsabelleHOL #Logic
+ [[https://metarabbit.wordpress.com/2017/05/02/i-tried-haskell-for-5-years-and-heres-how-it-was][I tried Haskell for 5 years and here’s how it was]]. ~ L.P. Coelho
  @luispedrocoelho #Haskell
+ [[https://arxiv.org/pdf/1703.09620 ][Universal reasoning, rational argumentation and human-machine interaction]]. ~
  C. Benzmüller #ITP #Logic 
+ [[https://youtu.be/cIX3WVO48RY][Functional programming and proving in Isabelle/HOL]]. ~ A. Lochbihler
  #FunctionalProgramming #IsabelleHOL
+ [[http://ftp.cs.wisc.edu/pub/techreports/1986/TR660.pdf][Using mathematical induction to design computer algorithms]]. ~ U. Manber
  #Algorithms
+ [[https://github.com/facebookincubator/duckling][Duckling: Language, engine, and tooling for expressing, testing, and
  evaluating composable language rules on input strings]]. #Haskell
+ [[http://projects.haskell.org/graphviz][The graphviz library: Bindings Haskell to Graphviz for graph visualisation]]. ~
  M. Sackman & I.L. Miljenovic #Haskell #Graphviz
+ [[https://github.com/NorfairKing/haphviz][Haphviz: Graphviz code generation with Haskell]]. #Haskell #Graphviz 
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?ACL2Workshop2017.2.pdf ][The Cayley-Dickson construction in ACL2]]. ~ J. Cowles & R. Gamboa #ACL2 #ITP
  #Math
+ [[https://openlibra.com/book/tecnicas-de-diseno-de-algoritmos][Técnicas de diseño de algoritmos]]. ~ R. Guerequeta y A. Vallecillo #Libro
  #Algorítmica
+ [[https://www.cs.cornell.edu/courses/cs3110/2017sp/lecture_notes.php][Course "Data structures and functional programming": Lecture notes]]. ~
  R.L. Constable #FunctionalProgramming #OCaml
+ [[https://arxiv.org/pdf/1704.06781][Homotopy Type Theory in Lean]]. ~ U. Buchholtz, F. van Doorn & J. von Raumer
  #ITP #Lean #HoTT  
+ [[http://newartisans.com/2017/05/monads-are-monoids][Monads are monoid objects]]. ~ J. Wiegley @jwiegley #ITP #Coq 
+ [[https://twdkz.wordpress.com/2013/05/31/data-analysis-with-monoids][Data analysis with Monoids]]. ~ Tim Docker #Haskell 
+ [[http://bitemyapp.com/posts/2017-05-03-what-a-haskell-study-group-is-not.html][What a Haskell study group is not]]. ~ Steven Syrek @sjsyrek #Haskell 
+ [[https://medium.com/@sjsyrek/some-notes-on-haskell-pedagogy-de43281b1a5c][Some notes on Haskell pedagogy]]. ~ Steven Syrek @sjsyrek #Haskell 
+ [[https://www.isa-afp.org/entries/MonoidalCategory.shtml][Monoidal categories in Isabelle/HOL]]. ~ E.W. Stark #ITP #IsabelleHOL #Math
+ [[http://slepnev.blogspot.com.es/2017/05/a-puzzle-about-game-review-scoring-in.html][A puzzle about game review scoring in Haskell]]. ~ Vladimir Slepnev #Haskell 
+ [[http://www.glc.us.es/~jalonso/vestigium/libro-de-examenes-de-programacion-funcional-con-haskell-version-del-6-de-mayo-de-2017][Libro de exámenes de programación funcional con Haskell (versión del 6 de
  mayo de 2017)]]. #Haskell #I1M2016
+ [[https://hal.archives-ouvertes.fr/hal-01512417/document][Formal verification of a floating-point expansion renormalization
  algorithm]]. ~ S. Boldo et als. #ITP #Coq #Math
+ [[http://neilmitchell.blogspot.com.es/2017/05/proving-stuff-with-idris.html][Proving stuff with Idris]]. ~ Neil Mitchell #Idris #Haskell 
+ [[https://hal.inria.fr/hal-01512286/document][A formally verified compiler for Lustre]]. ~ T. Bourke et als. #Coq 
+ [[https://crunchytype.wordpress.com/2017/05/07/let-idris-take-care-of-you-variable-binding/][Let Idris take care of you: variable binding]]. | Crunchy Type #Idris #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesion-de-recaman][Exercitium: "Sucesión de Recamán"]]. #Haskell #I1M2016
+ [[https://mail.haskell.org/pipermail/haskell-cafe/2017-May/127032.html][New release of SBV (a library for seamlessly integrating SMT solvers with
  Haskell), now with optimization]]. ~ L. Erkok #Haskell #SMT
+ [[https://www.isa-afp.org/entries/Floyd_Warshall.shtml][The Floyd-Warshall algorithm for shortest paths in Isabelle/HOL]]. ~ S. Wimmer
  & P. Lammich #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/recorrido-en-zigzag][Exercitium: "Recorrido en ZigZag"]]. #Haskell #I1M2016
+ [[https://people.mpi-inf.mpg.de/~jblanche/nested_multisets.pdf][Nested multisets, hereditary multisets, and syntactic ordinals in Isabelle/HOL]].
  ~ J.C. Blanchette et als. #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/normalizacion-de-expresiones-aritmeticas][Exercitium: "Normalización de expresiones aritméticas"]]. 
  #Haskell #I1M2016
+ [[http://conal.net/talks/teaching-new-tricks-to-old-programs.pdf][Teaching new tricks to old programs]]. ~ Conal Elliott @conal #Haskell 
+ [[https://two-wrongs.com/dynamic-dispatch-in-haskell-how-to-make-code-extendable][Dynamic dispatch in Haskell, or: how can I make my code extendable?]] #Haskell
+ [[https://arxiv.org/pdf/1704.07503][Learning of human-like algebraic reasoning using deep feedforward neural
  networks]]. ~ C.H. Cai et als. #ATP #ML
+ [[http://www.glc.us.es/~jalonso/exercitium/suma-de-arboles-por-niveles][Exercitium: "Suma de árboles por niveles"]]. #Haskell #I1M2016
+ [[http://www.math.ucsd.edu/~fan/ron/papers/85_07_minimum_spanning_tree.pdf][On the history of the minimum spanning tree problem]]. ~ R.L. Graham & P. Hell
  #Algorithms
+ [[http://www.ams.org/samplings/feature-column/fcarc-trees][Trees: a mathematical tool for all seasons]]. ~ Joe Malkevitch #Algorithms 
+ [[https://www.isa-afp.org/entries/CryptHOL.shtml][CryptHOL: a framework for formalising cryptographic arguments in Isabelle/HOL]].
  ~ A. Lochbihler #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/problema-de-las-3-jarras][Exercitium: "Problema de las 3 jarras"]]. #Haskell #I1M2016
  #I1M2016
+ [[https://www.isa-afp.org/entries/Game_Based_Crypto.shtml][Game-based cryptography in HOL]]. ~ A. Lochbihler, S. Reza & B. Bhatt
  #IsabelleHOL
+ [[http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.32.4249][The most unreliable technique in the world to compute pi]]. ~ J. Karczmarczuk
  #Haskell #Math
+ [[http://henning-thielemann.de/Research/icfp2007mathematics.pdf][Experience report: Haskell and mathematics]]. ~ H. Thielemann #Haskell #Math
+ [[https://karczmarczuk.users.greyc.fr/arpap/laseq.pdf][Lazy processing and optimization of discrete sequences]]. ~ J. Karczmarczuk
  #Haskell #Math
+ [[https://monad.cat/posts/2016-05-10-barbed-wire.html][Programming with bananas and barbed wire. Part 1]]. ~ Michał Kawalec @monad_cat
  #Haskell
+ [[https://www.lri.fr/~filliatr/ftp/publis/puf-wml07.pdf][A persistent union-find data structure]]. ~ S. Conchon & J.C. Filliâtre #Coq
+ [[https://github.com/myegorov/disjoint-sets][Tarjan's Union-Find algorithm using Conchon & Filliâtre's persistent arrays]]. 
  #Haskell
+ [[https://github.com/devonhollowood/search-algorithms][Haskell library containing common graph search algorithms]] (depth-first,
  breadth-first, Dijkstra, and A*). #Haskell
+ [[https://arxiv.org/pdf/1705.01226][A computationally surveyable proof of the group properties of an elliptic
  curve]]. ~ D.M. Russinoff #ACL2 #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/pares-a-distancia-dada][Exercitium: "Pares a distancia dada"]]. #Haskell #I1M2016
+ [[http://www.abc.es/ciencia/abci-pitagoras-conjetura-millon-dolares-201705082037_noticia.html][De Pitágoras a la conjetura del millón de dólares]]. ~ Pedro Alegría
  #Matemáticas
+ [[http://norvig.com/beal.html][Beal's conjecture revisited]]. ~ Peter Norvig #Math #Python 
+ [[https://culturacientifica.com/2017/04/26/teorema-los-cuatro-colores-1-una-historia-comienza-1852][El teorema de los cuatro colores (1): una historia que comienza en 1852]]. ~
  Marta Macho Stadler #Matemáticas
+ [[https://culturacientifica.com/2017/05/10/teorema-los-cuatro-colores-2-error-kempe-la-clave-la-prueba][El teorema de los cuatro colores (2): el error de Kempe y la clave de la
  prueba]]. ~ Marta Macho Stadler #Matemáticas
+ [[http://elpais.com/elpais/2017/05/10/el_aleph/1494430518_964969.html][El mayor número primo conocido]]. ~ Miguel Ángel Morales #Matemáticas
  #Computación
+ [[http://www.glc.us.es/~jalonso/exercitium/el-problema-de-las-celebridades][Exercitium: "El problema de las celebridades"]]. #Haskell
  #I1M2016
+ [[http://www.glc.us.es/~jalonso/exercitium/grafo-complemenario][Exercitium: "Grafo complemenario"]]. #Haskell #I1M2016
+ [[https://youtu.be/V3MllYWLE1g][¿Es posible usar Haskell más allá del mundo académico?]] ~ Ramiro Pastor
  #Haskell
+ [[http://www.ist.tugraz.at/projects/isac/publ/ded-for-sys-explain.pdf][Technology of deduction for "Systems that explain themselves"]]. ~ W. Neuper
  #ATP #ITP
+ [[http://www.ist.tugraz.at/projects/isac/publ/proto-sys-explain.pdf][Prototyping "Systems that explain themselves" for education]]. ~ W. Neuper #ITP
  #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/grafo-de-divisibilidad][Exercitium: "Grafo de divisibilidad"]]. #Haskell #I1M2016
  #Haskell #I1M2016
+ [[http://www.glc.us.es/~jalonso/exercitium/el-problema-de-la-bicicleta-de-turing][Exercitium: "El problema de la bicicleta de Turing"]]. #Haskell
  #I1M2016
+ [[https://mmhaskell.com/blog/2017/5/15/untangling-haskells-strings][Untangling Haskell's strings]]. ~ James Bowen @james_OWA #Haskell 
+ [[http://bit.ly/2q3cOHN][Summer school on satisfiability checking and symbolic computation]]. 
+ [[http://foswiki.cs.uu.nl/foswiki/pub/Swierstra/ResearchTalks/tree-oriented-programming-slides.pdf][Tree oriented programming in Haskell]]. ~ J.D. Fokker #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/el-algoritmo-de-damm][Exercitium: "El algoritmo de Damm"]]. #Haskell #I1M2016
+ [[https://briansmith.org/addition-chain-intro-01][An introduction & supplement to Knuth’s introduction to addition chains]]. ~
  B. Smith @BRIAN_____ #Haskell
+ [[http://neilmitchell.blogspot.com.es/2017/05/proving-fib-equivalence.html][Proving fib equivalence]]. ~ Neil Mitchell #Haskell #Idris  
+ [[http://link.springer.com/article/10.1007/s11023-017-9432-7][AI and the origins of the functional programming language style]]. ~
  M. Priestley #AI #FunctionalProgramming
+ [[https://arxiv.org/pdf/1705.07313][A formalization of the process algebra CCS in HOL4]]. ~ Chun Tian #ITP #HOL4
+ [[http://two-wrongs.com/extendable-data-in-haskell-pt-2][Extendable data in Haskell (part 2)]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/problema-del-domino][Exercitium: "Problema del dominó"]]. #Haskell #I1M2016
+ [[http://tecnologia.elpais.com/tecnologia/2017/05/19/actualidad/1495202801_698394.html][¿P=NP?: El problema que los informáticos no han podido resolver en 45 años]]. 
  ~ R. Peña 
+ [[https://kunigami.blog/2017/05/21/largest-sets-of-subsequences-in-ocaml/][Largest sets of subsequences in OCaml]]. ~ G. Kunigami @kunigami #OCaml 
+ [[http://gitcommit.co.uk/2017/05/20/haskell-vectors-and-simple-mechanics-part-2/][Haskell, vectors and simple mechanics (part 2)]]. ~ GitCommit #Haskell 
+ [[http://www.alfredodinapoli.com/posts/2017-04-07-the-simplest-possible-haskell-heap-implementation.html][The simplest Haskell priority queue implementation I know of]]. ~ Alfredo di
  Napoli @alfredodinapoli #Haskell
+ [[https://arxiv.org/pdf/1705.04680][Proof mining with dependent types]]. ~ E. Komendantskaya & J. Heras #Coq 
+ [[https://github.com/fmthoma/functional-data-structures-talk][Purely functional data structures]]. ~ Franz Thoma #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/caminos-en-un-grafo][Exercitium: "Caminos en un grafo"]]. #Haskell #I1M2016
+ [[https://github.com/ryanorendorff/lc-2017-fusion][Deforestation and program fusion: applying equational transforms to
  automatically simplify programs]]. ~ R. Orendorff #Haskell
+ [[https://github.com/HuwCampbell/grenade][Grenade: Practical Deep Learning in Haskell]]. ~ Huw Campbell #Haskell
  #DeepLearning
+ [[http://www.glc.us.es/~jalonso/exercitium/caminos-reducidos][Exercitium: "Caminos reducidos"]]. #Haskell #I1M2016
+ [[https://www.isa-afp.org/entries/Security_Protocol_Refinement.shtml][Developing security protocols by refinement in Isabelle/HOL]]. ~ C. Sprenger &
  I. Somaini #ITP #IsabelleHOL
+ [[http://elpais.com/elpais/2017/05/24/el_aleph/1495641252_510247.html][Curvas que separan: fácil de entender, difícil de demostrar]]. ~ Miguel Ángel
  Morales #Matemáticas
+ [[https://bookofbadarguments.com/][An illustrated book of bad arguments]]. ~ Ali Almossawi #Logic 
+ [[https://culturacientifica.com/2017/05/24/teorema-los-cuatro-colores-3-tras-mas-siglo-aventura-ordenador-resuelve-problema/][El teorema de los cuatro colores (3): ¿un ordenador resuelve el problema?]] ~
  Marta Macho @MartaMachoS #Matemáticas #Computación  
+ [[https://arxiv.org/pdf/1705.09025][Automating the proofs of strengthening Lemmas in the Abella proof assistant]]. 
  ~ D. Michaelson #ITP #Abella
+ [[https://blunt.herokuapp.com][Blunt converts Haskell expressions between the pointfree and pointful styles]]. 
  #Haskell 
+ [[http://taylor.fausak.me/2015/04/09/write-more-understandable-haskell-with-flow][Write more understandable Haskell with Flow]]. ~ Taylor Fausak #Haskell
+ [[https://lexi-lambda.github.io/blog/2017/05/27/realizing-hackett-a-metaprogrammable-haskell/][Realizing Hackett, a metaprogrammable Haskell]]. ~ Alexis King @lexi_lambda
  #Haskell #Racket #Hackett
+ [[https://dev.yorhel.nl/doc/funcweb][An opinionated survey of functional Web development]]. ~ Yoran Heling #Haskell
  #OCaml
+ [[http://www.glc.us.es/~jalonso/exercitium/el-pasatiempo-de-ulises][Exercitium: "El pasatiempo de Ulises"]]. #Haskell #I1M2016
+ [[https://arxiv.org/pdf/1705.07318][Formalized Lambek calculus in Higher Order Logic (HOL4)]]. ~ Chun Tian #ITP
  #HOL4
+ [[https://arxiv.org/pdf/1705.09704][Lock-step simulation is child's play]]. ~ J. Breitner @nomeata & C. Smith
  #Haskell #CodeWorld
+ [[http://www.glc.us.es/~jalonso/exercitium/polinomios-de-fibonacci][Exercitium: "Polinomios de Fibonacci"]]. #Haskell #I1M2016
+ [[https://plato.stanford.edu/entries/lambda-calculus/][The lambda calculus]]. (Stanford Encyclopedia of Philosophy) #Logic
+ [[https://github.com/mstksg/hamilton][Simulate physics on generalized coordinate systems using Hamiltonian
  Mechanics and automatic differentiation]]. #Haskell #Physics
+ [[http://www.glc.us.es/~jalonso/exercitium/representaciones-de-grafos][Exercitium: "Representaciones de grafos"]]. #Haskell #I1M2016

** Junio 2017

+ [[https://www.isa-afp.org/entries/Optics.shtml][Optics in Isabelle]]. ~ S. Foster & F. Zeyda #ITP #IsabelleHOL 
+ [[http://vaibhavsagar.com/blog/2017/05/29/imperative-haskell][Imperative Haskell]]. ~ Vaibhav Sagar #Haskell 
+ [[https://arxiv.org/pdf/1705.11040v1][End-to-end differentiable proving]]. ~ T. Rocktäschel & S. Riedel 
+ [[https://oleksandrmanzyuk.wordpress.com/2012/10/25/grobner-bases-in-haskell-part-i][Gröbner bases in Haskell: Part I]]. ~ Oleksandr Manzyuk #Haskell 
+ [[https://oleksandrmanzyuk.wordpress.com/2012/10/25/grobner-bases-in-haskell-part-ii][Gröbner bases in Haskell: Part II]]. ~ Oleksandr Manzyuk #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/subexpresiones-aritmeticas][Exercitium: "Subexpresiones aritméticas"]]. #Haskell #I1M2016
  #I1M2016
+ [[https://www.isa-afp.org/entries/Flow_Networks.shtml][Flow networks and the min-cut-max-flow theorem in Isabelle/HOL]]. ~ P. Lammich
  & S. Reza Sefidgar #IsabelleHOL
+ [[https://idontgetoutmuch.wordpress.com/2017/06/02/1090/][Haskell for numerics?]] ~ Dominic Steinitz @idontgetoutmuch #Haskell 
+ [[http://www.gigamonkeys.com/trees][Can’t see the four-est for the trees]]. ~ Peter Seibel @peterseibel #Haskell
  #Math
+ [[https://github.com/hrldcpr/Bezier.hs/][Bézier curves in Haskell]]. ~ Harold Cooper @hrldcpr #Haskell #Gloss #Math
+ [[https://arxiv.org/pdf/1706.00231][Automatic differentiation using constraint handling rules in Prolog]]. ~
  S. Abdallah #Prolog #CHR #Math
+ [[http://conal.net/papers/compiling-to-categories/compiling-to-categories.pdf][Compiling to categories (extended version)]]. ~ Conal Elliott @conal #Haskell
+ [[https://github.com/micahhahn/functionalgeometry][A simple Haskell implementation of the algebra of pictures outlined in Peter
  Henderson's "Functional Geometry"]]. ~ Micah Hahn #Haskell
+ [[http://cosette.cs.washington.edu][Cosette: an automated prover for checking equivalences of SQL queries]]. #Coq
+ [[https://arxiv.org/pdf/1705.10050][Formalization of transform methods using HOL Light]]. ~ A. Rashid & O. Hasan
  #ITP #HOL_Light
+ [[https://shemesh.larc.nasa.gov/fm/MINERVA/MINERVA.pdf][The MINERVA software development process]]. ~ A. Narkawicz, C.A. Muñoz &
  A.M. Dutle #PVS #Formal_verification
+ [[http://bit.ly/2qNx1BB][Constraint Handling Rules]]. ~ T. Frühwirth #Book #CHR 
+ [[http://www.glc.us.es/~jalonso/exercitium/extremos-locales][Exercitium: "Extremos locales"]]. #Haskell #I1M2016
  divisible por la longitud de la sucesión"]]. #Haskell #I1M2016
+ [[http://www.kestrel.edu/home/people/coglio/abnf.pdf][Augmented Backus-Naur Form (ABNF) in ACL2]]. ~ A. Coglio #ITP #ACL2 
+ [[http://adam.chlipala.net/frap/][Formal reasoning about programs]]. ~ A. Chlipala #Coq
+ [[http://people.ucalgary.ca/~rzach/static/open-logic/courses/phil479/phil479-screen.pdf][Incompleteness and computability (an open logic text)]]. ~ R. Zach #Logic 

+ [[https://www.isa-afp.org/entries/Buffons_Needle.shtml][Buffon's needle problem in Isabelle/HOL]]. ~ M. Eberl #IsabelleHOL 
+ [[http://www.glc.us.es/~jalonso/exercitium/sin-ceros-consecutivos][Exercitium: "Sin ceros consecutivos"]]. #Haskell #I1M2016
+ [[https://ro-che.info/articles/2017-06-05-word-vs-int][Word vs Int]]. ~ R. Cheplyaka @shebang #Haskell 
+ [[https://github.com/Russell91/pyfi][Pyfi : PYthon Function Interface for Haskell]]. ~ Russell Stewart #Python
  #Haskell
+ [[https://m.genbeta.com/web/descarga-los-ebooks-gratuitos-de-la-nasa-sobre-historia-ciencia-aeronautica-e-investigacion][eBooks gratuitos de la NASA sobre historia, ciencia, aeronáutica e
  investigación]].  #Libros #Ciencia
+ [[http://oucsace.cs.ohiou.edu/~gstewart/papers/mapl2017/mapl2017perceptron.pdf][Verified perceptron convergence theorem]]. ~ C. Murphy, P. Gray & G. Stewart
  #ITP #Coq
+ [[http://blog.sigfpe.com/2017/06/a-relaxation-technique.html][A relaxation technique]]. ~ Dan Piponi @sigfpe #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesiones-de-listas-de-numeros][Exercitium: "Sucesiones de listas de números"]]. #Haskell #I1M2016
  #I1M2016
+ [[http://www.microsiervos.com/archivo/ordenadores/arte-escher-programacion-geometria.html][El arte de Escher recreado matemáticamente mediante programación y
  geometría]]. ~ @Alvy #Programación
+ [[https://mapio.github.io/programming-with-escher][Programming with Escher]]. ~ Massimo Santini #Python 
+ [[http://www.ben-sherman.net/aux/curry-howard.pdf][Haskell and the Curry-Howard isomorphism (Part 1)]]. ~ Ben Sherman #Haskell
  #Logic
+ [[https://www.cs.uni-potsdam.de/~torsten/hybris.pdf][A tutorial on hybrid Answer Set Solving with clingo]]. ~ R. Kaminski, T. Schaub
  & P. Wanko #ASP #clingo #Python
+ [[http://perugini.cps.udayton.edu/teaching/courses/Spring2017/cps499/Languages/papers/PROLOG.pdf][An introduction to the Prolog programming language]]. ~ J.L. Watkin #Prolog 
+ [[http://perugini.cps.udayton.edu/teaching/courses/Spring2017/cps499/Languages/papers/CLIPS.pdf][An introduction to the CLIPS programming language]]. ~ J.L. Watkin #CLIPS  
+ [[https://arxiv.org/pdf/1705.05897][Automated cryptographic analysis of the Pedersen commitment scheme]]. ~
  R. Metere & C. Dong #ITP #Coq
+ [[https://byorgey.wordpress.com/2017/06/07/the-typeclassopedia-is-now-up-to-date][The Typeclassopedia is now up-to-date]]. ~ Brent Yorgey #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/mayores-sublistas-crecientes][Exercitium: "Mayores sublistas crecientes"]]. #Haskell #I1M2016
  #I1M2016
+ [[https://github.com/lunky/IntroToFunctionalProgramming][Intro to functional programming with Haskell]]. ~ Quinn Wilson #Haskell 
+ [[https://www.degruyter.com/downloadpdf/j/forma.2017.25.issue-1/forma-2017-0004/forma-2017-0004.xml][All Liouville numbers are transcendental in Mizar]]. ~ A. Korniłowicz,
  A. Naumowicz & A. Grabowski #ITP #Mizar #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/suma-de-los-cuadrados-de-los-divisores][Exercitium: "Suma de los cuadrados de los divisores"]]. #Haskell
  #I1M2016
+ [[https://arxiv.org/pdf/1705.07228][A verified algorithm enumerating event structures in Isabelle/HOL]]. ~
  J. Bowles & M.B. Caminati #ITP #IsabelleHOL
+ [[https://www.cs.cmu.edu/~kqy/resources/Verified-HMAC-DRBG.pdf][Verified correctness and security of mbedTLS HMAC-DRBG]]. K.Q. Ye et als. #ITP
  #Coq
+ [[https://docs.google.com/presentation/d/1_I5mYXivG5NbOHnICld_Xo41uOyAT57Yade5qfz2toQ/edit#slide=id.p][Teaching Haskell for understanding]]. ~ J. Moronuki @argumatronic #Haskell 
+ [[http://www.haskellforall.com/2017/06/translating-c-parser-to-haskell.html][Translating a C++ parser to Haskell]]. ~ G. Gonzalez @GabrielG439 #Haskell 
+ [[http://bit.ly/2r7uO4j][Lazy interactions – back to the future]]. ~ Simon Thompson @thompson_si
  #Haskell
+ [[https://github.com/sdiehl/zurihac-crypto][Small minimal examples of modern cryptographic techniques in Haskell]]. ~
  Stephen Diehl @smdiehl #Haskell
+ [[http://degoes.net/articles/kill-data][Data structures are antithetical to functional programming]]. ~ John A De Goes
  @jdegoes #Haskell
+ [[http://www.huffingtonpost.com/entry/problem-solving-might-attract-women-to-computer-science_us_593b2f58e4b094fa859f186a][Problem solving might attract women to computer science]]. #CompSci
+ [[https://www.johndcook.com/blog/2017/06/09/one-practical-advantage-of-functional-programming][One practical application of functional programming]]. ~ J.D. Cook @JohnDCook
  #FuncionalProgramming
+ [[http://spw17.langsec.org/papers/tse-validating-session-protocols.pdf][A framework for validating session protocols]]. ~ K.S. Tse & P.C. Johnson
  #Haskell
+ [[http://www.ps.uni-saarland.de/Publications/documents/KirstSmolka_2017_Categoricity.pdf][Categoricity results for second-order ZF in dependent type theory]]. ~ D. Kirst
  & G. Smolka #ITP #Coq
+ [[https://arxiv.org/pdf/1405.7012][A formally verified proof of the Central Limit Theorem in Isabelle/HOL]]. ~
  J. Avigad, J, Hölzl & L. Serafin #ITP #IsabelleHOL #Math
+ [[https://github.com/aisamanra/haddock-cheatsheet][A single-page quick reference for the markup used in GHC's Haddock
  documentation format]]. ~ G.D. Ritter #Haskell
+ [[https://github.com/haskell-servant/servant][servant: a type-level web DSL]]. #Haskell 
+ [[https://www.isa-afp.org/entries/PSemigroupsConvolution.shtml][Partial semigroups and convolution algebras]]. ~ B. Dongol et als. #IsabelleHOL
+ [[https://github.com/hedgehogqa/haskell-hedgehog][Hedgehog: a modern property-based testing system, in the spirit of
  QuickCheck]]. ~ Jacob Stanley #Haskell
+ [[https://deque.blog/2017/06/14/10-things-idris-improved-over-haskell][10 things Idris improved over Haskell]]. ~ DeQue #Haskell #Idris
+ [[http://elpais.com/elpais/2017/06/14/el_aleph/1497455086_088226.html][Un problema que vale un millón de dólares]]. ~ Miguel Ángel Morales
  #Matemáticas
+ [[http://www.cs.utexas.edu/~marijn/publications/itp17.pdf][Efficient, verified checking of propositional proofs]]. ~ M Heule, W Hunt Jr,
  M Kaufmann, N Wetzler #ITP #ACL2 #SAT
+ [[https://www.slideshare.net/GroupeT2i/deep-learning-the-future-of-ai][Deep learning: The future of AI]]. ~ Damian Borth #AI
+ [[https://codearsonist.com/reading-for-programmers][Reading for programmers]]. ~ Piotr Limanowski @peel #Emacs #OrgMode
+ [[http://irreal.org/blog/?p=6276][How to read papers efficiently]]. ~ Irreal #Emacs #OrgMode
+ [[http://www.madrimasd.org/blogs/matematicas/2017/06/15/143923][La gran novela de las matemáticas]].
+ [[https://prateekvjoshi.com/2014/10/25/a-beginners-look-at-lambda-calculus][A beginner’s look at lambda calculus]]. ~ Prateek Joshi #Logic #CompSci  
+ [[http://www.cs.ox.ac.uk/people/samuel.staton/papers/jfp17.pdf][Backtracking with cut via a distributive law and left-zero monoids]]. ~
  M. Piróg & S. Staton #Haskell
+ [[https://github.com/rudymatela/speculate][Speculate: discovering conditional equations and inequalities about Haskell
  functions]]. ~ R. Braquehais & C. Runciman #Haskell
+ [[https://github.com/rudymatela/leancheck/blob/master/doc/tutorial.md][Introduction to property-based testing (with LeanCheck)]]. ~ Rudy Matela
  #Haskell
+ [[https://github.com/mstksg/backprop][BackProp: Heterogeneous, type-safe automatic backpropagation in Haskell]]. ~
  Justin Le @mstk #Haskell
+ [[http://talks.jle.im/lambdaconf-2017/dependent-types/dependent-types.html][Practical dependent types: type-safe neural networks]]. ~ Justin Le @mstk
  #Haskell
+ [[http://r6.ca/blog/20170616T114546Z.html][Some random thoughts of an advanced haskeller]]. ~ Russell O’Connor #Haskell 
+ [[https://cdsmith.wordpress.com/2012/04/18/why-do-monads-matter][Why do monads matter?]] ~ C. Smith #Haskell
+ [[https://m.genbetadev.com/metodologias-de-programacion/test-automaticos-con-quickcheck-como-analizar-nuestro-codigo-en-busca-de-bugs][Test automáticos con QuickCheck ¿Cómo analizar nuestro código en busca de
  bugs?]] ~ Jose Juan #Programación #QuickCheck
+ [[http://ndmitchell.com/downloads/slides-drive-by_haskell_contributions-09_jun_2017.pdf][Drive-by Haskell contributions]]. ~ Neil Mitchell #Haskell
+ [[http://www.lama.univ-savoie.fr/~david/ftp/amphis.pdf][Peut-on faire des Mathématiques avec un ordinateur?]] ~ René David #Math #Logic
  #CompSci
+ [[http://www.lama.univ-savoie.fr/~david/ftp/amphi07.pdf][Peut-on avoir confiance en l’informatique?]] ~ René David et Christophe
  Raffalli #CompSci
+ [[https://repository.eafit.edu.co/bitstream/handle/10784/11464/Alejandro_CalleSaldiarriaga_2017.pdf][A set theory formalization in Agda]]. ~ A. Calle #ITP #Agda #Math #Logic 
+ [[http://jin.crypt.sg/files/subtyping.pdf][Subtyping: overview and implementation]]. ~ C. Jingwen #Haskell 
+ [[http://www.haskellforall.com/2017/06/dhall-is-now-template-engine.html][Dhall is now a template engine]]. ~ G. Gonzalez @GabrielG439 #Haskell 
+ [[http://kaygun.tumblr.com/post/161836727094/estimating-the-maximum-element-of-a-large-list][Estimating the maximum element of a large list]]. ~ A. Kaygun @Atabey_Kaygun
  #Algorithm #Lisp
+ [[https://ro-che.info/articles/2017-06-17-generic-unification][Generic unification]]. ~ R. Cheplyaka @shebang #Haskell 
+ [[https://arxiv.org/pdf/1706.05271v1][A Coq-based synthesis of Scala programs which are correct-by-construction]]. ~
  Y. El Bakouny, T. Crolard, D. Mezher #Coq #Scala
+ [[https://github.com/rampion/kinder-functor][kinder-functor: An alternate definition of Haskell's Functor
  typeclass]]. #Haskell
+ [[https://mmhaskell.com/blog/2017/6/19/profiling-in-haskell][How well does it work? Profiling in Haskell]]. ~ James Bowen @james_OWA
  #Haskell
+ [[http://elpais.com/elpais/2017/06/16/opinion/1497602599_425102.html][El futuro de la inteligencia artificial]]. ~ Geoffrey Hinton  #IA
+ [[https://www.fpcomplete.com/blog/2017/06/understanding-resourcet][Understanding ResourceT]]. ~ M. Snoyman @snoyberg #Haskell
+ [[http://blog.ch3m4.org/2012/03/09/programacion-ciencia-o-ingenieria-2/][Programación. ¿Ciencia o Ingeniería?]] ~ Chema Cortés @chemacortes
  #Programación
+ [[https://two-wrongs.com/on-competing-with-c-using-haskell][On competing with C using Haskell]]. ~ Two Wrongs #Haskell 
+ [[https://wiki.haskell.org/Humor/LearningCurve][The Haskell learning curve]]. #Haskell #Humor
+ [[http://kaygun.tumblr.com/post/162022456134][Generating random regular graphs]]. ~ Atabey Kaygun @Atabey_Kaygun #Common_Lisp
  #Math
+ [[http://kaygun.tumblr.com/post/162102634464/calculating-the-diameter-and-the-radius-of-a-graph][Calculating the diameter and the radius of a graph using tropic linear algebra]]. 
  ~ Atabey Kaygun @Atabey_Kaygun #Common_Lisp #Math
+ [[http://www.cl.cam.ac.uk/~lp15/Grants/Alexandria/Part-B2.pdf][Large-scale formal proof for the working mathematician (ALEXANDRIA)]]. ~
  L.C. Paulson #ITP #Math
+ [[http://www21.in.tum.de/teaching/FDS/SS17][Course: Functional data structures]]. ~ P. Lammich & T. Nipkow
  #FunctionalProgramming #IsabelleHOL #Algorithms
+ [[https://github.com/jtdaugherty/brick/blob/master/README.md][brick: A declarative terminal UI programming library written in Haskell]]. ~
  Jonathan Daugherty #Haskell
+ [[http://argumatronic.com/posts/2017-06-21-sapir-whorf.html][Love, monoids, and linguistic determinism]]. ~ J. Moronuki @argumatronic
  #Haskell
+ [[https://www.isa-afp.org/entries/Propositional_Proof_Systems.shtml][Propositional proof systems in Isabelle/HOL]]. ~ J. Michaelis & T. Nipkow
  #IsabelleHOL #Logic
+ [[https://mzabani.wordpress.com/2017/06/22/interfaces-and-typeclasses-number-apis-in-c-and-haskell][Interfaces and typeclasses: Number APIs in C# and Haskell]]. ~ Marcelo Zabani
  #Haskell
+ [[https://haskellweekly.news/issues/60.html][Haskell Weekly 60: News from the Haskell community (June 22 2017)]]. #Haskell 
+ [[http://mazzo.li/posts/customizable-data-types.html][Configurable data types]]. ~ Francesco Mazzoli #Haskell 
+ [[https://www.cis.upenn.edu/~jpaykin/papers/pz_linearity_monad_2017.pdf][The linearity monad]]. ~ J. Paykin & S. Zdancewic #Haskell
+ [[https://github.com/samtay/tetris][A terminal interface for Tetris]]. #Haskell
+ [[https://www.isa-afp.org/entries/Prpu_Maxflow.shtml][Formalizing push-relabel algorithms for computing the maximum flow in a network]].
  ~ P. Lammich & S.R. Sefidgar #IsabelleHOL 
+ [[https://openlibra.com/book/just-enough-r-learn-data-analysis-with-r-in-a-day][Just enough R: Learn data analysis with R in a day]]. ~ S. Raman #eBook #RStats
+ [[https://www.cambridge.org/core/services/aop-cambridge-core/content/view/78FBD5E1A3D1BCCB8E0D5B0C463C9FBC/S2050508617000014a.pdf/formal_proof_of_the_kepler_conjecture.pdf][A formal proof of the Kepler conjecture]]. Thomas Hales et als. #ITP
  #IsabelleHOL #HOL_Light #Math
+ [[http://events.techcast.com/bigtechday10/Garmisch-1345/?q=Garmisch-1345][Haxl: Making concurrency unreasonably easy]]. ~ Simon Marlow  #Haskell #Haxl 
+ [[http://www.strub.nu/biblio/pdf/conf-cpp-BernardBRS16.pdf][Formal proofs of transcendence for e and pi as an application of multivariate
  and symmetric polynomials]]. ~ S. Bernard et als.  #Coq
+ [[https://github.com/mrkgnao/noether][Noether: Highly polymorphic algebraic structures with custom deriving
  strategies]]. ~ Soham Chowdhury #Haskell #Math
+ [[https://ingenieriadesoftware.es/historia-de-la-programacion][Hay que empezar a enseñar historia de la programación]]. ~ Jordi Cabot 
+ [[http://math.bu.edu/people/aki/16.pdf][Set theory: from Cantor to Cohen]]. ~ A. Kanamori #Logic
+ [[https://www.engadget.com/2017/06/23/the-air-force-and-ibm-are-building-an-ai-supercomputer/][The Air Force and IBM are building an AI supercomputer]]. ~ A. Tarantola
+ [[http://www.michaelnielsen.org/ddi/lisp-as-the-maxwells-equations-of-software][Lisp as the Maxwell’s equations of software]]. ~ M. Nielsen #Lisp #CompSci 
+ [[https://www.johndcook.com/blog/applied-category-theory/][Applied category theory]]. ~ J.D. Cook
+ [[https://www.cs.ox.ac.uk/jeremy.gibbons/publications/delivery.pdf][Free delivery (functional pearl)]]. ~ J. Gibbons #Haskell
+ [[http://ozark.hendrix.edu/~yorgey/pub/twisted.pdf][How to twist pointers without breaking them]]. ~ S. Chauhan, P.P. Kurur &
  B.A. Yorgey #Haskell
+ [[https://www.cs.princeton.edu/~appel/vfa][Verified functional algorithms]]. ~ A.W. Appel #Coq #Algorithms 
+ [[http://www.ams.org/journals/bull/2017-54-03/S0273-0979-2016-01556-4/S0273-0979-2016-01556-4.pdf][Five stages of accepting constructive mathematics]]. ~ A. Bauer #Math #Logic
+ [[https://m42.github.io/blog/2016/09/26/matematicas-en-emacs][Matemáticas en Emacs]]. ~ M. Román #Emacs
+ [[http://www.microsiervos.com/archivo/ciencia/matematicas-vs-fisica.html][Matemáticas vs. física o viceversa (y quizá no tan «versus»)]]. ~@Alvy
+ [[http://www.scottaaronson.com/blog/?p=304][Ten signs a claimed mathematical breakthrough is wrong]]. ~ Scott Aaronson
  #Math 
+ [[http://elpais.com/elpais/2017/06/20/ciencia/1497952010_970191.html][(Dicen que) han demostrado la conjetura de Goldbach. Otra vez]]. ~ A. Córdoba
  #Matemáticas 
+ [[http://stringworld.ru/files/Nakahara_M._Geometry_topology_and_physics_2nd_ed..pdf][Geometry, topology and physics]]. ~ M. Nakahara #Math
+ [[https://github.com/snowleopard/alga-paper/releases/download/hs-submission/alga.pdf][Algebraic graphs with class (Functional pearl)]]. ~ A. Mokhov @andreymokhov
  #Haskell
+ [[https://github.com/snowleopard/alga-paper][A minimalistic, elegant and powerful approach to working with graphs in
  Haskell]]. ~ A. Mokhov @andreymokhov #Haskell
+ [[https://github.com/snowleopard/alga-theory][The theory of algebraic graphs formalised in Agda]]. ~ A. Mokhov @andreymokhov
  #Agda
+ [[https://lispcookbook.github.io/cl-cookbook][The Common Lisp cookbook]] #eBook #CommonLisp
+ [[https://academic.oup.com/comjnl/article-pdf/7/4/278/1013051/7-4-278.pdf][Lists and why they are useful]] - M. V. Wilkes #Lisp

** Julio 2017

+ [[http://arxiv.org/abs/1706.08605][Developing bug-free machine learning systems with formal mathematics]]. ~
  D. Selsam, P. Liang, D.L. Dill #LeanTP
+ [[https://medium.com/towards-data-science/functional-programming-for-deep-learning-bc7b80e347e9][Functional programming for deep learning]]. ~ Joyce Xu #FuncionalProgramming
  #DeepLearning
+ [[http://keera.co.uk/blog/2017/06/01/haskell-android-ios][Haskell on Android and iOS]]. ~ Keera Studios #Haskell 
+ [[http://revue.sesamath.net/IMG/pdf/index.pdf][Maxima & GnuPlot (Logiciel de calcul formel & logiciel de tracé de
  courbes)]]. ~ T. Castanet #Maxima #GnuPlot #Math
+ [[http://revue.sesamath.net/spip.php?article1014][Utiliser Maxima pour préparer le travail en classe]]. ~ T. Castanet #Maxima
  #GnuPlot #Math
+ [[https://speakerdeck.com/paf31/an-overview-of-the-purescript-type-system][An overview of the PureScript type system]]. ~ Phil Freeman @paf31 #PureScript
  #Haskell
+ [[https://deque.blog/2017/07/01/idris-bowling-kata/amp/][Idris dependent typing challenge: Bowling Kata]]. ~ Quentin Duval @quduval
  #Haskell #Idris
+ [[http://irreal.org/blog/?p=6396][Tutorial on Ivy, Counsel, and Swiper]]. ~ Irreal #Emacs
+ [[http://teh.id.au/posts/2017/06/30/notes-on-fusion/index.html][Notes on fusion]]. ~ Tim Humphries @thumphriees #Haskell
+ [[http://teh.id.au/posts/2017/05/10/lambdajam-slides/slides.pdf][Continuations, all the way down]]. ~ Tim Humphries @thumphriees #Haskell
+ [[http://jelv.is/blog/Generating-Mazes-with-Inductive-Graphs][Generating mazes with inductive graphs]]. ~ T. Jelvis @tikhonjelvis #Haskell
+ [[http://jelv.is/talks/probability-monad/slides.html][Probability monad]]. ~ T. Jelvis @tikhonjelvis #Haskell
+ [[https://rkrishnan.org/posts/2017-06-20-typesafe-modulus-in-haskell.html][Typesafe modular arithmetic in Haskell]]. ~ R. Muthukrishnan #Haskell
+ [[http://www21.in.tum.de/~nipkow/pubs/itp16.pdf][Automatic functional correctness proofs for functional search trees]]. ~
  T. Nipkow #IsabelleHOL #Algorithms
+ [[https://hal.inria.fr/inria-00202831/document][SAT-MICRO: petit mais costaud!]] ~ S. Conchon, J. Kanig, S. Lescuyer #Logic
  #OCaml
+ [[https://hackage.haskell.org/package/sat-micro-hs][Haskell implementation of the minimal OCaml solver described in the paper
  "SAT-MICRO: petit mais costaud!"]] ~ D. Bueno #Logic #Haskell
+ [[https://tech.io/playgrounds/500/advanced-python-features][Advanced Python features]]. #Python
+ [[https://www.youtube.com/channel/UCDe6N9R7U-RYWA57wzJQ2SQ][OPLSS2017: The Oregon Programming Languages Summer School]]. [Videos]
  #Programming
+ [[https://github.com/JeffreyBenjaminBrown/play/blob/master/_not_music/jbrownson_tictactoe/ai%2Cminimax.hs][A minimax AI for deterministic games, in 47 lines of Haskell]]. #Haskell #AI
  #Games
+ [[https://github.com/meiersi/HaskellerZ][Notes and files from HaskellerZ meetups]]. #Haskell 
+ [[http://www.doc.ic.ac.uk/~shm/Papers/watlarge.pdf][Can ILP be applied to large dataset?]] ~ H. Watanabe, S. Muggleton #ILP
  #BigData
+ [[https://www.youtube.com/watch?v=cIX3WVO48RY][Functional programming and proving in Isabelle/HOL]]. ~ Andreas Lochbihler
  [Video] #IsabelleHOL
+ [[https://mmhaskell.com/blog/2017/6/21/graphing-it-out][Graphing it Out]]. ~ James Bowen @james_OWA #Haskell #FGL
+ [[http://blog.koalite.com/2017/07/de-monos-melanesios-y-desarrollo-de-software/][De monos, melanesios y desarrollo de software]]. ~ Juan María Hernández @gulnor
+ [[https://www.microsoft.com/en-us/research/wp-content/uploads/1987/01/slpj-book-1987-small.pdf][The implementation of functional programming languages]]. ~ Simon Peyton Jones
  #eBook 
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_5.pdf][Functional baby talk: Analysis of code fragments from novice Haskell  programmers]]. ~ J. Singer, B. Archibald #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_1.pdf][Vector programming using structural recursion (an introduction to vectors for beginners)]]. ~ M.T. Morazán #Racket
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_2.pdf][Using Elm to introduce algebraic thinking to K-8 students]]. ~ C. d’Alves et
  als. #Elm
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_7.pdf][Overcoming non distributivity: A case study in functional programming]]. ~
  J.C. Saenz, M. Stannett #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Slides/JoSpresentation.pdf][Teaching Functional Programming should start earlier!]] ~ J. Sharrad #Teaching
  #Haskell
+ [[http://adam.chlipala.net/theses/andreser.pdf][Crafting certified elliptic curve cryptography implementations in Coq]]. ~
  A. Erbsen #MsC_Thesis #Coq #Math
+ [[http://kaygun.tumblr.com/post/162561203929 ][Kaprekar sequence]]. ~ Atabey Kaygun @Atabey_Kaygun #Common_Lisp #Math 
+ [[http://kaygun.tumblr.com/post/162485266314][Lattice of Dyck Words]]. ~ Atabey Kaygun @Atabey_Kaygun #Common_Lisp #Math 
+ [[https://arxiv.org/pdf/1706.09248][Logic programming for an introductory computer science course for high school students]]. ~ T. Yuen, M. Reyes, Y. Zhang #Teaching #Logic_Programming
+ [[https://medium.com/@akshay2000/haskell-whatsapp-and-romance-b5a9d0ccbebc][Haskell, WhatsApp and romance]]. ~ Akshay Zade @akshay4000 #Haskell
+ [[http://www.mpi-inf.mpg.de/fileadmin/inf/rg1/Documents/fleury_master_thesis.pdf][Formalisation of ground inference systems in a proof assistant]]. ~ M. Fleury
  #Msc_Thesis #IsabelleHOL #Logic
+ [[http://www.newton.ac.uk/files/seminar/20170710143015301-1003173.pptx][Proof assistants: from symbolic logic to real mathematics?]] ~ L. Paulson #ITP
  #ATP #Math
+ [[http://www.newton.ac.uk/files/seminar/20170706110012002-1003188.pdf][Industrial use of a mechanical theorem prover]]. ~ JS. Moore #ATP #ITP #ACL2
+ [[http://www.newton.ac.uk/files/seminar/20170626110012002-1003182.pdf][The Big Proof agenda for mechanizing mathematical discourse]]. ~ N. Shankar
  #Logic #Math #ITP
+ [[https://arxiv.org/pdf/1706.05851][Generic approach to certified static checking of module-like constructs]]. ~
  J. Belyakova #Coq
+ [[https://wesharethis.com/2017/07/05/resurgence-functional-programming/][The resurgence of functional programming]]. ~ Wesharethis #Haskell #Erlang
  #Elixir #Scala #Clojure #Fsharp
+ [[http://www.dcc.fc.up.pt/~pbv/compcheck/compcheck.pdf][Verifying a simple compiler using property-based random testing]]. ~
  P. Vasconcelos [[http://www.dcc.fc.up.pt/~pbv/compcheck][Code]] #Haskell
+ [[https://arxiv.org/pdf/1707.00024][A formalized general theory of syntax with bindings]]. ~ L. Gheri, A. Popescu
  #IsabelleHOL
+ [[http://www.newton.ac.uk/files/seminar/20170629110012002-1003186.pdf][The Lean theorem prover]]. ~ Jeremy Avigad #ITP #LeanTP #Math #Logic
+ [[http://momigliano.di.unimi.it/papers/sefm.pdf][Validating the meta-theory of programming languages]]. ~ G. Fachini,
  A. Momigliano #Haskell
+ [[https://tech.channable.com/posts/2017-07-06-introducing-vaultenv-keeping-your-secrets-safe-with-vault-and-haskell.html][Introducing Vaultenv: Keeping your secrets secure with Vault and Haskell]]. ~
  L. Duijvesteijn #Haskell
+ [[http://informatica.blogs.uoc.edu/2017/07/06/el-perfil-de-un-data-scientist][El perfil de un data scientist]]. ~ Jordi Casas @jcasasr #DataScience
+ [[http://icidasset.com/writings/minimize-flaws][How do we use (typed) functional programming to minimize our flaws]]. ~ Steven
  Vandevelde @icidasset #Haskell #Elm
+ [[http://blog.ielliott.io/continuations-from-the-ground-up/][Continuations from the ground up]]. ~ Isaac Elliott #Haskell
+ [[https://www.isa-afp.org/entries/CRDT.shtml][A framework for establishing Strong Eventual Consistency for Conflict-free
  Replicated Datatypes]]. ~ V.B.F. Gomes et als. #IsabelleHOL #AFP
+ [[http://kaygun.tumblr.com/post/162692854744][Some Hasse diagrams]]. ~ @Atabey_Kaygun #CommonLisp #Math
+ [[http://www21.in.tum.de/~lammich/pub/cade2017.pdf][Efficient verified (UN)SAT certificate checking]]. ~ P. Lammich #IsabelleHOL
  #Logic #SAT
+ [[http://www.businessinsider.com/oxford-university-ai-startup-diffblue-has-raised-17-million-in-series-a-funding-2017-6][An Oxford University artificial intelligence startup has raised £17 million to check code for errors]]. ~ Shona Ghosh
+ [[http://www.diffblue.com/about][DiffBlue: a world leader in AI that understands code]]. 
+ [[http://irreal.org/blog/?p=6415][An Emacs tutorial series]]. ~ Irreal  #Emacs
+ [[http://wesscholar.wesleyan.edu/cgi/viewcontent.cgi?article=2825&context=etd_hon_theses][Towards a formal verification of Courcelle’s theorem]]. ~ E. Black #ITP #Agda
+ [[https://github.com/mgmacias95/criptografia_y_computacion][Prácticas de la asignatura "Criptografía y computación"]] ~ Marta Gómez
  @Mrs_DarkDonado #Haskell
+ [[https://www.mpi-sws.org/~dreyer/papers/rustbelt/paper.pdf][RustBelt: Securing the foundations of the Rust programming language]]. ~
  R. Jung et als. #Rust #Coq
+ [[https://www.fpcomplete.com/blog/2017/07/iterators-streams-rust-haskell][Iterators and streams in Rust and Haskell]]. ~ M. Snoyman @snoyberg #Rust
  #Haskell
+ [[https://nikivazou.github.io/static/Haskell17/a-tale.pdf][A tale of two provers (Verifying monoidal string matching in Liquid Haskell
  and Coq)]]. ~ Niki Vazou @nikivazou #Haskell #Coq
+ [[http://www.cs.swan.ac.uk/~csetzer/articles/coalp2017SetzerIgriedTraceStableFailuresSemantics.pdf][Trace and stable failures semantics for CSP-Agda]]. ~ B. Igried & A: Setzer
  #Agda
+ [[https://www.rayskell.com/curso-haskell][Curso básico de Haskell en español]].  #Haskell
+ [[https://www.rayskell.com/instalar-haskell-platform][Instalación de  Haskell-Platform]]. ~ Rayskell [[https://youtu.be/GP0DUyj6oA4][Vídeo]] #Haskell 
+ [[https://youtu.be/NPTOgeuKMMs][Introducción y primeros pasos con Haskell]]. ~ Rayskell #Haskell  
+ [[https://www.rayskell.com/lambda-calculo][El cálculo lambda]]. ~ Rayskell #Haskell  
+ [[https://www.rayskell.com/tipos-clases][Tipos y clases de tipos]]. ~ Rayskell #Haskell  
+ [[https://www.rayskell.com/tutorial-regresion-lineal][Regresión lineal con Haskell]]. ~ Rayskell [[https://youtu.be/CiFlummqF8w][Vídeo]]  #Haskell
+ [[https://terrytao.wordpress.com/2017/07/07/what-are-some-useful-but-little-known-features-of-the-tools-used-in-professional-mathematics/amp][What are some useful, but little-known, features of the tools used in
  professional mathematics?]] ~ Terence Tao #Math
+ [[http://consequently.org/news/2017/typesetting-flow-graphs][Typesetting flow graphs with Tikz]]. ~ Greg Restall @consequently #LaTeX
+ [[http://momigliano.di.unimi.it/papers/bhowe.pdf][A case-study in programming coinductive proofs: Howe's method]]. ~
  D. Thibodeau, A. Momigliano & B. Pientka #ITP #Beluga
+ [[https://mmhaskell.com/blog/2017/7/10/playing-match-maker][Playing match maker]]. ~ James Bowen @james_OWA #Haskell
+ [[http://socialmediaeninvestigacion.com/sci-hub-repositorio-pirata-ciencia/?platform=hootsuite][¿Por qué triunfa Sci-hub si es el mayor repositorio pirata de ciencia a nivel mundial?]] ~ Lydia Gil
+ [[https://www21.in.tum.de/teaching/proof21/SS17/5-final.pdf][Isabelle/HOL demo]]. ~ Sebastian Neubauer #IsabelleHOL
+ [[https://arxiv.org/pdf/1706.08007][Local refinement typing]]. ~ B. Cosman, R. Jhala #Haskell #Verification #SMT
  #LiquidHaskell
+ [[http://lamiradadelreplicante.com/2017/07/06/aims-desktop-distro-gnulinux-para-matematicos][AIMS Desktop: distro GNU/Linux para matemáticos]]. ~ MiradaDelReplicante
  @tannhausser #Linux #Matemáticas
+ [[http://www.cs.jhu.edu/~roe/memocode17.pdf][Using the Coq theorem prover to verify complex data structure invariants]]. ~
  K. Roe & S. Smith #ITP #Coq
+ [[https://www.schoolofhaskell.com/user/fumieval/encoding-objects][Encoding objects]]. ~ F. Kinoshita #Haskell
+ [[http://metameso.org/ar/farm-2017.pdf][Modelling the way mathematics is actually done]]. ~ J. Corneli & R. Puzio #AI
  #Math #MKM
+ [[https://github.com/ocramz/sparse-linear-algebra][sparse-linear-algebra: Numerical computation in native Haskell]]. ~ Marco Zocca
  #Haskell #Math
+ [[https://e.xtendo.org/haskell/hpack][Use Hpack - e.xtendo.org]] #Haskell
+ [[https://interstices.info/jcms/p_93575/ordonner-les-ordres-un-treillis-sur-les-ordres-partiels][Ordonner les ordres : un treillis sur les ordres partiels]]. ~ V. Pons
+ [[https://www.reddit.com/r/haskell/comments/6mr8bi/cheatsheet_rank_2_types_with_typeclasses/][Cheatsheet: Rank 2 types with typeclasses]]. ~ Jeremy Mikkola @silenceofnight
  #Haskell
+ [[http://web.cecs.pdx.edu/~sheard/course/LogicAndProgLang][Course: Mathematical logic and programming languages]]. ~ T. Sheard #Logic #Haskell
+ [[http://web.cecs.pdx.edu/~hook/logicw11/pdf/outline.pdf][Logic via foundational algorithms]]. ~ J. Hook & T. Sheard #eBook #Logic
  #Haskell
+ [[http://web.cecs.pdx.edu/~hook/logicw11/lectures/FiniteSets.pdf][Notes on the Finite Set module]]. ~ J. Hook & T. Sheard #Haskell #Logic 
+ [[http://web.cecs.pdx.edu/~hook/logicw11][Course: Mathematical logic via foundational algorithms]]. ~ J. Hook & T. Sheard
  #Logic #Haskell
+ [[http://math.mit.edu/~bzhan/fol.pdf][Formalization of the fundamental group in untyped set theory using auto2]]. ~
   B. Zhan #ITP #IsabelleHOL #Logic #Math
+ [[https://codewords.recurse.com/issues/three/algebra-and-calculus-of-algebraic-data-types][The algebra (and calculus!) of algebraic data types]]. ~ J. Burget #Haskell
+ [[http://yannesposito.com/Scratch/en/blog/Haskell-Tutorials--a-tutorial][Haskell tutorials, a tutorial]]. ~  Yann Esposito @yogsototh #Haskell
+ [[http://blog.rcook.org/blog/2016/doctest-discover-stack][Using doctest-discover with Stack]]. ~ Richard Cook @richardthepeace #Haskell
+ [[https://www.isa-afp.org/entries/HOLCF-Prelude.shtml][Formalization of a large part of Haskell's standard prelude in
  Isabelle/HOLCF]]. ~ J. Breitner et als. #IsabelleHOL #Haskell
+ [[http://www.cse.chalmers.se/~patrikj/papers/Algehed_Jansson_VisPar_preprint_2017-06-09.pdf][VisPar: Visualising dataflow graphs from the Par monad]]. ~ M. Algehed &
  P. Jansson #Haskell
+ [[https://www.isa-afp.org/entries/Name_Carrying_Type_Inference.shtml][Verified metatheory and type inference for a name-carrying simply-typed
  lambda calculus]]. ~ M. Rawson #ITP #IsabelleHOL
+ [[http://www.haskellforall.com/2017/07/demistifying-haskell-assignment.html][Demystifying Haskell assignment]]. ~ G. Gonzalez @GabrielG439 #Haskell 
+ [[http://www.logicmatters.net/2017/07/15/the-languages-of-first-order-logic-1/][The language(s) of first-order logic #1]]. ~ Peter Smith #Logic
+ [[http://blog.sigfpe.com/2017/07/self-referential-logic-via-self.html][Self-referential logic via self-referential circuits]]. ~ Dan Piponi @sigfpe 
+ [[https://github.com/nasa/pvslib][NASA PVS Library of Formal Developments]]. #PVS
+ [[http://page.mi.fu-berlin.de/scravy/realworldhaskell/materialien/monad-transformers-step-by-step.pdf][Monad transformers step by step]]. ~ M. Grabmüller #Haskell
+ [[https://www.isa-afp.org/entries/Minkowskis_Theorem.shtml][Minkowski's theorem in Isabelle/HOL]]. ~ M. Eberl #ITP #IsabelleHOL #Math
+ [[https://mmhaskell.com/blog/2017/7/17/cleaning-up-our-projects-with-hpack][Cleaning up our projects with Hpack!]] ~ James Bowen @james_OWA #Haskell
+ [[https://www.technologyreview.com/s/608248/biased-algorithms-are-everywhere-and-no-one-seems-to-care][Biased algorithms are everywhere, and no one seems to care]]. ~ Will Knight
+ [[https://arxiv.org/pdf/1707.04894][Further formalization of the process algebra CCS in HOL4]]. ~ Chun Tian #ITP
  #HOL4
+ [[http://www.tweag.io/posts/2017-07-10-haskell-r-best-both-worlds.html][R and Haskell: best of both worlds with HaskellR]]. ~ Sigrid Keydana #Haskell
  #RStats #HaskellIR
+ [[https://tamarin-prover.github.io][Tamarin prover: a powerful tool for the symbolic modeling and analysis of
  security protocols]]. #Haskell #Tamarin
+ [[https://www.wireguard.com/papers/wireguard-formal-verification.pdf][Formal verification of the WireGuard protocol]]. ~ J.A. Donenfeld & K. Milner
  #Haskell #Tamarin #Formal_verification
+ [[https://www.cs.purdue.edu/homes/bendy/Fiat/FiatByteString.pdf][Using Coq to write fast and correct Haskell]]. ~ J. Wiegley & B. Delaware
  #Haskell #Coq
+ [[https://medium.com/ventre-tech/haskells-triangle-or-more-fun-with-recursion-9350155689ac][Pascal's triangle in Haskell and JavaScript: or, more fun with recursion!]] ~
  T. Cothran @thomas_cothran #Haskell #JavaScript
+ [[https://arxiv.org/pdf/1707.01747][Verifying strong eventual consistency in distributed systems]]. ~ V.B.F. Gomes
  et als. #ITP #IsabelleHOL
+ [[https://github.com/jwbuurlage/category-theory-programmers/raw/master/doc/categories_for_programmers.pdf][Categories and Haskell (An introduction to the mathematics behind modern
  functional programming)]]. ~ Jan-Willem Buurlage #Haskell #Math
+ [[http://www.math.kit.edu/iag3/~wellen/media/diss.pdf][Formalizing Cartan geometry in modal homotopy type theory]]. ~ F. Wellen #ITP
  #Agda #Math #HoTT
+ [[https://arxiv.org/pdf/1706.10269][A formalization of convex polyhedra based on the simplex method]]. ~
  X. Allamigeon & R.D. Katz #ITP #Coq #Math
+ [[https://www.twilio.com/blog/2017/07/setting-up-your-haskell-developer-environment-with-twilio.html][Get started with sending SMS in Haskell]]. ~ Lizzie Siegle @lizziepik #Haskell
+ [[http://teh.id.au/posts/2017/07/15/state-machine-testing/index.html][State machine testing with Hedgehog]]. ~ Tim Humphries @thumphriees #Haskell
+ [[https://github.com/adomokos/haskell_katas][Simple exercises in Haskell, using HSpec]]. ~ Attila Domokos #Haskell
+ [[https://vincenthz.github.io/posts/haskell/2017-07-20-ghc-stack.html][Compiling GHC with Stack for Stack]]. ~ Vincent Hanquez #Haskell 
+ [[https://hakonrossebo.github.io/functional-programming-babelfish/][Functional programming Babelfish]]. ~ Håkon Rossebø #Purescript #Haskell #Elm
  #Fsharp
+ [[http://www.cs.utexas.edu/~marijn/publications/ACL2-ARCADE.pdf][Industrial use of ACL2: applications, achievements, challenges, and directions]]. ~ J S. Moore & M.J.H. Heule #ACL2
+ [[https://github.com/M42/mikrokosmos][Mikrokosmos: an untyped lambda calculus interpreter]]. ~ Mario Román @mroman42
  #Haskell #Logic 
+ [[http://fastrelax.gforge.inria.fr/files/2017/rouhling.pdf][A formal proof in Coq of LaSalle's invariance principle]]. ~ C. Cohen &
  D. Rouhling ([[https://github.com/drouhling/LaSalle][Code]]) #ITP #Coq
+ [[https://pp.info.uni-karlsruhe.de/uploads/publikationen/ullrich16masterarbeit.pdf][Simple verification of Rust programs via functional purification]]. ~
  S. Ullrich #ITP #LeanTP #Rust  
+ [[http://www.inf.ed.ac.uk/teaching/courses/ar][Course: Automated reasoning (2016-17)]]. ~ J. Fleuriot #AR #Logic #ITP
  #IsabelleHOL
+ [[http://www.brics.dk/RS/97/18/BRICS-RS-97-18.pdf][How to believe a machine-checked proof]]. ~ R. Pollack (1997). #ATP #ITP
+ [[http://logitext.mit.edu/main][Logitext: an educational proof assistant for first-order classical logic using the sequent calculus]]. #Logic #Coq #Haskell
+ [[http://blog.ezyang.com/2012/05/what-happens-when-you-mix-three-research-programming-languages-together][What happens when you mix three research programming languages together]]. ~
  E.Z. Yang #Coq #Haskell
+ [[https://hal.inria.fr/hal-01559073/document][Equivalences for free! (Univalent parametricity for effective transport)]]. ~
  N. Tabareau et als. #ITP #Coq
+ [[https://infoscience.epfl.ch/record/229878/files/simplicitly_1.pdf][Simplicitly (Foundations and applications of implicit function types)]]. ~
  M. Odersky et als. #Scala
+ [[https://www.fpcomplete.com/blog/2017/07/the-rio-monad][The RIO monad]]. ~ M. Snoyman @snoyberg #Haskell
+ [[http://www.fast.ai/2017/07/17/num-lin-alg][New fast.ai course: Computational linear algebra]]. ~ Rachel Thomas #Python
  #Math
+ [[http://kaygun.tumblr.com/post/163235120739][Steenrod-Milnor and tournament sequences]]. ~ @Atabey_Kaygun #CommonLisp #Math
+ [[https://www.isa-afp.org/entries/Decl_Sem_Fun_PL.shtml][Declarative semantics for functional languages in Isabelle/HOL]]. ~ Jeremy Siek
  @jeremysiek #IsabelleHOL
+ [[https://arxiv.org/pdf/1707.03762][Declarative semantics for functional languages: compositional, extensional,
  and elementary]]. ~ Jeremy G. Siek @jeremysiek
+ [[http://gallium.inria.fr/~xleroy/courses/DSSS-2017][Course: The formal verification of compilers]]. ~ Xavier Leroy #Coq #DSSS17
+ [[https://jeremykun.com/2017/07/24/boolean-logic-in-quadratic-polynomials][Boolean logic in polynomials]]. ~ Jeremy Kun | Math ∩ Programming #Logic #Math
+ [[https://arxiv.org/pdf/1707.02115][A verified certificate checker for floating-point error bounds]]. ~ H Becker, E
  Darulova, MO Myreen #ITP #Coq #HOL4
+ [[https://deepspec.org/event/dsss17/lecture_zdancewic.html][Vellvm: Verifying the LLVM]]. ~ Steve Zdancewic #Coq #DSSS17 
+ [[https://www.reddit.com/r/haskell/comments/6p2x0p/list_of_companies_that_use_haskell/][List of companies that use Haskell]]. #Haskell
+ [[https://cacm.acm.org/magazines/2017/8/219596-hacker-proof-coding/fulltext][Hacker-proof coding]]. ~ Esther Shein | Communications of the ACM   
+ [[https://cacm.acm.org/magazines/2017/8/219605-data-science/fulltext][Data science: challenges and directions]]. ~ Longbing Cao | Communications of
  the ACM #DataScience
+ [[https://observatoriosociallacaixa.org/es/-/la-ciencia-nunca-se-penso-para-el-mercado-pero-hoy-es-una-mercancia][«La ciencia nunca se pensó para el mercado, pero hoy es una mercancía»]] ~
  Andrea Saltelli
+ [[https://arxiv.org/pdf/1606.02941][A proof strategy language and proof script generation for Isabelle/HOL]]. ~
  Y. Nagashima, R. Kumar #IsabelleHOL
+ [[https://gist.github.com/CMCDragonkai/b203769c588caddf8cb051529339635c][Existential types in Haskell]]. ~ Roger Qiu #Haskell
+ [[https://homes.cs.washington.edu/~bodik/ucb/cs294fa12.html][Course: Program synthesis for everyone]]. ~ R. Bodik, E. Torlak 
+ [[https://elpais.com/elpais/2017/07/26/el_aleph/1501085305_943289.amp.html][Cantor, el Aleph y los distintos infinitos]]. ~ M.A. Morales | El Aleph
  #Matemáticas
+ [[https://www.youtube.com/channel/UC5yB0ZRgc4A99ttkwer-dDw/videos?shelf_id=0&view=0&sort=dd][DeepSpec Summer School videos]]. #DSSS17 #Coq
+ [[https://github.com/DeepSpec/dsss17][Lecture material for DeepSpec Summer School 2017]]. #DSSS17 #Coq
+ [[https://hal.archives-ouvertes.fr/hal-01558252/document][Toward certification for free!: correct-by-construction ML oracles with
  polymorphic LCF style]]. ~ S. Boulmé, A. Maréchal #Coq
+ [[https://ruor.uottawa.ca/bitstream/10393/36354/3/Vinogradova_Polina_2017_thesis.pdf][Formalizing abstract computability: Turing categories in Coq]]. ~
  P. Vinogradova #PhD_Thesis #Coq
+ [[http://www-sop.inria.fr/marelle/lindemann][Formal proof of the Lindemann-Weierstrass theorem]]. ~ S. Bernard. #Coq #Math 
+ [[https://web.math.unifi.it/~maggesi/papers/gabrielli-maggesi-quaternions-2017.pdf][Formalizing basic quaternionic analysis]]. ~ A. Gabrielli, M. Maggesi
  #HOL_Light #Math
+ [[http://www.tweag.io/posts/2017-07-27-streaming-programs.html][Streaming programs without lazyness: a short primer]]. ~ F. Domínguez &
  M. Boespflug #Haskell
+ [[https://github.com/benjaminselfridge/logix][Logic Explorer: interactive proof assistant for sequent calculi]]. ~ Ben
  Selfridge #Haskell #Logic
+ [[https://github.com/benjaminselfridge/propcheck][Proof checker for propositional logic]]. ~ Ben Selfridge #Haskell #Logic 
+ [[http://www.mchaver.com/posts/2017-07-12-lens-tutorial-1.html][Lens tutorial - SimpleLens]]. ~ mchaver #Haskell 
+ [[https://www.ethz.ch/content/dam/ethz/special-interest/infk/inst-infsec/information-security-group-dam/people/andreloc/lochbihler2017itp.pdf][Effect polymorphism in higher-order logic (proof pearl)]]. ~ A. Lochbihler
  #IsabelleHOL
+ [[https://functor.tokyo/blog/2017-07-28-ghc-warnings-you-should-enable][GHC warnings you should use in addition to -Wall]]. ~ Dennis Gosnell
  @cdepillabout #Haskell
+ [[http://www.joachim-breitner.de/blog/727-How_is_coinduction_the_dual_of_induction][How is coinduction the dual of induction?]] ~ J. Breitner @nomeata  #Haskell
+ [[https://github.com/wenkokke/sf][Port of Software Foundations to Agda]]. ~ Wen Kokke & Philip Wadler
  @PhilipWadler #Agda
+ [[http://www.joachim-breitner.de/blog/726-Coinduction_in_Coq_and_Isabelle][Coinduction in Coq and Isabelle]]. ~ J. Breitner @nomeata #Coq #IsabelleHOL
+ [[https://github.com/wenkokke/EnumeratingTheRationals][Formalization of the functional pearl "Enumerating the rationals" by Gibbons,
  Lester and Bird in Coq]]. ~ Wen Kokke #Coq #Math
+ [[https://www.arrdem.com/2017/07/27/intermediate-abstraction][Intermediate abstraction]]. ~ Reid McKenzie @arrdem #Programming #Clojure
+ [[http://www.mathematik.tu-darmstadt.de/~buchholtz/leanhott.pdf][Homotopy Type Theory in Lean]]. ~ U. Buchholtz, F. van Doorn, J. von Raumer
  #HoTT #LeanTP
+ [[https://www.seas.upenn.edu/~rrand/qwire_practice.pdf][Qwire practice: Formal verification of quantum circuits in Coq]]. ~ R. Rand,
  J. Paykin, S. Zdancewic #Coq
+ [[https://codygman.github.io/posts/2017-07-30-faster-command-line-tools-with-haskell.html][Faster command line tools with Haskell]]. ~ Cody Goodman @codygman #Haskell
+ [[http://francis.naukas.com/2017/07/29/la-demostracion-matematica-mas-larga][La demostración matemática más larga]]. ~ F.R. Villatoro @emulenews
  #Matemáticas #Computación
+ [[https://www.fpcomplete.com/blog/2017/07/to-void-or-to-void][To Void or to void]]. ~ M. Snoyman @snoyberg #Haskell
+ [[http://gottwurfelt.com/2017/07/30/the-riddle-of-the-number-chain/][The riddle of the number chain]]. ~ Michael Lugo @gottwurfelt #Math
+ [[http://lambda.jstolarek.com/2017/07/deepspec-summer-school-2017-a-summary/][DeepSpec Summer School 2017: a summary]]. ~ Jan Stolarek #Formal_verification
  #DSSS17

** Agosto 2017

+ [[https://www.isa-afp.org/entries/DynamicArchitectures.shtml][Dynamic architectures in Isabelle/HOL]]. ~ Diego Marmsoler #IsabelleHOL #AFP
+ [[http://logicaltypes.blogspot.com.es/2017/07/1haskelladay-july-2017-problems-and.html][July 2017 1HaskellADay problems and solutions]]. ~ @geophf | Typed Logic
  #Haskell #Haskell #1HaskellADay
+ [[https://motherboard.vice.com/en_us/article/padnvm/200-terabyte-proof-demonstrates-the-potential-of-brute-force-math][200 terabyte proof demonstrates the potential of brute-force math]]. ~ M. Byrne
  #Math #CompSci
+ [[https://github.com/abingham/outline-toc.el][Table-of-contents sidebar for Emacs]]. ~ Austin Bingham #Emacs
+ [[https://www.isa-afp.org/entries/Stewart_Apollonius.shtml][Stewart's theorem and Apollonius' theorem in Isabelle/HOL]]. ~ Lukas Bulwahn
  #IsabelleHOL #Math #AFP
+ [[http://arxiv.org/abs/1707.09616][Owl: A general-purpose numerical library in OCaml]]. ~ L. Wang #OCaml #Math
+ [[https://deepspec.org/event/dsss17/schedule.html][The DeepSpec Summer School on Verified Systems (Schedule)]]. #DSSS17 #Coq
+ [[http://bit.ly/2f7n1SW][A vision for automated deduction rooted in the connection method]]. ~ Wolfgang
  Bibel #ATP
+ [[https://github.com/aimyskk/lib-competitive][A library for competitive programming in Haskell]]. #Haskell
+ [[http://kaygun.tumblr.com/post/163641158789][Transitive closure of a directed graph or a relation]]. ~ @Atabey_Kaygun #CommonLisp #Clojure #Math
+ [[https://pragprog.com/magazines/2012-08/thinking-functionally-with-haskell][Thinking functionally with Haskell: A deep dive into the functional pool]]. ~
  Paul Callaghan @paulcc_two #Haskell
+ [[http://www.andrew.cmu.edu/user/avigad/Students/wu_thesis.pdf][A formally verified proof of Kruskal’s tree theorem in Lean]]. ~ M. Wu
  #MsC_Thesis #ITP #LeanTP
+ [[https://pragprog.com/magazines/2012-09/thinking-functionally-with-haskell][Thinking functionally with Haskell: Types? tests? We need a new word]]. ~ Paul
  Callaghan @paulcc_two #Haskell
+ [[https://leanprover.github.io/logic_and_proof][Logic and proof]]. ~ J. Avigad, R.Y. Lewis, F. van Doorn #Logic #ITP #LeanTP  
+ [[https://en.wikipedia.org/wiki/Computer-assisted_proof][Computer-assisted proof]]. ~ Wikipedia #Math #CompSci
+ [[https://arxiv.org/pdf/1302.2898][Mathematics in the age of the Turing machine]]: a survey of mathematical proofs
  that rely on computer calculations and formal proofs. ~ T. Hales
+ [[http://www.andrew.cmu.edu/user/avigad/Talks/stanford_formal_methods.pdf][Formal methods in mathematics and the Lean theorem prover]]. ~ J. Avigad #Logic
  #Math #ITP #LeanTP
+ [[https://beckyleamorrisphilosophy.files.wordpress.com/2015/10/reviseddissertation.pdf][Appropriate steps (A theory of motivated proofs)]]. ~ R. Morris #PhD_Thesis
  #Math #Logic
+ [[http://www.cs.cmu.edu/~sicung/papers/MS_thesis.pdf][Counting zeros over finite fields using Gröbner bases]]. ~ S. Gao #MS_Thesis
  #Math
+ [[https://github.com/fniessen/refcard-org-mode][Org mode syntax reference card]]. ~ Fabrice Niessen #Emacs
+ [[https://github.com/chrisdone/wish][wish: A trivial web browser written in Haskell]]. ~ Chris Done @christopherdone
  #Haskell
+ [[http://oa.upm.es/47203/1/TFG_INES_BLAZQUEZ_BALLESTEROS.pdf][Implementación de un algoritmo de búsqueda aleatoria en programación lógica]]. ~ I. Blázquez #TFG #Prolog
+ [[https://www.lix.polytechnique.fr/Labo/Dale.Miller/papers/pbt-draft.pdf][Property-based testing via proof reconstruction: work-in-progress]]. ~ R
  Blanco, D Miller, A Momigliano #Prolog
+ [[http://dl.acm.org/citation.cfm?id=3107239][The science of brute force (Mathematics solves problems by pen and paper. CS
  helps us to go far beyond that)]] ~ MJH Heule, O. Kullmann
+ [[https://idus.us.es/xmlui/bitstream/handle/11441/63139/Paluzo%2520Hidalgo%2520Eduardo%2520TFG.pdf][Lógica de primer orden en Haskell]]. ~ E. Paluzo #TFG #Haskell #Lógica
+ [[https://idus.us.es/xmlui/bitstream/handle/11441/63203/Valverde%20Rodr%c3%adguez%20Mar%c3%ada%20Dolores%20TFG.pdf?sequence=1&isAllowed=y][Matemática discreta en Haskell]]. ~ M.D. Valverde #TFG #Haskell #Matemáticas
+ [[https://idus.us.es/xmlui/bitstream/handle/11441/63232/Mateo%20Ceballos%20Mar%c3%ada%20Dolores%20TFG.pdf?sequence=1&isAllowed=y][Formalización de cáculos lógicos en Isabelle/HOL]]. ~ M.D. Mateo #TFM
  #IsabelleHOL #Lógica
+ [[https://dspace.library.uu.nl/bitstream/handle/1874/351879/thesis.pdf][Formalising monotone frameworks: a dependently typed implementation in
  Agda]]. ~ J.J. van Wijk #MSc_Thesis #Agda
+ [[http://www.lambdadays.org/static/upload/media/1487605199766609adambarwellldays17.pdf][Finding functional pearls: Detecting recursion schemes in Haskell functions
  via anti-unification]]. ~ AD Barwell, C Brown, K Hammond #Haskell
+ [[https://kunigami.blog/2017/08/05/lazy-rebuilding][Lazy rebuilding]]. ~ G. Kunigami @kunigami #OCaml
+ [[https://github.com/jozefg/higher-order-unification/blob/master/explanation.md][A simple, concise implementation of Huet's algorithm in Haskell]]. ~ Danny
  Gratzer #Haskell
+ [[http://www.openculture.com/2017/08/free-you-can-now-read-classic-books-by-mit-press-on-archive-org.html][Free: You can now read classic books by MIT Press on archive.org]].
+ [[https://pp.ipd.kit.edu/uploads/publikationen/ebner17meta.pdf][A metaprogramming framework for formal verification]]. ~ G. Ebner et
  als. #LeanTP
+ [[https://pragprog.com/magazines/2012-10/thinking-functionally-with-haskell][Thinking functionally with Haskell: Playing with Haskell]]. ~ Paul Callaghan
  @paulcc_two #Haskell
+ [[http://bit.ly/2vIwczC][Formalising and monitoring traffic rules for autonomous vehicles in
  Isabelle/HOL]]. ~ A. Rizaldi et als. #IsabelleHOL
+ [[http://www.cis.upenn.edu/~llamp/pdf/urns.pdf][Ode on a random urn (Functional pearl)]]. ~ L Lampropoulos, A Spector-Zabusky,
  K Foner #Haskell
+ [[https://mmhaskell.com/blog/2017/8/7/the-future-is-functional-haskell-and-the-ai-native-world][The future is functional: Haskell and the AI-native]]. ~ James Bowen @james
  world. #Haskell #AI
+ [[https://arxiv.org/pdf/1708.02553][Robust computer algebra, theorem proving, and oracle AI]]. ~ G.P. Sarma,
  N.J. Hay #ATP #CAS #AI
+ [[https://pragprog.com/magazines/2012-11/thinking-functionally-with-haskell][Thinking functionally with Haskell: Is there anything left to say about
  monads?]] ~ Paul Callaghan @paulcc_two #Haskell #Haskell
+ [[https://sites.google.com/site/carlosolarte/home/pub/repository/lsfa-2017.pdf][Mechanizing linear logic in Coq]]. ~ B. Xavier et als. #ITP #Coq #Logic
+ [[https://arxiv.org/pdf/1708.01829][Declarative statistics]]. ~ R. Rossi et als. #Constraint_programming
  #Statistics
+ [[https://hal.archives-ouvertes.fr/hal-01571133/file/ArchipoffJanin.pdf][Unified media programming: an algebraic approach]]. ~ S. Archipoff & D. Janin
  #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_5.pdf][Functional baby talk: analysis of code fragments from novice Haskell
  programmers]]. ~ J Singer, B Archibald #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_7.pdf][Overcoming non distributivity: a case study in functional programming]]. ~
  J.C. Saenz, M. Stannett #Haskell
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_1.pdf][Vector programming using structural recursion (an introduction to vectors for
  beginners)]]. ~ M.T. Morazán #Racket
+ [[https://www.cs.kent.ac.uk/people/staff/sjt/TFPIE2017/TFPIE_2017/Papers/TFPIE_2017_paper_2.pdf][Using Elm to introduce algebraic thinking to K-8 students]]. ~ C. d’Alves et
  als. #Elm
+ [[https://irods.org/uploads/2017/Xu-RENCI-QueryArrow-paper.pdf][QueryArrow: semantically unified query and update of heterogeneous data
  stores]]. ~ Hao Xu et als. #Haskell
+ [[https://github.com/xu-hao/QueryArrow][QueryArrow: A semantically unified SQL and NoSQL query and update system]]. ~
  Hao Xu #Haskell
+ [[https://gist.github.com/paf31/adfd15fbb1ac8b99fc68be2c9aca8427][Why you should use PureScript]]. ~ Phil Freeman @paf31 #PureScript
+ [[https://github.com/gasi/gasi.ch/raw/e027e1c458f57d7d4778df2bba12ab91496b2db5/public/publications/functional-programming-fun-profit-daniel-gasienica-notes.pdf][Functional programming for & fun profit]] (or: how I learned to stop worrying
  and love shipping Haskell code). ~ D. Gasienica @gasi #Haskell
+ [[http://www4.di.uminho.pt/~jno/ps/pdbc_part.pdf][Program design by calculation (DRAFT / Last update: April 2017)]]. ~
  J.N. Oliveira #eBook #Haskell
+ [[http://www.tweag.io/posts/2017-08-09-array-programming-in-haskell.html][Array programming in Haskell]]. ~ Manuel Chakravarty @TacticalGrace | Tweag I/O
  #Haskell
+ [[https://jship.github.io/posts/2017-08-09-writing-performant-haskell-part-1.html][Writing performant Haskell (1 of 6): Intro]]. ~ Jason Shipman @jship21347
  #Haskell
+ [[http://www.nationmultimedia.com/detail/opinion/30323136][How can humans keep control of AI?]] #AI #DeepLearning
+ [[http://software.imdea.org/Conferences/hcvs17/papers/paper_4.pdf][Using a set constraint solver for program verification]]. ~ M. Cristiá,
  G. Rossi & C. Frydman #ConstraintProgramming
+ [[https://jship.github.io/posts/2017-08-10-writing-performant-haskell-part-2.html][Writing performant Haskell (2 of 6): Strings]]. ~ Jason Shipman @jship21347
  #Haskell
+ [[https://www.lvguowei.me/post/magit-rebase/][Magit tutorial - Rebase (Part I)]]. ~ Guowei Lv #Emacs
+ [[https://www.lvguowei.me/post/magit-rebase-2/][Magit tutorial - Rebase (Part II)]]. ~ Guowei Lv #Emacs
+ [[https://blog.qfpl.io/posts/fp-cheat-sheet/][Functional programming cheat sheet]]. ~ Tony Morris #Haskell
+ [[https://adelbertc.github.io/posts/2017-08-09-representable-functors.html][Reasoning with representable functors]]. ~ Adelbert Chang @adelbertchang
  #Haskell
+ [[https://mindmodeling.org/cogsci2017/papers/0175/paper0175.pdf][A computational logic approach to human syllogistic reasoning]]. ~ A.O. da
  Costa et als. #Logic
+ [[https://jship.github.io/posts/2017-08-11-writing-performant-haskell-part-3.html][Writing performant Haskell (3 of 6): SPECIALIZE]]. ~ Jason Shipman @jship21347
  #Haskell
+ [[https://pdfs.semanticscholar.org/6a15/a21dfdf5c7b0102fcb3c5e6988c8c5386299.pdf][Declarative algorithms for term generation, counting]]. ~ P. Tarau #Prolog
+ [[https://wildunix.es/posts/el-modelo-m4-de-la-maquina-enigma][El modelo M4 de la máquina Enigma]]. ~ M. García #Haskell
+ [[https://github.com/ringstellung/Enigma][Implementation of Enigma versions in Haskell]]. ~ M. García #Haskell
+ [[https://github.com/mortberg/cubicaltt][Experimental implementation of Cubical Type Theory]]. ~ Anders Mörtberg #Haskell
+ [[https://github.com/chrisdone/tdiff][tdiff: Simply print the time difference between lines from stdin]]. ~ Chris
  Done @christopherdone #Haskell
+ [[https://jship.github.io/posts/2017-08-12-writing-performant-haskell-part-4.html][Writing performant Haskell (4 of 6): builder revisited]]. ~ Jason Shipman
  @jship21347 #Haskell
+ [[https://github.com/frelindb/agsyHOL][agsyHOL: a theorem prover for higher-order logic]]. ~ Fredrik Lindblad #Haskell
  #Logic
+ [[http://www.teachthought.com/pedagogy/literacy/how-to-read-a-book-3-strategies-for-critical-reading][How to read a book: 3 strategies & questions for critical reading]]. ~ Terry
  Heick @terryheick
+ [[https://markkarpov.com/post/announcing-hasky-stack.html][Announcing Hasky Stack]]. ~ Mark Karpov @mrkkrp #Haskell #Emacs
+ [[https://www.lvguowei.me/post/magit-tutorial-bisect][Magit tutorial: Bisect]]. ~ Guowei Lv #Emacs
+ [[https://link.springer.com/content/pdf/10.1007%2Fs10817-017-9424-6.pdf][Deciding univariate polynomial problems using untrusted certificates in
  Isabelle/HOL]]. ~ W Li, GO Passmore, LC Paulson #IsabelleHOL
+ [[https://arxiv.org/pdf/1708.02328][Deriving law-abiding instances]]. ~ R. Scott et als. #Haskell #LiquidHaskell
+ [[https://arxiv.org/pdf/1708.01745][On the quest for an acyclic graph]]. ~ M Janota, R Grigore, V Manquinho #SAT
  #Logic
+ [[http://www-history.mcs.st-andrews.ac.uk/Extras/Creative_art.html][Mathematics as a creative art]]. ~ Paul Halmos #Math
+ [[http://opus.bath.ac.uk/56621/1/North_L_dissertation_2016_17_1_.pdf][Static analysis of programs using semirings]]. ~ L. North #Haskell
+ [[https://jship.github.io/posts/2017-08-14-writing-performant-haskell-part-5.html][Writing performant Haskell (5 of 6): dive into text]]. ~ Jason Shipman
  @jship21347 #Haskell
+ [[https://mmhaskell.com/blog/2017/8/14/starting-out-with-haskell-tensor-flow][Starting out with Haskell Tensor Flow]]. ~ James Bowen @james world. #Haskell
  #TensorFlow
+ [[https://arxiv.org/pdf/1708.03684][An introduction to quantum computing, without the physics]]. ~ G. Nannicini
  #QuantumComputing
+ [[https://github.com/jonascarpay/apecs][apecs: a fast, type driven, extensible ECS (Entity Component System) in pure Haskell]]. ~ Jonas Carpay #Haskell
+ [[https://www.ethz.ch/content/dam/ethz/special-interest/infk/inst-infsec/information-security-group-dam/people/andreloc/lochbihler2017itp.pdf][Effect polymorphism in higher-order logic (Proof Pearl)]]. ~ A. Lochbihler
  #IsabelleHOL
+ [[https://www.akalin.com/number-theory-haskell-foray][A foray into number theory with Haskell]]. ~ Fred Akalin #Haskell #Math
+ [[https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20170007190.pdf][Challenges in the verification of reinforcement learning algorithms]]. ~ P. van
  Wesel, A.E. Goodloe #FormalVerification #ML
+ [[https://gupea.ub.gu.se/bitstream/2077/53339/1/gupea_2077_53339_1.pdf][Proof editor for natural deduction in first-order logic]]. ~ E. Björnsson et
  als. #Logic #Teaching
+ [[https://repository.eafit.edu.co/bitstream/handle/10784/4554/LoboVesga-2013.Practica-investigativa-II.Hacia-la-formalizacion-del-razonamiento-ecuacional-sobre-monadas.pdf?sequence=2&isAllowed=y][Hacia la formalización del razonamiento ecuacional sobre mónadas]]. ~ E. Lobo
  #Agda
+ [[https://hal.archives-ouvertes.fr/hal-01251943/document][From sets to bits in Coq]]. ~ A. Blot, P.É. Dagand & J. Lawall #Coq
+ [[https://github.com/mit-frap/spring17][Problem sets for MIT 6.887 "Formal reasoning about programs", Spring
  2017]]. #Coq
+ [[https://coq-math-problems.github.io][Coq math problems (interesting, challenging, or fun math problems formalized
  in Coq)]]. #Coq #Math
+ [[https://homes.cs.washington.edu/~jrw12/InductionExercises.html][Exercises on generalizing the induction hypothesis]]. ~ James Wilcox #Coq
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_10.pdf][Making automatic theorem provers more versatile]]. ~ S. Cruanes #ATP
+ [[https://dpwright.com/posts/2015/07/17/writing-a-zx-spectrum-game-in-haskell][Writing a ZX Spectrum game in Haskell (introducing the z80 and zxspectrum
  packages)]]. ~ Daniel P. Wright @danielpwright #Haskell
+ [[https://elpais.com/elpais/2016/07/08/ciencia/1467991448_434804.amp.html][El lenguaje de la naturaleza]]. ~ A. Cordoba #Matemáticas
+ [[http://unibuc.ro/~conference/from2017/abstracts/absAndreiP.pdf][Proof assistants as smart programming languages]]. ~ A. Popescu #Programming
  #IsabelleHOL
+ [[https://arxiv.org/pdf/1708.02318][Adaptive lock-free data structures in Haskell: a general method for
  concurrent implementation swapping]]. ~ C.H. Chen et als. #Haskell
+ [[https://books.google.es/books?id=SyEsDwAAQBAJ&lpg=PA21&ots=-VfLwQIBk0&dq=%22Science%20fiction%20at%20the%20far%20side%20of%20technology%3A%20Vernor%20Vinge%E2%80%99s%20singularity%20thesis%20versus%20the%20limits%20of%20AI-research%22&pg=PA21#v=onepage&q&f=false][Science fiction at the far side of technology: Vernor Vinge’s singularity thesis versus the limits of AI-research]]. ~ M.W. Johansen #AI #ATP
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_1.pdf][24 challenges in deductive software verification]]. ~ R. Hähnle & M. Huisman
  #Verification
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_2.pdf][Towards strong higher-order automation for fast interactive verification]]. ~
  J.C. Blanchette #ATP
+ [[http://chrisdone.com/toys/duet-delta][Duet: an educational dialect of Haskell aimed at interactivity]]. ~ Chris Done
  @christopherdone #Haskell
+ [[http://www.microsiervos.com/archivo/ia/gato-inteligencia-artificial-explica.html][La IA que se explica: «Esto es un gato porque tiene pelo, bigotes, garras y
  orejas de gato como estas»]] ~ @Alvy #IA
+ [[https://mappingignorance.org/2017/08/14/dont-understand-artificial-intelligence-takes-decisions-statement-mean][What does the “we don’t understand how artificial intelligence takes decisions” statement mean?]] ~ Julián Estévez @Jeibros #AI #DeepLearning
  #CompSci
+ [[http://www.cetusnews.com/business/Inside-Darpa%E2%80%99s-Push-to-Make-Artificial-Intelligence-Explain-Itself.HJXCyEf5wW.html][Inside Darpa’s push to make artificial intelligence explain itself]]. ~
  S. Castellanos & S. Norton #AI
+ [[https://github.com/volhovM/orgstat][OrgStat: Statistics visualizer for org-mode]]. ~ Mikhail Volkhov #Haskell
  #Emacs #OrgMode
+ [[http://blog.ezyang.com/2017/08/backpack-for-deep-learning/][Backpack for deep learning]]. ~ Kaixi Ruan #Haskell #DeepLearning
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_3.pdf][Automated reasoning for explainable artificial intelligence]]. ~ M.P. Bonacina
  #ATP #AI
+ [[https://github.com/ivanperez-keera/Yampa][Yampa: Domain-specific language embedded in Haskell for programming hybrid
  (mixed discrete-time and continuous-time) systems]]. ~ Ivan Perez #Haskell
+ [[http://www.cs.nott.ac.uk/~psxip1/papers/2017-HaskellSymposium-Perez-BackToTheFuture-TimeTravelInFRP-latest.pdf][Back to the future: time travel in FRP]]. ~ Ivan Perez #Haskell #FRP
+ [[http://ictactjournals.in/paper/IJCT_Vol_8_Iss_2_Paper_7_1533_1539.pdf][Cryptographic protocols specification and verification tools: a survey]]. ~
  A.H. Shinde, A.J. Umbarkar & N.R. Pillai #Haskell #Isabelle #Coq
+ [[https://arxiv.org/pdf/1708.03734][Generalized graph pattern matching]]. ~ P. Almagro & F. Sancho 
+ [[http://dl.acm.org/ft_gateway.cfm?id=3106184&ftid=1899713&dwn=1&CFID=799584729&CFTOKEN=98810645][Theorem provers as a learning tool in theory of computation]]. ~ M. Knobelsdorf
  et als. #ITP #Coq #Learning
+ [[https://arxiv.org/pdf/cs/0609124][The three gap theorem (Steinhauss conjecture)]]. ~ M. Mayero #Coq #Math
+ [[http://www21.in.tum.de/~lammich/grat/][GRAT: Efficient formally verified SAT solver certification toolchain]]. ~
  P. Lammich #SAT #IsabelleHOL
+ [[http://www.cl.cam.ac.uk/teaching/1516/DiscMath/DiscMathProofsNumbersSetsSlides.pdf][Discrete mathematics]]. ~ M. Fiore #Math
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_6.pdf][SC2 challenges: when Satisfiability Checking and Symbolic Computation join
  forces]]. ~ E. Ábrahám et als. #ATP
+ [[https://ro-che.info/articles/2017-08-20-understanding-ans][Understanding asymmetric numeral systems]]. ~ Roman Cheplyaka @shebang #Haskell
  #Math
+ [[https://blog.plover.com/math/24-puzzle-2.html][Recognizing when two arithmetic expressions are essentially the same]]. ~ Mark
  Dominus #Math #Puzzle
+ [[https://github.com/melisgl/mgl][MGL: Common Lisp machine learning library]]. ~ Gábor Melis #CommonLisp #ML
+ [[https://www.lvguowei.me/post/the-most-beautiful-program-ever-written][The most beautiful program ever written: a Lisp interpreter written in
  Lisp]]. ~ Guowei Lv #Lisp
+ [[https://www.cs.indiana.edu/~sabry/papers/information-effects.pdf][Information effects]]. ~ R.P. James & A. Sabry #Haskell 
+ [[http://reasonablypolymorphic.com/blog/information-effects][Review: Information effects]]. #Haskell #ReversibleComputing
+ [[https://github.com/Gabriel439/haskell-nix][Nix and Haskell in production]]. ~ G. Gonzalez @GabrielG439 #Haskell #Nix
+ [[https://github.com/adjoint-io/merkle-tree][Haskell merkle trees]]. #Haskell
+ [[https://youtu.be/NILudp6hti8][Ser matemático es la profesión del futuro]]. ~ Cedric Villani #Matemáticas
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_11.pdf][The potential of interference-based proof systems]]. ~ M.J.H. Heule & B. Kiesl
  #ATP
+ [[https://mmhaskell.com/blog/2017/8/21/digging-in-deep-solving-a-real-problem-with-haskell-tensor-flow][Digging in deep: solving a real problem with Haskell Tensor Flow]]. ~ James
  Bowen @james world. #Haskell #TensorFlow
+ [[http://www.microsiervos.com/archivo/ciencia/piramides-numeros-primos-palindromos.html][Pirámides de números primos capicúa]]. ~ @Wicho #Matemáticas
+ [[http://www.utm.edu/staff/caldwell/preprints/JRM_prime_pyramids.pdf][Palindromic prime pyramids]]. ~ G.L. Honaker & C.K. Caldwell #Math
+ [[http://www.utm.edu/staff/caldwell/supplements/][Supplement to "Palindromic prime pyramids"]]. ~ C.K. Caldwell #Math
+ [[http://jyp.github.io/pdf/Prettiest.pdf][Functional Pearl: a pretty but not greedy printer]]. ~ J.P. Bernardy #Haskell
+ [[https://matela.com.br/paper/speculate.pdf][Speculate: discovering conditional equations and inequalities about black-box
  functions by reasoning from test results]]. ~ R. Braquehais & C. Runciman
  #Haskell
+ [[https://arxiv.org/pdf/1406.4823][Notions of computation as monoids]]. ~ E. Rivas & M. Jaskelioff #Haskell
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_12.pdf][Industrial use of ACL2: applications, achievements, challenges, and
  directions]]. ~ JS. Moore & M.J.H. Heule #ACL2
+ [[http://conal.net/papers/generic-parallel-functional/generic-parallel-functional.pdf][Generic functional parallel algorithms: Scan and FFT]]. ~ Conal Elliott @conal
  #Haskell
+ [[https://amp.theguardian.com/commentisfree/2017/aug/21/universities-broke-cut-pointless-admin-teaching][Universities are broke. So let’s cut the pointless admin and get back to
  teaching]]. ~ A. Spicer
+ [[http://www.cs.man.ac.uk/~regerg/arcade/papers/paper_19.pdf][Checkable proofs for first-order theorem proving]]. ~ G. Reger & M. Suda #ATP
+ [[http://www.danwc.com/s/adafuzz2017.pdf][A framework for adaptive differential privacy]]. ~ D. Winograd-Cort,
  A. Haeberlen, A. Roth & B.C. Pierce #OCaml
+ [[https://rubenpieters.github.io/induction/equationalreasoning/2017/08/23/induction-pointfree-1.html][Induction for point-free equational reasoning]]. ~ Ruben Pieters #Haskell #Math
+ [[http://queue.acm.org/detail.cfm?id=3132371][Vigorous public debates in academic computer science]]. ~ John Regehr #CompSci
+ [[https://tour.eta-lang.org][A tour of Eta (Learn functional programming the easy way)]]. #Eta #Haskell 
+ [[https://smartech.gatech.edu/bitstream/handle/1853/58734/CROCKETT-DISSERTATION-2017.pdf%3Fsequence%3D1%26isAllowed%3Dy][Simply safe lattice cryptography]]. ~ E. Crockett #PhD_Thesis #Haskell #Math
  #Cryptography
+ [[https://www.cs.cmu.edu/~rwh/papers/tail-bounds/paper.pdf][Verified tail bounds for randomized programs]]. ~ J. Tassarotti & R. Harper
  #Coq
+ [[http://spivey.oriel.ox.ac.uk/wiki2/images/a/a1/Copipes.pdf][Faster coroutine pipelines]]. ~ Mike Spivey #Haskell
+ [[https://medium.com/@zyxoas/abusing-haskell-dependent-types-to-make-redis-queues-safer-cc31db943b6c][Abusing Haskell dependent types to make Redis queues safer]]. ~ Tebello
  M. Thejane #Haskell
+ [[https://openlibra.com/book/a-concise-introduction-to-logic][A concise introduction to logic]]. ~ Craig DeLancey #eBook #Logic #OpenLibra
+ [[https://www.dreamsongs.com/Files/HOPL2-Uncut.pdf][The evolution of Lisp]]. ~ G.L. Steele & R.P. Gabriel #Lisp
+ [[http://www.ccs.neu.edu/home/matthias/HtDP2e/Draft/index.html][How to design programs (second edition)]]. ~ M. Felleisen et als. #eBook
  #Programming #Scheme
+ [[http://adam.chlipala.net/papers/KamiICFP17/KamiICFP17.pdf][Kami: a platform for high-level parametric hardware specification and its
  modular verification]]. ~ J. Choi et als. #Coq
+ [[http://www.michaelburge.us/2017/08/25/writing-a-formally-verified-porn-browser-in-coq.html][Writing a formally-verified porn browser in Coq and Haskell]]. ~ Michael Burge
  @TaurineAndCode #Coq #Haskell
+ [[https://github.com/zjhmale/ntha][The Ntha programming language]]. ~ JHZheng #Haskell
+ [[http://www.cs.princeton.edu/~appel/papers/shrink-fast-correctly.pdf][Shrink fast correctly!]] ~ O. Savary Bélanger & A.W. Appel #Coq
+ [[http://chrispenner.ca/posts/type-tac-toe][Type Tac Toe: advanced type safety]]. ~ Chris Penner @chrislpenner #Haskell
  #Game
+ [[https://jship.github.io/posts/2017-08-27-monad-transformer-commutativity.html][Monad transformer commutativity]]. ~ Jason Shipman @jship21347 #Haskell
+ [[https://www.cs.cmu.edu/~kqy/resources/Verified-HMAC-DRBG.pdf][Verified correctness and security of mbedTLS HMAC-DRBG]]. ~ K.Q. Ye et
  als. #Coq
+ [[http://chrispenner.ca/posts/conways-game-of-life][Conway's game of life using representable and comonads]]. ~ Chris Penner
  @chrislpenner #Haskell
+ [[https://github.com/haskell/haskell-ide-engine][The engine for Haskell IDE-integration]]. #Haskell
+ [[http://www.comp.nus.edu.sg/~lxbach/publication/icfem17.pdf][A certified decision procedure for tree shares]]. ~ X.B. Le et als. #Coq
+ [[https://mmhaskell.com/blog/2017/8/28/putting-the-flow-in-tensor-flow][Putting the flow in Tensor Flow!]] ~ James Bowen @james_OWA #Haskell
  #TensorFlow
+ [[http://chrispenner.ca/posts/representable-discrimination][Radix sort, trie trees, and maps from representable functors]]. ~ Chris Penner
  @chrislpenner #Haskell
+ [[https://arxiv.org/pdf/1705.03307][Formalisations using two-level type theory]]. ~ D. Annenkov, P. Capriotti &
  N. Kraus #ITP #LeanTP #HoTT
+ [[https://infoscience.epfl.ch/record/230242/files/EPFL_TH7636.pdf][Verification by reduction to functional programs]]. ~ R.W. Blanc #PhD_Thesis
  #ITP #Leon #Scala
+ [[http://www21.in.tum.de/~nipkow/pubs/aplas17.pdf][Verified root-balanced trees]]. ~ T. Nipkow #ITP #IsabelleHOL #AFP
+ [[http://people.compute.dtu.dk/jobla/esslli2017/certified-soundness-simplest.pdf][Certified soundness of simplest known formulation of first-order logic]]. ~
  John Bruntse Larsen #IsabelleHOL #Logic
+ [[http://chrispenner.ca/posts/free-forgetful-functors][Free and forgetful functors]]. ~ Chris Penner @chrislpenner #Haskell
+ [[https://arxiv.org/pdf/1708.07829][Algoritmos para Big Data: Grafos y PageRank]]. ~ S. Garcı́a #TFG #BigData
  #Python
+ [[http://www21.in.tum.de/~lammich/pub/sat2017.pdf][The GRAT tool chain: efficient (UN)SAT certificate checking with formal
  correctness guarantees]]. ~ P. Lammich #IsabelleHOL #SAT
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110266&ftid=1902042&dwn=1&CFID=979044106&CFTOKEN=25644979][How to prove your calculus is decidable: practical applications of
  second-order algebraic theories and computation]]. ~ M. Hamana #Haskell
+ [[http://chrispenner.ca/posts/adjunction-battleship][Adjunctions and Battleship]]. ~ Chris Penner @chrislpenner #Haskell
+ [[https://github.com/iostreamer-X/FuncShell][FuncShell: Improve your shell by making it functional through Haskell! (An
  update to Awkward)]]. ~ Rahul Ramteke @_iostreamer_ #Haskell
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110245&ftid=1902035&dwn=1&CFID=979044106&CFTOKEN=25644979][Herbarium Racketensis: a stroll through the woods (functional pearl)]]. ~
  V. St-Amour et als. #FP #Racket
+ [[https://elpais.com/elpais/2017/08/30/el_aleph/1504111102_204003.amp.html][El gran salto entre creer y demostrar]]. ~ M.A. Morales @gaussianos | El Aleph
  #Matemáticas
+ [[https://cdsmith.wordpress.com/2007/06/02/learning-number-theory-and-haskell-the-division-algorithm/][Learning number theory and Haskell: the division algorithm]]. ~ Chris Smith
  #Haskell #Math

** Septiembre 2017
+ [[https://www.isa-afp.org/entries/Orbit_Stabiliser.html][Orbit-stabiliser theorem with application to rotational symmetries in
  Isabelle/HOL]]. ~ J. Rädle #ITP #IsabelleHOL #Math #AFP
+ [[https://proofwiki.org/wiki/Orbit-Stabilizer_Theorem][Orbit-stabilizer theorem]]. ~ Proofwiki #Math
+ [[https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/][Category theory for programmers]]. ~ Bartosz Milewski @BartoszMilewski #Haskell
  #Math
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?VPT2017.9.pdf][From concurrent programs to simulating sequential programs: correctness of a
  transformation]]. ~ A. Blanchard et als. #Coq
+ [[http://chrispenner.ca/posts/representable-cofree-zippers][Zippers using Representable and Cofree]]. ~ Chris Penner @chrislpenner #Haskell
+ [[http://www.cs.man.ac.uk/~david/categories/book/book.pdf][Computational category theory]]. ~ D.E. Rydeheard & R.M. Burstall #eBook #FP
  #SML #Math
+ [[http://www.tweag.io/posts/2017-08-31-hmatrix.html][Enter the matrix, Haskell style]]. ~ Manuel Chakravarty @TacticalGrace | Tweag
  I/O #FP #Haskell #Math
+ [[http://emanuelpeg.blogspot.com.es/2017/08/7-lenguajes-que-se-utilizan-en.html][7 lenguajes que se utilizan en inteligencia artificial]]. ~ E. Goette
  @emanuelpeg #Programación #IA
+ [[http://www.rankred.com/best-artificial-intelligence-programming-language][7 best Artificial Intelligence programming language in 2017]]. #AI #Programming
  #Haskell #JavaScript #Prolog #Java #Lisp #Cpp #Python
+ [[https://github.com/GaloisInc/regex-fsm][regex-fsm: Convert regular expressions into layered finite-state machines]]. ~
  David Johnson #Haskell
+ [[https://github.com/Crazycolorz5/AlgebraicPrelude][AlgebraicPrelude: Remaking a basis for Haskell that is well grounded in Group
  theory]]. #Haskell #Math
+ [[https://blog.jle.im/entry/fixed-length-vector-types-in-haskell.html][Fixed-length vector types in Haskell (an update for 2017)]] ~ Justin Le @mstk
  #Haskell
+ [[https://www.isa-afp.org/entries/LambdaMu.html][The λμ-calculus in Isabelle/HOL]]. ~ C. Matache, V.B.F. Gomes & D.P. Mulligan
  #ITP #IsabelleHOL #Logic #AFP
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110286&ftid=1902034&dwn=1&CFID=979044106&CFTOKEN=25644979][Constrained type families]]. ~ J. Garrett Morris & R.A. Eisenberg #Haskell
+ [[https://lettier.github.io/posts/2017-08-30-haskell-gtk-video-player.html][Let's make a GTK Video Player with Haskell]]. ~ David Lettier #Haskell
+ [[https://github.com/dmjio/HilbertRTree][Hilbert R-tree in Haskell]]. ~ David Johnson #Haskell
+ [[http://www.cl.cam.ac.uk/~vb358/articles/thesis.pdf][Algebraic principles for program correctness tools in Isabelle/HOL]]. ~
  V.B.F. Gomes #PhD_Thesis #IsabelleHOL
+ [[https://github.com/serokell/serokell-util/blob/master/serokell-style.md][Serokell Haskell style guide]]. #Haskell via @StephenPiment
+ [[http://logicaltypes.blogspot.com.es/2017/09/august-2017-1haskelladay-problems-and.html][August 2017 1HaskellADay problems and solutions]]. ~ Douglas M. Auclair
  @geophf | Typed Logic #Haskell #Haskell #1HaskellADay
+ [[https://www.athiemann.net/2017/07/02/superrecord.html][SuperRecord: anonymous records for Haskell]]. ~ Alexander Thiemann @agrafix
  #Haskell
+ [[https://www.athiemann.net/2017/08/31/mergesort.html][Type level merge sort (Haskell)]]. ~ Alexander Thiemann @agrafix #Haskell
+ [[https://github.com/mratsim/haskell-numbertheory][Exploration of primes, factorization and number theory through Haskell]]. ~
  Mamy Ratsimbazafy #Haskell #Math
+ [[https://www.darpa.mil/program/explainable-artificial-intelligence][Explainable Artificial Intelligence (XAI)]]. ~ David Gunning #AI #XAI
+ [[https://arxiv.org/pdf/1606.02941][A proof strategy language and proof script generation for Isabelle/HOL]]. ~
  Y. Nagashima, R. Kumar #IsabelleHOL
+ [[https://github.com/data61/PSL][PSL: Proof Strategy Language for Isabelle/HOL]]. ~ Yutaka Nagashima #IsabelleHOL
+ [[https://github.com/Crazycolorz5/Algebra][Study and implementations of F-Algebras and Bird-Meertens formalism in
  Haskell]]. #Haskell #Math
+ [[http://www.michaelburge.us/2017/09/01/how-to-use-graphviz-in-haskell.html][Visualizing graphs in Haskell]]. ~ Michael Burge @TaurineAndCode #Haskell
  #Graphviz
+ [[https://github.com/keera-studios/IfElse][IfElse: Anaphoric and miscellaneous useful control-flow]]. ~ J.R. Heard &
  W. Thornton #Haskell
+ [[https://blogs.elconfidencial.com/amp/tecnologia/tribuna/2017-09-02/deep-learning-demonios-explicacion_1437007][¿Qué demonios es el Deep Learning y por qué debería aprenderlo en este
  artículo?]] ~ A. Palomo #IA #DeepLearning
+ [[http://www.microsiervos.com/archivo/internet/deepl-traductor-superior.html][DeepL, un traductor superior]]. ~ @Alvy #IA
+ [[https://www.cs.us.es/~jalonso/cursos/i1m/temas/tema-0.html][Programas, funciones y dibujos con CodeWorld/Haskell]]. #CodeWorld #Haskell
+ [[http://www.michaelburge.us/2017/08/31/roll-your-own-bitcoin-exchange.html][Roll your own bitcoin exchange in Haskell]]. Michael Burge @TaurineAndCode
  #Haskell
+ [[https://github.com/Crazycolorz5/Automata][Emulating finite state machines, non-deterministic finite state machines,
  push-down automata, and Turing machines in Haskell]]. #Haskell
+ [[https://www.cs.cmu.edu/~cmartens/lpnmr13-short.pdf][Linear logic programming for narrative generation]]. ~ C. Martens, A.G. Bosser,
  J.F. Ferreira & M. Cavazza
+ [[http://www.cs.nott.ac.uk/~psxip1/papers/2017-ICFP-Perez-Nilsson-TestingAndDebuggingFRP-latest.pdf][Testing and debugging functional reactive programming]]. ~ I. Perez &
  H. Nilsson #Haskell
+ [[http://dl.acm.org/citation.cfm?doid=3136534.3110247][Lock-step simulation is child's play (experience report)]]. ~ J. Breitner &
  C. Smith #Haskell #CodeWorld #ICFP2017
+ [[http://dl.acm.org/citation.cfm?doid=3136534.3110248][Scaling up functional programming education: under the hood of the OCaml
  MOOC]]. ~ B. Canou, R. Di Cosmo & G. Henry #OCaml #ICFP2017
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110262&ftid=1902044&dwn=1&CFID=805691510&CFTOKEN=61399968][Verifying efficient function calls in CakeML]]. ~ S. Owens et als. #ITP #HOL4
  #ICFP2017
+ [[https://mmhaskell.com/blog/2017/9/4/deeper-still-convolutional-neural-networks][Deeper still: convolutional neural networks]]. ~ James Bowen @james_OWA
  #Haskell
+ [[http://www.eldiario.es/cultura/tecnologia/algoritmo-convierte-artista-reemplazara-humano_0_683131806.html][Cuando el algoritmo se convierte en artista: ¿reemplazará al humano?]] ~ Jose
  A. Luna @JoseA_Luna
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110266&ftid=1902042&dwn=1&CFID=979044106&CFTOKEN=25644979][How to prove your calculus is decidable: practical applications of
  second-order algebraic theories and computation]]. ~ M. Hamana #Haskell
+ [[http://adam.chlipala.net/papers/KamiICFP17/KamiICFP17.pdf][Kami: a platform for high-level parametric hardware specification and its modular verification]]. 
  ~ J. Choi et als. #Coq #ICFP2017
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110269&ftid=1902052&dwn=1&CFID=805691510&CFTOKEN=61399968][SpaceSearch: a library for building and verifying solver-aided tools]]. ~
  K. Weitz et als. #Coq #ICFP2017 
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110270&ftid=1902047&dwn=1&CFID=805691510&CFTOKEN=61399968][Local refinement typing]]. ~ B. Cosman & R. Jhala #Haskell #SMT #LiquidHaskell
  #ICFP2017
+ [[http://dl.acm.org/ft_gateway.cfm?id=3110271&ftid=1902041&dwn=1&CFID=805691510&CFTOKEN=61399968][Compiling to categories]]. ~ C. Elliott #Haskell #ICFP2017
+ [[https://querycert.github.io][Q*cert: Q*cert: A query compiler and a platform for implementing and
  verifying query compilers]]. #ITP #Coq
+ [[https://math-comp.github.io/mcb/book.pdf][Mathematical components]]. ~ A. Mahboubi & E. Tassi #eBook #ITP #Coq #Math
+ [[http://matt.might.net/articles/i-love-you-in-racket][99 ways to say '(I love you)]]. ~  Matt Might @mattmight #FP #Racket
+ [[https://www21.in.tum.de/teaching/proof21/SS17/12-final.pdf][A formal proof of the Kepler conjecture]]. ~ S. Kober #ITP #IsabelleHOL
  #HOL_Light #Math
+ [[http://www.cs.nott.ac.uk/~psxip1/papers/2017-Perez-gale-graphicadventure-farm2017-latest.pdf][GALE: A functional graphic adventure library and engine]]. ~ Ivan Perez
  #Haskell #Game
+ [[http://www.tweag.io/posts/2017-09-06-hyperion.html][Tracking performance over the entire software lifecyle]]. ~ Nicolas Mattia
  #Haskell
+ [[https://dorchard.wordpress.com/2017/09/06/icfp-fscd-day-3-rough-notes][ICFP / FSCD day 3 – rough notes]]. ~ Dominic Orchard @dorchard #icfp2017 
+ [[http://www.cs.princeton.edu/~appel/papers/bringing-order.pdf][Bringing order to the separation logic jungle]]. ~ Q. Cao, S. Cuellar &
  A.W. Appel #Coq
+ [[http://reasonablypolymorphic.com/blog/modeling-music][Modeling music in Haskell]]. ~ Sandy Maguire #Haskell
+ [[https://github.com/tweag/hyperion][Hyperion: a DSL for writing benchmarks to measure and analyze software performance]]. 
  #Haskell
+ [[https://www.johndcook.com/blog/2017/09/07/highly-cited-theorems][Highly cited theorems]]. ~ J.D. Cook @JohnDCook #Math
+ [[http://dragan.rocks/articles/17/Clojure-Numerics-2-General-Linear-Systems-and-LU-Factorization][Clojure numerics, part 2: General linear systems and LU factorization]]. ~
  Dragan Djuric #Clojure #Math
+ [[http://drops.dagstuhl.de/opus/volltexte/2017/7718/pdf/LIPIcs-FSCD-2017-10.pdf][Generalized refocusing: from hybrid strategies to abstract machines]]. ~
  M. Biernacka, W. Charatonik & K. Zielińska #Coq
+ [[https://rootmos.github.io/main/2017/08/31/combining-brick-and-haskeline.html][Combining Brick and Haskeline]]. ~ Gustav Behm #Haskell
+ [[https://deque.blog/2017/09/04/list-monad-and-np-complexity][How the List Monad helped me better understand Non-deterministic Polynomial time complexity]]. 
  ~ Quentin Duval @quduval #Haskell
+ [[https://github.com/sjsyrek/haskell-study-startup][Haskell Study Startup: Launch your own Haskell study group]]. ~ Steven Syrek
  @sjsyrek #Haskell
+ [[https://arxiv.org/pdf/1709.01810][On dependent types and intuitionism in programming mathematics]]. ~
  S.D. Meshveliani #Haskell #Agda #Math
+ [[http://eptcs.web.cse.unsw.edu.au/paper.cgi?GANDALF2017.4.pdf][An existence theorem of Nash equilibrium in Coq and Isabelle]]. ~ S. Le Roux,
  É. Martin & J.G. Smaus #Coq #IsabelleHOL
+ [[https://github.com/NorfairKing/thesis/raw/master/pdfs/thesis-tom-sydney-kerckhove.pdf][Signature inference for functional property discovery]]. ~ Tom Sydney Kerckhove
  #MSc_Thesis #Haskell
+ [[https://github.com/NorfairKing/easyspec][EasySpec: Signature inference for functional property discovery in Haskell]]. ~
  Tom Sydney Kerckhove #Haskell
+ [[https://people.cs.kuleuven.be/~george.karachalias/papers/fundeps.pdf][Elaboration on functional dependencies]]. ~ G. Karachalias & T. Schrijvers
  #Haskell 
+ [[http://irreal.org/blog/?p=6552][Reading EPUBs in Emacs]]. ~ Irreal #Emacs #EPub 
+ [[http://www.glc.us.es/~jalonso/vestigium/libro-de-examenes-de-programacion-funcional-con-haskell-version-del-9-de-septiembre-de-2017][Libro de exámenes de programación funcional con Haskell (versión del 9 de septiembre de 2017)]]. 
  #Haskell #I1M2016
+ [[https://arxiv.org/pdf/1709.01743][Distant decimals of pi]]. ~ Y. Bertot, L. Rideau & L. Théry #Coq #Math
+ [[http://www.qucosa.de/fileadmin/data/qucosa/documents/22741/E_thesis-slub_pdfa.pdf][From logic programming to human reasoning: how to be artificially human]]. ~
  EAD Saldanha #PhD_Thesis #LogicProgramming #AI #Logic
+ [[https://www.ijcai.org/proceedings/2017/0173.pdf][A reasoning system for a first-order logic of limited belief]]. ~ C. Schwering
  #Logic #AI #ATP
+ [[https://www.ijcai.org/proceedings/2017/0001.pdf][Swift logic for Big Data and knowledge graphs]]. ~ L. Bellomarini et
  als. #Logic #Big_Data #AI
+ [[https://medium.com/technology-nineleaps/prolog-loves-graphs-96e095028d77][Prolog loves graphs (How to use Prolog to implement graph traversal)]]. #Prolog
+ [[https://openlibra.com/book/practicas-de-calculo-numerico-con-maxima][Prácticas de cálculo numérico con Maxima]]. ~ A. Vigueras #Maxima #Matemáticas
  #OpenLibra
+ [[https://www.isa-afp.org/entries/AnselmGod.html][Anselm's God in Isabelle/HOL]]. ~ Ben Blumson #ITP #IsabelleHOL #AFP
+ [[https://mmhaskell.com/blog/2017/9/11/deep-learning-and-deep-types-tensor-flow-and-dependent-types][Deep Learning and Deep Types: Tensor Flow and Dependent Types]]. ~ James Bowen
  @james_OWA #Haskell #TensorFlow
+ [[http://www.aclweb.org/anthology/D17-1082][From textbooks to knowledge: a case study in harvesting axiomatic knowledge from textbooks to solve geometry problems]]. 
  ~ M. Sachan et als. 
+ [[https://www.fpcomplete.com/blog/2017/09/all-about-strictness][All about strictness]]. ~ M. Snoyman @snoyberg #Haskell 
+ [[http://geometry.allenai.org][GeoS: an end-to-end system that solves high school geometry questions]]. #Math  
+ [[https://arxiv.org/pdf/1709.02618][The shape of a benedictine monastery: the SaintGall ontology]]. ~ C. Cantale et
  als. #OWL2
+ [[https://people.csail.mit.edu/wangpeng/timl.pdf][TiML: a functional language for practical complexity analysis with invariants]]. 
  ~ P. Wang, D. Wang & A. Chlipala #FP #ML #SMT
+ [[https://leanpub.com/fpmortals/read][Functional programming for mortals with Scalaz]]. ~ Sam Halliday #eBook #FP
  #Scala
+ [[http://www.cs.nott.ac.uk/%7Epsztxa/ewscs-17/notes.pdf][Introduction to Homotopy Type Theory]]. ~ T. Altenkirch #HoTT
+ [[https://youtu.be/ybSBCVhVWs8][Functional programming and modern DevOps]]. ~ Aaron Contorer #FP #Haskell
+ [[http://www.cl.cam.ac.uk/~lp15/MLbook/pub-details.html][ML for the working programmer, 2nd Edition]]. ~ L. Paulson #eBook #FP #ML
+ [[http://retromaniacmagazine.blogspot.com.es/2017/09/puede-la-retroinformatica-darnos.html][¿Puede la retroinformática darnos mejores programadores en el futuro? Este estudio cree que sí]]. 
  #Programación
+ [[https://www.stackbuilders.com/es/news/obverse-versus-reverse-benchmarking-in-haskell-with-criterion][Obverse versus reverse: benchmarking in Haskell with criterion]]. ~ J.P. Villa
  @jpvillaisaza #Haskell
+ [[https://blog.mozilla.org/security/2017/09/13/verified-cryptography-firefox-57/][Verified cryptography for Firefox 57]]. ~ B. Beurdouche @beurdouche, F. Kiefer
  @_franziskus_ & T. Taubert @ttaubert
+ [[https://deque.blog/2017/09/13/monoids-what-they-are-why-they-are-useful-and-what-they-teach-us-about-software][Monoids: what they are, why they are useful, and what they teach us about software]]. 
  ~ Quentin Duval @quduval #Haskell
+ [[https://john.cs.olemiss.edu/~hcc/csci450/notes/HaskellNotes/02BasicHaskell450.pdf][Basic Haskell functional programming]]. ~ H. Conrad Cunningham #Haskell
+ [[https://github.com/joom/WangsAlgorithm][A propositional theorem prover in Haskell, using Wang's algorithm]]. ~
  @cattheory #Haskell #Logic
+ [[https://arxiv.org/pdf/1709.04714][Trace and stable failures semantics for CSP-Agda]]. ~ B. Igried & A. Setzer
  #Agda
+ [[https://github.com/8084/g4ip-prover][Theorem prover for intuitionistic propositional logic in Haskell]]. #Haskell
  #Logic
+ [[http://languagengine.co/blog/differentiating-functional-programs][Differentiating functional programs]]. ~ Darryl McAdams @psygnisfive #Haskell
+ [[https://wiki.haskell.org/Prime_numbers][Prime numbers in Haskell]]. #Haskell #Math 
+ [[https://tees.openrepository.com/tees/bitstream/10149/621304/1/621304.pdf][Certified password quality: a case study using Coq and Linux pluggable
  authentication modules]]. ~ J.F. Ferreira @jff et als. #Coq
+ [[http://www.tweag.io/posts/2017-09-15-inline-java-tutorial.html][Java from Haskell: a tutorial]]. ~ F. Domínguez | Tweag I/O #Haskell #Java
+ [[https://arxiv.org/pdf/1709.03652][A certified reference validation mechanism for the permission model of
  Android]]. ~ G. Betarte et als. #Coq #Haskell
+ [[http://book.simply-logical.space][Simply logical (intelligent reasoning by example) in Swish]]. ~ P. Flach
  #Prolog #Logic #AI 
+ [[http://www.tweag.io/posts/2017-08-03-linear-typestates.html][Encode state transitions in types using linear types]]. ~ A. Spiwack | Tweag
  I/O #Haskell
+ [[http://fun-discoveries.blogspot.com.es/2017/08/building-haskell-projects-with-ghc.html][Building Haskell projects with GHC]]. ~ Emil Axelsson #Haskell
+ [[https://medium.com/@fintan.halpenny/free-me-exploring-the-free-data-type-c863499a82f8][Free me: Exploring the Free data type]]. ~ Fintan Halpenny #Haskell
+ [[https://haskell.fun/2017/09/17/making-google-tasks-better-part-2][Making Google tasks better (Part 2)]]. ~ Martin Capodici @mcapodici #Haskell
+ [[https://en.wikipedia.org/wiki/Dots_and_Boxes][Dots and Boxes]]. ~ Wikipedia #Game 
+ [[https://github.com/mcapodici/dotsandboxes][Dots and Boxes game in Haskell]]. ~ Martin Capodici @mcapodici #Haskell
+ [[https://github.com/eugmes/imp][IMP compiler implemented in Haskell]]. ~ Eugeniy Meshcheryakov #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-introduccion-a-la-programacion-funcional/][Introducción a la programación funcional]]. #I1M2017 #Haskell #CodeWorld
+ [[https://haskell-lang.org/tutorial/stack-script][How to script with Stack]]. ~ M. Snoyman @snoyberg #Haskell
+ [[http://images.math.cnrs.fr/Langages-de-programmation.html][Langages de programmation]]. ~ Sylvie Boldo 
+ [[http://www.well-typed.com/blog/2017/09/visualize-cbn][Visualizing lazy evaluation]]. ~ Edsko de Vries @EdskoDeVries #Haskell
+ [[https://www.fpcomplete.com/blog/2017/09/cryptographic-hashing-haskell][Cryptographic hashing in Haskell]]. ~ M. Snoyman @snoyberg #Haskell
+ [[https://mmhaskell.com/blog/2017/9/18/checking-its-all-in-place-placeholders-and-dependent-types][Checking it's all in place: placeholders and dependent types]]. ~ James Bowen
  @james_OWA #Haskell #TensorFlow
+ [[https://dlang.org/safed.html][SafeD]]. ~ Bartosz Milewski #Programming #SafeD #Cpp #Dlang via @jborrego
+ [[https://www.isa-afp.org/entries/PLM.html][Representation and partial automation of the Principia Logico-Metaphysica in
  Isabelle/HOL]]. ~ D. Kirchner #ITP #IsabelleHOL #AFP
+ [[https://www.cs.kent.ac.uk/people/staff/dao7/publ/reprinter2017.pdf][Scrap your reprinter (a datatype generic algorithm for layout-preserving refactoring)]]. 
  ~ H. Clarke & D. Orchard #Haskell
+ [[https://deque.blog/2017/09/20/data-structure-into-types/][Transforming data structures into types: an introduction to dependent typing and its benefits]]. 
  ~ Quentin Duval @quduval #Idris
+ [[https://arxiv.org/pdf/1709.06662][Verifying properties of binarized deep neural networks]]. ~ N. Narodytska et
  als. #DeepLearning #Logic #SAT
+ [[http://www.cs.stanford.edu/~barrett/pubs/KBD+17.pdf][Reluplex: an efficient SMT solver for verifying deep neural networks]]. ~
  G. Katz et als. #DeepLearning #SMT
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-introduccion-a-la-programacion-funcional-con-haskell/][Introducción a la programación funcional con Haskell]]. #I1M2017 #Haskell
+ [[http://bit.ly/2yvLcQj][Practical concurrent Haskell: with Big Data applications]]. ~ S.L. Nita &
  M. Mihailescu #Haskell #BigData
+ [[https://www21.in.tum.de/~nipkow/pubs/ifm17.pdf][Formalising and monitoring traffic rules for autonomous vehicles in
  Isabelle/HOL]]. ~ T. Nipkow et als. #IsabelleHOL
+ [[http://www.tweag.io/posts/2017-09-22-inline-java-ghc-plugin.html][GHC compiler plugins in the wild: typing Java]]. ~ F. Domínguez & M. Boespflug
  #Haskell #Java
+ [[https://blog.scalents.com/2017/09/22/basic-category-theory-for-scala-programmers-part-i/][Basic category theory for (Scala) programmers (part I)]]. ~ Gabriel Claramunt
  @gclaramunt #Scala #Math
+ [[https://docs.google.com/presentation/d/1R5ODUBOtCxIbLBD_0xUG3prHQ6-OLyAEMwWVCIp5YxE/edit#slide=id.p][An introduction to functional programming]]. ~ Lucas Dicioccio @lucasdicioccio
  #FP
+ [[https://matela.com.br/paper/extrapolate.pdf][Extrapolate: generalizing counter-examples of functional test properties]]. ~
  R. Braquehais & C. Runciman #Haskell
+ [[https://www.cs.indiana.edu/~lepike/pubs/ieee-auto-pike.pdf][Secure automotive software (the next steps)]]. ~ L. Pike, J. Sharp, M. Tullsen,
  P.C. Hickey & J. Bielman
+ [[https://www.researchgate.net/profile/Rodrigo_Ribeiro3/publication/319162172_Certified_bit-coded_regular_expression_parsing/links/5995d65f0f7e9b91cb095a66/Certified-bit-coded-regular-expression-parsing.pdf][Certified bit-coded regular expression parsing]]. ~ R. Ribeiro & A. Du Bois
  #ITP #Agda
+ [[http://bitemyapp.com//posts/2017-09-23-please-stop-using-typed-holes.html][Alternatives to typed holes for talking to your compiler]]. ~ Christopher Allen
  @bitemyapp #Haskell
+ [[http://dr.library.brocku.ca/bitstream/handle/10464/12996/Brock_Durjay_Chowdhury_2017.pdf?sequence=1&isAllowed=y][Approximation algorithms using allegories and Coq]]. ~ D. Chowdhury #MSc_Thesis
  #Coq #Math
+ [[http://www.cs.us.es/~fsancho/?e=172][Representación del conocimiento]]. ~ F. Sancho @sanchocaparrini #IA
+ [[http://groups.csail.mit.edu/medg/ftp/psz/k-rep.html][What is a knowledge representation?]] ~ R. Davis, H. Shrobe & P. Szolovits. #AI
+ [[http://tech.frontrowed.com/2017/09/22/aggregations][Beautiful aggregations with Haskell]]. ~ Evan Borden #Haskell
+ [[https://mmhaskell.com/blog/2017/9/25/grenade-dependently-typed-neural-networks][Grenade! Dependently typed neural networks]]. ~ James Bowen @james_OWA #Haskell
  #NeuralNetworks
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-tipos-y-clases-en-haskell][Tipos y clases en Haskell]]. #I1M2017 #Haskell
+ [[http://www.tweag.io/posts/2017-09-27-array-package.html][Immutability and unboxing in array programming]]. ~ Manuel Chakravarty
  @TacticalGrace #Haskell
+ [[http://www.cs.us.es/~fsancho/?e=173][Introducción al razonamiento automático con Prover9 y Mace4]]. ~ F. Sancho
  @sanchocaparrini #Prover9 #Mace4
+ [[https://mathwithbaddrawings.com/2017/09/20/the-state-of-being-stuck/amp][The state of being stuck]]. ~ Ben Orlin #Math
+ [[https://cacm.acm.org/magazines/2017/10/221330-the-real-risks-of-artificial-intelligence/fulltext][The real risks of Artificial Intelligence]]. ~ David Lorge Parnas #AI 
+ [[http://www.lsv.fr/~dowek/Publi/analyzing.pdf][Analyzing individual proofs as the basis of interoperability between proof
  systems]]. ~ G. Dowek #Logic #ITP
+ [[http://drops.dagstuhl.de/opus/volltexte/2017/7927/pdf/LIPIcs-TIME-2017-16.pdf][The time ontology of Allen's interval algebra]]. ~ M. Grüninger & Z. Li
  #Prover9
+ [[http://materials.dagstuhl.de/files/17/17361/17361.MartinGrohe.Slides1.pdf][Machine learning and algorithmic model theory]]. ~ M. Grohe #ML #Logic
+ [[https://github.com/hmemcpy/milewski-ctfp-pdf][Category theory for programmers]]. ~ Bartosz Milewski (unofficial PDF and LaTeX
  source) #Haskell #Math
+ [[https://github.com/pachopepe/Lambda/raw/master/lambda.pdf][Una Lambda aventura en Haskell]]. ~ Francisco José Cháves #Haskell #Lógica
  #Matemáticas
+ [[http://kaygun.tumblr.com/post/165797894404][Expected value of the diameter of a tree]]. ~ Atabey Kaygun @Atabey_Kaygun
  #CommonLisp #Math
+ [[https://arxiv.org/pdf/1709.09994][Premise selection for theorem proving by deep graph embedding]]. ~ M. Wang er
  als. #ATP #DeepLearning

** Octubre 2017

+ [[https://www.avoltus.com/fi/blog/2017-9-29-profunctors-encoding-and-decoding][Profunctors for encoding and decoding]]. ~ Kari Pahula #Haskell
+ [[http://blogs.intevation.de/wilde/haskell/functions-as-functors][Making your brain tingle: Functions as functors]]. ~ Sascha Wilde
  #Haskell
+ [[https://github.com/pbv/codex][Codex: a web application for setting programming exercises in a learning
  environment]]. ~ Pedro Vasconcelos #Haskell
+ [[https://github.com/pbv/codex-quickcheck][Codex-QuickcCheck: QuickCheck customizations for the Codex learning
  environment]]. ~ Pedro Vasconcelos #Haskell
+ [[http://bit.ly/2xJlEBu][Ofertas de trabajos del mes de septiembre]]. #MULCIA
+ [[https://github.com/jaalonso/Lecturas_GLC#septiembre-2017][Lista de lecturas compartidas en septiembre de 2017]]. #GLC
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-metodos-elementales-de-definicion-de-funciones-en-haskell/][Métodos elementales de definición de funciones en Haskell]]. #I1M2017 #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-de-definiciones-por-composicion-sobre-numeros-y-listas/][Ejercicios de definiciones por composición sobre números y listas]]. #I1M2017
  #Haskell
+ [[https://mmhaskell.com/blog/2017/10/2/trouble-with-databases-persevere-with-persistent][Trouble with databases? Persevere with Persistent]]! ~ James Bowen #Haskell
+ [[http://www.michaelbeeson.com/research/papers/ProofCheckingEuclid.pdf][Proof-checking Euclid]]. ~ M. Beeson, J. Narboux & F. Wiedijk #ITP #Coq
  #HOL_Light #Math
+ [[http://irreal.org/blog/?p=6641][Org mode as an Exocortex]]. ~ Irreal #Emacs
+ [[https://arxiv.org/pdf/1710.00794][What does explainable AI really mean? A new conceptualization of
  perspectives]]. ~ D. Doran, S. Schulz & T.R. Besold #XAI
+ [[http://cmsc-16100.cs.uchicago.edu/2017/Lectures/01/intro.php][CMSC-16100 Lecture 1: Introduction to Haskell]]. ~ R. Chugh & S.A. Kurtz
  #Haskell #I1M2017
+ [[https://www.gitbook.com/book/ravichugh/a-quarter-of-haskell/details][A Quarter of Haskell (Supplementary notes for UChicago CMSC 16100)]]. ~
  R. Chugh & S.A. Kurtz #Haskell #I1M2017
+ [[https://ravichugh.gitbooks.io/a-quarter-of-haskell/content/introduction][A Quarter of Haskell: Introduction to Haskell]]. ~ R. Chugh & S.A. Kurtz
  #Haskell #I1M2017
+ [[http://www.cs.princeton.edu/~wmansky/messaging.pdf][A verified messaging system]]. ~ W. Mansky, A.W. Appel & A. Nogin #Coq
+ [[https://github.com/DSLsofMath/DSLsofMath/raw/master/L/snapshots/DSLsofMathNotes_2017-09-28.pdf][Domain Specific Languages of Mathematics: Lecture Notes]]. ~ P. Jansson
  & C. Ionescu #Haskell #Math #I1M2017
+ [[https://patternsinfp.wordpress.com/2017/10/04/metamorphisms/][Metamorphisms]]. ~ Jeremy Gibbons #Haskell
+ [[https://interstices.info/jcms/p_95446/les-methodes-formelles-l-autre-arme-de-la-cybersecurite][Les méthodes formelles: l'autre arme de la cybersécurité]]. ~ Jean
  Goubault-Larrecq #Formal_verification
+ [[http://www.i-programmer.info/news/98-languages/11184-which-languages-are-bug-prone.html][Which languages are bug prone]]. ~ Janet Swift #Programming
+ [[https://www.fpcomplete.com/blog/2012/09/ten-things-you-should-know-about-haskell-syntax][Ten things you should know about Haskell syntax]]. ~ Bartosz Milewski
  #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/1m2017-definiciones-por-comprension][Definiciones por comprensión]]. #I1M2017 #Haskell
+ [[http://profs.sci.univr.it/~bonacina/papers/DRLI2017DA.pdf][Deduzione automatica]]. ~ M.P. Bonacina #ATP #Logic
+ [[http://www.imm.dtu.dk/~samo/typing-soundness/TypingResult.pdf][Formalizing and proving a typing result for security protocols in
  Isabelle/HOL]]. ~ A.V. Hess & S. Mödersheim #ITP #IsabelleHOL
+ [[http://www.tweag.io/posts/2017-10-05-streaming2.html][How to compose streaming programs]]. ~F. Domínguez #Haskell
+ [[http://goto.ucsd.edu/~nvazou/popl18/_site/NaturalDeduction.html][Natural deduction on Liquid Haskell]]. ~ Niki Vazou #Haskell
  #LiquidHaskell #Logic
+ [[http://blog.ploeh.dk/2017/10/04/from-design-patterns-to-category-theory/][From design patterns to category theory]]. ~ Mark Seemann #Programming #Math
+ [[http://freecontent.manning.com/lists-as-context-a-deeper-look-at-the-applicative-type-class][Lists as context: A deeper look at the Applicative Type Class]]. ~ Will Kurt
  #Haskell
+ [[http://www.haskellforall.com/2017/10/why-do-our-programs-need-to-read-input.html][Why do our programs need to read input and write output?]] ~ G. Gonzalez
  #Haskell
+ [[https://www.johndcook.com/blog/2017/10/07/exponential-sums-make-pretty-pictures/][Exponential sums make pretty pictures]]. ~ J.D. Cook #Math #Programming
+ [[https://haskellweekly.news/issues/75.html][Haskell Weekly 75: News from the Haskell community (October 5 2017)]]. #Haskell 
+ [[https://www.stackbuilders.com/news/scalendar-time-management-in-haskell][scalendar: Haskell Library to deal with resource availability in a
  Calendar]]. ~ Sebastián Pulido #Haskell
+ [[https://cacm.acm.org/magazines/2017/10/221326-a-large-scale-study-of-programming-languages-and-code-quality-in-github/fulltext][A large-scale study of programming languages and code quality in GitHub]]. ~
  B. Ray et als. #Programming
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-definiciones-por-comprension-2][Definiciones por comprensión (2)]]. #Haskell #I1M2017
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-de-definiciones-por-composicion-sobre-numeros-y-listas-2][Ejercicios de definiciones por composición sobre números y listas (2)]]. 
  #Haskell #I1M2017
+ [[https://www.informatik.uni-kiel.de/~mh/papers/ICLP17.pdf][Semantic versioning checking in a declarative package manager]]. ~ M. Hanus
  #Curry
+ [[http://bahr.io/pubs/files/hutton17jfp-paper.pdf][Functional Pearl: Compiling a fifty year journey]]. ~ G. Hutton & P. Bahr
  #Haskell
+ [[http://www.cl.cam.ac.uk/research/hvg/Isabelle/dist/Isabelle2017/doc/NEWS.html][News in Isabelle2017 (October 2017)]]. #IsabelleHOL
+ [[https://www21.in.tum.de/~hupel/pub/isabelle-cakeml.pdf][A verified compiler from Isabelle/HOL to CakeML]]. ~ L. Hupel & T. Nipkow
  #IsabelleHOL
+ [[http://www.buffalo.edu/~wlawvere/concep-3.pdf][Matemáticas conceptuales: Una primera introducción a categorı́as]]. ~ W. Lawvere
  & S. Schanuel #Matemáticas
+ [[https://wiki.haskell.org/User:Michiexile/MATH198][Category theory and functional programming]]. ~ Mikael Vejdemo Johansson #Math
  #CompSci #FunctionalProgramming
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-definiciones-por-recursion][Definiciones por recursión]]. #Haskell #I1M2017
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-de-definiciones-con-condicionales-guardas-o-patrones][Ejercicios de definiciones con condicionales, guardas o patrones]]. #Haskell
  #I1M2017
+ [[http://www.joachim-breitner.de/blog/732-Isabelle_functions__Always_total%2C_sometimes_undefined][Isabelle functions: Always total, sometimes undefined]]. ~ Joachim Breitner
  #IsabelleHOL
+ [[https://maxow.github.io/posts/computational-geometry-set-operations-on-polytopes.html][Computational geometry: set operations on polytopes]]. ~ Maksymilian Owsianny
  #Haskell #Math
+ [[https://docs.google.com/presentation/d/1_sD9a5-u3urGbJPuxebBQXrDtoqvKlEII3brnm0ZWb0/edit#slide=id.gc6f90357f_0_0][A Monoid for all seasons]]. ~ Julie Moronuki #Haskell #Logic
  #Math
+ [[https://idontgetoutmuch.files.wordpress.com/2017/10/test.pdf][Making Kalman filtering correct with types]]. ~ Dominic Steinitz
  #Haskell #DataScience
+ [[http://www.tweag.io/posts/2017-10-12-vector-package.html][Array fusion with vector]]. ~ Manuel M T Chakravarty #Haskell
+ [[https://github.com/Gabriel439/slides/blob/master/liquidhaskell/slides.md][Scrap your bounds checks with Liquid Haskell]]. ~ Gabriel Gonzalez
  #Haskell #LiquidHaskell
+ [[http://blog.sumtypeofway.com/recursion-schemes-part-iv-time-is-of-the-essence/][Recursion schemes, part IV: Time is of the essence]]. ~ Patrick Thomson
  #Haskell
+ [[http://cl-informatik.uibk.ac.at/users/griff/publications/Sternagel-Draft-2017.pdf][A mechanized proof of Higman’s lemma by open induction]]. ~ Christian Sternagel
  #IsabelleHOL #Math
+ [[https://www.quora.com/What-are-some-scientific-applications-of-Haskell/answer/Edward-Kmett][What are some scientific applications of Haskell?]] ~ Edward Kmett
  #Haskell
+ [[http://blog.sigfpe.com/2017/10/a-tail-we-dont-need-to-wag.html][A tail we don't need to wag]]. ~ Dan Piponi #Haskell
+ [[http://gelisam.blogspot.com.es/2017/10/composing-declarations-in-template.html][Composing declarations in Template Haskell]]. #Haskell
+ [[https://amp.businessinsider.com/github-ceo-wanstrath-says-automation-will-replace-software-coding-2017-10][The CEO of GitHub, which caters to coders, thinks automation will bring an
  end to traditional software programming]]. ~ Becky Peterson #Programming
+ [[https://github.com/antalsz/hs-to-coq][hs-to-coq: Convert Haskell source code to Coq source code]]. ~ Antal
  Spector-Zabusky #Haskell #Coq
+ [[https://www.reddit.com/r/haskell/comments/75zez1/magichaskeller_based_agent_makes_finalist_in_1st/][MagicHaskeller based agent makes finalist in 1st round of general AI
  challenge!]] #Haskell #AI
+ [[http://institucional.us.es/blogimus/2017/10/duelo-de-titanes-analisis-contra-combinatoria/][Contando números primos: Análisis contra Combinatoria]]. ~ Juan Arias de Reyna
  #Matemáticas #Computación
+ [[https://arxiv.org/pdf/1503.01839][The combinatorial algorithm for computing π(x)]]. ~ Douglas B. Staple #Math
  #CompSci
+ [[https://www.isa-afp.org/entries/Diophantine_Eqns_Lin_Hom.html][Homogeneous linear diophantine equations in Isabelle/HOL]]. ~ Florian Meßner et
  als. #ITP #IsabelleHOL #Math
+ [[https://blogs.ams.org/mathgradblog/2017/10/15/machine-checked-proof][Machine-checked proof]]. ~ Jacob Gross #ITP #Math
+ [[https://www.isa-afp.org/entries/Lowe_Ontological_Argument.html][Computer-assisted reconstruction and assessment of E. J. Lowe's modal
  ontological argument]]. ~ D. Fuenmayor & C. Benzmüller #IsabelleHOL
+ [[https://github.com/vrom911/hs-init][hs-init: Tool for creating completely configured production Haskell projects]]. 
  ~ Veronika Romashkina #Haskell
+ [[http://www.haskellforall.com/2017/10/advice-for-haskell-beginners.html][Advice for Haskell beginners]]. ~ G. Gonzalez #Haskell
+ [[https://www.isa-afp.org/entries/Zeta_Function.html][The Hurwitz and Riemann ζ functions in Isabelle/HOL]]. ~ M. Eberl #IsabelleHOL
  #ITP #Math
+ [[http://simonmar.github.io/posts/2017-10-17-hotswapping-haskell.html][Hotswapping Haskell]]. ~ Jon Coens #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-de-definiciones-por-comprension/][I1M2017: Ejercicios de definiciones por comprensión]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-comienzo-del-curso][RA2017: Comienzo del curso de "Razonamiento automático" del Máster en
  Lógica, Computación e Inteligencia Artificial]]
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-presentacion-del-curso-de-razonamiento-automatico/][RA2017: Presentación del curso de “Razonamiento automático”]].
+ [[https://www.isa-afp.org/entries/Linear_Recurrences.html][A verified solver for linear recurrences in Isabelle/HOL]]. ~ M. Eberl
  #IsabelleHOL #ITP #Math
+ [[https://www.isa-afp.org/entries/Dirichlet_Series.html][Dirichlet series in Isabelle/HOL]]. ~ M. Eberl #IsabelleHOL #ITP #Math
+ [[https://cacm.acm.org/news/222023-ai-algorithms-are-starting-to-teach-ai-algorithms/fulltext][AI algorithms are starting to teach AI algorithms]]. #AI #Programming
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-de-definiciones-por-comprension-2/][I1M2017: Ejercicios de definiciones por comprensión (2)]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-de-definiciones-por-recursion-1/][I1M2017: Ejercicios de definiciones por recursión (1)]]. #Haskell
+ [[https://www.isa-afp.org/entries/Diophantine_Eqns_Lin_Hom.html][Homogeneous linear diophantine equations in Isabelle/HOL]]. ~ F. Messner et
  als. #IsabelleHOL #ITP #Math
+ [[http://www.cs.utexas.edu/users/ameliaj/pubs/ajh_thesis.pdf][Formal methods for Answer Set Programming]]. ~ Amelia J. Harrison #PhD_Thesis
  #ASP
+ [[https://arxiv.org/pdf/1511.01568][Formalization of quantum protocols using Coq]]. ~ J. Boender, F. Kammüller &
  R. Nagarajan #ITP #Coq
+ [[http://forallx.openlogicproject.org/forallxyyc.pdf][forall x: Calgary Remix (An introduction to formal logic)]]. ~ P.D. Magnus et
  als. #eBook #Logic  
+ [[https://www.isa-afp.org/entries/Count_Complex_Roots.html][Count the number of complex roots in Isabelle/HOL]]. ~ Wenda Li #IsabelleHOL
  #ITP #Math
+ [[https://www.johndcook.com/blog/2017/10/21/empirically-testing-chowla-conjecture][Empirically testing the Chowla conjecture]]. ~ J.D. Cook #Math
  #Programming
+ [[https://elfe-prover.org/downloads/thesis.pdf][ELFE: An interactive theorem prover for undergraduate students]]. ~ Maximilian
  Doré #ITP #Logic #Haskell
+ [[https://github.com/maxdore/elfe][ELFE: Interactive theorem proving for students (code)]]. ~ Maximilian Doré #ITP
  #Logic #Haskell
+ [[http://www.ega-math.narod.ru/Math/Manin.htm][Good proofs are proofs that make us wiser]]. ~ Yu.I.Manin #Math
+ [[http://bit.ly/2yFAkzP][Formal methods during the programming phase]]. ~ R.F. Paige et
  als. #Formal_methods
+ [[http://ani.sh/popl18.pdf][Towards complete specification and verification with SMT]]. ~ N. Vazou et
  als. #Haskell #LiquidHaskell #Logic #SMT 
+ [[https://works.bepress.com/yuliya_lierler/71/download][Handout on basics behind answer sets]]. ~ Yuliya Lierler #ASP #Logic
  #Programming
+ [[https://www.isa-afp.org/entries/Winding_Number_Eval.html][Evaluate winding numbers through Cauchy indices in Isabelle/HOL]]. ~ Wenda Li
  #IsabelleHOL #ITP #Math
+ [[https://annals-csis.org/proceedings/2017/drp/pdf/314.pdf][Formalization of Pell's equation in the Mizar system]]. ~ M. Acewicz & K. Pak
  #ITP #Mizar #Math
+ [[https://mmhaskell.com/blog/2017/10/23/tangled-webs-testing-an-integrated-system][Tangled Webs: Testing an integrated system]]. ~ James Bowen #Haskell
+ [[http://www2.caminos.upm.es/Departamentos/matematicas/revistapm/revista_impresa/vol_VII_num_1/exp_doc_didactica_con_r.pdf][Didáctica con R, menos cuentas y más pensamiento crítico]]. ~ A. Galindo
  #Matemáticas #Enseñanza
+ [[https://annals-csis.org/proceedings/2017/drp/pdf/289.pdf][Progress in the independent certification of Mizar Mathematical Library in
  Isabelle]]. ~ C. Kaliszyk & K. Pak #ITP #IsabelleHOL #Mizar #Math
+ [[https://arxiv.org/pdf/1710.06187][System Description: Russell (A logical framework for deductive systems)]]. ~
  Dmitry Vlasov #ITP #Logic
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-el-cifrado-cesar-en-haskell][I1M2017: El cifrado César en Haskell]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-de-definiciones-por-recursion-2][I1M2017: Ejercicios de definiciones por recursión (2)]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-programacion-funcional-con-isabellehol][RA2017: Programación funcional con Isabelle/HOL]]. #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Transition_Systems_and_Automata.html][Transition systems and automata in Isabelle/HOL]]. ~ J. Brunner #IsabelleHOL
+ [[https://wickstrom.tech/programming/2017/10/27/motor-finite-state-machines-haskell.html][Motor: Finite-state machines in Haskell]]. ~ Oskar Wickström #Haskell
+ [[https://arxiv.org/pdf/1710.09756][Linear Haskell: practical linearity in a higher-order polymorphic language]]. ~
  Jean-Philippe Bernardy et als. #Haskell
+ [[http://www.tweag.io/posts/2017-10-27-stackage-head.html][Using Stackage for GHC regression testing]]. ~ Manuel Chakravarty
  #Haskell
+ [[https://www.isa-afp.org/entries/Kuratowski_Closure_Complement.html][The Kuratowski closure-complement theorem in Isabelle/HOL]]. ~ P. Gammie &
  G. Gioiosa. #ITP #IsabelleHOL #Math
+ [[http://www.techrepublic.com/google-amp/article/whats-the-future-of-programming-the-answer-lies-in-functional-languages/][What's the future of programming? The answer lies in functional languages]]. ~
  Nick Heath #Programming #Haskell
+ [[https://arxiv.org/pdf/1710.08195][The refinement calculus of reactive systems toolset]]. ~ I. Dragomir,
  V. Preoteasa & S. Tripakis #IsabelleHOL
+ [[http://blog.functorial.com/posts/2017-10-28-Comonads-For-Optionality.html][Comonads for optionality]]. ~ Phil Freeman #Haskell #PureScript
+ [[http://blog.functorial.com/posts/2017-10-28-The-Game-Of-Pattern-Matching.html][The game of pattern matching]]. ~ Phil Freeman #Haskell #PureScript
+ [[http://argumatronic.com/posts/2017-10-28-a-new-hope.html][Constructive pedagogy]]. ~ Julie Moronuki #Haskell #Pedagogy
+ [[https://github.com/mrkkrp/modern-uri][Modern library for working with URIs]]. ~ Mark Karpov #Haskell 
+ [[http://www.emanueledosualdo.com/blog/2017/why-computer-science-is-a-science.html][Why Computer Science is a science]]. Emanuele D'Osualdo #CompSi
+ [[http://www.elmundo.es/f5/campus/2017/10/18/59e643dde2704ec9438b45fa.html][Cuatro décadas de Informática en España]]. ~ Ángel G. Perianes #Historia
+ [[https://openlibra.com/es/book/download/temporal-answer-set-programming][Temporal Answer Set Programming]]. ~ M. Diéguez #ASP
+ [[https://50ans.inria.fr/fr/gerard-huet-langages-et-logiciel/][Réminiscences d’un chercheur en informatique 1967-2000]]. ~ Gérard Huet #OCaml
  #Coq
+ [[https://jfr.unibo.it/article/download/6927/7043][Formal proof of Banach-Tarski paradox]]. ~ Daniel de Rauglaudre #ITP #Coq #Math 
+ [[https://speakerdeck.com/danielasfregola/lambda-world-2017-a-pragmatic-introduction-to-category-theory][A pragmatic introduction to category theory]]. ~ Daniela Sfregola
  #Scala #Category_theory
+ [[https://adamsmith.as/papers/answer-set-programming-in-proofdoku.pdf][Answer Set Programming in Proofdoku]]. ~ Adam M. Smith #ASP #Game
+ [[https://proofdoku.com][proofdoku: Game with ASP-backed mechanics]]. ~ By Nick Warren, Mason Reed &
  Adam Smith #ASP #Game
+ [[http://bit.ly/2xy1Bmj][Answer Set Programming tutorial (AIIDE2017)]]. ~ Adam M. Smith #ASP
  #AI #Game
+ [[http://bit.ly/2xy2jzV][Jean D’Alembert: cómo pasar de matemático a figura pública]]. ~ J. Ferreirós
  #Historia #Matemática
+ [[https://www.johndcook.com/blog/2017/10/27/poisson-distribution-and-prime-numbers][Poisson distribution and prime numbers]]. ~ J.D. Cook #Math #Programming
  #Python
+ [[http://pragmaticemacs.com/emacs/view-and-annotate-pdfs-in-emacs-with-pdf-tools/][View and annotate PDFs in Emacs with PDF-tools]]. #Emacs
+ [[https://www.math.ias.edu/files/mathandcomp.pdf][Mathematics and computation]]. ~ Avi Wigderson #eBook #Math #CompSci
+ [[https://www.isa-afp.org/browser_info/current/AFP/Buchi_Complementation/document.pdf][Büchi complementation in Isabelle/HOL]]. ~ J. Brunner #IsabelleHOL
+ [[http://axiom-wiki.newsynthesis.org/public/refs/Meijer-db-utwente-40501F46.pdf][Functional programming with bananas, lenses, envelopes and barbed wire]]. ~
  E. Meijer, M. Fokkinga & R. Paterson #FunctionalProgramming
+ [[https://github.com/ekmett/recursion-schemes][Generalized bananas, lenses and barbed wire]]. ~ Edward Kmett #Haskell
+ [[https://github.com/vmchale/recursion_schemes][An Idris library for recursion schemes, with liberal examples]]. ~ Vanessa
  McHale #Idris
+ [[http://slides.com/zainabali_/peeling_the_banana][Peeling the banana: Recursion schemes from first principles]]. ~ Zainab Ali
  #Scala
+ [[http://dev.stephendiehl.com/nearfuture.pdf][Near future of programming languages]]. ~ Stephen Diehl #Programming
+ [[https://adamsmith.as/papers/mechanizing_exploratory_game_design_book.pdf][Mechanizing exploratory game design]]. ~ Adam M. Smith #eBook #ASP
  #Game #AI
+ [[https://github.com/vmchale/command-line-tweeter][Command Line Interface Tweeter in Haskell]]. ~ Vanessa McHale #Haskell
+ [[https://arxiv.org/pdf/1710.10258][Temporal type theory (A topos-theoretic approach to systems and behavior)]]. ~
  P. Schultz, D.I. Spivak
+ [[http://alessandrobruni.name/software/2017/03/02/crossword-solving-in-asp.html][Solving a crossword in answer set programming]]. ~ Alessandro Bruni
  #ASP

** Noviembre 2017 

+ [[https://galois.com/blog/2017/10/formal-methods-krack-vulnerability][Formal methods and the KRACK vulnerability]]. ~ Joey Dodds #Cryptography
  #Formal_methods
+ [[http://pcgbook.com/wp-content/uploads/chapter08.pdf][ASP with applications to mazes and levels]]. ~ Mark J. Nelson & Adam M. Smith
  @rndmcnlly #ASP #Game
+ [[http://www.cs.cmu.edu/~cmartens/asp-notes.pdf][Notes on Answer Set Programming]]. ~ Chris Martens #ASP #Logic Programming
+ [[https://thelazydev.net/blog/post/the-basics-of-answer-set-programming][The basics of Answer Set Programming]]. ~ Olaf Aviss #ASP
+ [[http://www.hakank.org/constraint_programming_blog/2010/12/a_first_look_at_answer_set_programming.html][A first look at Answer Set Programming]]. ~ Hakan Kjellerstrand (@hakankj) #ASP
+ [[http://picat-lang.org/picatbook2015.html][Constraint solving and planning with Picat]]. ~ N.F. Zhou, H. Kjellerstrand,
  J. Fruhman #eBook #Logic #Programming #Picat
+ [[https://bioasp.github.io][BioASP: Answer Set Programming for systems biology]]. #ASP
+ [[https://www.cs.us.es/~jalonso/apuntes/Categorias_y_programacion/Categorias_y_programacion.html][Lecturas de teorías de categorías y programación funcional]]. 
  #Matemáticas #Programación
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-libres-de-cuadrados-2][Exercitium: Números libres de cuadrados]]. #Haskell #I1M2017
+ [[https://arxiv.org/pdf/1710.11204][Improve SAT-solving with machine learning]]. ~ Haoze Wu #ATP #SAT #ML
+ [[https://github.com/GU-CLASP/TypedFlow][TypedFlow: a typed, higher-order frontend to TensorFlow and a high-level
  library for deep-learning]]. ~ Jean-Philippe Bernardy #Haskell #DeepLearning
+ [[http://online.liebertpub.com/doi/pdf/10.1089/ees.2016.0223][Academic research in the 21st century: maintaining scientific integrity in a climate of perverse incentives and hypercompetition]]. ~ M.A. Edwards, S. Roy
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-ejercicios-de-programacion-funcional-con-isabellehol/][RA2017: Ejercicios de programación funcional con Isabelle/HOL]]. #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-razonamiento-automatico-sobre-programas-en-isabellehol][RA2017: Razonamiento automático sobre programas en Isabelle/HOL]]. #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-funciones-de-orden-superior-en-haskell][I1M2017: Funciones de orden superior en Haskell]]. #Haskell
+ [[http://neilmitchell.blogspot.com/2017/11/understanding-hlint-rules.html][Understanding HLint rules]]. ~ Neil Mitchell #Haskell
+ [[http://gelisam.blogspot.com.es/2017/11/computing-with-impossible-types.html][Computing with impossible types]]. ~ @haskell_cat #Haskell
+ [[https://byorgey.wordpress.com/2017/11/03/sum-of-heights-in-a-binary-tree][Sum of heights in a binary tree]]. ~ Brent Yorgey #Algorithmic
+ [[http://aivikasoft.com/downloads/aivika/aivika.pdf][Aivika: computation-based modeling and simulation in Haskell]]. ~ David
  E. Sorokin et als. #eBook #Haskell #Simulation
+ [[https://github.com/rpeszek/notes-milewski-ctfp-hs][Notes and thoughts from reading Milewski "Category theory for programmers"
  written in Haskell]]. ~ Robert Peszek #Haskell #Category_theory
+ [[http://orca-mwe.cf.ac.uk/105921/2/main.pdf][Foundations of implementations for formal argumentation]]. ~ F. Cerutti et
  als. #Logic #AI #ASP
+ [[http://logicaltypes.blogspot.com/2017/10/october-2017-1haskelladay-problems-and.html][October 2017 1HaskellADay problems and solutions]]. ~ Douglas M. Auclair
  (@geophf) | Typed Logic #Haskell #1HaskellADay
+ [[https://github.com/jaalonso/Lecturas_GLC#octubre-2017][GLC: Lista de lecturas compartidas en octubre de 2017]]. 
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-completos][Exercitium: Números completos]]. #Haskell #I1M2017
+ [[https://blockstream.com/simplicity.pdf][Simplicity: a new language for blockchains]]. ~ Russell O’Connor #Coq #Blockchain 
+ [[http://www.abc.es/ciencia/abci-matematicas-puede-esconder-donut-201711031107_noticia.html][Las matemáticas que puede esconder un dónut]]. ~ Alfonso J. Población
  #Matemáticas
+ [[https://medium.com/q-e-d/who-gets-to-be-called-a-mathematician-15f73f2d0e5d][Who gets to be called a mathematician?]] ~ Junaid Mubeen (@fjmubeen) #Math
+ [[http://bit.ly/2zkfIPP][A set solver for finite relation algebra]]. ~ M. Cristiá, G. Rossi #CLP
+ [[http://www.glc.us.es/~jalonso/exercitium/primos-equidistantes-2][Exercitium: Primos equidistantes]]. #Haskell #I1M2017
+ [[https://github.com/BartoszMilewski/Publications/raw/master/ProfunctorOptics-LambdaWorld2017.pdf][Profunctor Optics]]. ~ Bartosz Milewski (@BartoszMilewski) #Haskell
+ [[https://bitbucket.org/prl_tokyo/bigul][BiGUL: the bidirectional generic update language]]. #Haskell #Agda
+ [[https://bitbucket.org/prl_tokyo/bigul/raw/logic/POPL18/logic.pdf][An axiomatic basis for bidirectional programming]]. ~ H.S. Ko, Z. Hu #Agda
+ [[https://josh-hs-ko.github.io/Agda/POPL18/Everything.html][An axiomatic basis for bidirectional programming (Agda code)]]. ~ H.S. Ko,
  Z. Hu #Agda
+ [[http://iris-project.org/pdfs/2018-popl-runST-submission.pdf][A logical relation for monadic encapsulation of state (Proving contextual
  equivalences in the presence of runST)]]. ~ A. Timany #Haskell
+ [[http://www.eldiario.es/cultura/tecnologia/AutoML-maquina-crea-maquinas-inteligentes_0_705179666.html][AutoML, la máquina que crea otras máquinas inteligentes]]. ~ David Sarabia
  (@DSRELD) #IA #AA
+ [[https://research.googleblog.com/2017/11/automl-for-large-scale-image.html][AutoML for large scale image classification and object detection]]. ~ B. Zoph,
  V. Vasudevan, J. Shlens, Q. Le #AI #ML
+ [[https://medium.com/q-e-d/is-mathematics-a-fine-art-5feede2a8f5e][Is mathematics a fine art?]] ~ Adrian Hindes #Math
+ [[https://www.nytimes.com/2017/08/13/technology/artificial-intelligence-safety-training.html][Teaching A.I. systems to behave themselves]]. ~ Cade Metz #AI #ML
+ [[https://www.quantamagazine.org/mathematicians-measure-infinities-find-theyre-equal-20170912][Mathematicians measure infinities and find they’re equal]]. ~ Kevin Hartnett
  (@KSHartnett) #Math via @QuantaMagazine
+ [[http://www.glc.us.es/~jalonso/exercitium/producto-cartesiano-de-una-familia-de-conjuntos][Exercitium: Producto cartesiano de una familia de conjuntos]]. #Haskell
  #I1M2017
+ [[https://nikivazou.github.io/static/popl18/refinement-reflection.pdf][Refinement reflection: complete verification with SMT]]. ~ Niki Vazou
  (@nikivazou) #Haskell #LiquidHaskell #Logic #SMT
+ [[https://functional.works-hub.com/blog/Persistent-Red-Black-Trees-in-Haskell?utm_campaign=Edmund&utm_content=62649506][Persistent red black trees in Haskell]]. ~ Abhiroop Sarkar #Haskell
+ [[http://www.cs.nott.ac.uk/%7Epszgmh/improving.pdf][Improving Haskell]]. ~ Martin A.T. Handley & Graham Hutton #Haskell
+ [[https://github.com/mathandley/Unie][Unie: Inequational reasoning assistant for proofs relating to improvement
  theory]]. ~ Martin A.T. Handley #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-codificacion-binaria-y-transmision-de-cadenas-en-haskell][I1M2017: Codificación binaria y transmisión de cadenas en Haskell]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-operaciones-conjuntistas-con-listas][I1M2017: Operaciones conjuntistas con listas]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/biparticiones-de-un-numero][Exercitium: Biparticiones de un número]]. #Haskell #I1M2017
+ [[https://www.cis.upenn.edu/%7Ellamp/pdf/GeneratingGoodGenerators.pdf][Generating good generators for inductive relations]]. ~ L. Lampropoulos,
  Z. Paraskevopoulou, B.C. Pierce #Coq #QuickCheck
+ [[http://www.cse.chalmers.se/~russo/publications_files/plas2017.pdf][Encoding DCC (Dependency Core Calculus) in Haskell]]. ~ M. Algehed & A. Russo
  #Haskell
+ [[https://elpais.com/elpais/2017/11/08/el_aleph/1510158827_253966.amp.html][Cómo calcular áreas contando puntitos]]. ~ M.A. Morales @gaussianos | El Aleph
  #Matemáticas
+ [[https://arxiv.org/pdf/1711.01477][An introduction to univalent foundations for mathematicians]]. ~ D.R. Grayson
  #Math #Logic #HoTT
+ [[https://arxiv.org/pdf/1711.01994][Proof theory]]. ~ J. Avigad #Math #Logic #ATP
+ [[https://arxiv.org/pdf/1711.02120][Small resolution proofs for QBF using dependency treewidth]]. ~ E. Eiben,
  R. Ganian & S. Ordyniak #Math #Logic #ATP
+ [[https://arxiv.org/pdf/1710.10385][Capturing the future by replaying the past (Functional Pearl)]]. ~ J. Koppel &
  A. Solar #SML
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-libres-de-cuadrados-2/][Exercitium: "Números_libres de cuadrados"]]. #Haskell #I1M2017
  #I1M2017
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-definiciones-de-tipos-en-haskell/][I1M2017: Definiciones de tipos en Haskell]]. #Haskell
+ [[http://bit.ly/2zyZrGG][Finite state machines? (Your compiler wants in!)]] ~ Oskar Wickström
  (@owickstrom) #Haskell #Idris
+ [[http://tpetricek.github.io/Talks/2017/aliens-lambda-calculus/codemesh][Would aliens understand lambda calculus?]] ~ Tomas Petricek (@tomaspetricek)
  #Math #Logic #CompSci
+ [[https://youtu.be/GMm_AGbgWv0][Verifiable computing in Haskell]]. ~ Anthony Sheldon #Haskell #Math
+ [[https://cgi.csc.liv.ac.uk/~slk/drafts/safety_isabelle_ifm2017.pdf][Spatial reasoning about motorway traffic safety with Isabelle/HOL]]. ~ Sven
  Linker #IsabelleHOL
+ [[https://www.isa-afp.org/browser_info/current/AFP/Hybrid_Multi_Lane_Spatial_Logic/document.pdf][Hybrid multi-lane spatial logic in Isabelle/HOL]]. ~ Sven Linker #IsabelleHOL
+ [[https://patternsinfp.wordpress.com/2017/11/09/the-digits-of-pi][The digits of pi]]. ~ Jeremy Gibbons @jer_gib #Haskell #Math
+ [[http://chriswarbo.net/blog/2017-11-09-haskell_theory_exploration_scripts.html][Haskell theory exploration scripts]]. ~ Chris Warburton #Haskell
+ [[https://hackernoon.com/the-has-type-class-pattern-ca12adab70ae][The Has type class pattern]]. ~ Jonathan Fischoff #Haskell via @topical_hq
+ [[https://www.isa-afp.org/browser_info/current/AFP/IMAP-CRDT/document.pdf][Formalization of a Conflict-free Replicated Datatype for Internet Message
  Access Protocol commands in Isabelle/HOL]]. ~ T. Jungnickel, L. Oldenburg &
  M. Loibl #IsabelleHOL
+ [[http://publications.lib.chalmers.se/records/fulltext/252478/252478.pdf][Theory exploration on infinite structures]]. ~ S.H. Einarsdóttir #IsabelleHOL
+ [[http://blairarchibald.co.uk/resources/papers/jpdc-preprint-2017.pdf][Replicable parallel branch and bound search]]. ~ B. Archibald, P. Maier,
  C. McCreesh, R. Stewart & P. Trinder #Haskell
+ [[https://github.com/alpacaaa/elm-to-purescript-cheatsheet][Purescript for Elm developers]]. ~ Marco Sampellegrini (@_alpacaaa) #PureScript
  #Elm
+ [[http://www.dc.fi.udc.es/~cabalar/logicalASP.pdf][Answer Set Programming from a logical point of view]]. ~ P. Cabalar, D. Pearce
  & A. Valverde #ASP
+ [[http://www.glass-bead.org/article/glass-bead-conversation-catarina-dutch-novaes-reviel-netz][Formalisms and formalizations: Glass Bead in conversation with Catarina
  Dutilh Novaes and Reviel Netz]]. #Logic #Math via @cdutilhnovaes
+ [[https://www.quantamagazine.org/to-settle-infinity-question-a-new-law-of-mathematics-20131126][To settle infinity question, a new law of Mathematics]]. ~ Natalie Wolchover
  (@nattyover) #Math via @QuantaMagazine
+ [[https://arxiv.org/pdf/1711.00678][Scientists in silico?]] ~ Carl McBride #CompSci
+ [[http://argumentationcompetition.org/2017/argmat-clpb.pdf][argmat-clpb: Solve argumentation problems using Constraint Logic Programming
  over boolean variables]]. ~ F. Pu, G. Luo & Y. Chen #CLP
+ [[http://bit.ly/2hmhqG4][Vigila tus primos]]. ~ Juan Arias de Reyna #Matemáticas #Computación #RSA
+ [[http://www.eldiario.es/cultura/privacidad/entender-Gobierno-desactivado-DNI-electronico_0_706229708.html][Cinco claves para entender por qué el Gobierno ha desactivado tu DNI electrónico]]. ~ David Sarabia (@DSRELD) #RSA
+ [[https://arstechnica.com/information-technology/2017/10/crypto-failure-cripples-millions-of-high-security-keys-750k-estonian-ids/][Millions of high-security crypto keys crippled by newly discovered flaw
  (Factorization weakness lets attackers impersonate key holders and decrypt
  their data)]]. ~ Dan Goodin (@dangoodin001) #RSA
+ [[https://acmccs.github.io/papers/p1631-nemecA.pdf][The return of Coppersmith’s attack: Practical factorization of widely used RSA moduli]]. ~ M. Nemec, M. Sys, P. Svenda, D. Klinec, V. Matyas #Math
  #CompSci #RSA
+ [[https://vrahli.github.io/articles/continuity-journal-mscs.pdf][Validating Brouwer's continuity principle for numbers using named
  exceptions]]. ~ V. Rahli & M. Bickford #ITP #Nuprl #Coq
+ [[https://github.com/robstewart57/dblp2bibtex][dblp2bibtex: Generates bibtex files for authors identified in the DBLP
  database]]. ~ Rob Stewart (@robstewartUK) #Haskell #TeX
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-completos][Exercitium: "Números completos"]] #Haskell #I1M2017
+ [[http://xion.io/post/programming/rust-into-haskell.html][Rust as a gateway drug to Haskell]]. ~ Karol Kuczmarski (@Xion__) #Rust
  #Haskell via @topical_hq
+ [[http://www.cse.chalmers.se/~vassena/publications_files/jlamp2018.pdf][MAC (A verified static information-flow control library)]]. ~ M. Vassena &
  A. Russo #Haskell #Agda
+ [[http://www.glc.us.es/~jalonso/exercitium/primos-equidistantes-2][Exercitium: "Primos consecutivos equidistantes"]] #Haskell
  #I1M2017
+ [[https://alpacaaa.net/blog/post/elm-purescript-in-depth-overview][In depth overview of Elm and PureScript. Lessons learned porting a game from
  PureScript to Elm]]. ~ Marco Sampellegrini (@_alpacaaa) #PureScript #Elm
+ [[http://mutanatum.com/posts/2017-01-12-Browser-FP-Head-to-Head.html][Selecting a platform: JavaScript vs Elm vs PureScript vs GHCjs vs Scalajs]]. ~
  Isaac Shapira #JavaScript #Elm #PureScript #GHCjs #Scalajs
+ [[http://www.glc.us.es/~jalonso/exercitium/producto-cartesiano-de-una-familia-de-conjuntos][Exercitium: "Producto cartesiano de una familia de
  conjuntos"]]. #Haskell #I1M2017
+ [[http://scholarship.claremont.edu/cgi/viewcontent.cgi?article=1006&context=jhm][Is (some) mathematics poetry?]] ~ J. Henle #Math
+ [[https://arxiv.org/pdf/1711.03902][Neural-symbolic learning and reasoning: a survey and interpretation]]. ~
  T.R. Besold et als. #AI
+ [[http://www.glc.us.es/~jalonso/exercitium/biparticiones-de-un-numero][Exercitium: "Biparticiones de un número"]]. #Haskell #I1M2017
+ [[https://www.haskell.org/communities/11-2017/html/report.html][Haskell communities and activities report (November 2017)]]. #Haskell
+ [[http://bit.ly/2zIjQcK][Por qué deberías aprender programación funcional ya mismo (con una breve
  introducción a Haskell)]]. ~ A. Marzal #PF #Haskell
+ [[http://ceur-ws.org/Vol-1145/tutorial1.pdf][Answer Set Programming and CLASP (A tutorial)]]. ~ S. Hölldobler, L. Schweizer
  #ASP 
+ [[http://www.tweag.io/posts/2017-11-16-repa.html][Parallelising your array code]]. ~ Manuel Chakravarty (@TacticalGrace) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/pares-definidos-por-su-mcd-y-su-mcm][Exercitium: "Pares definidos por su MCD y su MCM"]]. #Haskell
  #I1M2017
  #Haskell #I1M2017
+ [[https://babel.hathitrust.org/cgi/pt?id=wu.89055052690;view=1up;seq=13][Portraits of famous philosophers who were also famous mathematicians]]. ~
  C.S. Keyser #eBook #Math #History
+ [[https://github.com/sergv/kievfprog-2017-november/raw/master/Talk.pdf][Recursion schemes (why, how and more)]]. ~ Sergey Vinokurov (@5ergv) #Haskell
+ [[https://github.com/DSLsofMath/DSLsofMath/raw/master/L/snapshots/DSLsofMathNotes_2017-11-08.pdf][Domain Specific Languages of Mathematics: lecture notes (November 8, 2017)]]. ~
  Patrik Jansson (@patrikja), Cezar Ionescu. #Haskell #Math
+ [[https://infoscience.epfl.ch/record/232405/files/EPFL_TH7885.pdf][Algorithmic resource verification]]. ~ R Kandhadai Madhavan #PhD_Thesis #ITP
  #Leon
+ [[http://ratiolog.uni-koblenz.de/proceedings2017.pdf%23page%3D35][Proceedings of the Third Workshop on Bridging the gap between human and
  automated Reasoning (Is logic and automated reasoning a foundation for human
  reasoning?)]] #Logic #AR
+ [[http://dl.acm.org/ft_gateway.cfm%3Fid%3D3133929%26type%3Dpdf][How type errors were fixed and what students did?]] ~ B. Wu, S. Chen #Haskell
+ [[http://dl.acm.org/ft_gateway.cfm%3Fid%3D3133930%26type%3Dpdf][Learning user friendly type-error messages]]. ~ B. Wu, J.P. Campora III,
  S. Chen #Haskell 
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-resolucion-de-problemas-y-el-metodo-de-polya][I1M2017: Resolución de problemas y el método de Polya]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-programacion-con-haskell-en-la-red-usando-repl-it][I1M2017: Programación con Haskell en la Red usando Repl.it]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-sobre-arboles-binarios-en-haskell-1][I1M2017: Ejercicios sobre árboles binarios en Haskell (1)]]. #Haskell
+ [[http://www.cs.us.es/~jalonso/cursos/i1m/ejercicios/ejercicios-I1M-2017.pdf][I1M2017: Libro con las soluciones de las 8 primeras relaciones de ejercicios
  de programación con Haskell]]. #Haskell
+ [[https://github.com/sergv/kievfprog2015/raw/master/talk.pdf][Unifying parsing and prettyprinting]]. ~ Sergey Vinokurov (@5ergv) #Haskell
+ [[http://blog.higher-order.com/assets/AdjunctionsSbtBExtended.pdf][Adjunctions in everyday life (What we talk about when we talk about monads)]]. 
  ~ Rúnar Bjarnason (@runarorama) #Haskell
+ [[http://git.io/fp-jargons][Jargon from the functional programming world in simple terms!]]
  #FuncionalProgramming
+ [[https://github.com/ikhoon/functional-programming-jargon.scala/tree/master/tut][Scala code examples for functional programming jargon]]. ~ Ikhoon Eom
  #FuncionalProgramming #Scala
+ [[https://arxiv.org/pdf/1711.06542][Mechanizing Principia Logico-Metaphysica in functional type theory]]. ~
  D. Kirchner, C. Benzmüller, E.N. Zalta #IsabelleHOL #RA2017
+ [[https://www.isa-afp.org/browser_info/current/AFP/PLM/document.pdf][Representation and partial automation of the Principia Logico-Metaphysica in
  Isabelle/HOL]]. ~ D. Kirchner #Msc_Thesis #IsabelleHOL #RA2017
+ [[https://wickstrom.tech/finite-state-machines/2017/11/19/finite-state-machines-part-2.html][Finite-state machines, part 2: Explicit typed state transitions]]. ~ Oskar
  Wickström (@owickstrom) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-oblongos][Exercitium: "Números oblongos"]]. #Haskell #I1M2017
+ [[https://github.com/sergv/kievfprog2016/raw/master/Talk.pdf][Let’s play with Regular Expressions]]. ~ Sergey Vinokurov (@5ergv) #Haskell
+ [[https://arxiv.org/pdf/1711.05814][Python implementation and construction of finite abelian groups]]. ~
  P. Bradley, J. Smethurst #Python #Math
+ [[http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2017-11.html#e2017-11-15T16_03_52.htm][A programming digression: Kaprekar numbers]]. ~ E. Wallingford (@wallingf) #Programming
  #Math 
+ [[https://github.com/Juzley/elm-net][Net puzzle game in Elm]]. ~ Julian Priestley #Elm #Puzzle
+ [[https://arxiv.org/pdf/1711.07023][Verification of PCP-related computational reductions in Coq]]. ~ Y. Forster,
  E. Heiter, G. Smolka #Coq
+ [[https://ku-fpg.github.io/files/Grebe-17-Transformations.pdf][Rewriting a shallow DSL using a GHC Compiler extension]]. ~ M. Grebe, D. Young,
  A. Gill #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/mayor-numero-equidigital][Exercitium: "Mayor número equidigital"]]. #Haskell #I1M2017
+ [[http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2010-10.html#e2010-10-25T16_50_29.htm][A programming digression: Farey sequences]]. ~ E. Wallingford (@wallingf)
  #Programming #Math
+ [[https://two-wrongs.com/emacs-for-humans-glossary][Emacs for humans: glossary]]. #Emacs
+ [[https://www.fpcomplete.com/blog/2017/01/quickcheck][QuickCheck and magic of testing]]. ~ A. Kuleshevich #Haskell #QuickCheck
+ [[http://www.newthinktank.com/2017/11/emacs-tutorial][Learn Emacs in one video]]. ~ Derek Banas (@NewThinkTank) #Emacs #I1M2017
+ [[http://reasonablypolymorphic.com/blog/type-directed-code-generation][Type-directed code generation]]. ~ Sandy Maguire #Haskell
+ [[https://tech-blog.capital-match.com/posts/3-anatomy-of-haskell-web-app.html][Anatomy of a Haskell-based application, revisited]]. ~ Zhouyu Qian (@kccqzy)
  #Haskell
+ [[https://github.com/rudymatela/leancheck][LeanCheck: a simple enumerative property-based testing library]]. ~ Rudy Matela
  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numeros-digito-potenciales][Exercitium: "Números dígito potenciales"]]. #Haskell #I1M2017
+ [[http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2015-12.html#e2015-12-08T15_55_44.htm][A programming digression: Generating excellent numbers]]. ~ E. Wallingford
  (@wallingf) #Programming #Math
+ [[https://www.slideshare.net/saurabhnanda/joys-frustrations-of-putting-34000-lines-of-haskell-into-production-at-vacation-labs][Joys & frustrations of putting 34,000 lines of Haskell into production (at Vacation Labs)]]. ~ Saurabh Nanda (@saurabhnanda) #Haskell
+ [[https://arxiv.org/pdf/1711.08076][Schur number five]]. ~ Marijn J.H. Heule #SAT #Logic #AI
+ [[https://openlibra.com/es/book/category-theory-for-programmers][Category theory for programmers]]. ~ Bartosz Milewski #eBook #CategoryTheory
  #Haskell #OpenLibra
+ [[http://www.glc.us.es/~jalonso/exercitium/suma-de-divisores][Exercitium: "Suma de divisores"]]. #Haskell #I1M2017
  #I1M2017
+ [[https://softwarefoundations.cis.upenn.edu/vfa-current/index.html][Verified functional algorithms]]. ~ Andrew W. Appel #FuncionalProgramming #ITP
  #Coq
+ [[https://rahulmutt.github.io/slides/fuconf17-eta-fibers/slides.html][Eta Fibers (Towards better concurrency on the JVM)]]. ~ Rahul Muttineni #Haskell
+ [[http://www.cs.us.es/~fsancho/?e=186][Resolviendo problemas de satisfacción de restricciones con hormigas]]. ~
  F. Sancho @sanchocaparrini #PSR #IA
+ [[http://www.parsonsmatt.org/2017/11/21/monadbasecontrol_in_five_minutes.html][MonadBaseControl in five minutes]]. ~ Matt Parsons (@mattoflambda) #Haskell
+ [[https://haskell-serbia.com/tutorial/4][Dependent types in Haskell]]. ~ Sasa Bogicevic #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-razonamiento-estructurado-sobre-programas-con-isabellehol/][RA2017: Razonamiento estructurado sobre programas con Isabelle/HOL]]. 
  #IsabelleHOL
+ [[https://jfr.unibo.it/article/download/6767/7213][A formally proved, complete algorithm for path resolution with symbolic links]]. 
  ~ R. Chen, M. Clochard, C. Marché #ITP #Coq
+ [[http://www.timphilipwilliams.com/posts/2017-04-12-nested-datacubes.html][Functional pearl: Nested Datacubes]]. ~ Tim Philip Williams (@_willtim_)
  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/cadenas-de-sumas-de-factoriales-de-los-digitos][Exercitium: "Cadenas de sumas de factoriales de los dígitos"]]. 
  #Haskell #I1M2017
+ [[https://ipfs.io/ipfs/QmfN5DojVnEsf1Une3DFwfUiFpfWnQf31f61qgybiXVeQE/blog/spheres-and-points/][Spheres and points]]. ~ Bassel Mabsout #Haskell
+ [[https://modalduality.org/tzimtsum][tzimtsum: A Presburger arithmetic proposition decider Haskell library]]. 
  #Haskell #Logic #Math 
+ [[https://www.isa-afp.org/browser_info/current/AFP/Stochastic_Matrices/document.pdf][Stochastic matrices and the Perron-Frobenius theorem in Isabelle/HOL]]. ~
  R. Thiemann #IsabelleHOL #Math
+ [[http://www.timphilipwilliams.com/slides/AnEDSLForKDBQ.pdf][An EDSL for KDB/Q (rationale, techniques and lessons learned)]]. ~ Tim Williams
  (@_willtim_) #Haskell
+ [[https://github.com/k-bx/fcafe-lazy-evaluation/blob/master/Talk%20Notes%20-%20Lazy%20Evaluation%20in%20Haskell.md][Talk notes: Lazy evaluation in Haskell]]. ~ Kostiantyn Rybnikov (@ko_bx)
  #Haskell
+ [[https://github.com/HeinrichApfelmus/hyper-haskell][HyperHaskell: a graphical interpreter for the programming language Haskell]]. ~
  Heinrich Apfelmus #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-sobre-arboles-binarios-en-haskell-2/][Ejercicios sobre árboles binarios en Haskell (2)]]. #I1M2017 #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-de-tipos-de-datos-algebraicos-en-haskell-1/][Ejercicios de tipos de datos algebraicos en Haskell (1)]]. #I1M2017 #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-programa-en-haskell-para-reconocer-tautologias/][Programa en Haskell para reconocer tautologías]]. #I1M2017 #Haskell
  #Matemáticas #Lógica
+ [[https://eccc.weizmann.ac.il/report/2017/179/download][IPS-like proof systems based on binary decision diagrams]]. ~ A. Knop #Logic
  #AR #IPS
+ [[http://www.cs.toronto.edu/~jgrochow/grochow,pitassi-circuitsProofsPIT.pdf][Circuit complexity, proof complexity, and polynomial identity testing]]. ~
  J.A. Grochow, T. Pitassi #AR #GröbnerBases
+ [[https://github.com/nikivazou/presentations/raw/master/type-theory-in-15-min/type-theory-in-15min.pdf][Type theory in 15min]]. ~ Niki Vazou (@nikivazou) #Programming
+ [[http://www1.eafit.edu.co/asr/pubs/others/AcevedoAcosta-EcheverriJurado-2017.Una-formalisacion-del-sistema-de-los-numeros-reales-impresora.pdf][Una formalización del sistema de los números reales]]. ~ J.O. Acevedo y
  J.L. Echeverri #ITP #Agda
+ [[https://github.com/lspitzner/exference][Exference: Haskell tool to generate expressions from types]]. ~ Lennart
  Spitzner #Haskell
+ [[https://github.com/lspitzner/exference-paper/raw/master/exference.pdf][Exference: Rubbing the Lamp once more]]. ~ Lennart Spitzner #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/numero-de-divisores][Exercitium: "Número de divisores"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[http://ldc.usb.ve/~emhn/cursos/ci4251/][Programación funcional avanzada (2017)]]. ~ Ernesto Hernández-Novich (@iamemhn)
  #Curso #Haskell
+ [[https://www.nytimes.com/2017/11/21/magazine/can-ai-be-taught-to-explain-itself.html][Can A.I. be taught to explain itself?]] ~ C. Kuang #XAI 
+ [[https://elbauldelprogramador.com/teoria-categorias-scala-tipos-funciones][Teoría de categorías en Scala: Tipos y funciones]]. ~ A. Alcalde
  #TeoríaCategorías #Scala
+ [[https://github.com/carp-lang/carp][Carp: A statically typed Lisp, without a GC, for high performance
  applications]]. #Haskell #Lisp
+ [[http://www.mordonez.me/porque-usar-programacion-funcional][¿Porqué usar programación funcional?]] ~ Marco Ordoñez #ProgramacionFuncional
  vía @nihilipster
+ [[https://rjlipton.wordpress.com/2017/11/27/proving-peano-arithmetic-partially-consistent][Proving Peano arithmetic partially consistent?]] ~ R.J. Lipton & K.W. Regan
  #Logic
+ [[https://www.isa-afp.org/browser_info/current/AFP/Stochastic_Matrices/document.pdf][Stochastic matrices and the Perron–Frobenius theorem in Isabelle/HOL]]. ~ René
  Thiemann #ITP #IsabelleHOL #Math
+ [[https://dspace.library.uu.nl/bitstream/handle/1874/355676/sessiontypes-thesis.pdf][Session types in Cloud Haskell]]. ~ Ferdinand van Walree #PhD_Thesis #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/punto-de-inflexion][Exercitium: "Punto de inflexión"]]. #Haskell #I1M2017
  todos los dígitos"]]. #Haskell #I1M2017
+ [[https://blog.jle.im/entry/hamiltonian-dynamics-in-haskell.html][Hamiltonian dynamics in Haskell]]. ~ Justin Le (@mstk) #Haskell #Math #Physic
+ [[https://www.stephanboyer.com/post/134/my-unusual-hobby][My unusual hobby]]. ~ Stephan Boyer (@stepchowfun) #ITP #Coq
+ [[https://github.com/ocramz/sparse-linear-algebra][sparse-linear-algebra: Numerical computation in native Haskell]]. ~ Marco Zocca
  #Haskell #Math
+ [[https://arxiv.org/pdf/1711.09286][Total Haskell is reasonable Coq]]. ~ A. Spector-Zabusky, J. Breitner,
  C. Rizkallah, S. Weirich #Haskell #Coq
+ [[https://eli.thegreenplace.net/2017/deciphering-haskells-applicative-and-monadic-parsers][Deciphering Haskell's applicative and monadic parsers]]. ~ Eli Bendersky
  (@elibendersky) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/sucesion-contadora][Exercitium: "Sucesión contadora"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[http://francis.naukas.com/2017/11/25/resena-apologia-de-un-matematico-de-g-h-hardy/][Reseña: "Apología de un matemático" de G. H. Hardy]]. ~ F.R. Villatoro
  (@emulenews) #Matemáticas
+ [[https://github.com/jaalonso/Categorias_y_programacion][Lecturas sobre teoría de categorías y programación funcional]]. 
  #TeoriaDeCategorias #ProgramacionFuncional #Haskell
+ [[https://arxiv.org/pdf/1606.08813][European Union regulations on algorithmic decision-making and a "right to explanation"]]. 
  ~ B. Goodman, S. Flaxman #MachineLearning
+ [[https://github.com/HaskellChamber/Haskell-University][Haskell-University: Portfolio-based approach to learning Haskell]]. #Haskell 
+ [[https://pursuit.purescript.org/packages/purescript-symmetric-groups/0.1.0/docs/Data.SymmetricGroup][Symmetric groups on finite sets in PureScript]]. #PureScript #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/mayor-producto-de-las-ramas-de-un-arbol][Exercitium: "Mayor producto de las ramas de un árbol"]]. #Haskell
  #I1M2017

** Diciembre 2017

+ [[http://www.glc.us.es/~jalonso/exercitium/sumas-de-dos-cuadrados][Exercitium: "Sumas de dos cuadrados"]]. #Haskell #I1M2017
  #Haskell #I1M2017
+ [[https://www.risc.jku.at/research/formal/software/RISCAL/papers/ThEdu17.pdf][Teaching the formalization of mathematical theories and algorithms via the
  automatic checking of finite models]]. ~ W. Schreiner, A. Brunhuemer, C. Fürst
  #ITP #Math #RISCAL
+ [[http://hojaynumeros.blogspot.com.es/2017/11/numeros-piramidales-de-cuatro.html][Números piramidales de cuatro dimensiones]]. ~ Antonio Roldán (@Connumeros)
  #Matemáticas #Programación
+ [[http://logicaltypes.blogspot.com.es/2017/11/november-2017-1haskelladay-problems-and.html][November 2017 1HaskellADay problems and solutions]]. ~ Douglas M. Auclair
  (@geophf) | Typed Logic #Haskell #1HaskellADay
+ [[http://userweb.fct.unl.pt/~lmp/publications/online-papers/lp_app_mach_ethics.pdf][From logic programming to machine ethics]]. ~ A. Saptawijaya, L.M. Pereira
  #LogicProgramming #KRR #AI
+ [[https://www.irif.fr/~gradanne/papers/phdthesis.pdf][Tierless Web programming in ML]]. ~ G. Radanne #PhD_Thesis
  #FunctionalProgramming #OCaml
+ [[http://bit.ly/2AmpaCD][A domain specific language for drum beat programming]]. ~ A.R. Du Bois,
  R. Ribeiro #Haskell #DSL #Music
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-ejercicios-de-razonamiento-detallado-sobre-programas-en-isabellehol][RA2017: Ejercicios de razonamiento detallado sobre programas en Isabelle/HOL]]. 
  #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-razonamiento-por-casos-y-por-induccion-en-isabellehol][RA2017: Razonamiento por casos y por inducción en Isabelle/HOL]]. #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-2o-examen-de-programacion-con-haskell][I1M2017: 2º examen de programación funcional con Haskell]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-evaluacion-perezosa-en-haskell][I1M2017: Evaluación perezosa en Haskell]]. #Haskell
+ [[https://hal.inria.fr/hal-01639819/document][A formal proof in Coq of a control function for the inverted pendulum]]. ~
  D. Rouhling #ITP #Coq #Math #Physics
+ [[https://hackernoon.com/writing-code-like-a-mathematical-proof-f5838fc27382][Writing code like a mathematical proof]]. ~ Spiro Sideris #Math #Programming
+ [[https://www.snoyman.com/blog/2016/11/haskell-for-dummies][Haskell for dummies]]. ~ M. Snoyman (@snoyberg) #Haskell
+ [[https://hal.inria.fr/hal-01643290/file/ERTS_2018_paper_59.pdf][CompCert: Practical experience on integrating and qualifying a formally
  verified optimizing compiler]]. ~ D. Kästner et als. #ITP #Coq #CompCert
+ [[http://www.stephendiehl.com/posts/haskell_2018.html][Reflecting on Haskell in 2017]]. ~ Stephen Diehl (@smdiehl) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/conjunto-de-relaciones-binarias-entre-dos-conjuntos][Exercitium: "Conjunto de relaciones binarias entre dos conjuntos"]]. 
  #Haskell #I1M2017
  #I1M2017
+ [[https://github.com/jagajaga/FP-Course-ITMO][Slides and other materials for functional programming lectures ITMO
  university]]. ~ D. Kovanikov, A. Seroka #Haskell
+ [[https://youtu.be/Cy7jBYr3Zvc][Point-free or die: tacit programming in Haskell and beyond]]. ~ Amar Shah
  #Haskell
+ [[http://dss.in.tum.de/files/brandt-research/stratset.pdf][Voting with ties: Strong impossibilities via SAT solving]]. ~ F. Brandt,
  C. Saile, C. Stricker #SAT_solving
+ [[http://www.glc.us.es/~jalonso/exercitium/menor-x-tal-que-los-x-multiplos-de-n-contienen-todos-los-digitos][Exercitium: "Menor x tal que los x múltiplos de n contienen
  todos los dígitos"]]. #Haskell #I1M2017
  elementos"]]. #Haskell #I1M2017
+ [[https://hal.inria.fr/hal-01643919/document][A constructive formalisation of semi-algebraic sets and functions]]. ~
  B. Djalal #ITP #Coq #Math
+ [[https://patternsinfp.wordpress.com/2017/12/05/arithmetic-coding/][Arithmetic coding]]. ~ Jeremy Gibbons (@jer_gib) #Haskell #Math
+ [[http://www.glc.us.es/~jalonso/exercitium/reconocimiento-de-relaciones-funcionales-entre-dos-conjuntos][Exercitium: "Reconocimiento de relaciones funcionales entre dos
  conjuntos"]]. #Haskell #I1M2017
  #I1M2017
+ [[http://www.joachim-breitner.de/blog/734-Finding_bugs_in_Haskell_code_by_proving_it][Finding bugs in Haskell code by proving it]]. ~ J. Breitner (@nomeata) #Haskell
+ [[http://blog.vmchale.com/article/haskell-frontend][Using Haskell on the frontend]]. ~ Vanessa McHale #Haskell 
+ [[http://www.eldiario.es/cultura/tecnologia/noticias-Reuters-escritas-programa-informatico_0_715328666.html][La inteligencia artificial que caza noticias para Reuters en Twitter]]. ~ David
  Sarabia (@DSRELD) #IA
+ [[https://arxiv.org/pdf/1711.04068][Reuters Tracer: toward automated news production using large scale social
  media data]]. ~ X. Liu et als. #AI #BigData
+ [[https://github.com/dwyl/learn-elm][learn elm: discover why people are switching to Elm and how you can get
  started today!]] #elm
+ [[http://www.microsiervos.com/archivo/ciencia/bestiario-fractal-curvas.html][Un bestiario fractal de curvas para rellenar el espacio (y el cerebro)]]. ~
  @Alvy #Fractales
+ [[http://archive.org/stream/BrainfillingCurves-AFractalBestiary/BrainFilling#page/n0/mode/2up][Brainfilling curves: a fractal bestiary]]. ~ Jeffrey Ventrella
+ [[http://www.fractalcurves.com][A complete taxonomy of plane-filling curves]]. ~ Jeffrey Ventrella #Fractal
+ [[https://arxiv.org/pdf/1712.01485][Analyzing individual proofs as the basis of interoperability between proof
  systems]]. ~ G. Dowek #ITP #Coq #IsabelleHOL
+ [[http://blog.vmchale.com/article/integer-partitions][Functional pearl: integer partitions and QuickCheck]]. ~ Vanessa McHale
  #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/expresiones-equilibradas][Exercitium: "Expresiones equilibradas"]]. #Haskell #I1M2017
  #I1M2017
+ [[https://www.quantamagazine.org/secret-link-uncovered-between-pure-math-and-physics-20171201][Secret link uncovered between pure math and physics]]. ~ Kevin Hartnett #Math
  #Physics
+ [[http://revistasuma.es/IMG/pdf/33-como_compartir.pdf][Cómo compartir un secreto usando sistemas de ecuaciones lineales]]. ~ A. Cano,
  J.M. LunA, A. Rojas #Matemáticas
+ [[https://arxiv.org/pdf/1712.01093][The mind as a computational system]]. ~ Christoph Adami #AI
+ [[https://openlibra.com/es/book/geometria-axiomatica][Geometría axiomática]]. ~ Gerard Romo Garrido #Matemáticas
+ [[http://blog.vmchale.com/article/sum][Variations on a theme: A set of curated examples meant to show Haskell's
  expressiveness]]. ~ Vanessa McHale #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/conjunto-de-funciones-entre-dos-conjuntos][Exercitium: "Conjunto de funciones entre dos
  conjuntos"]]. #Haskell #I1M2017
+ [[https://rjlipton.wordpress.com/2017/12/08/pnp-perhaps-i-change-my-mind][P = NP: Perhaps I change my mind]]. (An old result put a new way). ~
  R.J. Lipton, K.W. Regan #Math #CompSci
+ [[https://www.quantamagazine.org/mathematicians-crack-the-cursed-curve-20171207][Mathematicians crack the cursed curve]]. ~ Kevin Hartnett #Math
+ [[http://www.maths.ed.ac.uk/~cbarwick/papers/style.pdf][Notes on mathematical writing]]. ~ Clark Barwick #Math
+ [[https://arxiv.org/pdf/1712.02329][Rings: an efficient Java/Scala library for polynomial rings]]. ~ S. Poslavsky
  #Scala #Math
+ [[https://arxiv.org/pdf/1611.00692v1][Towards automatic resource bound analysis for OCaml]]. ~ J. Hoffmann, A. Das,
  S.C. Weng #OCaml
+ [[https://machinethoughts.wordpress.com/2017/12/08/the-role-of-theory-in-deep-learning][The role of theory in Deep Learning]]. ~ David McAllester #AI #DeepLearning 
+ [[https://arxiv.org/pdf/1612.06526v1][Computation in Logic and Logic in Computation]]. ~ S. Salehi #Logic #CompSci
+ [[http://www.glc.us.es/~jalonso/exercitium/mayusculas-y-minusculas-alternadas][Exercitium: "Mayúsculas y minúsculas alternadas"]]. #Haskell
  #I1M2017
  #I1M2017
+ [[http://fixpt.de/blog/2017-12-04-strictness-analysis-part-1.html][All about strictness analysis (part 1)]]. ~ Sebastian Graf (@sgraf1337) #Haskell
+ [[https://www.matchilling.com/introduction-to-logic-programming-with-prolog][Introduction to logic programming with Prolog]]. ~ Mathias Schilling
  (@MatChilling) #Prolog
+ [[http://blog.functorial.com/posts/2017-12-10-Co-Finds-A-Pairing.html][Co finds a pairing]]. ~ Phil Freeman (@paf31) #Haskell
+ [[https://patternsinfp.wordpress.com/2017/12/11/streaming-arithmetic-coding/][Streaming arithmetic coding]]. ~ Jeremy Gibbons (@jer_gib) #Haskell #Math
+ [[https://lmcs.episciences.org/4098/pdf][A framework for certified self-stabilization]]. ~ S. Devismes, P. Corbineau,
  K. Altisen #ITP #Coq
+ [[https://github.com/jaspervdj/talks/blob/master/2017-haskell-exchange-getting-things-done/slides.md][Getting things done in Haskell]]. ~ Jasper Van der Jeugt (@jaspervdj) #Haskell 
+ [[http://www.glc.us.es/~jalonso/exercitium/aplicacion-de-lista-de-funciones-a-lista-de-elementos][Exercitium: "Aplicación de lista de funciones a lista de elementos"]]. #Haskell #I1M2017
  #I1M2017
+ [[https://arxiv.org/pdf/1107.1130][Dismal arithmetic]]. ~ D. Applegate, M. LeBrun, N.J.A. Sloane #Math
+ [[https://patrickmn.com/software/the-haskell-pyramid/][The Haskell pyramid]]. ~ Patrick Nielsen (@pmylund) #Haskell 
+ [[https://github.com/jaspervdj/fugacious][fugacious: An example Haskell Web application]]. ~ Jasper Van der Jeugt
  (@jaspervdj) #Haskell
+ [[http://www.swmath.org/about_contact][swMATH: An information service for mathematical software]]. #Math #CompSci
+ [[http://www.glc.us.es/~jalonso/exercitium/maximo-de-las-rotaciones-restringidas][Exercitium: "Máximo de las rotaciones restringidas"]]. #Haskell
  #I1M2017
+ [[https://arxiv.org/abs/1712.04375][Computational Logic: its origins and applications]]. ~ L.C Paulson #Logic #ITP
  #IsabelleHOL
+ [[https://web.engr.oregonstate.edu/~erwig/papers/Monadify_SCP04.pdf][Monadification of functional programs]]. ~ M. Erwig, D. Ren #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/caminos-minimales-en-un-arbol-numerico][Exercitium: "Caminos minimales en un árbol numérico"]]. #Haskell
  #I1M2017
+ [[http://davidbkemp.github.io/QuantumComputingArticle][An interactive introduction to quantum computing (or what do you mean they can be both zero and one at the same time!)]] ~ D. Kemp #CompSci
+ [[https://www.johndcook.com/blog/2017/12/12/efficiency-is-not-associative-for-matrix-multiplication][Efficiency is not associative for matrix multiplication]]. ~ J.D. Cook
  @JohnDCook #Math #CompSci
+ [[http://wiki.di.uminho.pt/twiki/pub/Education/ACMSD/WebHome/acmsd1718-dh.pdf][A brief introduction to category theory]]. ~ D. Hofmann #CategoryTheory
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-ejercicios-de-evaluacion-perezosa-y-listas-infinitas-en-haskell-1][I1M2017: Ejercicios de evaluación perezosa y listas infinitas en Haskell (1)]]. 
  #Haskell
+ [[http://www.cl.cam.ac.uk/~jrh13/slides/lyon-04feb14/slides.pdf][Applications of automated reasoning]]. ~ J. Harrison #AutomatedReasoning
+ [[http://www.variablenotfound.com/2011/10/el-tao-de-la-programacion.html][El Tao de la programación]]. #Programación
+ [[http://www.mit.edu/~xela/tao.html][The Tao of programming]]. #Programming
+ [[https://lars.hupel.info/pub/verified-iptables.pdf][Verified iptables firewall analysis & verification]]. ~ C. Diekmann, L. Hupel,
  J. Michaelis, M. Haslbeck, G. Carle #ITP #IsabelleHOL
+ [[https://a-tour-of-go-in-haskell.syocy.net/en_US/index.html][A tour of Go in Haskell]]. ~ Osanai Kazuyoshi #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/ordenacion-valle][Exercitium: "Ordenación valle"]]. #Haskell #I1M2017
+ [[https://soupi.github.io/rfc/reading_simple_haskell][Reading simple Haskell]]. ~ Gil Mizrahi #Haskell
+ [[https://deque.blog/2017/12/08/continuation-passing-style-free-monads-and-direct-style-free-monads/][Continuation passing style Free Monads and direct style Free Monads]]. ~
  Quentin Duval @quduval #Idris
+ [[http://www.artfulmaths.com/blog/folding-christmas-fractals][Folding Christmas fractals]]. ~ Clarissa Grandi (@c0mplexnumber) #Math 
+ [[https://turingmachinesimulator.com/][Online Turing machine simulator]]. ~ Martín Ugarte #CompSci #Turing
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-ejercicios-de-cuantificadores-sobre-listas-en-isabellehol/][RA2017: Ejercicios dec uantificadores sobre listas en Isabelle/HOL]]. 
  #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/ra2017-razonamiento-sobre-arboles-y-bosques-en-isabellehol/][RA2017: Razonamiento sobre árboles y bosques en Isabelle/HOL]]. #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-programas-interactivos-en-haskell/][I1M2017: Programas interactivos en Haskell]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-definiciones-de-la-lista-infinita-de-factoriales-en-haskell][I1M2017: Definiciones de la lista infinita de factoriales en Haskell]]. 
  #Haskell #Matemáticas
+ [[http://iris-project.org/pdfs/2018-popl-runST-final.pdf][A logical relation for monadic encapsulation of state (proving contextual
  equivalences in the presence of runST)]]. ~ A. Timany et als. #ITP #Coq
  #Haskell
+ [[https://www.snoyman.com/blog/2017/12/what-makes-haskell-unique][What makes Haskell unique]]. ~ M. Snoyman (@snoyberg) #Haskell
+ [[https://ren.zone/articles/safe-money][safe-money: Money in the type system where it belongs]]. ~ Renzo Carbonara
  #Haskell
+ [[http://ergoemacs.org/emacs/emacs_org_babel_literate_programing.html][Emacs: Org mode, programing language code markup]]. ~ Xah Lee (@xah_lee) #Emacs
  #Programming #OrgMode
+ [[https://github.com/smallhadroncollider/taskell][taskell: A command line task manager written in Haskell]]. ~ Mark Wales
  #Haskell
+ [[http://www.logicmatters.net/2017/12/14/logic-books-of-the-year-2/][Logic books of the year?]] ~ Peter Smith #Logic
+ [[https://songbird-prover.github.io/lemma-synthesis][SLS: Songbird + Lemma Synthesis (a separation logic prover which can
  automatically synthesize inductive lemmas on-the-fly)]]. #ATP #OCaml
+ [[https://bitbucket.org/prl_tokyo/bigul/raw/logic/POPL18/logic.pdf][An axiomatic basis for bidirectional programming]]. ~ H.S. Ko, Z. Hu #ITP #Agda
+ [[https://arxiv.org/abs/1708.00551][Bonsai: synthesis-based reasoning for type systems]]. ~ K. Chandra, R. Bodik
  #Racket
+ [[http://www.glc.us.es/~jalonso/exercitium/numero-de-viajeros-en-el-autobus][Exercitium: "Número de viajeros en el autobús"]]. #Haskell #I1M2017
+ [[http://cs.purdue.edu/%7Erompf/papers/amin-draft2017a.pdf][Collapsing towers of interpreters]]. ~ N. Amin, T. Rompf #Lisp #Scala
+ [[https://github.com/ndmitchell/debug][Debug: Haskell library for debugging]]. ~ Neil Mitchell #Haskell 
+ [[https://github.com/owickstrom/fast-and-fearless-evolution-of-server-side-webapps][Fast and fearless evolution of server-side Web applications]]. ~ Oskar
  Wickström (@owickstrom) #Haskell
+ [[https://sinews.siam.org/Details-Page/a-water-based-solution-of-polynomial-equations][A water-based solution of polynomial equations]]. ~ Mark Levi #Math
+ [[http://andreipopescu.uk/pdf/conserv_HOL_IsabelleHOL.pdf][Safety and conservativity of definitions in HOL and Isabelle/HOL]]. ~
  O. Kunčar, A. Popescu #ITP #IsabelleHOL
+ [[https://www.isa-afp.org/entries/Knuth_Morris_Pratt.html][The string search algorithm by Knuth, Morris and Pratt in Isabelle/HOL]]. ~
  F. Hellauer, P. Lammich #IsabelleHOL
+ [[https://blog.ramdoot.in/monadic-do-block-yet-again-a98cf0237b25][Monadic "do" block, yet again (What should get into your "do" block?)]] ~
  Arvind Devarajan #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/reconocimiento-de-recorridos-correctos][Exercitium: "Reconocimiento de recorridos correctos"]]. #Haskell
  #I1M2017
+ [[https://codurance.com/2017/12/14/lambda-calculus-in-clojure][Lambda calculus in Clojure (part 1)]]. ~ Sergio Rodrigo Royo #LambdaCalculus
  #Clojure
+ [[https://clementd-files.cellar-c2.services.clever-cloud.com/scala-io-haskell.html#1.0][Haskell in production in a startup in 2017? Yup]]. ~ Frédéric Menou
  (@ptit_fred), Clément Delafargue (@clementd) #Haskell
+ [[https://futtetennismo.me/posts/algorithms-and-data-structures/2017-12-08-functional-graphs.html][Functional programming with graphs]]. ~ @futtetennista #Haskell
+ [[https://arxiv.org/abs/1712.06587][Solving satisfiability using inclusion-exclusion]]. ~ A. Zaleski #Logic #Sat
  #Maple
+ [[https://github.com/haskell-perf/checklist/blob/master/README.md][The Haskell performance checklist]]. ~ Chris Done (@christopherdone) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/arbol-de-recorridos-del-autobus][Exercitium: "Bosque de recorridos del autobús"]]. #Haskell
  #I1M2017
  #I1M2017
+ [[https://github.com/haskell-perf/numbers][Benchmarks for numbers: ints, doubles, bignums, rationals, etc.]] ~ Chris Done
  (@christopherdone) #Haskell
+ [[https://ucsd-progsys.github.io/liquidhaskell-blog/2017/12/15/splitting-and-splicing-intervals-I.lhs][Splitting and splicing intervals (part 1)]]. ~ R. Jhala (@RanjitJhala) #Haskell
  #LiquidHaskell
+ [[http://bit.ly/2DfofTS][De Lutero a Voevodsky, pasando por Brouwer: Reformas en matemáticas]]. ~
  J. Ferreirós #Matemáticas
+ [[http://www.glc.us.es/~jalonso/exercitium/aplicaciones-biyectivas][Exercitium: "Aplicaciones biyectivas"]]. #Haskell #I1M2017
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-representacion-grafica-de-funciones-en-haskell-con-gnuplot][I1M2017: Representación gráfica de funciones en Haskell con GNUplot]]. #Haskell
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-programacion-de-dibujos-por-comprension-en-codeworldhaskell][I1M2017: Programación de dibujos por comprensión en CodeWorld/Haskell]]. 
  #Haskell #CodeWorld
+ [[http://www.glc.us.es/~jalonso/vestigium/i1m2017-programacion-de-dibujos-por-recursion-en-codeworldhaskell/][I1M2017: Programación de dibujos por recursión en CodeWorld/Haskell]]. #Haskell
  #CodeWorld
+ [[https://jfr.unibo.it/article/download/7235/7332][A library for algorithmic game theory in Ssreflect/Coq]]. ~ A. Bagnall,
  S. Merten, G. Stewart #ITP #Coq
+ [[https://www.fpcomplete.com/blog/2017/12/building-haskell-apps-with-docker][Building Haskell apps with Docker]]. ~ D. Bertovic #Haskell via @FPComplete
+ [[http://www.glc.us.es/~jalonso/exercitium/menor-con-suma-de-digitos-dada][Exercitium: "Menor con suma de dígitos dada"]]. #Haskell #I1M2017
+ [[http://www.tweag.io/posts/2017-12-21-reflection-tutorial.html][All about reflection: a tutorial]]. ~ A. Spiwack #Haskell
+ [[http://kvardek-du.kerno.org/2017/12/a-lisp-repl-in-your-pocket.html][A Lisp REPL in your pocket]]. ~ Kvardek Du #Lisp #Android
+ [[http://dev.stephendiehl.com/types_behavior.pdf][Reasoning about program behavior algebraically]]. ~ Stephen Diehl (@smdiehl) #Haskell
+ [[https://medium.com/@danrobinson/understanding-simplicity-implementing-a-smart-contract-language-in-30-lines-of-haskell-827521bfeb4d][Understanding simplicity: implementing a smart contract language in 30 lines of Haskell]]. ~ Dan Robinson #Haskell
+ [[https://cacm.acm.org/news/223727-evolutionary-programming-converts-darwinism-into-algorithms/fulltext][Evolutionary programming converts darwinism into algorithms]]. ~ R. Colin Johnson #Programming #AI
+ [[https://www.isa-afp.org/entries/Mason_Stothers.html][The Mason–Stother's theorem]]. ~ Manuel Eberl #ITP #IsabelleHOL
+ [[https://blog.infinitenegativeutility.com/2017/12/some-notes-about-how-i-write-haskell][Some notes about how I write Haskell]]. ~ Getty Ritter (@aisamanra) #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/cadenas-opuestas][Exercitium: "Cadenas opuestas"]]. #Haskell #I1M2017
+ [[https://github.com/c-cube/zipperposition][Zipperposition: An automatic theorem prover in OCaml for typed logic with
  equality, datatypes and arithmetic]]. ~ Simon Cruanes #OCaml #ATP #Logic
+ [[http://cedeela.fr/~simon/files/thesis.pdf][Extending superposition with integer arithmetic, structural induction, and
  beyond]]. ~ Simon Cruanes #PhD_Thesis #OCaml #ATP #Logic
+ [[http://www.microsiervos.com/archivo/ordenadores/programas-artistico-matematicos-280-caracteres.html][Programas artístico-matemáticos en menos de 280 caracteres]]. ~ @Alvy
  #Programación #Matemáticas
+ [[https://blog.jle.im/entry/introduction-to-singletons-1.html][Introduction to singletons (Part 1)]]. ~ Justin Le (@mstk) #Haskell
+ [[http://atcm.mathandtech.org/EP2017/contributed/4202017_21470.pdf][On possible use of quantifier elimination software in upper secondary
  mathematics education]]. ~ Y. Sato, R. Fukasaku #Math #Logic
+ [[https://www.isa-afp.org/entries/Median_Of_Medians_Selection.html][The median-of-medians selection algorithm]]. ~ Manuel Eberl #ITP #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/vecino-en-lista-circular][Exercitium: "Vecino en lista circular"]]. #Haskell #I1M2017
  primos"]]. #Haskell #I1M2017
+ [[http://www2.ing.unipi.it/~a009435/issw/extra/cosim-cps_cr.pdf][Integrated simulation and formal verification of a simple autonomous
  vehicle]]. ~ A_ Domenici, A. Fagiolini, M. Palmieri #Formal_verification #ITP
  #PVS
+ [[https://github.com/serokell/importify][importify: manage Haskell imports quickly]]. ~ Dmitry Kovanikov et
  als. #Haskell
+ [[http://www.glc.us.es/~jalonso/exercitium/suma-de-las-hojas-de-minimo-nivel][Exercitium: "Suma de las hojas de mínimo nivel"]]. #Haskell
  #I1M2017
  #Haskell #I1M2017
+ [[http://homerhanumat.com/r-notes/r-notes.pdf][Beginning Computer Science with R]]. ~ H. White #CompSci #Rstats 
+ [[https://github.com/sdiehl/protolude][Protolude: A sensible starting Prelude for building custom Preludes]]. ~
  Stephen Diehl (@smdiehl) #Haskell
+ [[http://sketis.net/wp-content/uploads/2017/12/Isabelle_Scaling_Dec-2017.pdf][Scaling Isabelle proof document processing]]. ~ M. Wenzel #IsabelleHOL
+ [[http://www.glc.us.es/~jalonso/exercitium/sumable-sin-vecinos][Exercitium: "Sumable sin vecinos"]]. #Haskell #I1M2017.
+ [[https://bookdown.org/chesterismay/rbasics/][Getting used to R, RStudio, and R Markdown]]. ~ C. Ismay #Rstats
+ [[https://www.r-bloggers.com/tiny-art-in-less-than-280-characters][Tiny art in less than 280 characters]]. ~ Antonio S. Chinchón (@aschinchon)
  #Rstats
+ [[https://aschinchon.github.io/estalmat_2017/#1][Programar (en R) te da alas]]. ~ Antonio S. Chinchón (@aschinchon) #Rstats
+ [[https://hugo.feree.fr/cpp2018.pdf][Formal proof of polynomial-time complexity with quasi-interpretations]]. ~
  H. Férée et als. #ITP #Coq
+ [[http://www.glc.us.es/~jalonso/exercitium/rotaciones-divisibles-por-8][Exercitium: "Rotaciones divisibles por 8"]]. #Haskell #I1M2017
+ [[https://jfr.unibo.it/article/download/7235/7332][A library for algorithmic game theory in Ssreflect/Coq]]. ~ A- Bagnall,
  S. Merten, G. Stewart #ITP #Coq
+ [[https://hal.archives-ouvertes.fr/hal-01656404/file/final_version_plas17_cabon_schmitt.pdf][Annotated multisemantics to prove Non-Interference analyses]]. ~ G. Cabon,
  A. Schmitt #ITP #Coq

* Lecturas del año 2016

** Enero 2016

+ [[http://bit.ly/1MyraTg][Categorical monads and computer programming]]. ~ N. Benton
  #Math #CompSci

+ [[http://bit.ly/1SoByUO][Answer sets and the language of answer set programming]]. ~ V. Lifschitz
  #ASP #Declarative_programming

+ [[http://bit.ly/1SoClVH][Formal proof of soundness for an RL prover]]. ~ A. Arusoaie et als. 
  #ITP #Coq

+ [[http://bit.ly/1PEWRk5][ACL2: Implementation of a computational logic]]. ~ M. Kaufmann 
  #ITP #ACL2

+ [[http://bit.ly/1ZHnurv][ACL2 support for interactive proof]]. ~ M. Kaufmann #ITP #ACL2

+ [[http://bit.ly/1ZHohc0][Introduction to ACL2]]. ~ M. Kaufmann [Slides] #Logic #ITP #ACL2

+ [[http://bit.ly/1kBZpm4][The table monad in Haskell]]. ~ A. Vandenbroucke, T. Schrijvers & F. Piessens
  #Haskell

+ [[http://bit.ly/1kC0B9h][Answer set programming and configuration knowledge representation]]. ~
  A. Falkner #ASP #KR #Logic

+ [[http://bit.ly/1kC2YsB][A sample implementation of L-systems in Haskell]]. ~ F. Allberg 
  #Haskell

+ [[http://bit.ly/1SoDxsn][Fixed points for Markov decision processes]]. ~ J. Hölzl #ITP #Isabelle_HOL

+ [[http://bit.ly/1muxYfX][The rsync algorithm: Just playing with the ideas in rsync with Haskell]]  ~
  R. Muthukrishnan #Haskell

+ [[http://huff.to/1OFfoHU][Data vs theory: the mathematical battle for the soul of physics]]. ~
  D.H. Bailey & J.M. Borwein 

+ [[http://bit.ly/1SoDQU1][A computationally surveyable proof of the Curve25519 group axioms]]. ~
  D.M. Russinoff #ITP #ACL2

+ [[http://bit.ly/tyZgWv][Logique propositionnelle, P, NP]]. ~ J. Goubault-Larrecq #Logic

+ [[http://bit.ly/1SoEcK6][VPHL: A verified partial-correctness logic for probabilistic program]]s ~
  R. Rand & S. Zdancewic #ITP #Coq

+ [[http://bit.ly/1SoEAIF][Algebraic numbers in Isabelle/HO]]L ~ R. Thiemann & A. Yamada
  #ITP #Isabelle_HOL #AFP

+ [[http://1.usa.gov/1SCjiHE][Emacs org-mode examples and cookbook]]. ~ E. Neilsen
  #Emacs

+ [[http://bit.ly/1kBZGWc][Pour un raffinement spatio-temporel tuil]]é ~ S. Archipoff & D. Janin
  #Haskell

+ [[http://bit.ly/1kUpUU4][Lazy dynamic programming]]. ~ T. Jelvis #Haskell

+ [[http://bit.ly/1kC1iiD][High-level functional properties of bit-level programs: Formal specifications
  and automated proofs]]. ~ C. Dross et als. #Why3

+ [[http://zln.do/1JD47Mc][Using Elm to create a fun game in just five days]]. ~ K. Wilcke & A. Kuzmin
  #Elm

+ [[http://bit.ly/1kC1NsZ][A Coq library for internal verification of running-times]]. ~ J. McCarthy et
  als. #Coq

+ [[http://bit.ly/1K9IMVO][Diagrams quick start tutorial]]. #Haskell #Diagram

+ [[http://bit.ly/1kC2d2y][Higher-order representation predicates in separation logic]]. ~ A. Charguéraud
  #Coq

+ [[http://bit.ly/1PitZts][Semi-intelligible Isar proofs from machine-generated proofs]]. ~
  J.C. Blanchette et als. #ITP # ATP #Isabelle_HOL 

+ [[http://bit.ly/1RloTCI][Elm in the real world]]. ~ O. Hanhinen #FP #Elm

+ [[http://bit.ly/1RBdjBY][Verified representations of Landau’s "Grundlagen" in the λδ family and in the
  calculus of constructions]]. ~ F. Guidi #ITP #Coq

+ [[http://bit.ly/1RBdU6V][Formal analysis of geometrical optics using theorem proving]]. ~ M.U. Siddique
  #PhD_Thesis #HOL_Light

+ [[http://bit.ly/1Sbfcqy][Certification of programs with computational effects]]. ~ B. Ekici
  #PhD_Thesis #ITP #Coq

+ [[http://bit.ly/1JQtpXn][Efficient amortised and real-time queues in Haskell]]. ~ E. de Vries 
  #Haskell

+ [[http://bit.ly/1JQuoqy][Executable relational specifications of polymorphic type systems using logic
  programming]]. ~ Ki Yung Ahn #Prolog

+ [[http://bit.ly/1JQuAGn][TIPER: Type Inference Prototyping Engines from Relational Specifications of
  type systems]]. ~ Ki Yung Ahn #Prolog

+ [[http://bit.ly/1JQuEWK][A simple Haskell function]]. ~ N. Mitchell #Haskell 

+ [[http://bit.ly/1PhGntr][Functional programming, abstraction,  names]]. ~ Stephen Diehl
  #Programming #Haskell #Mat

+ [[http://bit.ly/1Sbgimm][On mathematical proving]]. ~ P. Stefaneas & I.M. Vandoulakis
  #Math #Agents #Events 

+ [[http://bit.ly/1SbgulE][Formal verification of stability properties of cyber-physical systems]]. ~
  M. Chan et als. #ITP #Coq

+ [[http://bit.ly/1SbgFNB][Types, abstraction and parametric polymorphism in higher-order logic]]. ~
  O. Kunčar #PhD_Thesis #Isabelle_HOL

+ [[http://bit.ly/1UGtg9t][Liouville numbers in Isabelle/HOL]]. ~ M. Eberl #ITP #Math #Isabelle_HOL #AFP

+ [[http://bit.ly/1Sbhx4R][Basic geometric properties of triangles]]. ~ M. Eberl #ITP #Math #Isabelle_HOL #AFP

+ [[http://bit.ly/1kXaG0x][The divergence of the prime harmonic series]]. ~ M. Eberl #ITP #Math
  #Isabelle_HOL #AFP

+ [[http://bit.ly/1OHYzkb][Descartes' rule of signs]]. ~ M. Eberl #ITP #Math #Isabelle_HOL #AFP

+ [[http://bit.ly/1ZTyNk4][Perspectives on formal verification]]. ~ H.M. Friedman #Logic #Math #CompSci

+ [[http://bit.ly/1WDxz73][Thinking about how and why we prove]]. ~ Evelyn Lamb #Logic #Math #CompSci #ITP

+ [[http://bit.ly/1ZzvcaG][Cardinality of number partitions in Isabelle/HOL]]. ~ L. Bulwahn #ITP
  #Isabelle_HOL #AFP

+ [[http://bit.ly/1KylTvw][Course notes equational programming: Lambda calculus]]. ~ Femke van Raamsdonk
  
+ [[http://bit.ly/1RKlBcB][A theorem prover for quantum Hoare logic and its applications]]. ~ T. Liu et
  als. #ITP #Isabelle_HOL

+ [[http://bit.ly/1SiMym9][A formally verified proof of the central limit theorem]]. ~ L. Serafin
  #ITP #Math #Isabelle_HOL

+ [[http://bit.ly/1NADXVx][What is the modern conception of logic? #1]]. ~ P. Smith #Logic

+ [[http://bit.ly/1NAECGt][Logicians’ biographies]]. ~ R. Zach #Logic

+ [[http://bit.ly/1NAFGu1][Particle smoothing]]. ~ D. Steinitz #Haskell

+ [[http://bit.ly/1NAFQlc][Introducing dimensional: Statically checked physical dimensions
  for Haskell]]. ~ D. McClean #Haskell

+ [[http://bit.ly/1Tpi1Eh][Formalized linear algebra over elementary divisor rings in Coq]]. ~ G. Cano et
  als. #ITP #Coq #Math

+ [[http://bit.ly/1OR3pdy][Pitfalls in Haskell]]. ~ S. Kiiskinen #Haskell 

+ [[http://bit.ly/1TpifLA][Set covering problem]]. ~ A. Kaygun #Lisp

+ [[http://bit.ly/1SdcP7p][Course: Introduction to functional programmin]]g ~ S. Kiiskinen
  #Haskell 

+ [[http://bit.ly/1SdcVvP][Introduction to functional programming: Course tasks]]. ~ S. Kiiskinen
  #Haskell 

+ [[http://bit.ly/1SddgPd][Functional programming 2: Course tasks]]. ~ S. Kiiskinen #Haskell

+ [[http://bit.ly/1ZUZ7VG][GHC/Haskell language extensions: a digest]]. ~ Allele Dev
  #Haskell

+ [[http://bit.ly/1P06DJC][Our functional future or: How I learned to stop worrying and love Haskell]]. ~
  @drombosky & @FugueHQ #Haskell 

+ [[http://bit.ly/1P0heEr][Practical recursion schemes at PragPub]]. ~ @RacquelYerbury
  #Haskell

+ [[http://bit.ly/1Snosa6][Design, optimization, and formal verification of circuit fault-tolerance
  techniques]]. ~ D. Burlyaev #PhD_Thesis #ITP #Coq 

+ [[http://bit.ly/1SnpOBA][Monad tutorials timeline]]. #Haskell

+ [[http://bit.ly/1Snqozo][Example pet shop written in Haskell]]. ~ R. Johnson #Haskell 

+ [[http://oreil.ly/1ZYIeJL][Building a business that combines human experts and data scienc]]e ~ B. Lorica
  #DataScience

+ [[http://bit.ly/1VwHdau][What’s a natural transformation]]? ~ L. Palmer #Math #Haskell

+ [[http://bit.ly/1VwHBWt][Category theory/natural transformation]] ~ HaskellWiki. #Math #Haskell

+ [[http://bit.ly/1PLbIey][Type introduction illustrated for casual Haskellers (to get over the
  Foldable]]) ~ Takenobu T. #Haskell

+ [[http://bit.ly/1Q2S7Rd][Probabilistic functions and cryptographic oracles in higher order logic]]. ~
  A. Lochbihler #Isabelle_HOL

+ [[http://bit.ly/20A2Nyc][Failure of unique factorization]] ~ D. Lipton #Math

+ [[http://bit.ly/20A2P9q][Catamorphisms in 15 minutes]]! ~ C. Jones #Haskell #Math

+ [[http://bit.ly/1PICIVL][Understanding F-algebras]]. ~ @BartoszMilewski #Haskell #Math

+ [[http://bit.ly/1RUh9Il][Happy learn Haskell tutorial]]. #eBook #Haskell

** Febrero 2016

+ [[http://bit.ly/1nHANuI][Proof auditing formalised mathematics]]. ~ M. Adams #ITP #Math

+ [[http://bit.ly/1PaJzYK][Clojure for data science]]. ~ Mike Anderson #DataScience #Clojure 

+ [[http://bit.ly/1TyJLGA][Now f is continuous (exercise!)]]. ~ R.D. Arthan #ITP #Math #ProofPower

+ [[http://bit.ly/1VFJTmc][GPU programming in Haskell using GPipe (Part 1)]]. ~ Tobias Bexelius
  #Haskell 

+ [[http://bit.ly/1Pw3hSj][GPU programming in Haskell using GPipe (Part 2)]]. ~ Tobias Bexelius
  #Haskell 

+ [[http://bit.ly/1KWeGWc][Mixing computations and proofs]]. ~ M. Beeson #ITP #Logic #Math #CompSci

+ [[http://bit.ly/1SH21wM][Category theory and networks: Corelations in network theory]]. ~ Azimuth
  #Math
 
+ [[http://bit.ly/1PSdmF1][Haskell is not for production and other tales]]. ~ Katie Miller
  #Haskell

+ [[http://bit.ly/1SH4erZ][Haskell for commercial software development]]. ~ Mike Craig
  #Haskell

+ [[http://bit.ly/1SH75kz][Anaconda for R users: SparkR and rBokeh]]. ~ Christine Doig
  #Python

+ [[http://bit.ly/1SH8jwq][Type theory and practical foundations]]. ~ J. Avigad
  #Logic #CompSci #ITP

+ [[http://bit.ly/1SH8Uy5][Homotopy type theory]]. ~ J. Avigad #HoTT #Math #CompSci

+ [[http://bit.ly/1SZ9qcb][The Lean theorem prover (system description)]]. ~ L. de Moura, S. Kong,
  J. Avigad, F. Van Doorn & J. von Raumer #ITP #Lean 

+ [[http://bit.ly/1SZ9Sam][Becoming productive in Haskell]]. ~ Matthew Griffith #Haskell

+ [[http://bit.ly/1KrvmK9][From mathematics to map-reduce]]. ~ G.  Gonzalez #Haskell #Math

+ [[http://bit.ly/20IViVU][The Isar proof language in 2016]]. ~ M. Wenzel #ITP #Isabelle #Isar

+ [[http://bit.ly/1NTvEED][A modular, efficient formalisation of real algebraic numbers]]. ~ W. Li &
  L.C. Paulson #ITP #Isabelle_HOL #Math

+ [[http://bit.ly/1NTw4uz][Monad transformers, free monads, mtl, laws and a new approach]]. ~ @acid2 
  #Haskell

+ [[http://bit.ly/1NTwqkM][Difference lists and the codensity monad]]. #Haskell

+ [[http://bit.ly/23MMFfk][Promoting the arrow type]]. ~ Alexander Vieth #Haskell

+ [[http://bit.ly/23MNcOr][Binary and exponential searches]]. ~ Ross Paterson #Haskell

+ [[http://bit.ly/1QKuVdf][Big data, small data, and the role of logic in machine learning]]. ~ A. Cropper
  #Prolog #ILP 

+ [[http://bit.ly/1QL8uVw][Tutorial: Creating Web applications in SWI-Prolog]]. ~ Anne Ogborn #Prolog

+ [[http://bit.ly/1odhAAU][Simply logical: Intelligent reasoning by example]]. ~ P. Flach #eBook #Prolog
  #Logic #AI

+ [[http://bit.ly/20MgZEo][Parser combinators: parsing for Haskell beginners]]. #Haskell

+ [[http://bit.ly/1SS3b8D][Hammering towards QED]]. ~ J.C. Blanchette, C. Kaliszyk, L.C. Paulson &
  J. Urban #ATP #ITP

+ [[http://bit.ly/1SS4dSf][FLTKHS: Easy, native GUIs in Haskell using FLTK]]. ~ A. Siram
  #Haskell

+ [[http://bit.ly/20hpx42][A unified Coq framework for verifying C programs with floating-point
  computations]]. ~ T. Ramananandro et als. #ITP #Coq

+ [[http://bit.ly/20hqGZs][A reflection on types]]. ~ S. Peyton Jones, S. Weirich, R.A. Eisenberg &
  D. Vytiniotis #Haskell

+ [[http://bit.ly/20hqY2p][Empirical evaluation of test coverage for functional programs]]. ~ Y. Cheng et
  als. #Haskell

+ [[http://bit.ly/20hrJIP][Theorem proving in Lean]]. ~ J. Avigad, L. de Moura & S. Kong #eBook #ITP #Lean
  #Logic #CompSci

+ [[http://bit.ly/20hs7ai][Lambda calculus]]. ~ S. Das #Logic #CompSci 

+ [[http://bit.ly/20hsxgQ][Formalisation of ground inference systems in a proof assistant]]. ~ M. Fleury
  #ITP #Logic #Isabelle_HOL

+ [[http://bit.ly/1W1crqq][Teaching Haskell to a mathematician]]. ~ Syd Kerckhove #Haskell

+ [[http://bit.ly/1S9fAq6][Introducción a la programación con la ayuda de PSeInt]]. ~ R. Saucedo
  #Programación #PSeInt

+ [[http://bit.ly/20hrmxP][Formalizing Jordan normal forms in Isabelle/HOL]]. ~ R. Thiemann & A. Yamada
  #ITP #Math #Isabelle_HOL

+ [[http://bit.ly/20QvMhg][Why today’s computer science students need to know more about 'professional
  coding']]. ~ Mark Warren #CompSci #Coding

+ [[http://bit.ly/20QwhYE][State of Clojure 2015 survey results]]. ~ Justin Gehtland #Clojure 

+ [[http://oreil.ly/20QwPOj][Are there some students who can’t learn how to code]]? ~ D. Blaikie
  #Programming 

+ [[http://bit.ly/1ScUirv][Certified context-free parsing: a formalisation of Valiant's algorithm in
  Agda]]. ~ J.P. Bernardy, P. Jansson #ITP #Agda

+ [[http://bit.ly/1ScWkrF][QuickPlot: Quick and easy data visualizations with Haskell]]. #Haskell

+ [[http://bit.ly/1ScUKpR][Magic to do (Can we avoid accepting what we cannot verify?]]) ~ R.J. Lipton &
  K.W. Regan #Math

+ [[http://bit.ly/20nL4Ig][Compiling Hilbert’s operator]]. ~ K. Rustan & M. Leino #Dafny

+ [[http://bit.ly/20nM8vZ][Hoed: a lightweight tracer and algorithmic debugger]]. #Haskell

+ [[http://bit.ly/20nMfYk][Foundations of infinitesimal calculus]]. ~ H.J. Keisler #eBook #Math #OpenLibra

+ [[http://bit.ly/20nMzGn][Viva La Resistance! A Resistance game solver]]. ~ Lee Pike #Haskell

+ [[http://bit.ly/1LhvvLg][Equivalencias entre funciones de Haskell y Maxima]]. ~ J.A. Alonso #Haskell
  #Maxima

+ [[http://bit.ly/20nLy13][Formalization of resolution calculus in Isabelle]]. ~ A. Schlichtkrull
  #PhD_Thesis #ITP #Isabelle_HOL #Logic

+ [[http://bit.ly/1Rs1gYI][Decision trees are free monads over the reader functor]]. ~ C. Thomas
  #Haskell

+ [[http://bit.ly/1Rs2WBm][Making efficient use of memory in Haskell]]. ~ Will Sewell
  #Haskell

+ [[http://bit.ly/1QaWlWA][Theorema 2.0: Computer-assisted natural-style mathematic]]s ~ B. Buchberger et
  als. #ITP #Theorema

+ [[http://bit.ly/1V8k2Ds][Proof and computation in Coq]]. ~ L. Théry et als. [Slides]
  #ITP #Coq

+ [[http://bit.ly/1V8kX6N][The euclidean algorithm generates traditional musical rhythms]]. ~ G. Toussaint
  #Math #Music

+ [[http://bit.ly/1QdmKtm][A verified SAT solver framework with learn, forget, restart, and
  incrementality]]. ~ J.C. Blanchette #Isabelle_HOL

+ [[http://bit.ly/1QdoCSO][The finest imperative language]]. #Haskell

+ [[http://bit.ly/1Qdmo5P][A case study on using functional programming for Internet of Things
  applications]]. ~ Till Haenisch #FP #IoT 

+ [[http://bit.ly/1QdmBGj][Symbolic pattern matching in Clojure]]. ~ S. C. Lynch #Clojure

+ [[http://bit.ly/1QdoOBz][Using Crash Hoare Logic for certifying the FSCQ file system]].
  #Coq #Haskell

+ [[http://bit.ly/1Qdp17O][Git fundamentos]]. ~ J. Amieiro Becerra #LibroLibre #Programación #Git
  #OpenLibra

+ [[http://bit.ly/1Qds3sF][Stack traces in GHCi, coming in GHC 8.0.1]]. ~ S. Marlow #Haskell

+ [[http://bit.ly/1Qdpln1][Python programación]]. ~ L. Rodríguez Ojeda #LibroLibre #Programación #Python
  #OpenLibra

+ [[http://bit.ly/1Qdqeft][Tutorial on type theory]]. ~ A. Bauer #Logic #CompSci 

+ [[http://bit.ly/1QdqtqC][Constructive logic for concurrent real number computation]]. ~ U. Berger
  #Logic #CompSci

+ [[http://bit.ly/1QdqKdc][Formal verification of numerical analysis programs]]. ~ S. Boldo
  #ITP #Coq #Math

+ [[http://bit.ly/1Vb4Jty][Newton sums for an effective formalization of algebraic numbers]]. ~ C. Cohen &
  B. Djalal #ITP #Coq #Math

+ [[http://bit.ly/1Xr40pE][The Seifert–van Kampen theorem in homotopy type theory]]. ~ K.B. Hou &
  M. Shulman #ITP #Agda #Math #HoT 

+ [[http://bit.ly/1Xr4493][Tests vs types]]. ~ K. Mahoney #Haskell

+ [[http://bit.ly/1Xr4uw7][NumberTheory: A Haskell number theory library]]. ~ Chris Fredrickson
  #Haskell

+ [[http://bit.ly/1Xr5vEj][A gentle introduction to secure computation]]. 

+ [[http://bit.ly/1Xr5OPA][A Pamphlet against R (Computational intelligence in Guile Scheme)]]. ~ Panicz
  Maciej Godek #Scheme #Guile #Rstats

+ [[http://bit.ly/1Xr5HDF][QuickPlot: Quick and easy data visualizations with Haskell]]. #Haskell 

+ [[http://bit.ly/1Xr67Kb][Verified numerics for ODEs in Isabelle/HOL]]. ~ F. Immler [Slides]
  #ITP #IsabelleHOL #Math

+ [[http://bit.ly/1U0kbKQ][Algebra and analysis in the Lean theorem prover]]. ~ Rob Lewis
  #ITP #Lean #Polya #Math

+ [[http://bit.ly/1of6Xxn][Conversion of HOL Light proofs into Metamath]]. ~ M.M. Carneiro
  #ITP #OpenTheory #Metamath #HOL_Light 

+ [[http://bit.ly/246Cr9S][Mathematical theory exploration in Theorema: Reduction rings]]. ~ A. Maletzky
  #ITP #Theorema #Math 

+ [[http://bit.ly/1TlEPV1][Categories: From zero to infinity]]. ~ P. Schapira #Math

+ [[http://bit.ly/1oloNyK][Fighting spam with Haskell]]. ~ Simon Marlow.  [Slides] #Haskell #Haxl

+ [[http://bit.ly/1PP57dO][Matters computational (Ideas, algorithms, source code)]]. ~ Jörg Arndt
  #eBook #Algorithms #Programming 

+ [[http://bit.ly/1onyFIa][Applications of MaxSAT in data analysis]]. ~ J. Berg, A. Hyttinen &
  M. Järvisalo #MaxSAT #Data_analysis

+ [[http://bit.ly/1Q2Gyh8][Formal proof of soundness for an RL prover]]. ~ A. Arusoaie et als. #ITP #Coq

+ [[http://bit.ly/1mLkV95][The Isabelle refinement framework (for verification of large software
  systems)]]. ~ P. Lammich #ITP #IsabelleHOL

+ [[http://bit.ly/1mLmvaX][Natural language access to data via deduction]]. ~ R. Waldinger
  #ATP 

+ [[http://bit.ly/1mLmaVK][Beyond automation: smart machines + smart humans]]. ~ T.H. Davenport #AI

+ [[http://bit.ly/1PX0Pky][Selling Haskell in the pub]]. ~ Neil Mitchell #Haskell

+ [[http://bit.ly/1PX1uCt][A general BFS solver in NetLogo]]. ~ F. Sancho #NetLogo #AI

+ [[http://bit.ly/1PX2E0W][Seminario agentes, multiagentes y aplicaciones]]. ~ G. Aranda #IA

+ [[http://bit.ly/1OljqVq][The joy and agony of Haskell in production]]. ~ S. Diehl #Haskell

+ [[http://bit.ly/1PK4N24][Cálculo numérico con Maxima]]. ~ J. Ramírez #Maxima #Matemáticas

+ [[http://bit.ly/1KxAQDF][Breve manual de Maxima]]. ~ R. Ipanaqué #Libro #Maxima

+ [[http://bit.ly/1L2fP3L][Higher-order recursion abstraction: How to make Ackermann, Knuth and Conway
  look like a bunch of primitives]]. #Haskell

+ [[http://bit.ly/1Rhjz0C][Verifying Buchberger’s algorithm in reduction rings]]. ~ A. Maletzky
  #ITP #Theorema #Math

+ [[http://bit.ly/1RhjPNk][SimpleFP - A series of increasingly complex purely functional PLs implemented
  in Haskell]]. ~ Darryl McAdams #Haskell

+ [[http://bit.ly/1RhkrCw][Linear regression in pictures]]. ~ Aditya Bhargava #Math

+ [[http://bit.ly/1RhkRca][Course: Advanced functional programming]]. ~ J. Yallop #FP #OCaml #Fω

+ [[http://bit.ly/1RhlFO5][Doing data science with Clojure]]. ~ @sbelak #DataScience #Clojure

+ [[http://bit.ly/1Rhm3MJ][It Is What It Is (And Nothing Else)]]. ~ Robert Harper #CompSci

+ [[http://bit.ly/1Rhmqqp][State of the Haskell ecosystem (February 2016 edition)]]. ~ G. Gonzalez
  #Haskell

+ [[http://bit.ly/1RhmRB2][Purely functional Web apps]]. ~ Michał Płachta #Haskell

+ [[http://bit.ly/1oyD0sc][Applied logic in engineering]]. ~ M. Spichkova #Teaching #Logic

+ [[http://bit.ly/1oyCryI][Constraint (logic) programming]]. ~ R. Barták #Logic #Programming #Prolog

+ [[http://bit.ly/1OrKEtu][Proving with types]]. ~ Matt Parsons #Haskell #Logic

+ [[http://bit.ly/1oyDQ8f][A framework for certified self-stabilization case study: silent
  self-stabilizing k-dominating set on a tree]]. ~ K. Altisen #Coq

+ [[http://bit.ly/1T3btwv][Course: Applied logic in engineering]]. ~ M. Spichkova & M. Broy
  #Course #Logic

+ [[http://bit.ly/1mYW6qh][Level-confluence of 3-CTRSs in Isabelle/HOL]]. ~ C. Sternagel, T. Sternagel
  #IsabelleHOL

+ [[http://bit.ly/1Qh3hWT][What mathematical logic says about the foundations of mathematics]]. ~
  C. Bernardi. #Logic #Math

+ [[http://bit.ly/1Qh3nxw][Classical logic and intuitionistic logic: equivalent formulations in natural
  deduction]]. ~ R. Moot & C. Retoré. #Logic

+ [[http://bit.ly/1Qh3qcE][Computability and analysis, a  historical approach]]. ~ V. Brattka. 
  #Math #CompSci

+ [[http://bit.ly/1pbl4o1][Automatically proving mathematical theorems with evolutionary algorithms and
  proof assistants]]. ~ L.A. Yang et als. #ITP #Coq

+ [[http://bit.ly/1TCqdRl][Features of a high school olympiad problem]]. ~ L. Smolinsky
  #Math

+ [[http://bit.ly/1TCsg7Z][A survey on Domain-Specific Languages for machine learning in Big Data]]. ~
  I. Portugal, P. Alencar, D. Cowan #Programming #BigData

+ [[http://bit.ly/21169Zq][QED reloaded: Towards a pluralistic formal library of mathematical
  knowledge]]. ~ M. Kohlhase, F. Rabe #MKM

+ [[http://bit.ly/1Td7LAh][Haskell by example]]. ~ Tatsuya Hirose #Haskell

+ [[http://bit.ly/1Td8lOL][Fighting spam with Haskell]]. ~ Simon Marlow #Haskell 

+ [[http://bit.ly/1UrBtkj][Dimpl: An efficient and expressive DSL for discrete mathematic]]s ~ R. Jha
  #Haskell #Math

+ [[http://bit.ly/1XUrgwo][Retrieval, transformation and verification of proofs in higher order logic]]. ~
  Shuai Wang #ITP #ProofCloud

+ [[http://nyti.ms/1nceUT2][The promise of Artificial Intelligence unfolds in small steps]]. ~ S. Lohr
  #AI 

** Marzo 2016

+ [[http://bit.ly/1RhKMOh][Mechanizing a process algebra for network protocols]]. ~ T. Bourke, R.J. van
  Glabbeek, P. Höfner #ITP #IsabelleHOL 

+ [[http://bit.ly/1RhLc7x][The Haskell cheatsheet]]. ~ J. Bailey #Haskell 

+ [[http://bit.ly/1TPVGkv][Proving completeness of logic programs with the cut]]. ~ W. Drabent
  #Logic #Prolog

+ [[http://bit.ly/24COJqC][Linear temporal logic in Isabelle/HOL]]. ~ S. Sickert #ITP #Logic #IsabelleHOL #AFP

+ [[http://bit.ly/1RsAXxc][What mathematical logic says about the foundations of mathematics]]. ~
  C. Bernardi #Logic #Math #CompSci

+ [[http://bit.ly/1RsBi2P][Haskell meets large scale distributed analytics]]. ~ A. Mestanogullari &
  M. Boespflug #Haskell #BigData

+ [[http://bit.ly/1RsSZiF][The rigor resolution on undergraduate educatio]]n ~ Boyer (1995)
  #CompSci #Education

+ [[http://bit.ly/1QXL1Ur][Formalized mathematics]]. ~ J. Harrison #Logic #Math #CompSci

+ [[http://bit.ly/21Mendx][Proof of correctness of a marching cubes algorithm carried out with Coq]]. ~
  A.N Chernikov & J. Xu #ITP #Coq

+ [[http://bit.ly/1QZ9J75][Automated search for Gödel’s proofs]]. ~ W. Sieg & C. Field #Logic #Math
  #CompSci #ATP

+ [[http://bit.ly/1X2cfYr][Introduction to funcional programming]]. ~ J. Harrison (1997) #FP #ML

+ [[http://bit.ly/24IjoD5][Teaching logic for computer science: are we teaching the wrong narrative]]? ~
  J.A. Makowsky #Logic #CompSci #Teaching

+ [[http://bit.ly/1UJucwf][Proof relevant corecursive resolution]]. ~ P. Fu et als. #ITP #Coq #Haskell

+ [[http://bit.ly/1U3spBx][A general A* solver in NetLog]]o ~ F. Sancho #Netlogo

+ [[http://bit.ly/1QWri1f][The perfect language]]. ~ Gregory Chaitin #Logic

+ [[http://bit.ly/1U3tsS7][La teoría de grupos, el cubo de Rubik y Johann Sebastian Bach]]. ~ Imanol Pérez
  #Matemáticas 

+ [[http://bit.ly/1U3tPvU][Todo entero positivo es suma de tres capicúas]]. ~ Javier Cilleruelo
  #Matemáticas

+ [[http://bit.ly/1Qvp5Ng][A Coq library for internal verification of running-times]]. ~ J. McCarthy et
  als. #ITP #Coq

+ [[http://bit.ly/1M2kvBR][Teaching cryptography]]. ~ Boaz Barak #Cryptography

+ [[http://bit.ly/1QvriZ8][Formal verification of the rank function for succinct data structures]]. ~
  A. Tanaka et als. #ITP #Coq #BigData

+ [[http://bit.ly/1Qvs0pe][Certified universal gathering in R² for oblivious mobile robots]]. ~
  P. Courtieu et als. #ITP #Coq

+ [[http://bit.ly/1pxxJlC][Open source Mathematica compatible Mathics 0.9]]. ~ Mike James
  #CAS #Math

+ [[http://bit.ly/1pxy1sJ][Interactive natural deduction proof editor]]. ~ Bob Atkey #Logic

+ [[http://bit.ly/1pxAovp][Local search algorithms in NetLogo]]. ~ F. Sancho #Netlogo

+ [[http://bit.ly/1p8ja7o][Solving Sudoku via SAT with Mathematica]]. ~ M. Sottile #Logic #SAT #Mathematica

+ [[http://bit.ly/1QvsOKN][Well-founded unions verified]]. ~ J. Dawson, N. Dershowitz & R. Goré
  #ITP #IsabelleHOL

+ [[http://bit.ly/1Qvt7Fj][Variations on noetherianness]]. ~ D. Firsov, T. Uustalu & N. Veltri
  #ITP #Agda

+ [[http://bit.ly/1QvtAas][Verified construction of static single assignment form]]. ~ S. Buchwald,
  D. Lohner & S. Ullrich #ITP #IsabelleHOL

+ [[http://bit.ly/1SEMA9e][The Cartan fixed point theorems in Isabelle/HOL]]. ~ L. Paulson
  #ITP #IsabelleHOL #Math #AFP

+ [[http://bit.ly/1RH2wTF][Using AlphaGo as a theorem prover]]. #ATP #AI

+ [[http://bit.ly/1RH2Dyx][Beginner's guide to the history of data science]]. ~  Hannah Augur
  #DataScience

+ [[http://bit.ly/22aw7Q4][Blackstar: Raytracing black holes with Haskell]]. ~ Sakari Kapanen
  #Haskell

+ [[http://bit.ly/1RfHGKj][Big Data ¿Qué es y cómo nos cambiará la vida]]? ~ M.A. Trabado
  #BigData 

+ [[http://bit.ly/1RdXFZB][Las ecuaciones más bellas de la historia de las matemáticas]]. ~ R. Pérez
  #Matemáticas

+ [[http://j.mp/21opILo][Big Data y humanidades digitales: de la computación social a los retos de la cultura
  conectada]]. ~ S. Álvaro #BigData 

+ [[http://bit.ly/24Y0Mz2][Formalising confluence in PVS]]. ~ Mauricio Ayala-Rincón #ITP #PVS

+ [[http://bit.ly/1V5JfjZ][WIMS (WWW Interactive Multipurpose Server) allows you to work on mathematics
  interactively via the Internet]]. ~ G. Xiao #Math 

+ [[http://bit.ly/24Y109e][COGENT: Verifying high-assurance file system implementations]]. ~ S. Amani et
  als. #ITP #Coq

+ [[http://bit.ly/1MkP8Tc][Peculiar pattern found in "random" prime numbers]]. ~ E. Lamb
  #Math

+ [[http://bit.ly/1MkPFES][Unexpected biases in the distribution of consecutive primes]]. ~ R.J. Lemke
  Oliver & K. Soundararajan #Math 

+ [[http://bit.ly/1RkdJz1][Propositional resolution and prime implicates generation in Isabelle/HOL]]. ~
  N. Peltier #ITP #IsabelleHOL #Logic 

+ [[http://bit.ly/1Rke4le][Haskell is the Dark Souls of programming]]. ~ Steve Shogren
  #Haskell

+ [[http://bit.ly/1RkefwU][Using the STM with Haskell]]. ~ Steve Severance #Haskell

+ [[http://bit.ly/1RkewjB][Guilloche (spirograph) patterns]]. ~ Ken Takusagawa #Haskell

+ [[http://bit.ly/1RlXuS8][From Tarski to Descartes: Formalization of the arithmetization of euclidean
  geometry]]. ~ P. Boutry et als, #ITP #Coq #Math

+ [[http://bit.ly/1S7vS09][Reasoning about programs]]. ~ P. Manolios #ITP #ACL2

+ [[http://bit.ly/1Mhrblc][Constructive analysis and experimental mathematics using the Nuprl proof
  assistant]]. ~ M. Bickford #ITP #Nuprl #Math

+ [[http://bit.ly/1MhupoC][SMT solving for functional programming over infinite structures]]. ~ B. Klin &
  M Szynwelski #Haskell

+ [[http://bit.ly/1SaIB1T][An introduction to mechanized reasoning]]. ~ M. Kerber, C. Lange & C. Rowat
  #AR #ITP

+ [[http://bit.ly/1SaIGms][Random binary heaps, separable permutations, and numbers that multiply to
  factorials]]. ~ #Algorithmic

+ [[http://bit.ly/1SaJpDZ][The SAT revolution: solving, sampling, and countin]]g ~ Moshe Y. Vardi
  [Slides] #Logic #CompSci

+ [[http://bit.ly/1SaJCqP][Efficient binary serializatio]]n ~ M. Snoyman #Haskell

+ [[http://bit.ly/1TY5M2V][Self-formalisation of Higher-Order Logic]]. ~ R. Kumar et als. #ITP #HOL4

+ [[http://bit.ly/22BwVKt][Optical quantum gates formalization in HOL Light]]. ~ S.M. Beillahi,
  M.Y. Mahmoud y S. Tahar #ITP #HOL_Light 

+ [[http://bit.ly/22uhirC][Static vs. dynamic functional language]]s ~ Sami Badawi #FP #Haskell #Lisp
  #Clojure #Scala

+ [[http://bit.ly/1RxEAlb][Structure-aware version control (A generic approach using Agda)]]. ~
  V. Cacciari Miraldo & W. Swierstra #Agda #Haskell

+ [[http://bit.ly/1q3krxw][Markov chains and Markov decision processes in Isabelle/HOL]]. ~ J. Hölzl
  #IsabelleHOL

+ [[http://bit.ly/1WRLWoe][Formally verified approximations of definite integrals]]. ~ A. Mahboubi et
  als. #ITP #Coq #Math

+ [[http://bit.ly/1VODaJb][Extensible domain specific languages]]. ~ C. Schmalhofer & A. Biehl
  #Haskell

+ [[http://bit.ly/1VODurn][Hakaru: An embedded probabilistic programming language in Haskell]]. ~ #Haskell 

+ [[http://bit.ly/1pTrwRw][Case studies in constructive mathematics]]. ~ E. Parmann #PhD_Thesis #ITP #Coq
  #Math

+ [[http://bit.ly/1RwNksF][Extensible and efficient automation through reflective tactics]]. ~ G. Malecha
  & J. Bengtson #Agda

+ [[http://bit.ly/1q0AGeX][The method "Model Elimination" of D.W.Loveland explained]]. ~ M. Lévy
  #Logic #ATP  

+ [[http://bit.ly/1q0B9Ob][Un dérivateur formel Ocaml en 5 minutes]]. ~ G. Connan #Math #OCaml

+ [[http://bit.ly/1q0Buk4][Computational thinking, 10 years later]]. ~ J.M. Wing #CompSci

+ [[http://bit.ly/1q0C8xX][History and philosophy of types]]. ~ T. Petricek #Logic
  #CompSci

+ [[http://bit.ly/1RPih0A][Hoed: A lightweight Haskell tracer and debugger]]. ~ #Haskell

+ [[http://bit.ly/1V9rC2r][Functional data validation using monads and applicative functors]]. ~ Gianmario
  Spacagna #Big_Data #FP #Scala 

+ [[http://bit.ly/1V9tLvf][Adventures in functional Big Data]]. ~ Matthew Eric Bassett #FP #Big_Data

+ [[http://bit.ly/1V9wGEb][Learning data science using functional Python]]. ~ Joel Grus #Data_science #FP
  #Python

+ [[http://bit.ly/1TlgAY7][Past, present and future of AI: a fascinating journey]]. ~ Ramón López de
  Mantaras #AI

+ [[http://bit.ly/1TlhBPT][Probabilistic logic programming tutorial]]. ~ F. Riguzzi & G. Cota
  #Logic #Programming #Prolog

** Abril 2016

+ [[http://bit.ly/1TmGXNm][Towards formal proof metrics]]. ~ D. Aspinall & C. Kaliszyk #ITP

+ [[http://bit.ly/1Vfosdu][Haskell for data science]]. ~ John Cant #Haskell #Data_science 

+ [[http://bit.ly/1Vfqc6I][Haskell for data science]]. ~ Vladimir Alekseichenko [Video] #Haskell #Data_science 

+ [[http://bit.ly/1SruBi5][Simple linear regression in Haskell]]. ~ Josh Walters
  #Haskell

+ [[http://bit.ly/1SFDTJW][roshask: Haskell client library for the ROS robotics framework]]. ~
  #Haskell #ROS 

+ [[http://bit.ly/1SFFkbk][Computabilidad, complejidad computacional y verificación de programas]]. ~
  R. Rosenfeld y J. Irazábal #Libro #Computación

+ [[http://bit.ly/1oqAFiw][Automating proofs]]. ~ Chris Edwards | Communications of the ACM #ATP

+ [[https://youtu.be/Jmw6LLNQQfs][Composing (music) in Haskell]]. ~ Stuart Popejoy [Video] #Haskell #Music

+ [[http://bit.ly/25Ciokj][Composing (music) in Haskell]]. ~ Stuart Popejoy [Slides] #Haskell #Music

+ [[https://youtu.be/R4nLSxCKkNw][Haskell, startups, and domain specific languages]]. ~ Adam Wespiser [Video]
  #Haskell

+ [[http://bit.ly/25CjxrZ][The Happstack book: Modern, type-safe Web development in Haskell]]. ~ Jeremy
  Shaw #Haskell #Web #Book

+ [[http://bit.ly/1qnxzgV][(Co)induction: it’s a thing]]! ~ V. Robert #Logic

+ [[http://bit.ly/1qnyrCl][Comparing unification algorithms in first-order theorem proving]]. ~ K. Hoder,
  A. Voronkov #Logic #Algorithms

+ [[http://bit.ly/25Cts0K][Descending sort in Haskell]]. ~ Roman Cheplyaka #Haskell 

+ [[http://bit.ly/1UAJDYU][Beyond Good and Evil (Formalizing the security guarantees of low-level
  compartmentalization)]]. ~ Y. Juglaret et als. #ITP #Coq

+ [[http://bit.ly/1UAJS6a][STM (Software Transactional Memory) in Haskell]]. ~ Steve Severance
  #Haskell

+ [[http://bit.ly/1UAJVil][Computing the uncomputable]]. ~ John Baez #Logic #Math
  #CompSci

+ [[http://bit.ly/1UAKsRs][The logic of real and complex numbers]]. ~ John Baez #Logic #Math

+ [[http://bit.ly/1RWv1CQ][Correctness and concurrent complexity of the Black-White Bakery algorithm]]. ~
  W.H. Hesselink #ITP #PVS 

+ [[http://bit.ly/225SEbv][The sym package: Definitions for permutations with an emphasis on permutation
  patterns and permutation statistics]]. ~ #Haskell #Math

+ [[http://bit.ly/225TzIQ][Au delà des réels: méthodes numériques en informatique]]. ~ G. Connan
  #Book #Math #Python

+ [[http://bit.ly/228eYRS][Variations on noetherianness]]. ~ D. Firsov, T. Uustalu, N. Veltri
  #ITP #Agda #Math

+ [[http://bit.ly/228fCi1][Introducing Haskell, functional abstraction and computation by calculation,
  reasoning about functional programs]]. ~ #Haskell

+ [[http://bit.ly/1q5ne8U][Formal languages, formally and coinductively]]. ~ Dmitriy Traytel
  #IsabelleHOL 

+ [[http://bit.ly/25KbjOH][MapReduce]]. ~ Junghoon Kang #MapReduce #Big_Data

+ [[http://bit.ly/1q5oGIq][Matasano crypto challenges solutions in Haskell]]. ~ Christopher Blanchard
  #Haskell

+ [[http://bit.ly/1q5p61s][Desugaring Haskell’s do-notation into applicative operations]]. ~ S. Marlow et
  als. #Haskell

+ [[http://bit.ly/1RFuza7][Automatic predicate testing in formal certification (You’ve only proven what
  you’ve said, not what you meant!)]] ~ F. Slama #ITP

+ [[http://bit.ly/1qwbs8B][ASlib: A benchmark library for algorithm selection]]. ~ B. Bischl et
  als. #Algorithms #Machine_learning

+ [[http://bit.ly/1VcDRg5][Formalization of phase ordering]]. ~ T. Cogumbreiro, J. Shirako & V. Sarkar
  #ITP #Coq 

+ [[http://bit.ly/1VcDxxG][Algorithms, efficiency and complexity]]. ~ S. Kambhampati #Algorithms

+ [[http://bit.ly/1YjjJqG][Algebrite: Computer Algebra System in Javascript]]. ~ #CAS
  #Math #Javascript

+ [[http://bit.ly/1VGi7Iq][(Hyper) sequent calculi for the ALC (S4) description logics]]. ~ J.P. Muñoz et
  als. #Logic #Programming #ML

+ [[http://bit.ly/1VGjlDp][Functional programming vs. imperative programming]]. ~ #Programming

+ [[http://bit.ly/1Q03OHF][Coeffects: Context-aware programming languages]]. ~ Tomas Petricek #Programming

+ [[http://bit.ly/1RXS3Ur][Full stack Lisp (Build and deploy modern Lisp applications)]]. ~ P. Penev
  #Lisp 

+ [[http://bit.ly/1RXTJ0a][Premiers pas avec Python]]. ~ H. Hounwanou #eBook #Python

+ [[http://bit.ly/1S3uL1G][Datafun: a functional Datalog]]. ~ M. Arntzenius & N.R. Krishnaswami
  #PD #Logic #Racket

+ [[http://bit.ly/1S3v1hl][Algorithmic composition: A gentle introduction to music composition using
  Common LISP and Common Music]]. ~ M. Simoni #Lisp #Music

+ [[http://bit.ly/1WliHvN][Functional models of Hadoop MapReduce with application to Scan]]. ~
  K. Matsuzaki [Slides] #BigData

+ [[http://bit.ly/1Wlk25Q][Löb's theorem (A functional pearl of dependently typed quining)]]. ~ J. Gross,
  J. Gallagher, B. Fallenstein #ITP #Agda #Logic

+ [[http://bit.ly/23xESAX][Worst practices should be hard]]. ~ G. Gonzalez #Haskell

+ [[http://bit.ly/23xGavO][A brief tour of Haskell for Scala programmers]]. ~ Ed Conolly
  #Haskell #Scala

+ [[http://bit.ly/23xGZok][Isotope: a chemistry library for calculating masses of elements and
  molecules]]. ~ Michael Thomas #Haskell #Chemistry 

+ [[http://bit.ly/1WlkKQH][On distributive AG-groupoids]]. ~ A. Khan et als. #ATP
  #Prover9 #Math

+ [[http://bit.ly/1SKGvDT][Titato: Tic tac toe in Haskell]]. ~ Taylor Fausak #Haskell

+ [[http://bit.ly/25WgStA][forallX: Cambridge (a textbook for introductory formal logic]]) ~ Tim Button
  #eBook #Logic

+ [[http://bit.ly/25WhjE9][Basic data analysis with CL without frameworks]]. ~ A. Kaygun #Lisp

+ [[http://bit.ly/1Vl5iVE][Mathematistan (The landscape of mathematics)]]. ~ Martin Kuppe #Math

+ [[http://bit.ly/23tf1O0][A software methodology for compiling quantum programs]]. ~ T. Häner et
  als. #Haskell #Quantum_computing 

+ [[http://bit.ly/1Q6lPnW][Various computer generated pictures and animations]]. ~ C. Oudard
  #Haskell #Gloss

+ [[http://bit.ly/1Shl8jf][Machine learning and computer algebra]]. ~ Z. Huang #PhD_Thesis #ATP #MetiTarski #Math #ML 

+ [[http://bit.ly/1ShmPgy][Programación funcional: ADT, teoría de categorías, functores y monads]]. ~
  A. Monsalve #Haskell

+ [[http://bit.ly/1ShlW7M][El proceso de formalización de la lógica matemática (La crisis de la
  geometría euclídea)]]. ~ B. Stonek #Lógica

+ [[http://bit.ly/1Shm7Qm][Consideraciones sobre la lógica y sobre el funcionamiento de la matemática]]. ~
  B. Stonek #Lógica #Matemáticas 

+ [[http://bit.ly/1Shmvyr][Understanding typing judgments]]. ~ D. Elkins #Agda

+ [[http://bit.ly/1Sc5ZN1][Usos prácticos de los monoides]]. ~ L. López #Haskell 

+ [[http://bit.ly/23xudK3][What will humans do when artificial intelligence can do everything]]? ~ Sally
  Painter #AI
 
+ [[http://bit.ly/23xukoZ][Alda: A music programming language for musicians]]. ~ #Clojure #Music
 
+ [[http://bit.ly/23xuAEk][Max subarray in Haskell]]. ~ D. Lettier #Haskell
 
+ [[http://ow.ly/ZbvSB][Why functional programming matters]]. ~ J. Hughes #FP
 
+ [[http://bit.ly/1ksViD7][Understanding functors, applicatives and monads]]. ~ A.Y. Bhargava
  #Haskell

+ [[http://bit.ly/1qwaRTz][Haskell: GADTs y desarrollo Web]]. ~ A. Serrano #Haskell

+ [[http://bit.ly/1qwbJrt][Who checks the checkers? (You won’t believe the answer to this one)]]. ~
  Z. Zhang et als. #ITP #Coq

+ [[http://bit.ly/1qwcmkO][Composing bijections, surjections, and injections]]. ~ Noah Luck Easterly
  #Haskell 

+ [[http://bit.ly/1qwcu3M][Experiments on the construction of functions]]. ~ Alexander Vieth
  #Haskell

+ [[http://bit.ly/1WyxIuc][A new method of verification of functional programs]]. ~ A.M. Mironov
  #Verification #FP

+ [[http://bit.ly/1VtGQkv][Dynamic programming in Haskell]]. ~ Thomas Sutton #Haskell #Algorithms

+ [[http://bit.ly/1Vz2Yui][A machine-checked constructive metatheory of computation tree logic]]. ~
  C. Doczkal #PhD_Thesis #ITP #Coq #Logic

+ [[http://bit.ly/1SQG4HQ][Hadron: Construct and run Hadoop MapReduce programs in Haskell]]. ~ 
  #Haskell #MapReduce

+ [[http://www.sti-innsbruck.at/sites/default/files/courses/fileadmin/documents/intelsys09-10/12_Intelligent_Systems-FormalConceptAnalysis.pdf][Formal Concept Analysis]]. ~ D. Fensel & F. Facca #FCA

+ [[http://bit.ly/1qWvmJH][1st Order Logic Formal Concept Analysis: from logic programming to theory]]. ~
  L. Chaudron & N. Maille #FCA #Logic #Programming #ILP

+ [[http://bit.ly/1MHc3hw][Proof-relevant pi-calculus]]. ~ R. Perera & J. Cheney #ITP #Agda

+ [[http://bit.ly/1WGOyqX][Scientific computation and functional programming]]. ~ J. Karczmarczuk
  #Haskell #Physic

+ [[http://bit.ly/1VIjvvu][learn-physics: Haskell code for learning physics]]. ~ S.N. Walck
  #Haskell #Physics

+ [[http://bit.ly/1SvXuwv][Shine: Declarative graphics for the browser]]. ~ F. Gazzetta
  #Haskell #JavaScript

+ [[http://bit.ly/1VIm1BJ][3 ways to generate lazy Fibonacci sequences in Clojure]]. ~ Y. Sharvit
  #Clojure

+ [[http://bit.ly/1SvZsg9][An example with Dedekind cuts]]. ~ C. Mummert #Math #Algorithms

+ [[http://bit.ly/1Sw0GYO][Categories for programmers: Adjunctions]]. ~ B. Milewski
  #Haskell

+ [[http://bit.ly/1YK1ElZ][Lazy processing and optimization of discrete sequences]]. ~ J. Karczmarczuk
  #Haskell #Math

+ [[http://bit.ly/1YK19s1][Evaluating SMT solvers for software verification]]. ~ A. Healy et
  als. #SMT #Verification

+ [[http://bit.ly/22Sz5DK][Beyond Clojure: Haskell]]. ~ Martin Trojer #Haskell #Clojure

+ [[http://bit.ly/1SfEVO0][Implementing the game 2048 in less than 90 lines of Haskell]]. ~ Gregor Ulm
  #Haskell

+ [[http://bit.ly/1MOyKAn][Clause selection in reolution-style theorem provers]]. ~ R. Veroff
  #ATP

+ [[http://bit.ly/1SEH1ZS][The most unreliable technique in the world to compute pi]]. ~ J. Karczmarczuk
  #Haskell #Math

+ [[http://bit.ly/1MQtHiR][List and comprehension extensions]]. ~ A. Altman #Haskell

+ [[http://bit.ly/1MQupNa][The matrix cookbook (A desktop reference for quick overview of mathematics of
  matrices)]]. ~ K.B. Petersen & M.S. Pedersen #eBook #Math

+ [[http://bit.ly/1MQuGQ8][The probability and statistics cookbook]]. ~ M. Vallentin
  #eBook #Math #Statistic

+ [[http://bit.ly/219Yz0m][Breadth-first numbering: Lessons from a small exercise in algorithm design
  (Functional pearl)]]. ~ Chris Okasaki #Haskell 

+ [[http://bit.ly/1MQOEKw][Bombyard: a clone of the minesweeper game in Haskell]]. ~ T. Fausak
  #Haskell #Game #Gloss

+ [[http://bit.ly/1SmoFL8][Functional differentiation of computer programs]]. ~ J. Karczmarczuk
  #Haskell #Math 

+ [[http://bit.ly/24lwTHz][A verified and executable implementation of reduced ordered binary decision
  diagrams in Isabelle/HOL]]. ~ J. Michaelis et als. #IsabelleHOL

+ [[http://bit.ly/1N2hebY][Vers une théorie de l'intelligence]]. ~ J.P. Delahaye #AI

+ [[http://bit.ly/1N2hGqF][Chemical computing with Clojure]]. ~ C. Meier #Clojure

+ [[http://bit.ly/24lZFrL][Data is code]]. ~ G. Gonzalez #Haskell

+ [[http://bit.ly/1rBZYRi][Computing symbolic gradient vectors with plain Haskell]]. ~ Dan Aloni
  #Haskell #Math

+ [[http://bit.ly/1rC3fjy][A Cantor trio: denumerability, the reals, and the real algebraic numbers]]. ~
  R. Gamboa & J. Cowles #ITP #ACL2 #Math 

+ [[http://bit.ly/21iE8yg][A formalisation of the Cocke-Younger-Kasami algorithm in Isabelle/HOL]]. ~
  M. Bortin #ITP #IsabelleHOL

+ [[http://bit.ly/248nK8H][A port of MiniPRL to Haskell with co-/inductive types bolted on the side]]. ~
  T. Sutton #Haskell 

+ [[http://bit.ly/1Un31YK][No faster-than-light observers (Using Isabelle/HOL to verify first-order
  relativity theory]]) ~ M. Stannett, I Németi #IsabelleHOL

+ [[http://bit.ly/1YXmTRl][A Turing machine simulator written in Haskell]]. ~ N. Lochner 
  #Haskell

** Mayo 2016

+ [[http://bit.ly/1TcW0UX][Formal verification of NTRUEncrypt scheme]]. ~ G.R. Moghissi, A. Payandeh
  #ITP #IsabelleHOL

+ [[http://bit.ly/1TcWpqn][Structuring depth-first search algorithms in Haskell]]. ~ D.J. King,
  J. Launchbury #Haskell

+ [[http://bit.ly/1WBGjfz][A formal exploration of Nominal Kleene Algebra]]. ~ P. Brunet, D. Pous
  #ITP #Coq #Logic 

+ [[http://bit.ly/1QMfLRR][MapReduce program synthesis]]. ~ C. Smith, A. Albarghouthi #MapReduce
  #Verification

+ [[http://bit.ly/1WBHQlO][Haskell resources]]. ~ Mouna Cheikhna #Haskell

+ [[http://stanford.io/23i2UOp][A programming and problem-solving seminar]]. ~ J.D. Hobby & D.E. Knuth (1983)
  #Programming

+ [[http://bit.ly/1X60enl][Gröbner bases theory in Isabelle/HOL]]. ~ F. Immler & A. Maletzky
  #ITP #IsabelleHOL #Math 

+ [[http://bit.ly/21vkKy2][Notions of computation as monoids]]. ~ E. Rivas & M. Jaskelioff.
  #Haskell 

+ [[http://bit.ly/21vlnHP][Functional data structures]]. ~ M. Ivanovié & V. Kumcak.  #Haskell

+ [[http://bit.ly/26U9pvq][El problema de los tres caballeros y los tres criado]]s ~ R. Ibáñez
  #Matemáticas #Computación

+ [[http://bit.ly/21yVdny][Spivey's generalized recurrence for Bell numbers in Isabelle/HOL]]. ~
  L. Bulwahn #ITP #IsabelleHOL #Math #AFP

+ [[http://bit.ly/21yXoru][Juega con el ordenador cuántico de IBM]]. ~ David Sarabia #Programación

+ [[http://bit.ly/1STDFAt][Randomised social choice theory in Isabelle/HOL]]. ~ M. Eberl
  #ITP #IsabelleHOL #AFP 

+ [[http://bit.ly/1STDSUu][The incompatibility of SD-efficiency and SD-strategy-proofness in
  Isabelle/HOL]]. ~ M. Eberl #ITP #IsabelleHOL #AFP 

+ [[http://bit.ly/1STEhpX][Uncertain: Manipulating numbers with inherent experimental/measurement
  uncertainty]]. ~ Justin Le #Haskell

+ [[http://bit.ly/1D2wyf1][Knuth-Morris-Pratt algorithm for substring matching in Haskell]]. ~ Twan van
  Laarhoven #Haskell #Algorithm

+ [[http://bit.ly/1STFf5j][Aho–Corasick string matching algorithm]]. ~ #Algorithm

+ [[http://bit.ly/1STFjlz][Implementation of Aho-Corasick algorithm in Haskell]]. ~ #Haskell #Algorithm

+ [[http://bit.ly/1TNNGy7][Solving and verifying the boolean Pythagorean Triples problem via
  Cube-and-Conquer]]. ~ M.J.H. Heule et als. #ATP #SAT

+ [[http://bit.ly/274mJgX][Liquid Haskell]]. ~ G. Gonzalez #Haskell

+ [[http://bit.ly/274mTol][Comparison of implementations of the Newton-Raphson in Python and
  Clojure]]. ~ #Python #Clojure #Math

+ [[http://bit.ly/1WToYPf][Combinat: A collection of functions to generate, manipulate, visualize and
  count combinatorial objects]]. ~ #Haskell #Math

+ [[http://bit.ly/1s6ZGCh][A formal proof of the max-flow min-cut theorem for countable networks]]. ~
  A. Lochbihler #ITP #IsabelleHOL 

+ [[http://bit.ly/1s70mHG][Some concepts from automata theory in Haskell]]. ~ Samuel Schlesinger
  #Haskell

+ [[http://bit.ly/1OdGZWZ][Category theory in Coq 8.5]]. ~ A. Timany, B. Jacobs #ITP #Coq

+ [[http://bit.ly/1TBpsUT][User-defined literals in Haskell via QuasiQuotes]]. ~ Harry Garrood
  #Haskell 

+ [[http://bit.ly/27a2bUa][Functional programming in practice]]. ~ M. Borkent #Scala #Haskell #Clojure

+ [[http://bit.ly/1OmSXbx][A mathematical proof takes 200 terabytes to state]]. ~ M. James
  #ATP #SAT #Math

+ [[http://bit.ly/1OmSS7J][Solving and verifying the boolean pythagorean triples problem via
  cube-and-conquer]]. ~ M.J.H. Heule et als. #ATP #SAT 

+ [[http://bit.ly/1OmTf2e][An introduction to Moessner's theorem and Moessner's sieve]]. ~ P. Urbak
  #Haskell #Math

+ [[http://bit.ly/1OmTpqr][A dual to Moessner's sieve]]. ~ P. Urbak #Haskell #Math

+ [[http://bit.ly/1It1bBI][Formalizing graph theory and planarity certificates]]. ~ L. Noschinski
  #PhD_Thesis #Isabelle_HOL

+ [[http://bit.ly/1ZA0WYU][HLinear: Exact dense linear algebra in Haskell]]. ~ A. Ghitza &
  M. Westerholt-Raum #Haskell #Math 

+ [[http://bit.ly/22380z1][A mechanization of the Blakers-Massey connectivity theorem in Homotopy Type
  Theory]]. ~ K.B. Hou et als. #ITP #Agda #HoTT

+ [[http://bit.ly/1OmZoki][A characteristic function of Moessner's siev]]e ~ P. Urbak #Haskell #Math

+ [[http://bit.ly/1OmZPv1][This Turing machine should run forever unless Maths is wrong]]. ~ J. Aron
  #Math #CompSci 

+ [[http://bit.ly/1OmZWH0][A relatively small Turing machine whose behavior is independent of set
  theory]]. ~ A. Yedidia & S. Aaronson #Math #CompSci

+ [[http://bit.ly/1TcldzK][Mindless, verified (erasably) coding using dependent types]]. ~ Jonathan
  Leivent #Coq #Algorithms 

+ [[http://bit.ly/1TclsuD][Mindless, verified (erasably) coding using dependent types, phase 2]]. ~
  Jonathan Leivent #Coq #Algorithms 

+ [[http://bit.ly/1TclyT8][Rank-balanced trees]]. ~ B. Haeupler, S. Sen & R.E. Tarjan. 
  #Algorithms

+ [[http://bit.ly/1TcmlDu][A Haskell to JVM compiler that supports GHC Haskell]]. ~ Rahul Muttineni
  #Haskell #Java

+ [[http://bit.ly/1TcmsiC][Computer Algebra Library for Chez Scheme (R6RS)]]. ~ #Scheme #CAS

+ [[http://bit.ly/1Tc9MM5][Números y hoja de cálculo: Rachas de dígitos]]. ~ Antonio Roldán
  #Matemáticas #Programación

+ [[http://bit.ly/1TcafxG][Functional modelling of musical harmony: An experience report]]. ~
  J.P. Magalhaes & W.B. de Haas #Haskell

+ [[http://bit.ly/1oV9XNI][Verified functional programming in Agda]]. ~ A. Stump #eBook #Agda #FP #Logic
  #Programming

+ [[http://bit.ly/1rLUVxo][Algorithms for bayesian networks]]. ~ @alpheccar #Haskell

+ [[http://bit.ly/1Xs18e1][Automated theorem proving in a first-order logic with first class boolean
  sort]]. ~ E. Kotelnikov #ATP #Logic 

+ [[http://bit.ly/1Xs1EIU][Flag-based big-step semantics]]. ~ C.B. Poulsen & P.D. Mosses #Coq

+ [[http://bit.ly/1Xs1X6A][MendellianGenetics: Project for simulating Mendel's genetics. Written in
  Haskell]]. ~ #Haskell #Genetics

+ [[http://bit.ly/1Xs2FRf][Simplified Common Lisp reference]]. ~ Jakub Trávník #Lisp

+ [[http://bit.ly/1ZSrrca][The evolution of a Haskell programmer]]. ~ F. Ruehr #Haskell 

+ [[http://bit.ly/1ZSrF2N][A Haskell reading list]]. ~ S. Diehl #Haskell

+ [[http://bit.ly/1ZSrSTF][Automatic propagation of uncertainty with AD]]. ~ Justin Le #Haskell

+ [[http://bit.ly/1ZSuiBU][Formalization of quantum protocols using Coq]]. ~ J. Boender, F. Kammüller &
  R. Nagarajan #Coq

+ [[http://bit.ly/1spxYAO][Implementing programming languages]]. ~ A. Ranta #eBook #Programming

+ [[http://bit.ly/1ZVHc1S][Learn you an Agda and achieve enlightenment]]! ~ Liam O’Connor-Davis
  #Agda  

+ [[http://bit.ly/27qxt9u][Haskell design patterns: .Extended modules]]. ~ Jasper Van der Jeugt
  #Haskell

+ [[http://www.plastelina.net][Plastelina interactive logic games]]. ~ #Logic #Game 

+ [[http://bit.ly/1TdxWYm][Loopless gray code enumeration and the tower of Bucharest]]. ~ F. Herter &
  G. Rote #Algorithms #Python

+ [[http://bit.ly/1Q8V2Lk][Lightweight higher-order rewriting in Haskell]]. ~ E. Axelsson & A. Vezzosi
  #Haskell

+ [[http://bit.ly/1OxwHMk][Towards a theory of reach]]. ~ J. Fowler & G. Huttom #Haskell

+ [[http://bit.ly/1Oxx4qa][Type class instances for type-level lambdas in Haskell]]. ~ T. Alkemade &
  J. Jeuring #Haskell

+ [[http://bit.ly/1Tmke00][Structure and interpretation of classical mechanics]]. ~ G.J. Sussman,
  J. Wisdom & M.E. Mayer #Scheme

+ [[http://bit.ly/1rWVVyX][Communicating mathematics: Useful ideas from computer science]]- ~ C. Wells
  #Math #CompSci #Teaching

+ [[http://bit.ly/1suSCPk][DSLsofMath: Domain specific languages of mathematics]]. ~ #Haskell #Math

+ [[http://bit.ly/1OxxwF0][Programmable signatures]]. ~ A. Persson & E. Axelsson #Haskell

+ [[http://bit.ly/25clBJB][Functional differential geometry]]. ~ G.J. Sussman, J. Wisdom & W. Farr
  #FP #Scheme

+ [[http://til.ink/1VcVqwa][The world's first artificially intelligent lawyer gets hired]]. ~ C. Weller
  #AI

+ [[http://bit.ly/1VemISZ][Perron-Frobenius theorem for spectral radius analysis in Isabelle/HOL]]. ~
  J. Divasón et als. #IsabelleHOL 

+ [[http://bit.ly/20i3yem][Simple balanced binary search trees]]. ~ P. Ragde #Haskell

+ [[http://bit.ly/20i4bV4][Sequence implementations in Haskell]]. ~ P.R. Borges #Haskell 

+ [[http://bit.ly/1NDS9Vd][Axioms for modelling cubical type theory in a topos]]. ~ I. Orton & A.M. Pitts
  #ITP #Agda

+ [[http://bit.ly/242RQVJ][Introduction to literate programming]]. ~ H. Abrams #Programming #Emacs
  #Clojure

+ [[http://bit.ly/1sMrso4][Why GNU Emacs]]? ~ rekado #Emacs

+ [[http://bit.ly/1TsE5KZ][Emacs support library for PDF files]]. ~ #Emacs #PDF

+ [[http://bit.ly/1NDSIOB][Compass-free navigation of mazes]]. ~ P. Scott & J. Fleuriot
  #ITP #HOL_Light

+ [[http://bit.ly/1WbMcl2][CodeWorld’s big decisions]]. ~ C. Smith  #Haskell 
  #Teaching #CodeWorld

+ [[http://www.bootstrapworld.org][Bootstrap: a curriculum for students ages 12–16, teaching algebraic concepts
  through coding]]. ~ #Teaching #CompSci #Math

+ [[http://bit.ly/1TR0Ach][Bootstrap curriculum]]. ~ Wikipedia #Teaching #CompSci 
  #Math

+ [[http://www.wescheme.org][WeScheme: an online programming environment based on DrRacket and
  Scheme]]. ~ #Racket #Scheme

+ [[http://bit.ly/1TR2nhp][Games from basic data structures]]. ~ M. Bovee, K. Burke & C. Tennenhouse
  #Games #Data_structures #Algorithms

+ [[http://bit.ly/1OIp8m9][Modeling data with functional programming in R]]. ~ Brian Lee Yung Rowe
  #Data_Science #FP

+ [[http://bit.ly/1OSmpfg][The joy and agony of Haskell in production]]. ~ S. Diehl #Haskell

+ [[http://bit.ly/1s4U9Mh][Functional programming with structured graphs]]. ~  B.C.d.S. Oliveira &
  W.R. Cook #Haskell

+ [[http://bit.ly/1TBf8AC][A modular way to reason about iteration]]. ~ J.C. Filliätre & M. Pereira
  #Why3

+ [[http://bit.ly/242QJoZ][Formal verification of real-time function blocks using PVS]]. ~ L. Pang et
  als. #ITP #PVS

+ [[http://bit.ly/242RoGU][Refinement based verification of imperative data structures]]. ~ P. Lammich
  #ITP #IsabelleHOL

+ [[http://bit.ly/1sbSFzR][Practical dependent types in Haskell: Type-safe neural networks (Part 1)]]. ~
  Justin Le #Haskell

+ [[http://bit.ly/1Ru0aqu][A practical Template Haskell tutorial]]. ~ #Haskell

+ [[http://bit.ly/1TBhkIo][Specification and proof of high-level functional properties of bit-level
  programs]]. ~ C. Fumex et als.  #Why3

+ [[http://bit.ly/25pHkhs][Mathematics is applied by everyone except applied mathematician]]s ~ David
  P. Wilson #Math 

+ [[http://bit.ly/25lZflB][¿Matemáticas para la industria, matemáticas de segunda]]? ~ Mikel Lezaun
  #Matemáticas 

+ [[http://bit.ly/1sE3Q4e][Deductive evaluation: formal code analysis with low user burden]]. ~ B.L. Di
  Vito #PVS 

+ [[http://bit.ly/1TOt3TS][Emacs org-mode examples and cookbook]]. ~ Eric Neilsen #Emacs

+ [[http://bit.ly/1X3Lt60][Two-hundred-terabyte maths proof is largest ever (A computer cracks the
  Boolean Pythagorean triples problem — but is it really maths?]]) ~ E. Lamb
  #Math #CompSci

+ [[http://bit.ly/1X3LhE2][Philosophical questions about programming]]. ~ Tomas Petricek #Programming

+ [[http://bit.ly/1TNCh1q][The matrix reproved (Verification Pearl)]]. ~ M. Clochard, L. Gondelman &
  M. Pereira #Why3 #Math

+ [[http://bit.ly/1X7Kcep][Producing all ideals of a forest, formally (verification pearl)]]. ~
  J.C. Filliâtre & M. Pereira #Why3 

+ [[http://bit.ly/1O0PrsW][Formal verification of the rank algorithm for succinct data structures]]. ~
  A. Tanaka, R. Affeldt & J. Garrigue #Coq #BigData 

+ [[http://bit.ly/22w71aO][CSV encoding and decoding in Haskell with Cassava]]. ~ J.P. Villa
  #Haskell #Data_Science

** Junio 2016

+ [[http://bit.ly/1Pm1UYx][MathCheck2: A SAT+CAS verifier for combinatorial conjectures]]. ~ C. Bright et
  als. #SAT #CAS #Math 

+ [[http://bit.ly/22zaWn8][Proof assistants as a routine tool]]? ~ Neil Strickland #ITP

+ [[http://bit.ly/1Pm4eie][¿Esto es Matemáticas? (¿Pueden los ordenadores realizar demostraciones
  matemáticas?]]) ~ Manuel de León #Matemáticas #Computación

+ [[http://bit.ly/1Pm4z4v][An introduction to scientific Python (and a bit of the maths behind it) -
  Pandas]]. ~ J. Moir #Python #DataScience 

+ [[http://bit.ly/1Pm4qxV][A very general method of computing shortest paths]]. ~ Russell O’Connor
  #Haskell

+ [[http://bit.ly/1Xn3fRR][Cardinality of equivalence relations in Isabelle/HOL]]. ~ L. Bulwahn
  #ITP #IsabelleHOL #AFP

+ [[http://bit.ly/1Xn6yst][Conjugate partitions]]. ~ A. Kaygun #Lisp #Math

+ [[http://bit.ly/1IhMLwS][Computer experiments are transforming mathematics]]. ~ E. Klarreich. 
  #Math #CompSci

+ [[http://bit.ly/1TOtrhQ][Mechanizing proofs about Mendler-style recursion]]. ~ R. Jacob-Rao, A. Cave &
  B. Pientka #Coq

+ [[http://bit.ly/1sssYLx][Using real projects as motivators in programming education]]. ~ M. Konecki,
  S. Lovrenčić & M Kaniški #Programming

+ [[http://bit.ly/1sssFQL][Recursion to iteration, part 1: The simple method, secret features, and
  accumulators]]. ~ Tom Moertel #Python

+ [[http://bit.ly/1XqOzRL][Functional binomial queues]]. ~ D.J. King #Haskell #Algorithms

+ [[http://bit.ly/1XqP3ax][A simple implementation technique for priority search queues]]. ~ R. Hinze
  #Haskell #Algorithms

+ [[http://bit.ly/1U4NsEr][Does this drone sport the World's most secure OS]]? ~ Jeremy Kirk
  #sel4 #Verification

+ [[http://bit.ly/1Uq13C3][Towards verified construction for planar class of a qualitative spatial
  representation]]. ~ S. Moriguchi et als. #ITP #Coq

+ [[http://bit.ly/1Uq2pN5][ODE solver as a functional fold]]. ~ J.D. Cook #Haskell #Math

+ [[http://bit.ly/1Uq2YGO][Abstract algebra for Scala]]. ~ #Scala

+ [[http://bit.ly/1Uq3Uee][How programming supports math class, not the other way around]]. ~ C. Bartlo
  #Programming #Math

+ [[http://bit.ly/1Xw1Fxf][Perspectives for proof unwinding by programming languages techniques]]. ~
  D. Ilik #Logic #Math #CompSci

+ [[http://bit.ly/1UsOzJO][EdisonAPI: A library of efficient, purely-functional data structures (API)]]. ~
  Chris Okasaki #Haskell

+ [[http://bit.ly/1Xw5PFb][Rex: A Haskell quasi-quoter for typeful results of regex captures]]. ~ M. Sloan
  #Haskell

+ [[http://bit.ly/25HDRr4][Software foundations, version 4.0 (May 2016)]]. ~ Benjamin C. Pierce et
  als. #Coq #Logic #CompSci

+ [[http://bit.ly/1WDoGO4][Haskell style guide]]. ~ J. Tibell #Haskell

+ [[http://bit.ly/1X9J49o][Formalization of normal random variables]]. ~ M. Qasim #ITP #HOL

+ [[http://bit.ly/1RXLqQN][nanoCoP: A non-clausal connection prover]]. ~ J. Otten #ATP #Logic #Prolog #CompSci

+ [[http://go.nature.com/1RXMBQl][Google moves closer to a universal quantum computer]]. ~ P. Ball
  #CompSci

+ [[http://huff.to/1RXN1Gj][Why are so many mathematicians also musicians]]? ~ D.H. Bailey  &  J.M. Borwein
  #Math #Music 

+ [[http://bit.ly/1re6soi][Experimental computation and visual theorems: Part I: the computer as
  collaborator]]. ~ J.M. Borwein #Math #CompSci

+ [[http://bit.ly/1RXMYu5][Experimental computation and visual theorems: Part III. walking on numbers]]. ~
  J.M. Borwein #Math #CompSci

+ [[http://bit.ly/1RXO8pu][First experimental demonstration of a quantum Enigma machine]]. ~ MIT
  Technology Review #CompSci

+ [[http://bit.ly/1RXOtII][Distributed systems in Haskell]]. ~ Will Yager #Haskell

+ [[http://bit.ly/1RXNBUn][Coq’Art, CPDT and SF: a review of books on Coq proof assistant]]. ~ J. Stolarek
  #ITP #Coq

+ [[http://bit.ly/1RXOnkr][Chi-square goodness of fit test example with primes]]. ~ J. Cook
  #Math #Python

+ [[http://bit.ly/1RXNBE4][Haskell Tutorials, a tutorial]]. ~ Yann Esposito #Haskell

+ [[http://www.hgamer3d.org][Create a game with Haskell]]. ~ #Haskell #Game

+ [[http://bit.ly/1rfOou2][Formalizing semantic bidirectionalization with dependent types]]. ~ H. Grohne,
  A. Löh & J. Voigtländer #ITP #Agda

+ [[http://bit.ly/1YdM2ZE][Insertion sort implemented as a fold]]. ~ J. Cook #Haskell

+ [[http://bit.ly/1YdMirP][Computing higher moments with a fold]]. ~ J. Cook #Haskell #Statistics

+ [[http://bit.ly/1UGuMJZ][Tools for thought]]. ~  Howard Rheingold #eBook #CompSci

+ [[http://bit.ly/1UGu3sn][A tool for thought]]. ~ David Nolen #ClojureScript

+ [[http://bit.ly/1YefXkw][Algo pasa con Haskell]]. ~ @__josejuan__ #Haskell

+ [[http://bit.ly/1UkXBNx][A complete tutorial to learn data science in R from scratch]]. ~ Manish
  Saraswat #Rstats #DataScience

+ [[http://bit.ly/1RZRFDP][Formally verified countermeasures against cache based attacks in
  virtualization platforms]]. ~ J. Campo #PhD_Thesis #Coq

+ [[http://bit.ly/1RZT90A][Mastering programming]]. ~ Kent Beck #Programming

+ [[http://bit.ly/1U6fGk7][Analysing big time-series data in the cloud]]. ~ T. Petricek
  #Fsharp #BigData

+ [[http://bit.ly/1QcQ9UR][Formal methods for secure software construction]]. ~ B. Goodspeed
  #Idris

+ [[http://bit.ly/1WKh5x8][Haskell programming from first principles - Follow-up resource]]s ~ Peter Bhat
  Harkins #Haskell

+ [[http://bit.ly/1WKi3tj][HGeometry: Geometric algorithms, data structures, and data types]]. ~ Frank
  Staals #Haskell #Math 

+ [[http://bit.ly/1PmLPfP][Proving type class laws for Haskell]]. ~ A. Arvidsson, M. Johansson & R. Touche
  #Haskell

+ [[http://bit.ly/25WyCnI][FizzBuzz in Haskell by embedding a domain-specific language]]. ~ M. Piróg
  #Haskell

+ [[http://bit.ly/25WATiF][The Recamán sequence]]. ~ Brent Yorgey #Math

+ [[http://bit.ly/25Soakx][Queueing and glueing for optimal partitioning (Functional Pearl)]]. ~ S.C. Mu,
  Y.H. Chiang & Y.H. Lyu #Algorithms #Haskell

+ [[http://bit.ly/25SoAal][Sequent calculus as a compiler intermediate language]]. ~ Simon Peyton Jones et
  als. #Logic #Haskell

+ [[http://bit.ly/1XpqQ3W][The story of Haskell at IMVU]]. ~ Chad Austin #Haskell

+ [[http://bit.ly/1txvAIY][Reachability, confluence, and termination analysis with state-compatible
  automata]]. ~ B. Felgenhauer & R. Thiemann #Isabelle/HOL

+ [[http://bit.ly/1txweGj][A survey of satisfiability modulo theory]]. ~ D. Monniaux #ATP #SMT

+ [[http://bit.ly/1txxs4k][ASCII art diagrams in Emacs org-mode]]. ~ J.D. Cook #Emacs

+ [[https://t.co/cLvBTp0TK9][Designing functional implementations of graph algorithms]]. ~ N. Danilenko
  #Haskell #Algorithms #Math

+ [[http://bit.ly/1QcQ9UR][Formal methods for secure software construction]]. ~ B. Goodspeed
  #Idris

+ [[http://bit.ly/1QcQgQa][Contribution of Warsaw logicians to computational logic]]. ~ D. Niwiński
  #Logic #CompSci

+ [[http://bit.ly/1UViSMu][Implementing graph grammars for intelligence analysis in OCaml]]. ~ R. Moten,
  K. Anyanwu-Ogan & S. Miranshah #OCaml

+ [[http://bit.ly/26aufW3][A visual guide to graph traversal algorithms]]. ~ #Algorithms

+ [[http://bit.ly/1UFpsrL][A fully automatic theorem prover with human-style output]]. ~ M. Ganesalingam &
  W.T. Gowers #ATP #Haskell #Math #CompSci

+ [[http://bit.ly/28OTxDc][Introducción a la demostracción asistida por ordenador con Isabelle/HOL]]. ~
  J.A. Alonso #Isabelle_HOL

+ [[http://bit.ly/28OTMye][Programs and proofs (Mechanizing Mathematics with dependent types)]]. ~
  I. Sergey #Coq

+ [[http://bit.ly/28LcVBZ][Visual theorem proving with the Incredible Proof Machine]]. ~ J. Breitner
  #Logic #ITP

+ [[http://bit.ly/28OWjbx][Theory in the time of Big Data (What is the role of theory today?]]) ~
  R.J. Lipton & K.W. Regan #Teaching #CompSci

+ [[http://bit.ly/28LdRGD][Teaching Theory in the time of Data Science/Big Data]]. ~ A.C. Gilbert &
  A. Rudra #Teaching #CompSci

+ [[http://bit.ly/28UMr00][A formal proof of Cauchy’s residue theorem]]. ~ W. Li & L.C. Paulson
  #ITP #IsabelleHOL #Math

+ [[http://bit.ly/28UNehF][The formalization of discrete Fourier transform in HOL]]. ~ Z. Shi et
  als. #ITP #HOL #Math

+ [[http://bit.ly/28OKVxs][Automatic functional correctness proofs for functional search trees]]. ~
  T. Nipkow #ITP #IsabelleHOL

+ [[http://bit.ly/28OLmaM][Formalizing the Edmonds-Karp algorithm]]. ~ P. Lammich & S.R. Sefidgar
  #ITP #IsabelleHOL

+ [[http://bit.ly/28QHwdL][Regular expressions implemented in Haskel]]l ~ G. Gonzalez
  #Haskell

+ [[http://bit.ly/28UPjdt][Two-way automata in Coq]]. ~ C. Doczkal & G. Smolka #ITP
  #Coq

+ [[http://bit.ly/28SvlPN][Getting started with GHCJS dev]]. ~ David Johnson #Haskell #JavaScript #GHCJS

+ [[http://bit.ly/28SyNdb][Teaching machines to predict the future]]. ~ MIT News #CompSci

+ [[http://bit.ly/28ONJdZ][Hereditarily finite sets in constructive type theory]]. ~ G. Smolka & K. Stark
  #ITP #Coq #Math

+ [[http://bit.ly/28OO4gC][An Isabelle/HOL formalisation of Green’s theorem]]. ~ M. Abdulaziz &
  L.C. Paulson #ITP #IsabelleHOL

+ [[http://bit.ly/2916Rpg][An introductory talk to functional programming & typeclasses]]. ~ R. Raja
  http://bit.ly/2917wGS #FP #Scala

+ [[http://bit.ly/293rZMo][A dependent security type system for concurrent imperative programs]]. ~
  T. Murray et als. #ITP #IsabelleHOL #AFP 

+ [[http://bit.ly/28ZNFoN][Usar mónadas es mucho más fácil de lo que crees, empezando con la
  programación funciona]]l.~ @__josejuan__ #Haskell

+ [[http://bit.ly/28ZPodK][The secret spiritual history of calculus (Integral calculus originated in a
  17th-century debate that was as religious as it was scientific)]]. ~
  A. Alexander #Math

+ [[http://bit.ly/293trOD][Why software startups should hire functional programmers]]. ~ Martijn Rutten
  #FP #Haskell

+ [[http://bit.ly/28ZTiDm][A tutorial implementation of Hindley-Milner type inference (Algorithm W) in
  Haskell]]. ~ http://bit.ly/293vemQ #Haskell

+ [[http://bit.ly/28ZQO8f][Cardinality of multisets in Isabelle/HOL]]. ~ L. Bulwahn #ITP #Math #IsabelleHOL #AFP 

+ [[http://bit.ly/296l8zt][Proving divide and conquer complexities in Isabelle/HOL]]. ~ M. Eberl
  #ITP #IsabelleHOL 

+ [[http://bit.ly/29bwvsL][Paradigmas de programación: programación imperativa y programación
  declarativa]]. ~ @LoopaDev #Programación

+ [[http://bit.ly/296mvOQ][Parallel combinatorics]]. ~ J. Aranda #Haskell #Math

+ [[http://bit.ly/29bxqcO][Manual de cálculo científico en SageMath]]. ~ A. Aceña, J. Armijos y M. Llerena
  #SageMath

+ [[https://www.spock.li][Spock: a lightweight Haskell web framework]]. ~ #Haskell

+ [[http://bit.ly/29bya1y][Importancia de la programación funcional en un mundo paralelo]]. ~ @LoopaDev
  #Programación #PF

** Julio 2016

+ [[http://bit.ly/29aQPYg][The resolution calculus for first-order logic in Isabelle/HOL]]. ~
  A. Schlichtkrull #ITP #Isabelle/HOL #Logic

+ [[http://bit.ly/29aQOmW][IsaFoL: Isabelle Formalization of Logic]]. ~ #ITP #Isabelle/HOL #Logic

+ [[http://bit.ly/29aXYHZ][CodeWorld for younger ages]]! ~ C. Smith #Haskell #Teaching #CodeWorld

+ [[http://bit.ly/29iaAAX][Blocks for CodeWorld]]. ~ #Haskell #Teaching #CodeWorld 

+ [[http://bit.ly/29AA0Wx][Translating Scala programs to Isabelle/HOL]]. ~ L. Hupel & V. Kuncak
  #IsabelleHOL #Scala 

+ [[http://bit.ly/29c0hLY][Qué hace un tipo de sistemas cuando se le cae todo el sistema]]. ~ Javier
  Pastor #Programación

+ [[http://opendreamkit.org][OpenDreamKit: Open Digital Research Environment Toolkit for the Advancement
  of Mathematics]]. ~ #MKM #Math #CompSci

+ [[http://bit.ly/29eHjFU][Finding proofs in Tarskian geometry]]. ~ M. Beeson & L. Wos #ATP #OTTER #Math

+ [[http://bit.ly/29dFF3K][Automating free logic in Isabelle/HOL]]. ~ C. Benzmüller & D. Scott
  #ITP #IsabelleHOL

+ [[http://bit.ly/29dFRzU][15 free Haskell books & tutorials to help you learn the Haskell programming
  language]]. ~ Hacker Lists #Haskell

+ [[http://bit.ly/29gVXwp][Programs and proofs (Mechanizing mathematics with dependent types)]]. ~ Ilya
  Sergey #ITP #Coq #Math #eBook

+ [[http://bit.ly/29dGqd1][Common Lisp ecosystem and the software distribution model]]. ~ D. Kochmański
  #Lisp

+ [[http://bit.ly/29mwyke][Verified computer linear algebra]]. ~ J. Aransay & J. Divasón #ITP #IsabelleHOL
  #Math

+ [[http://bit.ly/29lRHaS][Category theory for the sciences]]. ~ David Spivak #eBook #Math #CompSci

+ [[http://bit.ly/29lScBW][A tutorial on the universality and expressiveness of fol]]d ~ G. Hutton
  #Haskell

+ [[http://bit.ly/29yVC7O][Functional geometry]]. ~ Peter Henderson #FP

+ [[http://bit.ly/29lSfh1][Functional geometry in julia notebook demo]]. ~ S. Gowda #Julia

+ [[http://bit.ly/29poKia][A formalizing of Berlekamp's factorization algorithm]]. ~ J. Divasón et
  als. #ITP #IsabelleHOL #Math

+ [[http://bit.ly/29yVGon][A framework for verifying depth-first search
  algorithms in Isabelle/HOL]]. ~ P. Lammich & R. Neumann #ITP #IsabelleHOL

+ [[http://bit.ly/29yW5qX][Four months with Haskell]]. ~ Alexis King #Haskell

+ [[http://bit.ly/29mORSV][Original Apollo 11 guidance computer source code, in
  assembly, for Command Module and Lunar Module]]. ~ #Programming

+ [[http://bit.ly/29zNjZq][Arithmetic coding with folds and unfolds]]. ~ R. Bird & J. Gibbons #Haskell

+ [[http://bit.ly/29zMHmQ][Eastman maximal comma-free codes in Haskell]]. ~ Brent Yorgey #Haskell

+ [[http://bit.ly/29oRFjv][The Isar proof language in 2016]]. ~ Makarius Wenzel #IsabelleHOL

+ [[http://bit.ly/29nM2pl][Abstract nonsense for functional programmers (a
  introduction to category theory)]]. ~ Edsko de Vries #Haskell

+ [[http://bit.ly/29oTRYf][Optimal purely functional priority queues (1996)]]. ~ G.S. Brodal & C. Okasaki
  #Algoritm #FP #ML

+ [[http://bit.ly/29oViFN][Tackling intractable computing problems]]. ~ Aaron Dubrow #CompSci

+ [[http://bit.ly/29oWGZg][Literate programming: presenting code in human orde]]r ~ J.D. Cook
  #Programming

+ [[http://bit.ly/29oXrBI][Aprende Haskell rápido y difícil]]. ~ Y. Esposito & D. Campoverde
  #Haskell #Tutorial

+ [[http://bit.ly/29padjz][List of incomplete published mathematical proofs]]. ~ Wikipedia
  #Math

+ [[http://bit.ly/29o8rmg][Graph algorithms]]. ~ Wikipedia book #eBook #Algorithms
  #Math

+ [[http://bit.ly/29xV55h][From Hilbert to Tarski]]. ~ G. Braun, P. Boutry & J. Narboux
  #ITP #Coq #Math

+ [[http://bit.ly/2a16ucx][Purely functional incremental computing]]. ~ D. Firsov & W. Jeltsch
  #Haskell

+ [[http://bit.ly/29ANXnE][Formalizing the Edmonds-Karp algorithm in Isabelle/HOL]]. ~ P. Lammich,
  S.R. Sefidgar #ITP #IsabelleHOL

+ [[http://bit.ly/29zVZkC][Haskell Hero: un manual interactivo del lenguaje Haskell para
  principiantes]]. ~ S. Novák #Haskell

+ [[http://bit.ly/29MzGXc][Formalisation of the computation of the echelon form of a matrix in
  Isabelle/HOL]]. ~ J. Aransay & J. Divasón #IsabelleHOL
   
+ [[http://bit.ly/29AJnVD][On the formalization of some results of context-free language theory]]. ~
  M.V.M. Ramos et als. #ITP #Coq

+ [[http://bit.ly/29AJqRs][Formalization of context-free language theory]]. ~ M.V.M. Ramos
  #PhD_Thesis #ITP #Coq

+ [[http://bit.ly/29AQ75W][Dive into GHC: intermediate forms]]. ~ S. Diehl #Haskell

+ [[http://bit.ly/29AN3qg][Org-Mode and writing papers: some tips]]. ~ C.R. Donley #Emacs #LaTeX 

+ [[http://bit.ly/29zqMwH][Verified functional algorithms (Volume 3 of the software foundations series)]].
  ~ A.W. Appel #Coq

+ [[http://bit.ly/29AIc8S][Extensiones de bases de datos relacionales y deductivas: fundamentos teóricos
  e implementación]]. ~ G. Aranda #Tesis #PL

+ [[http://bit.ly/29zpF09][El zen de Javascript: a la búsqueda de la armonía del código]]. ~ C. Benítez
  #Programación #JavaScript  

+ [[http://bit.ly/29JXhtq][Verification of an LCF-style first-order prover with equality]]. ~ A.B. Jensen
  et als. #ITP #IsabelleHOL #Logic 

+ [[http://bit.ly/2a6M71F][A proof of the compositions of time interval relations]]. ~ F. Ghourabi &
  K. Takahashi #ITP #IsabelleHOL

+ [[http://bit.ly/2a6R2jo][Doing data science with Clojure]]. ~ #Data_Science #Clojure

+ [[http://bit.ly/2a6RuOp][The joy of programming to learn]]. ~ Eric Normand #Programming

+ [[http://tcrn.ch/2a5eIln][Scala is the new golden child]]. ~ Chris McKinlay #Scala

+ [[http://bit.ly/2a67c9U][Graphs: a balancing act]]. ~ Francesco Mazzoli #Haskell #Gloss

+ [[http://bit.ly/2a6luqY][Graph problems and vector-matrix multiplications in Haskell]]. ~ N. Danilenko
  #Haskell #Math

+ [[http://bit.ly/29ZsLK0][All sorts of permutations (Functional Pearl)]]. ~ J. Christiansen,
  N. Danilenko, S. Dylus #Haskell

+ [[http://bit.ly/29TAMfx][A rule based approach to teach mathematics using animation]]. ~ N. Sharaf,
  S. Abdennadher, T. Frühwirth #CHR #Prolog 

+ [[http://bit.ly/29TBvgN][Threading the Arduino with Haskell]]. ~ M. Grebe & A. Gill
  #Haskell 

+ [[http://bit.ly/29ZtkTO][Using DSLs to help people solve rule-based problems]]. ~ N. Naus & J. Jeuring
  #Clean 

+ [[http://bit.ly/29TE4iS][The surprise paradox in Isabelle/HOL]]. ~ J. Breitner #ITP #IsabelleHOL #Logic

+ [[http://bit.ly/29ZZjmW][Generating random planar graphs]]. ~ P. Vasconcelos #Haskell #QuickCheck

+ [[http://bit.ly/29TEhmu][Verification of optimised 48-bit multiplications on AVR]]. ~ J. Schmaltz &
  P. Schwabe #ACL2 

+ [[http://bit.ly/29TCWMi][Proving type class laws for Haskell]]. ~ A. Arvidsson, M. Johansson & R. Touche
  #Haskell 

+ [[http://www.numbersaplenty.com][Numbers aplenty: Interesting natural numbers and their properties]]. ~ 
  #Math

+ [[http://bit.ly/2awr70z][Logic programming with graph automorphism: Integrating nauty with Prolog (a
  tool paper)]]. ~ M. Frank & M. Codish #Prolog

+ [[http://bit.ly/2awx91m][Recursion schemes, part III: folds in context]]. ~ P. Thomson
  #Haskell

+ [[http://bit.ly/2awIKgx][Algebraic patterns: Semigroup]]. ~ P. Nilsson #Haskell

+ [[http://bit.ly/29XnDpf][A formally verified proof of the central limit theorem]]. ~ J. Avigad, J. Hölzl
  & L. Serafin #ITP #IsabelleHOL #Math 

+ [[http://bit.ly/2a3PO6X][Test data generators]]. ~ K. Claessen #Haskell #QuickCheck

+ [[http://bit.ly/2a0YaZy][Efficient R programming (A practical guide to smarter programming)]]. ~
  C. Gillespie & R. Lovelace #Rstats #DataScience

+ [[http://bit.ly/2awLbQf][Constructive Galois connections: Taming the Galois connection framework for
  mechanized metatheory]]. ~ D. Darais & als. #Coq

+ [[http://bit.ly/29V4Est][Haskell operator tutorial]]. ~ M. Snoyman #Haskell

+ [[http://bit.ly/2a7su7z][FitSpec: refining property sets for testing Haskell programs]]. ~ R. Matela
  #Haskell

+ [[http://bit.ly/2a7sDYX][A Haskell Cheat Sheet]]. ~ R. Matela http://bit.ly/2a7sDYX #Haskell

+ [[http://bit.ly/2a7sDYX][A Haskell Typeclasses Cheat Sheet]]. ~ R. Matela http://bit.ly/2a7sDYX #Haskell

+ [[http://stanford.io/29V5sOb][Git magic]]. ~ Ben Lynn #Git #eBook 

+ [[http://bit.ly/29V5Ax4][Three approaches to monads]]. ~ Lawrence Evans #Haskell

+ [[http://bit.ly/2a99aqT][The mechanization of mathematics]]. ~ M. Beeson [Slides] #ATP #ITP #Math

+ [[http://bit.ly/29WNoTx][The mechanization of mathematic]]s ~ M. Beeson #ATP #ITP #Math

+ [[http://bit.ly/2awMDlZ][Datafun: a functional datalog]]. ~ M. Arntzenius & N.R. Krishnaswami
  #Racket #Prolog 

+ [[http://bit.ly/29WN87h][La programación funcional y las arquitecturas multicore: estado del arte]]. ~
  J.G. Hoyos y A. Puertas #PF

+ [[http://bit.ly/29WOnmJ][Property testing using QuickCheck]]. ~ P. Vasconcelos #Haskell #QuickCheck

+ [[http://bit.ly/2a9a6vi][A brief intro to QuickCheck]]. ~ Stuart Gunter #Haskell #QuickCheck

+ [[http://bit.ly/2aEWmqa][Modular verification for computer security]]. ~ Andrew W. Appel
  #Verification 

+ [[http://bit.ly/2awNtPG][Deriving a probability density calculator (Functional Pearl)]]. ~ W.M. Ismail &
  C.C. Shan #Haskell

+ [[http://bit.ly/29UnKDm][Proust: a nano proof assistant]]. ~ P. Ragde #Racket #Logic

+ [[http://bit.ly/2aEYBd0][The Lax-Milgram theorem. A detailed proof to be formalized in Coq]]. ~
  F. Clément & V. Martin #Math #Coq

+ [[http://bit.ly/29UomJi][Análisis de desempeño de HASKELL en la ejecución de algoritmos paralelizados
  con primitivas]]. ~ A. Puertas y J.G. Hoyos #Haskell

+ [[http://bit.ly/2aF0FC9][Parallel evaluation strategies for lazy data structures in Haskell]]. ~
  P. Totoo #Haskell #PhD_Thesis

+ [[http://bit.ly/29UFNcI][The most important idea in Computer Science]]. ~ E. Normand
  #CompSci #Lisp #Turing

+ [[http://bit.ly/29UG936][The magic of abstractio]]n ~ E. Normand #Programming

+ [[http://bit.ly/29Un8xG][Soundly proving B method formulae using typed sequent calculus]]. ~
  P. Halmagrand #Zenon 

+ [[http://bit.ly/2awNP8E][Ghostbuster: A tool for simplifying and converting GADTs]]. ~ T.L. McDonell &
  als. #Haskell

+ [[http://bit.ly/2aHbrHT][Principles of programming languages]]. ~ M. Grant, Z. Palmer y S. Smith
  #Programming #OCaml #eBook

+ [[http://bit.ly/2aEZ92E][Proving correctness of a compiler using step-indexed logical relations]]. ~
  L. Rodrı́guez, M. Pagano & D. Fridlender #Coq 

+ [[http://bit.ly/29XBsE7][Queueing and glueing for optimal partitioning (Functional Pearl)]]. ~ S.C. Mu &
  als. #Algorithms #Haskell 

+ [[http://bit.ly/29YzO6F][Constructive geometry and the parallel postulate]]. ~ Michael Beeson
  #Math #eBook 

+ [[http://bit.ly/29YA6ud][Proof and computation in geometry]]. ~ Michael Beeson #Math #Otter 

+ [[http://bit.ly/2aJr1Th][Web meme generator: A web application for creating memes from pictures]]. ~
  #Haskell

+ [[http://bit.ly/29YTM17][Aterrizando en la programación funcional]]. ~ @__josejuan__
  #Programación #PF #Haskell

+ [[http://bit.ly/2awOQOi][Refinement through restraint: bringing down the cost of verification]]. ~
  L. O'Connor & als. #IsabelleHOL

+ [[http://bit.ly/29YBpJU][Mathematical logic and computers (Some interesting examples)]]. ~ Michael
  Beeson #Logic #ATP #Otter 

+ [[http://bit.ly/2ay8e1u][Libro de exámenes de programación funcional con Haskell (versión del 28 de
  julio de 2016)]]. ~ J.A. Alonso #Haskell

+ [[http://bit.ly/2a8SNam][Automating change of representation for proofs in discrete mathematics]]. ~
  D. Raggi, A. Bundy, G. Grov, A. Pease #IsabelleHOL 

+ [[http://bit.ly/2awOoj2][String diagrams for free monads (Functional Pearl)]]. ~ M. Piróg & N. Wu
  #Haskell

+ [[http://bit.ly/2a8PGz7][Criptografía desde el punto de vista de la programación funcional]]. ~
  D. Rodríguez #Haskell #TFG

+ [[http://bit.ly/2alh1ld][Análisis formal de conceptos desde el punto de vista de la programación
  funcional]]. ~ M. Najarro #Haskell #TFG

+ [[http://bit.ly/2alt2qQ][HGE2D: 2D game engine written in Haskell]]. ~ Martin Buck #Haskell #Games

+ [[http://bit.ly/2alsyAK][Exception safety]]. ~ Haskell-lang.org #Haskell #Tutorial

+ [[http://bit.ly/2a949uU][A literate program implementing the microKanren relational programming
  language]]. ~ seantalts #Haskell

+ [[http://bit.ly/2awPafE][High-performance client-side web applications through Haskell EDSLs]]. ~
  A. Ekblad #Haskell

+ [[http://bit.ly/2a8F7ka][Relation-algebraic verification of Prim’s minimum spanning tree algorithm]]. ~
  W. Guttmann #ITP #IsabelleHOL 

+ [[http://bit.ly/29XDnZh][Lazy graph processing in Haskell]]. ~ P. Dexter, Y. Liu & K. Chiu
  #Haskell

+ [[http://bit.ly/2aDUGQp][Un viaje a la historia de la informática]]. ~ #Informática
  #Historia 

+ [[http://bit.ly/2a8PzrW][Using programming to teach mathematics]]. ~ A. Cangiano #Math #Programming 

** Agosto 2016

+ [[http://bit.ly/2aETtbM][Modularity in Mathematics]]. ~ J. Avigad #Math #CompSci

+ [[http://bit.ly/29Uoicy][Quick specifications for the busy programmer]]. ~ N. Smallbone et
  als. #Haskell #QuickSpec 

+ [[http://bit.ly/2aEUW1J][Sistema de tipos en Haskell]]. ~ Daniel Mery #Haskell 

+ [[http://bit.ly/2aEVULs][Puzzle solving in Haskell]]. ~ Nicolas Mattia #Haskell

+ [[http://bit.ly/2aEWicT][Cryptographic block ciphers in functional programming: A case study on
  Feldspar and AES]]. ~ Gregor Ulm #Haskell

+ [[http://bit.ly/2aLu4hk][Code generation for a simple first-order prover]]. ~ J. Villadsen et
  als. #IsabelleHOL #SML 

+ [[http://bit.ly/2am9FeJ][A calculus for variational programming]]. ~ S. Chen, M. Erwig & E. Walkingshaw
  #Haskell 

+ [[http://bit.ly/2aocMDx][Zero knowledge proofs for NP]]. ~ Jeremy Kun #Logic 

+ [[http://bit.ly/2aoulTZ][Behavior-driven development (BDD) in Haskell with Hspec]]. ~ J.Carlos Pazmiño
  #Haskell #Hspec #BDD 

+ [[http://bit.ly/2ambOa7][Beginner’s Luck (A language for property-based generators)]]. ~ L. Lampropoulos
  et als. #Haskell

+ [[http://bit.ly/2aFOhkx][How to twist pointers without breaking them]]. ~ S. Chauhan, P.P. Kurur &
  B.A. Yorgey #Haskell

+ [[http://bit.ly/2aTPGqI][Catamorphisms in 15 minutes!]] ~ C. Jones #Haskell #Math

+ [[http://bit.ly/2aTQQCC][Example driven development]]. ~ W. Hughes #Emacs #Programming

+ [[http://bit.ly/2aTRT5E][Report on the NSF workshop on formal methods for security]]. ~ S. Chong et
  als. #Formal_methods

+ [[http://bit.ly/2aTRtfJ][Why writing correct software is hard ... and why math (alone) won’t help
  us]]. ~ #CompSci #Math

+ [[http://bit.ly/2aBW6ww][Formalized timed automata]]. ~ S. Wimmer #IsabelleHOL

+ [[http://bit.ly/2aBXgIx][Functional reactive programming, refactored]]. ~ I. Perez, M. Bärenz &
  H. Nilsson #Haskell

+ [[http://bit.ly/2aBX3VJ][Guilt free Ivory]]. ~ T. Elliott et als. #Haskell 

+ [[http://bit.ly/2aPAZUC][A tool for the automatic generation of logical models of order-sorted
  first-order theorie]]s ~ R. Gutiérrez et als.#Logic

+ [[http://bit.ly/2aBYeVi][AGES: a tool for generate logical models, for use with order-sorted first
  order logic]]. ~ #Haskell

+ [[http://bit.ly/2aFmD8p][Consistent consequences formalized]]. ~ M. van Delft #ITP #Coq

+ [[http://bit.ly/2aFow4P][Calculating functional programs]]. ~ J. Gibbons #Haskell

+ [[http://bit.ly/2aFoJFo][Playing with Mersenne numbers]]. ~ A. Cangiano #Math
  #Python 
 
+ [[http://bit.ly/2aVZAao][Ptolemy's theorem in Isabelle/HOL]]. ~ L. Bulwahn #ITP
  #IsabelleHOL #Math #AFP

+ [[http://bit.ly/2b2ISqX][Formally verified complexity analysis of a functional language]]. ~ S. Wimmer
  #IsabelleHOL 

+ [[http://bit.ly/2b5oYvo][Holophrasm: a neural automated theorem prover for higher-order logic]]. ~
  D. Whalen #ATP

+ [[http://bit.ly/2aYodmx][Comonads and day convolution]]. ~ Phil Freeman #Haskell  

+ [[http://bit.ly/2b6s56n][The early development of programming languages]]. ~ D.E. Knuth & L.T. Pardo
  #Programming #History

+ [[http://bit.ly/2b5rUs3][A decision procedure for univariate real polynomials in Isabelle/HOL]]. ~
  M. Eberl #ITP #IsabelleHOL #Math

+ [[http://bit.ly/2b91xBn][Functional programming and intelligent algorithms]]. ~ Hans Georg Schaathun
  #Haskell #AI

+ [[http://bit.ly/2aPGiDQ][Interactive proofs in higher-order concurrent separation logic]]. ~ R. Krebbers
  et als. #ITP #Coq

+ [[http://bit.ly/2aPFE9z][Safe zero-cost coercions for Haskell]]. ~ J. Breitner et als.
  #Haskell

+ [[http://bit.ly/2bqrZs6][Towards a verifiable topology of data]]. ~ L. Lambán, F.J. Martín, J. Rubio &
  J.L. Ruiz pp. 113-116. #ACL2  

+ [[http://bit.ly/2aVhGZ5][Foundations of mathematics: reliability and clarity: the explanatory role of
  mathematical induction]]. ~ J.T. Baldwin #Math

+ [[http://bit.ly/2aViv3Z][A formal, resource consumption-preserving translation of actors to Haskell]]. ~
  E. Albert et als. #Haskell

+ [[http://bit.ly/2btUYeH][Declare and access tuple fields with labels]]. ~ @christopherdone
  #Haskell 

+ [[http://bit.ly/2aWZ3E0][Formal availability analysis using theorem proving]]. ~ W. Ahmed & O. Hasan
  #HOL4

+ [[http://bit.ly/2aWZZIP][Λ◦λ : Functional lattice cryptography]]. ~ C. Peikert & E. Crockett
  #Haskell

+ [[http://bit.ly/2bwMfs6][Overview of ExCAPE (Expeditions in Computer Augmented Program Engineering)]]. ~
  R. Alur #Programming

+ [[http://bit.ly/2aX2XwK][Scaling up superoptimization]]. ~ P. Phothilimthana #Programming

+ [[http://bit.ly/2bwO4VM][Inductive functional programming]]. ~ U. Schmid #Programming

+ [[http://bit.ly/2bwqowa][Leon: an automated system for verifying, repairing, and synthesizing
  functional scala programs]]. ~ #Scala 

+ [[http://bit.ly/2ax5as1][The calculus of computation: decision procedures with applications to
  verification]]. ~ A. Bradley & Z. Manna #Logic

+ [[http://bit.ly/2bwovpy][Synthesis, analysis, and verification]]. ~ V. Kuncak & O. Lhotak #Compsci

+ [[http://bit.ly/2ax5cqf][Software synthesis using automated reasoning]]. ~ R. Piskac #ATP

+ [[http://bit.ly/2bwrwzk][Example-directed synthesis: a type-theoretic interpretation]]. ~ J. Frankle et
  als. #Programming

+ [[http://bit.ly/2bjpciz][Hoare-style specifications as correctness conditions for non-linearizable
  concurrent objects]]. ~ I. Sergey et als. #Coq

+ [[http://bit.ly/2bwtqac][Type-and-example-directed program synthesis]]. ~ S. Zdancewic #Programming

+ [[http://bit.ly/2bwsouf][Myth: type-and-example-driven program synthesis for functional programming
  languages]]. ~ Peter-Michael Osera #Ocaml

+ [[http://bit.ly/2bjq8ng][A theoretician's guide to the experimental analysis of algorithms]]. ~
  D.S. Johnson #Algorithms

+ [[http://bit.ly/2b0c1sx][Certified context-free parsing: a formalisation of valiant’s algorithm in
  Agda]]. ~ J.P. Bernardy & P. Jansson #Agda

+ [[http://bit.ly/2b0bwix][Programming languages for pre-mechanical calculating tools]]. ~ B. Mélès
  #CompSci #Math 

+ [[http://bit.ly/2b0bvl6][Implementing hol in an higher order logic programming language]]. ~ C. Dunchev
  et als. #Logic #λProlog

+ [[http://bit.ly/2b0f0l7][Deriving Moessner's sieve from Horner's method]]. ~ P. Urbak #Haskell #Math 

+ [[http://bit.ly/2bxsj6c][Lazy depth-first search and linear graph algorithms in Haskell]]. ~ D.J. King &
  J. Launchbury #Haskell 

+ [[http://bit.ly/2b0eljs][Formalized linear algebra over elementary divisor rings in Coq]]. ~ G. Cano et
  als. #ITP #Coq #Math

+ [[http://bit.ly/2bzzalj][Free delivery (Functional pearl)]]. ~ Jeremy Gibbons #Haskell

+ [[http://bit.ly/2aYcKAK][CoSMed: A confidentiality-verified social media platform]]. ~ F. Raimondi et
  als. #IsabelleHOL 

+ [[http://bit.ly/2bzB1zH][mySQL-Haskell: a MySQL driver written entirely in Haskell]]. ~ winterland1989
  #Haskell

+ [[http://bit.ly/2bC0kkH][On Tarski's axiomatic foundations of the calculus of relations]]. ~ H. Andréka,
  S. Givant, P. Jipsen, I. Németi #Mace4  

+ [[http://bit.ly/2bzz2vm][Aplicative programming with naperian functors]]. ~ J. Gibbons
  #Haskell

+ [[http://bit.ly/2bC1flh][mueval: A secure sandboxed Haskell interpreter for pure function
  evaluation]]. ~ @gwern #Haskell

+ [[http://bit.ly/2bNZZib][A grid of Moessner triangles]]. ~ P. Urbak #Haskell #Math

+ [[http://bit.ly/2bC0s3X][Propositions as types generalised: The Rosetta Ston]]e ~ P. Wadler
  #Programming 

+ [[http://bit.ly/2bO06dS][Lecture notes on spectral graph methods]]. ~ M.W. Mahoney #Math 

+ [[http://bit.ly/2bO0Y1T][MagicHaskeller: Automatic inductive functional programmer by systematic
  search]]. ~ #Haskell

+ [[http://bit.ly/2bOKW87][How to read a scientific paper]]. ~ S. Keshav #Research

+ [[http://bit.ly/2bOMz5O][How to implement an algorithm from a scientific paper]]. ~ Emmanuel Goossaert
  #Programming

+ [[http://bit.ly/15oC3rs][Physics, topology, logic and computation: A Rosetta stone]]. ~ J.C. Baez &
  M. Stay #CompSci

+ [[http://bit.ly/2bKt3pE][Reasoner-aid research: potentials and popularity]]. ~ S. Wang
  #ATP #ITP  

+ [[http://bit.ly/2bzzM3u][Haskell relational record (A pragmatic embedded system for type-safe and
  composable SQL queries)]]. ~ K. Hibino et als. #Haskell

+ [[http://bit.ly/2bKoSdm][Practical probabilistic programming with monads]]. ~ A. Scibior
  #Haskell 

+ [[http://bit.ly/2bKqmo8][Beautiful Racket: learn how to make your own programming languages with
  Racket (and why)]]. ~ M. Butterick #Racket

+ [[http://bit.ly/2bKqDau][Rosette: solver-aided programming language that extends Racket for program
  synthesis, verification, and more]]. ~ #Rosette #Racket

+ [[http://bit.ly/2brHzyR][Certified derivative-based parsing of regular expressions]]. ~ R. Lopes,
  R. Ribeiro, C. Camarao #Idris 

+ [[http://bit.ly/2bzA6PL][Pattern synonyms]]. ~ M. Pickering, G. Érdi, S.P. Jones & R.A. Eisenberg
  #Haskell

+ [[http://bit.ly/2btDkmx][Taint analysis for system-wide privacy audits: a framework and real-world
  case studies]]. ~ M. von Maltitz et als. #IsabelleHOL

+ [[http://bit.ly/2bzAI82][Revisiting software transactional memory in Haskell1]]. ~ M. Le, R. Yates &
  M. Fluet #Haskell

+ [[http://bit.ly/2btEQF1][Formal semantics of firewalls in Isabelle/HOL]]. ~ C. Diekmann
  #IsabelleHOL

+ [[http://bit.ly/2bIQFrv][Formalisation and execution of Linear Algebra: theorems and algorithms]]. ~
  J. Divasón #PhD_Thesis #ITP #IsabelleHOL #Math

+ [[http://bit.ly/2bIS2Xi][Haskell for beginners]]. ~ J. Moronuki #Haskell

+ [[http://bit.ly/2bISDZ0][Analyzing programs with Z3]]. ~ T. Jelvis #Haskell #Z3 #SMT

+ [[http://bit.ly/2bIWqVU][Functional reactive programming]]. ~ T. Jelvis #FRP
  #Haskell 

+ [[http://bit.ly/2brRKq7][QuickCheck testing for fun and profit]]. ~ J. Hughes #Haskell #QuickCheck

+ [[http://bit.ly/2bIYj5c][A formal study of Moessner’s sieve]]. ~ P. Urbak #ITP #Coq #Math

+ [[http://bit.ly/2brMwKD][Modeling communication network requirements for an integrated clinical
  environment in PVS]]. ~ C. Bernardeschi et als. #PVS

+ [[http://bit.ly/2bIVjFX][Inductive graphs]]. ~ T. Jelvis #Haskell

+ [[http://bit.ly/2bke9Sw][Simple firewall in Isabelle/HOL]]. ~ C. Diekmann, J. Michaelis & M. Haslbeck
  #IsabelleHOL #AFP 

+ [[http://bit.ly/2brQ1RC][Thinking with laziness]]. ~ T. Jelvis #Haskell

+ [[http://bit.ly/2bi78Vc][Verified analysis of algorithms for the list update problem]]. ~ M. Haslbeck
  #MsC_Thesis #IsabelleHOL 

+ [[http://bit.ly/2bis7r9][Reading code with Emacs: controlling what's displayed]]. ~ Nat Knight
  #Emacs

+ [[http://bit.ly/2bkPfC2][Functional programming by example]]. ~ c. rodrigues #haskell #ocaml #scheme
 #clojure

+ [[http://bit.ly/2bkeqem][Algorithms for reduced ordered binary decision diagrams (for Isabelle/HOL)]]. ~
  J. Michaelis et als. #IsabelleHOL #AFP 

+ [[http://bit.ly/2bkm9uc][The benefits (not features!) of programming with Haskell]]. ~ Robb Shecter
  #Haskell

+ [[http://bit.ly/2bfp7fl][Formalising in Isabelle/HOL a simplicial model for homotopy type theory: a
  naive approach]]. ~ J. Aransay et als. #IsabelleHOL

+ [[http://bit.ly/2bjlsef][Should i do that? using relational reinforcement learning and declarative
  programming to discover domain axioms]]. ~ #ASP #Prolog

+ [[http://bit.ly/2bjm392][Automating black-box property based testing]]. ~ Jonas Duregård
  #Phd_Thesis #Haskell 

+ [[http://bit.ly/2bqswz6][Comment Haskell a changé ma vision de développeur sur de nombreux points et
  notamment le typag]]e ~ G. Bouchard #Haskell

+ [[http://bit.ly/2bjmfvl][Haskell, monads and purity]]. ~ Tikhon Jelvis #Haskell

+ [[http://bit.ly/2bqmh7k][Python 3 for scientists]]. ~ Stephanie Douglas et als. #Python

+ [[http://bit.ly/2bJmMa8][Cheat sheet for exploratory data analysis in Python]]. ~ M. Saraswat
  #DataScience #Python 

+ [[http://bit.ly/2bJnmEQ][A curious connection between continued fractions and combinatorics]]. ~ Dan
  Piponi #Haskell #Math 

+ [[http://bit.ly/2bJoLLs][Le compilateur GHC Haskell en version 8.0.1]]. ~ Guillaume Bouchard
  #Haskell  

+ [[http://bit.ly/2bJw8CP][Build GHC in Vagrant]]. ~ Hiroshi Ogawa #Haskell #Vagrant

+ [[http://bit.ly/2bJxMnV][Introduction to scientific software deployment and development]]. ~ Damien
  Francois #Programming 

+ [[http://bit.ly/2bKINdg][CurryCheck: Checking properties of Curry programs]]. ~ M. Hanus
  #Curry

+ [[http://bit.ly/2bKKHKT][Unwanted Haskell triangle]]. ~ C. Martin #Haskell

+ [[http://bit.ly/2bO5n4s][hindent 5: One style to rule them all]]. ~ Chris Done #Haskell

+ [[http://bit.ly/2bUzV2n][A formalization of elementary group theory in the proof assistant Lean]]. ~
  A. Zipperer #ITP #Lean #Math

+ [[http://bit.ly/2bzUMuF][cabal new-build is a package manager]]. ~ E.Z. Yang #Haskell

+ [[http://bit.ly/2bzXjVV][Sets, logic, computation (An open logic text)]]. ~ R. Zach #eBook #Logic

+ [[http://bit.ly/2bUE06s][How to compile GHC on Windows using Stack and the new Shake-based GHC build
  system]]. ~ Neil Mitchell #Haskell

** Septiembre 2016

+ [[http://bit.ly/2bUcG9c][Culling concurrency theory: Reusable and trustworthy meta-theory, proof
  techniques and separation results]]. ~ J. Åman #IsabelleHOL

+ [[http://bit.ly/2bUd3R7][Answer set programming for logical analysis of data]]. ~ K Becker et
  als. pp. 15-26 #ASP #Prolog #DataScience #LAD

+ [[http://bit.ly/2cek1ys][ladoscope: tools for logical analysis of data]]. ~ P. Lemaire
  #DataScience #LAD #OCaml 

+ [[http://bit.ly/2bIitBd][Build GHC on Windows using Hadrian and Stack]]. ~ A. Mokhov
  #Haskell

+ [[http://bit.ly/2bItYsp][Craft3e: Code for "Haskell: the craft of functional programming", 3rd ed]]. ~
  S. Thompson #Haskell 

+ [[http://bit.ly/2c0o0A2][DataHaskell: an open source Haskell Data Science organization]]. ~ 
  #Haskell #DataScience

+ [[http://bit.ly/2c0p9Yb][Currying is delicious]]. ~ J. Moronuki #Haskell

+ [[http://bit.ly/2cyZ4CU][Function compose, type cut, and the algebra of logic]]. ~ X. Yuheng
  #Logic #CompSci #Scheme

+ [[http://bit.ly/2c05IwK][Getting started with Haskell using Stack]]. ~ #Haskell

+ [[http://bit.ly/2c0502v][Set-theoretic mereology]]. ~ Joel David Hamkins #Logic #Math

+ [[http://bit.ly/2czDD4y][Has-Sci: A collection of computational methods in science]]. ~ Sarthak Bagaria
  #Haskell #Physics 

+ [[http://stanford.io/2clI4ey][Reproducible research in the mathematical sciences]]. ~ D. Donoho & V, Stodden
  #Math #CompSci

+ [[http://bit.ly/2cmdlxT][Haskell for Data Science]]. ~ G. Gonzalez #Haskell #DataScience

+ [[http://bit.ly/2cefsa2][Problemas de satisfacción de restricciones]]. ~ F. Sancho
  #AI  

+ [[http://bit.ly/2ceeiv8][Formal reasoning about programs]]. ~ Adam Chlipala #eBook
  #Logic #CompSci #ITP #Coq

+ [[https://youtu.be/nZwSo4vfw6c][How the Königsberg bridge problem changed mathematics]]. ~ Dan Van der Vieren
  #Math 

+ [[http://bit.ly/2cmCnNz][Proofs and programs]]. ~ @JohnDCook #Math #CompSci

+ [[http://bit.ly/2cmFlSh][Inteligencia artificial: Colonias de hormigas]]. ~ Daniel Riera
  #IA

+ [[http://bit.ly/2cegGSv][How hard, really, is SAT?]] ~ R.J Lipton & K.W. Regan #Logic #CompSci

+ [[http://bit.ly/2cpSVEb][A variant of the superposition calculus in Isabelle/HOL]]. ~ N. Peltier 
  #ITP #IsabelleHOL #Logic #AFP

+ [[http://bit.ly/2cpVKFF][Haskell basics: functions and pictures]]. ~ J. Breitner
  #Haskell #CodeWorld  

+ [[http://bit.ly/2cpXyy5][The new CIS-194 (The Haskell minicourse at the University of Pennsylvania)]]. ~
  J. Breitner #Haskell 

+ [[http://bit.ly/2cpYNgK][Una de las demostraciones más bonitas de Paul Erdös]]. ~ #Matemáticas

+ [[http://bit.ly/2cq0ZVv][An elegant proof from Erdös]]. ~ J.D. Cook #Math

+ [[http://bit.ly/2cpZy9C][Learn you an Elm]]. ~ J. Eremondi & A. Neslusan #Elm

+ [[http://bit.ly/2chxecg][haskell-emacs: Write Emacs extensions in Haskell]]. ~ #Haskell #Emacs

+ [[http://bit.ly/2cpVPc2][Stone algebras in Isabelle/HOL]]. ~ W. Guttmann #ITP
  #IsabelleHOL #Math #AFP

+ [[http://bit.ly/2ciUuXi][Deriving Haskell lenses from an adjunction in the Kleisli category using
  Yoneda]]. ~ B, Milewski #Haskell

+ [[http://bit.ly/2cruk1N][Why is list comprehension bad?]] ~ Xah Lee #Programming

+ [[http://bit.ly/2cqDlJJ][An algebra of synchronous atomic steps]]. ~ I.J. Hayes et als.
  #ITP #IsabelleHOL

+ [[http://amzn.to/2cqG8md][Automated reasoning and Amazon s2n]]. ~ Colm MacCárthaigh
  #Cryptography #AR #Cryptol #Haskell  

+ [[http://bit.ly/2cEoaPt][Part one: Verifying s2n HMAC with SAW]]. ~ J. Dodds
  #Cryptography #AR #Cryptol #Haskell  

+ [[http://bit.ly/2cEoyO2][Part two: Specifying HMAC in Cryptol]]. ~ J. Dodds #Cryptography #AR #Cryptol
  #Haskell

+ [[http://bit.ly/2cEqSED][DataHaskell wiki]]. ~ #Haskell #DataScience #DataHaskell

+ [[http://bit.ly/2cEq3LT][The new and improved Programming Languages Zoo]]. ~ Andrej Bauer
  #Programming 

+ [[http://bit.ly/2cqJdCV][The Programming Languages Zoo (A potpourri of programming languages)]]. ~
  A. Bauer & M. Pretnar #Programming 

+ [[http://bit.ly/2cqS87z][Columbia creates data set cleaner]]. ~ Kay Ewbank #DataScience

+ [[http://bit.ly/2cEDU4O][The base of a string theory for Haskel]]l ~ Edward Z. Yang
  #Haskell 

+ [[http://bit.ly/2cElvFt][A formal proof of the incompatibility of SD-efficiency and
  SD-strategy-proofness]]. ~ M.Eberl #ITP #IsabelleHOL

+ [[http://code.world][CodeWorld: Educational computer programming environment using Haskell]]. ~
  C. Smith http://bit.ly/2bYjVOB #Haskell #CodeWorld  

+ [[http://bit.ly/2bZn3K5][HaskellStarter: A project that demonstrates getting up and running with
  Haskell]]. ~ Josh Cough #Haskell

+ [[http://bit.ly/2bZnZhH][How to teach computational thinking]]. ~ stephen wolfram #education #compsci

+ [[http://bit.ly/2bzp1kf][emacs configurations for latex]]. ~ irreal #emacs #latex

+ [[http://bit.ly/2by1ke2][A curated list of awesome coq frameworks, libraries and software]]. ~ #Coq

+ [[http://bit.ly/2bztioh][How to write a package in Haskell and interact with the code inside of it]]. ~
  Chris Allen #Haskell

+ [[http://bit.ly/2cbbh0l][Proving non-deterministic computations in agda]]. ~ S. Antoy, M. Hanus &
  S. Libby #Agda #Curry 

+ [[http://bit.ly/2csttmq][Using Haskell for a declarative implementation of system Z inference]]. ~
  S. Kutsch & C. Beierle #Haskell 

+ [[http://bit.ly/2cssxyg][Iptables-semantics in Isabelle/HOL]]. ~ C. Diekmann & L. Hupel #IsabelleHOL
  #AFP

+ [[http://bit.ly/2cbcew9][A framework for extending microkanren with constraints]]. ~ J. Hemann &
  D.P. Friedman #Racket

+ [[http://bit.ly/2cbbqbh][Selene: a generic framework for model checking concurrent programs from their
  semantics in Maude]]. ~ A. Riesco & G. Suárez #Maude

+ [[http://bit.ly/2c115lc][Huri: a clojure library for the lazy data scientists]]. ~ Simon Belak
  #Clojure #DataScience 

+ [[http://bit.ly/2c2asrf][Doing data science with Clojure]]. ~ Simon Belak #Clojure #DataScience

+ [[http://bit.ly/2c2BugI][Los polinomios de Rudin-Shapiro]]. ~ Café Matemático #Matemáticas

+ [[http://bit.ly/2c2BXPZ][Intro to formal logic 2nd ed. — readers wanted]]! ~ Peter Smith
  #Logic

+ [[http://bit.ly/2c2Dwxc][IDRIS: Systems programming meets full dependent types]]. ~ E.C. Brady
  #Idris

+ [[https://youtu.be/FRu8SRWuUko][Emacs configuration in 24 minutes]]. ~ Mohammed Ismail
  #Emacs

+ [[http://bit.ly/2c14lwP][Example driven development]]. ~ Wilfred Hughes #Emacs #Lisp

+ [[http://bit.ly/2c14aSj][Creating and running unit tests directly in source files with org-mode]]. ~
  Frederick Giasson #Clojure #Emacs

+ [[http://bit.ly/2cCh6kd][An implementation of Deflate in Coq]]. ~ C.S. Senjak & M. Hofmann
  #Coq

+ [[http://bit.ly/2cFBZLe][What does Flatland have to do with Haskell?]] ~ Tony Fischetti
  #Haskell

+ [[http://bit.ly/2cND2Ia][Formalized confluence of quasi-decreasing, strongly deterministic conditional
  TRSs]]. ~ T. Sternagel & C. Sternagel #ITP #IsabelleHOL

+ [[http://bit.ly/2cNDXbs][A reimplementation of the Statistics.Sample module using the foldl package]]. ~
  Alex Mason #Haskell

+ [[http://bit.ly/2cNHDKg][Working with data in Haskell]]. ~ Chris Done #Haskell #DataScience

+ [[http://bit.ly/2cPsqIM][A short mechanized proof of the Church-Rosser Theorem by the Z-property for
  the λβ-calculus in Nominal Isabelle]]. ~ #IsabelleHOL

+ [[http://bit.ly/2cPvtAP][Applicative style programming]]. ~ J.L. García http://bit.ly/2cPvy7o #Haskell

+ [[http://bit.ly/2cGQVL3][A short Haskell FileStore tutorial]]. ~ M. Mayer #Haskell
  #Git #Darcs #Mercurial

+ [[http://bit.ly/2cGQK2k][Emacs for Haskell]]. ~ M. Mayer #Haskell #Emacs

+ [[http://bit.ly/2cI2MIP][Top algorithms used by data scientists]]. ~ G. Piatetsky #DataScience

+ [[http://bit.ly/2cI6H88][Lógica formal y argumentación como disciplinas complementarias]]. ~ G. Palau
  #Lógica

+ [[http://bit.ly/2cI4YzW][learn-physics: Haskell code for learning physics]]. ~ S.N. Walck
  #Haskell #Physic

+ [[http://bit.ly/2cI65zH][Practical string processing in Haskell]]. ~ K. Osanai #Haskell

+ [[http://bit.ly/2cSSTFl][Certifying a crash-safe file system]]. ~ Haogang Chen #PhD_Thesis #Coq

+ [[http://bit.ly/2cKcuu9][Modules that enable one to write simulation scripts in Haskell. The examples
  particularly simulate some of the laws of mechanics]]. ~ #Haskell

+ [[http://bit.ly/2ctUkJx][Formal semantics & verification for the Border Gateway Protocol]]. ~ K. Weitz
  et als. #Coq 

+ [[http://bit.ly/2cR2P3e][La estética del código fuente: a la búsqueda del Arte en la Programación]]. ~
  Carlos Benítez #Programación 

+ [[http://bit.ly/2cR4Uwi][Toward a history of mathematics focused on procedures]]. ~ P. Blaszczyk et
  als. #Math #History 

+ [[http://bit.ly/2cfxLY8][Axiomatizing category theory in free logic]]. ~ C. Benzmüller & D.S. Scott
  #ITP #IsabelleHOL

+ [[http://bit.ly/2cfA51o][Folds and infinite lists]]. ~ @argumatronic #Haskell

+ [[http://bit.ly/2cfyGrA][Set theory and its place in the foundations of mathematics (a new look at an
  old question)]]. ~ M. Džamonja #Logic #Math

+ [[http://bit.ly/2ch3xEa][Machine-checked mathematics]]. ~ A. Mahboubi #ITP #Math

+ [[http://bit.ly/2cinKOY][Programas, funciones y dibujos]]. ~ J.A. Alonso #CodeWorld #Haskell

+ [[http://bit.ly/2cib8m9][Teenage Haskell]]. ~ Tim Docker #CodeWorld #Haskell

+ [[http://bit.ly/2ciaIMw][SAT/SMT solving in Haskell]]. ~ Masahiro Sakai #Haskell #SAT #SMT

+ [[http://bit.ly/2ckuv2H][Introduction to Stack's Docker integration]]. ~ Yuji Yamamoto
  #Haskell #Stack #Docker

+ [[http://bit.ly/2d4ngc4][Mechanized analysis of a formalization of Anselm's ontological argument by
  Eder and Ramharter]]. ~ J. Rushby #ITP #PVS

+ [[http://bit.ly/2cVnIw4][Proofs and assurance (The case of the ontological argument)]]. ~ J. Rushby
  #ITP #PVS 

+ [[http://bit.ly/2cVnYLb][Assurance and formal methods]]. ~ J. Rushby #Formal_methods

+ [[http://bit.ly/2d4nvUs][Formal models for human-machine interactions]]. ~ J. Rushby
  #Formal_methods

+ [[http://bit.ly/2cVo6uk][Assurance in the internet of things and for automated driving]]. ~ J. Rushby
  #Formal_methods #IoT 

+ [[http://bit.ly/2ckvYWA][Practical Haskell: simple file mirror (part 1)]]. ~ M. Snoyman
  #Haskell 

+ [[http://bit.ly/2cVq9Pf][Álgebra Linear: com um pouco de Mecânica Quântica]]. ~ D. Krause
  #eBook #Math 

+ [[http://bit.ly/2d4z7Xq][A proof of the halting theorem]]. ~ R.J Lipton & K.W. Regan #Logic #CompSci

+ [[http://bit.ly/2cVzjLt][Music as code talks]]. ~ Chris Ford #Programming #Music

+ [[http://bit.ly/2d4AGVd][Equilibrium graphs]]. ~ P. Cabalar, C. Pérez & G. Pérez #Logic #ASP

+ [[http://bit.ly/2d4Pljd][Beginning Haskell]]. ~ Tom Prior #Haskell

+ [[http://bit.ly/2d0thsN][Stone algebras in Isabelle/HOL]]. ~ W. Guttmann #IsabelleHOL #Math #AFP

+ [[http://bit.ly/2d0sdFw][Math-aware search engines: physics applications and overview]]. ~ D.C. Pineau
  #Math #MKM

+ [[http://bit.ly/2d0tQmp][Practical Haskell: simple file mirror (part 2)]]. ~ M. Snoyman
  #Haskell 

+ [[http://bit.ly/2d5UZRg][Social network processes in the Isabelle and Coq theorem proving
  communities]]. ~ J. Fleuriot, S. Obua, P. Scott #IsabelleHOL #Coq

+ [[http://bit.ly/2d5TDWX][Distributed agent-based automated theorem proving in order-sorted first-order
  logic]]. ~ Dohan Kim #ATP

+ [[http://bit.ly/2d5Uu9W][The influence of Haskell: new Java Spring release contains functional web
  framewor]]k ~ @poutsma http://bit.ly/2cAr3PU #Haskell

+ [[http://bit.ly/2d758xg][L'intelligence artificielle, ce n'est plus de la science-fiction]]. ~ Christine
  Siméone #IA

+ [[http://bit.ly/2cBeT9L][Your first Haskell application (with Gloss]]) ~ Andrew Gibiansky
  #Haskell #Cabal #Gloss #Game 

+ [[http://bit.ly/2cBfR5x][GIF as time paradox: between transience and permanence]]. ~ #Math #GIF
  #Mathematica

+ [[http://bit.ly/2cBgZX3][Refinement reflection: Haskell as a theorem prover]]. ~ R. Jhala
  #Haskell #LiquidHaskell #Logic 

+ [[http://bit.ly/2cWxYGn][Certification of context-free grammar algorithms]]. ~ D. Firsov
  #PhD_Thesis #Agda 

+ [[http://bit.ly/2cBcM5u][Data science and the perfect team]]. ~ Ryan Swanstrom #DataScience

+ [[http://bit.ly/2d5hetS][Semiring programming: a framework for search, inference and learning]]. ~
  V. Belle & L. de Raedt #Programming 

+ [[http://bit.ly/2dmUUwB][Allen's interval calculus in Isabelle/HOL]]. ~ F. Ghourabi
  #ITP #IsabelleHOL #AFP 

+ [[http://bit.ly/2dmU7vo][Leibniz' dream]]. ~ The Ratiocinator #Logic #CompSci
  #Leibniz

+ [[http://bit.ly/2dmUfLn][Under the spell of Leibniz's Dream]]. ~ Edsger W.Dijkstra #Logic #CompSci
  #Leibniz

** Octubre 2016

+ [[http://bit.ly/2dsc3Fj][Mathematical components]]. ~ A. Mahboubi, E. Tassi, Y. Bertot, G. Gonthier
  #ITP #Coq #Math #eBook 

+ [[http://bit.ly/2dscbV8][On the functional interpretation of OCL]]. ~ D. Calegari & M. Viera
  #Haskell 

+ [[http://bit.ly/2d2ZlJB][List of logical lists]]. ~ Adolfo Neto #Logic

+ [[http://bit.ly/2daALpZ][Failing faster: Overlapping patterns for property-based testing]]. ~ J. Fowler
  & G. Hutton #Haskell

+ [[http://bit.ly/2daBUxW][Tutorial on reasoning in expressive non-classical logics with Isabelle/HOL]]. ~
  A. Steen, M. Wisniewski & C. Benzmüller #IsabelleHOL

+ [[http://bit.ly/2dBYweo][Big Logic: verifying the correctness of large systems]]. ~ J.D. Cook
  #Logic #CompSci

+ [[http://bit.ly/2dC0HhJ][Sparse linear algebra datastructures and algorithms in Haskell]]. ~ Marco Zocca
  #Haskell

+ [[http://bit.ly/2dGqvcA][Total functional programming]]. ~ D.A.Turner #Haskell 

+ [[http://thonny.cs.ut.ee][Thonny: Python IDE for beginners]]. ~ #Python

+ [[http://bit.ly/2bjq8ng][A theoretician’s guide to the experimental analysis of algorithms]]. ~
  D.S. Johnson #Algorithmic

+ [[http://bit.ly/pFCZew][Dependent types at work]]. ~ A. Bove & P. Dybjer #Haskell

+ [[http://bit.ly/2dMbLsS][Foundations of data science]]. ~ A. Blum, J. Hopcroft & R. Kannan
  #eBook #DataScience 

+ [[http://bit.ly/2dMchqN][Proof assistants for natural language semantics]]. ~ S. Chatzikyriakidis &
  Z. Luo #ITP #Coq

+ [[http://bit.ly/2dMd23j][Verified algorithms for context-free grammars in Coq]]. ~ J. Hofmann
  #Coq

+ [[http://bit.ly/2dMj9Vd][On the applications of interactive theorem proving in computational sciences
  and engineering]]. ~ A. Tahat #ITP #PVS

+ [[http://bit.ly/2dMfhTS][Modular deductive verification of sampled-data systems]]. ~ Daniel Ricketts et
  als. #Coq

+ [[http://bit.ly/2dnOY3b][¿Se puede liberar la programación del estilo de von Neumann]]? ~ F. Sancho
  #Programación 

+ [[http://bit.ly/2dOHGsF][An introduction to programming and proving with dependent types in Coq]]. ~
  A. Chlipala #Coq

+ [[http://bit.ly/2dORMJY][La lógica matemática: una disciplina en busca de encuadre]]. ~ J. Ferreirós
  #Lógica

+ [[http://bit.ly/2dMkew7][Mind the gap: Addressing behavioural inconsistencies with formal methods]]. ~
  J.K.F. Bowles & M.B. Caminati #IsabelleHOL #Z3

+ [[http://bit.ly/2dq5fER][Refinement reflection on ADTs: Lists are monoids]]. ~ R. Jhala
  #Haskell #LiquidHaskell #Logic 

+ [[http://bit.ly/2dWh8Wq][Intersecting chords theorem in Isabelle/HOL]]. ~ L. Bulwahn
  #ITP #Isabell/HOL #Math #AFP

+ [[http://bit.ly/2dWivnU][Bullipedia: un caso de construcción social de conocimiento gastronómico]]. ~
  A. Jiménez  #PhD_Thesis

+ [[http://bit.ly/2dWlexF][HLogo: A parallel Haskell variant of NetLogo]]. ~ N. Bezirgiannis,
  I.S.W.B. Prasetya & I. Sakellariou  #Haskell 

+ [[http://bit.ly/2dWE3AT][What makes a program elegant]]? ~ Robin K. Hill
  #Programming 

+ [[http://bit.ly/2e5pRpr][Essentials missed by mathematics education (for good reasons, and with bad
  consequences)]]. ~ W. Neuper #Math #Education #ITP

+ [[http://bit.ly/2e5qpvm]["Systems that explain themselves" for engineering education]]. ~ W.A. Neuper
  #Education #TP

+ [[http://bit.ly/2dFCAeU][Foundations of Mathematics (Oct. 15, 2016)]]. ~ Ken Kubota
  #Logic #Math #ITP 

+ [[http://bit.ly/2dFDV5p][A toy Mathematica interpreter in Haskell]]. ~ Yonghao Jin #Haskell #Mathematica

+ [[http://bit.ly/2dFY1N3][Razonamiento formalizado: Del sueño a la realidad de las pruebas]]. ~
  J.A. Alonso #RA2016

+ [[http://bit.ly/2dFZF15][Du rêve à la réalité des preuves]]. ~ Jean-Paul Delahaye #RA2016

+ [[http://bit.ly/2dG0F5c][Proof assistants: History, ideas and future]]. ~ H. Geuvers
  #RA2016

+ [[http://bit.ly/2dG0pDh][A short survey of automated reasoning]]. ~ J. Harrison #RA2016

+ [[http://nyti.ms/2dG0xTh][Computer math proof shows reasoning power]]. ~ G. Kolata #RA2016

+ [[http://bit.ly/2dG2oYy][Computers and the sociology of mathematical proof]]. ~ D. MacKenzie
  #RA2016 

+ [[http://bit.ly/2dG0dE4][What is automated theorem proving?]]. ~ G. Sutcliffe #RA2016

+ [[http://bit.ly/2eaczYA][The HoTT Library: A formalization of homotopy type theory in Coq]]. ~ A. Bauer
  et als. #ITP #Coq #HoTT

+ [[http://bit.ly/2edb6ku][Formalising real numbers in homotopy type theory]]. ~ G. Gilbert
  #ITP #Coq #Math

+ [[http://bit.ly/2edbXSi][Analyzing program termination and complexity automatically with AProV]]E ~
  J. Giesl et als. #AProVe

+ [[http://bit.ly/2et9R0C][Cours: Automated reasoning]]. ~ J. Fleuriot #AR #Logic
  #IsabelleHOL #RA2016

+ [[http://bit.ly/2etbrQc][Refinement reflection (or, how to turn your favorite language into a proof
  assistant using SMT)]]. ~ N. Vazou & R. Jhala #Haskell

+ [[http://bit.ly/2ewWhJA][Stable matching in Isabelle/HOL]]. ~ Peter Gammie #IsabelleHOL #AFP

+ [[http://bit.ly/2ewoC2G][Persistent data structures]]. ~ G. Kunigami #OCaml

+ [[http://bit.ly/2ewucC5][A simple embedded probabilistic programming language]]. ~  Jared Tobin
  #Haskell

+ [[http://bit.ly/2e5Yvwe][Efficient certified resolution proof checking]]. ~ L. Cruz-Filipe et
  als. #ITP #Coq #Logic

+ [[http://bit.ly/2e607Ga][A taste of Haskell]]. ~ Dennis Felsing #Haskell 

+ [[http://bit.ly/2e5ZWuj][Calling Python libraries from Haskell]]. ~ John Millikin #Python #Haskell

+ [[http://bit.ly/2e5xfsx][Verifying Haskell programs using constructive type theory]]. ~ A. Abel at
  als. #Haskell #Agda

+ [[http://bit.ly/2e5xnix][hs2agda: a tool for formally verifying haskell code in Agda]]. ~ Langston
  Barrett #Haskell #Agda 

+ [[http://bit.ly/2eakq3l][Automation of separation logic using auto2]]. ~ B. Zhan #IsabelleHOL

+ [[http://bit.ly/2eXiAqd][Modal logics for nominal transition systems in Isabelle/HOL]]. ~ T. Weber et
  als. #IsabelleHOL #AFP

+ [[http://bit.ly/2fjfK21][How are programs found? (Speculating about language ergonomics with
  Curry-Howard)]]. ~ J. Emerich #CompSci #Math

+ [[http://bit.ly/2f1XbeT][Formal reasoning]]. ~ H. Geuvers #Logic

+ [[http://bit.ly/2f1SYrz][Florida Tech, CS: Functional programming (Fall 2016)]]. ~ Ryan Stansifer
  #Haskell 

+ [[https://t.co/zvMNQz9pFt][Building small native languages with Haskell]]. ~ S. Diehl
  #Haskell

+ [[http://bit.ly/2fjexbd][Efficient certified resolution proof checking]]. ~ L. Cruz-Filipe,
  J. Marques-Silva & P. Schneider-Kamp #ITP #Coq #SAT 

** Noviembre 2016

+ [[http://bit.ly/2fjfNec][Verified parallel string matching in Haskell]]. ~ N. Vazou & J. Polakow
  #Haskell #LiquidHaskell

+ [[http://bit.ly/2eTjJRb][Certified convergent Perceptron learning]]. ~ T. Murphy, P. Gray & G. Stewart
  #Coq #ML 

+ [[http://bit.ly/2fqI5QV][A functional approach to library construction for conceptual reasoning]]. ~ DWP
  MacMillan #Haskell

+ [[http://bit.ly/2fqE0fu][Automation of separation logic using auto2]]. ~ B. Zhan #IsabelleHOL

+ [[http://bit.ly/2f5bKAi][Verificación formal de la lógica de Hoare en Isabelle/HOL]]. ~ N. González
  #IsabelleHOL

+ [[http://bit.ly/2f5c2HE][Introductory Programming Subject in European Higher Education]]. ~ V. Aleksić &
  M. Ivanović #Programming #Education

+ [[http://bit.ly/2frOQ50][The theory and practice of Randori coding dojos]]. ~ J. Rooksby, J. Hunt &
  X. Wang #Programming

+ [[http://bit.ly/2f8VjTO][Haskell vs. other programming languages]]. ~ ~ S. Diehl
  #Programming Haskell

+ [[http://bit.ly/2fguInH][A Coq formal proof of the Lax–Milgram theorem]]. ~ S. Boldo et
  als. #ITP #Coq #Math

+ [[http://bit.ly/2fgwuFB][Write your own theorem prover]]. ~ P. Scott #Haskell #Logic

+ [[http://bit.ly/2fEydTN][Covariance and contravariance]]. ~ M. Snoyman #Haskell

+ [[http://bit.ly/2fEuoOa][Exceptions best practices in Haskell]]. ~ M. Snoyman #Haskell

+ [[http://bit.ly/2fEveL4][The best Functional Programming blogs and how to get started]]. ~ Medium
  #FP #Haskell #Scala #Clojure #Elixir #Erlang #FSharp

+ [[http://bit.ly/2fEBZwp][Theorem prover museum]]. ~ M. Kohlhase #ATP #ITP

+ [[http://bit.ly/2fEwwWq][Artificial Intelligence (Provisional Lecture Notes)]]. ~ M. Kohlhase
  #AI

+ [[http://bit.ly/2fEAder][Computational Logic (320441 CompLog Lecture Notes)]]. ~ M. Kohlhase
  #Logic

+ [[http://bit.ly/2fgLnro][Living in Emacs]]. ~ Irreal #Emacs

+ [[http://bit.ly/2fH1rkY][Expressiveness of deep learning in Isabelle/HOL]]. ~ A. Bentkamp
  #IsabelleHOL #AFP 

+ [[http://bit.ly/2fgIqad][Trees that grow (an early draft)]]. ~ S. Najd & S. Peyton Jones
  #Haskell

+ [[http://bit.ly/2fi9q9g][Concrete semantics with Isabelle/HOL (Advanced course at Universität des
  Saarlandes)]]. ~ J. Blanchette et als. #IsabelleHOL

+ [[http://bit.ly/2ficVN9][Extending superposition with integer arithmetic, structural induction, and
  beyond]]. ~ S. Cruanes #PhD_Thesis #Logic #ATP #OCaml

+ [[http://bit.ly/2fGUOiy][A brief presentation of OCaml]]. ~ S. Cruanes #OCaml

+ [[http://bit.ly/2fuvuLN][Popular Math books at Goodreads]]. ~ #Math #Books

+ [[http://bit.ly/2f615mr][Coming to terms with quantified reasoning]]. ~ L. Kovács, S. Robillard &
  A. Voronkov #ATP #Vampire 

+ [[http://bit.ly/2f4MjvU][Observations of a functional programmer]]. ~ Yaron Minsky #FP #OCaml

+ [[http://bit.ly/2f4Q58G][Practical recursion scheme]]s ~ Jared Tobin #Haskell

+ [[http://bit.ly/2euFjMX][What Artificial Intelligence can and can’t do right now]]. ~ Andrew Ng
  #AI

+ [[http://bit.ly/2euCEmb][Functional programming in Clojure]]. ~ Troy Miles #FP
  #Clojure

+ [[http://bit.ly/2f60tgl][Contributions to a computational theory of policy advice and avoidability]]. ~
  N. Botta, P. Jansson & C. Ionescu #Idris

+ [[http://bit.ly/2fxMhQn]["Let us calculate!": Leibniz, Llull, and the computational imagination]]. ~
  J. Gray #Leibniz #Math #CompSci 

+ [[http://bit.ly/2g0W5Bg][CertSkel: a verified compiler for a Coq-embedded GPGPU DSL]]. ~ I. Asakura et
  als. #ITP #Coq 

+ [[http://bit.ly/2g46xrz][Beginning practical Haskell (An introductory Haskell programming course)]]. ~
  Richard Cook #Haskell 

+ [[http://bit.ly/2g4PbuF][Theorem proving in Lean]]. ~ J. Avigad, L. de Moura y S. Kong
  #ITP #Lean 

+ [[http://bit.ly/2fCJ95J][Interactive and automated theorem proving for non-classical logics (Tutorial
  at GCAI 2016)]]. ~ C. Benzmüller #IsabelleHOL #Logic

+ [[http://bit.ly/2fETMVU][teaspoon: Solving the curriculum-based course timetabling problems with
  Answer Set Programming]]. ~ M. Banbara #ASP

+ [[http://bit.ly/2fESeuN][Haskell tutorial and cookbook]]. ~ M. Watson #Haskell #eBook

+ [[http://bit.ly/2fEZgzS][Solving the 15-Puzzle with Haskell and diagram]]. ~ J. Rosenbluth #Haskell

+ [[http://bit.ly/2fEVGpA][Haskell numeric types: quick reference]]. ~ J. Rosenbluth #Haskell

+ [[http://bit.ly/2fJBEKu][¿Puede existir matemática sin computación]]? ~ F. Sancho #Matemáticas
  #Computación

+ [[https://arxiv.org/abs/1611.05990][Monte Carlo connection prover]]. ~ M. Färber, C. Kaliszyk & J. Urban
  #ATP #ML #leanCoP

+ [[http://bit.ly/2fXx8FY][Comparative concurrency with Haskell]]. ~ M. Snoyman #Haskell

+ [[http://bit.ly/2fMKhnn][A Haskell study syllabus (Learn professional-grade Haskell coding practices
  quickly and efficiently)]]. ~ FP Complete #Haskell

+ [[http://bit.ly/2fMFhiE][A verified low-level formatting EDSL in Agda]]. ~ M. van Geest
  #MsC_Thesis #Agda

+ [[http://bit.ly/2fMENZU][Software libre bajo Linux: Una alternativa para las Matemáticas de México]]. ~
  G.M. Ortigoza #Matemáticas #Computación 

+ [[https://t.co/4iShOUjdKf][Fundamental concepts in programming languages]]. ~ C. Strachey
  #Programming

+ [[http://bit.ly/2fMOwQ3][Proving opacity of a pessimistic STM]]. ~ S. Doherty et als. #IsabelleHOL

+ [[http://bit.ly/2g1SK3O][Haskell for dummies]]. ~ M. Snoyman #Haskell

+ [[http://bit.ly/2g1RNsh][SAW provides the ability to formally verify properties of code written in C,
  Java, and Cryptol]]. ~ #Haskell #Formal_verification

+ [[http://bit.ly/2g2KjVQ][Hackage dependency monitor]]. ~ #Haskell

+ [[http://bit.ly/2fQUSOd][Donald Knuth was the first Erlang programmer]]. ~ A. Videla
  #Programming #Erlang

+ [[http://bit.ly/2fFHwle][Boolean pythagorean triples problem]]. ~ Wikipedia #Math
  #Logic #CompSci

+ [[http://bit.ly/2fIbJzP][Spreading the Gospel of Haskell]]. ~ M. Snoyman #Haskell

+ [[http://bit.ly/2fIgA4j][Máximo producto en la partición de un número (2)]]. ~ Antonio Roldán
  #Matemáticas #Programación 

+ [[http://bit.ly/2fIh5uY][Programming and mathematical thinking]]. ~ A.M. Stavely #eBook #Math
  #Programming #Python

+ [[http://bit.ly/2fIfmGh][The coder’s apprentice: learning programming with Python 3]]. ~ P. Spronck
  #eBook #Programming #Python

+ [[http://bit.ly/2feEUOU][Towards certified compilation of financial contracts]]. ~ D. Annenkov &
  M. Elsman #Coq #Haskell 

+ [[http://bit.ly/2ffruSB][New computer algebra system: OSCA]]R ~ #Math #CompSci #CAS

+ [[http://bit.ly/xA2Dm7][Introducción a la Lógica (para informáticos)]]. ~ L.M. Pardo #Lógica

+ [[http://bit.ly/2fMXwlm][Bach and the musical Möbius strip]]. ~ Tony Phillips #Math #Music

+ [[http://bit.ly/2fN7pPR][plots: Diagrams based plotting library]]. ~ #Haskell

+ [[http://bit.ly/2fZZBgC][Simulate physics on generalized coordinate systems using Hamiltonian
  Mechanics and automatic differentiation]]. ~ #Haskell

+ [[http://bit.ly/2g0bVNR][UCI datasets: data sets for statistics and machine learning, in Haskell]]. ~
  #Haskell

+ [[http://bit.ly/2fOFmQ2][Why category theory matters: a functional programmer’s perspective]]. ~
  J.N. Oliveira #Math #FP

+ [[http://bit.ly/2g5t5ty][Proofs from THE BOOK]]. ~ M. Aigner & G.M. Ziegler #Math
  
+ [[http://bit.ly/2g5kF5z][Euclid's theorem: proofs of infinitude of primes]]. ~ Wikipedia
  #Math 

+ [[http://bit.ly/2g5eWfZ][Fermat numbers are coprime]]. ~ ProofWiki #Math

+ [[http://bit.ly/2g5zHs7][Foldl: Composable, streaming, and efficient left folds]]. ~ G. Gonzalez
  #Haskell 

+ [[http://bit.ly/2fTn5RV][Libro de exámenes de programación funcional con Haskell (versión del 27 de
  noviembre de 2016)]]. ~ J.A. Alonso #Haskell

+ [[http://bit.ly/2g7c7et][An interactive tutorial on numerical optimization]]. ~ Ben Frederickson
  #Math #Javascript

+ [[http://bit.ly/2g7f6mZ][Simple unsolved math problem: How often does an integer occur as a binomial
  coefficient]]? ~ W. David Joyner #Math

+ [[http://bit.ly/2ga2TxV][Adventures in enumerating balanced brackets]]. ~ Brent Yorgey
  #Haskell 

+ [[http://bit.ly/2g9Zuzf][The generic-random library, part 1: simple generic Arbitrary instances]]. ~
  Brent Yorgey #Haskell 

+ [[http://bit.ly/2gahmKg][Haskell documentation, 2016 update]]. ~ M. Snoyman #Haskell

+ [[https://github.com/hubbards/GroupTheory][Group theory in Haskell]]. ~ #Haskell #Math

+ [[http://go.nasa.gov/2g2VY6X][Formally certified round-off error analysis of floating-point functions]]. ~ M
  Moscato, L Titolo, A Dutle, CA Muñoz #PVS

+ [[http://bit.ly/2g4xIBi][GHC optimization and fusion]]. ~ Mark Karpov #Haskell 

** Diciembre 2016

+ [[http://bit.ly/2gsHL65][Implementation of Bourbaki's Elements of Mathematics in Coq: Part two, from
  natural numbers to real numbers]]. ~ J. Grimm #Coq #Math

+ [[http://bit.ly/2ghBozI][Beautiful folds are practical, too]]. ~ G. Gonzalez #Haskell

+ [[http://bit.ly/2gvLm3u][Beautiful folds in Scala]]. ~ A. Warski #Scala

+ [[http://bit.ly/2ghC9sz][Scala, the language for Data Science]]. ~ D. Arenas #Scala #DataScience

+ [[http://bit.ly/2gvKiwH][Do you like Scala? Give Haskell a try!]] ~ P. Kant #Haskell #Scala

+ [[http://bit.ly/2gysl09][Introduction to functional reactive programming (FRP), Yampa, and Arrows]]. ~
  H. Nilsson #FRP #Haskell

+ [[http://bit.ly/2gpsq3E][Demostración asistida por ordenador]]. ~ J.M. Aransay y C. Domínguez
  #IsabelleHOL #Matemáticas

+ [[http://bit.ly/2gpp9RW][Analyzing programs with Z3 and Haskell]]. ~ T. Jelvis #Haskell #SMT

+ [[http://bit.ly/2g5cySU][Proust: A nano proof assistant]]. ~ Prabhakar Ragde #ITP
  #Logic #Racket 

+ [[http://bit.ly/2g5csdP][Course: Logic and Computation]]. ~ Prabhakar Ragde #ITP
  #Logic #Racket #Agda #Coq

+ [[http://bit.ly/2g4HG9H][An algebra of graphs]]. ~ Andrey Mokhov #Haskell #Math

+ [[http://bit.ly/2h16kFM][Learn Quantum Mechanics with Haskell]]. ~ Scott N. Walck #Haskell #Physics

+ [[http://bit.ly/2h53WQJ][Domain-specific languages of mathematics: presenting mathematical analysis
  using functional programming]]. ~ C. Ionescu #Haskell #Math

+ [[http://bit.ly/2gdFGY4][The Bricklayer Ecosystem: Art, Math, and Code]]. ~ V. Winter, B. Love &
  C. Corritore #Programming #Math

+ [[http://bit.ly/2hdGRZM][Paraconsistency in Isabelle/HOL]]. ~ A. Schlichtkrull & J. Villadsen
  #Logic #IsabelleHOL #ITP 

+ [[http://bit.ly/2hfzxws][Denotational semantics of IMP without fixed points]]. ~ Jeremy Siek
  http://bit.ly/2hfy8X2 #Coq

+ [[http://bit.ly/2hfvUHc][Liquid Haskell: Haskell as a theorem prover]]. ~ Niki Vazou
  #PhD_Thesis #Haskell 

+ [[http://bit.ly/2gvffAw][A formal proof of a Unix path resolution algorithm]]. ~ R. Chen, M. Clochard,
  C. Marche #ITP #Coq 

+ [[http://bit.ly/2gvcMWQ][Course: Computer-aided reasoning for software engineering]]. ~ Vijay Ganesh
  #ATP #Logic #CompSci 

+ [[http://bit.ly/2gvNYxM][Algoritmos voraces]]. ~ Carlo Frabetti #Algorítmica

+ [[http://bit.ly/2gvQ3Kj][Twelve monads of Christmas. Day 1: IO — Our ugly friend]]. ~ Ben Clifford
  #Haskell

+ [[http://bit.ly/2gvXkty][Twelve monads of Christmas. Day 3: Maybe — Mini-lists, or mini-exceptions]]. ~
  Ben Clifford #Haskell 

+ [[http://bit.ly/2gyMWB3][Towards verified computer algebra]]. ~ M. Dénès, C. Cohen, A. Mörtberg
  #Coq #Math 

+ [[http://bit.ly/2hhQiXO][Logic in Computer Science]]. ~ Thierry Coquand #Logic
  #CompSci 

+ [[http://bit.ly/2gyYqob][Principes des langages de programmation]]. ~ Eric Goubault
  #eBook #CompSci #OCaml

+ [[http://bit.ly/2gz6zJA][Plotting a weight chart using Emacs Org-Mode and Gnuplot]]. ~ Praveen Kumar
  #Emacs #GnuPlot

+ [[https://youtu.be/Q3UqTSWPZ8E][¡Olvida OO y a pensar funcionalmente]]! ~ Javier Onielfa [Vídeo]
  #Haskell

+ [[http://bit.ly/2gwKojE][Formally verified differential dynamic logic]]. ~ B. Bohre et
  als. #IsabelleHOL #Coq #Logic

+ [[http://bit.ly/2gwQsJd][Extensible records explained]]. ~ Fumiaki Kinoshita
  #Haskell  

+ [[http://bit.ly/2gwJZOi][AI in biological modelling]]. ~ F. Fages #AI

+ [[http://bit.ly/2gwKmZa][DeepBach: a steerable model for Bach chorales generation]]. ~ G. Hadjere,
  F. Pachet #AI

+ [[http://bit.ly/2hDsjp7][The calculus of dependent lambda eliminations]]. ~ A. Stump
  #Agda

+ [[http://bit.ly/2hDvjC4][A gentle introduction to functional programming in Haskell]]. ~ K.A. Lambert
  #eBook #Haskell

+ [[http://bit.ly/2hI9RM9][Markov processes in Isabelle/HOL]]. ~ J. Hölzl #IsabelleHOL 

+ [[http://bit.ly/2hI2wfE][Haskell in the Datacentre: how we tuned the GHC runtime to make Haskell run
  better at scale]]. ~ Simon Marlow #Haskell

+ [[http://bit.ly/2hIcaPj][A fun refactoring example in Haskell]]. ~ Pascal Hartig #Haskell

+ [[http://nyti.ms/2hLq3wn][The great A.I. awakening]]. ~ Gideon Lewis-Krausdec #AI

+ [[http://bit.ly/2hS4lXn][Normalisation by evaluation for type theory, in type theory]]. ~ T. Altenkirch
  & A. Kaposi #Agda 

+ [[http://bit.ly/2hYdc9U][Efficient certified RAT verification]]. ~ L. Cruz-Filipe et
  als. #SAT #Coq #ACL2 

+ [[http://bit.ly/2hYgNoF][Zeller's congruence algorithm to calculate the day of the week]]. ~ #Haskell

+ [[http://bit.ly/2hY8vND][Implementation of Bourbaki's Elements of Mathematics in Coq: Part Three
  Structures]]. ~ J. Grimm #Coq #Math

+ [[http://bit.ly/2gWlmLj][Formal foundations of 3d geometry to model robot manipulators]]. ~ R. Affeldt &
  C. Cohen #Coq #Math

+ [[http://bit.ly/2ic8xkV][Verification of certifying distributed programs (Case study: leader
  election)]]. ~ S. Akili, K. Völlinger #Coq

+ [[http://bit.ly/2idBsW3][PureScript mediante ejemplos (Programación funcional para la Web)]]. ~ Phil
  Freeman #PureScript #eBook 

+ [[http://bit.ly/2idFZHW][Mónadas]]. ~ Mario Román | LibreIM #Haskell

+ [[http://bit.ly/2h4HHq6][Jupyter Notebooks for the "Python Data Science Handbook"]]. ~ Jake Vanderplas
  #Python #DataScience #eBook 

+ [[http://bit.ly/2h4LUK9][How to teach introductory logic to undergraduates]]. ~ Diary of Dr. Logic
  #Logic

+ [[http://bit.ly/2idUVFZ][Specification driven programming: A design pattern. (Solving the dichotomy
  between solution and test)]]. ~ C. Kohlhepp #Lisp

+ [[http://bit.ly/2idQpY2][A bird’s eye view of functional programming]]. ~ Brooklyn Zelenka
  #FP #Haskell 

+ [[http://bit.ly/2hbyyvD][8 ways to report errors in Haskell]]. ~ Eric Kidd #Haskell

+ [[http://bit.ly/2hbASDa][hs-logo: an interpreter for the Logo Programming Language, written in
  Haskell]]. ~ #Haskell #Logo

+ [[http://bit.ly/2hbEPI3][Data frames for tabular data]]. ~ Anthony Cowley #Haskell

+ [[http://bit.ly/2hf1tyX][Reflecting on Haskell in 2016]]. ~ Stephen Diehl #Haskell

+ [[http://bit.ly/2isPP91][Formalization and assessment of Lowe’s modal ontological argument]]. ~
  D. Fuenmayor #IsabelleHOL 

+ [[http://bit.ly/2heX4MH][Validating the meta-theory of programming languages with Haskell]]. ~
  G. Fachini #Haskell

+ [[http://bit.ly/2hfYs1C][Mutual recursion in final encoding]]. ~ Andreas Herrmann #Haskell

+ [[http://bit.ly/2iuvL67][Introducing the Hamilton library]]. ~ Justin Le #Haskell

+ [[http://bit.ly/2hg2JSA][Proving Stuff in Haskell]]. ~ Mads Buch #Haskell

+ [[http://bit.ly/2iukEtJ][Little languages]]. ~ David Laing #Haskell

+ [[http://bit.ly/2iuG3mM][Tamarin prover: a powerful tool for the symbolic modeling and analysis of
  security protocols]]. ~ #Haskell

+ [[http://bit.ly/2isNMBI][The theory of abstract objects]]. ~ E. Badstübner, D. Kirchner & P. Schießl
  #IsabelleHOL

+ [[http://bit.ly/1BRfexe][Formal verification for ASP: A case study using the PVS theorem prover]]. ~
  F. Aguado et als. #ITP #PVS #ASP 

+ [[http://bit.ly/2iyYqXI][Mathematical components (The Book]]) ~ Assia Mahboubi & Enrico Tassi
  #eBook #Coq #Math

+ [[http://bit.ly/2iz5Qu4][McCarthy Math]]. ~ Harry Prevor #Lisp #Python #Math

+ [[http://bit.ly/2it2AAc][Proving God’s existence by automating Leibniz’ algebra of concepts]]. ~
  M. Bentert et als. #IsabelleHOL

+ [[http://bit.ly/2iD3GJL][Quo Vadis program verification]]. ~ Krzysztof R. Apt #Verification

+ [[http://bit.ly/2iEJ43L][Haskell-style Fibonacci in Python]]. ~ Joel Grus #Haskell #Python

+ [[http://bit.ly/1mGh9aQ][What Python can learn from Haskell]]. ~ Bob Ippolito #Python #Haskell

+ [[http://bit.ly/2hoPvTI][The Zen of Python]]. ~ #Python

+ [[http://bit.ly/2hp4IUz][The Zen of Haskell]]. ~ #Haskell

+ [[http://bit.ly/2hp5OzX][How pythonic is Haskell]]? ~ Mike Meyer #Haskell #Python

+ [[http://bit.ly/2hp0lsK][Haskell gets static typing right]]. ~ Andres Löh #Haskell

+ [[http://bit.ly/2hp5rp6][Functional programming with Python]]. ~ Alexey Kachayev #FP #Python

+ [[http://bit.ly/2hn7ud4][A formalization of the Berlekamp–Zassenhaus factorization algorithm]]. ~
  J. Divasón et als. #IsabelleHOL #Math 

+ [[http://bit.ly/2iHmuaW][Elegant and efficient Python]]. ~ S.R. Hastings #Python 

+ [[http://bit.ly/2htEFf3][Computational algebra system in Haskell]]. ~ Hiromi Ishii #Haskell #Math

+ [[http://bit.ly/2htOslf][The idea of Lisp]]. ~  Eric Normand #Lisp

+ [[http://bit.ly/2hveNja][The next 700 safe tactic languages]]. ~ B. Ziliani et
  als. #Coq

+ [[http://bit.ly/2it6ZTG][Computerized verification of formal reconstructions of Anselm’s argument by
  Eder and Ramharter]]. ~ L. Grätz & F. Schütz #IsabelleHOL

+ [[http://bit.ly/2hyXihQ][Fiction as model theory]]. ~ Robin K. Hill  #Logic

+ [[http://bit.ly/2iQ54c5][Software project maintenance is where Haskell shines]]. ~ Chris Done
  #Haskell

+ [[http://bit.ly/2iQ5orj][F-algebras or: how I learned to stop worrying and love the type system]]. ~
  Anthony Burzillo #Haskell

+ [[http://bit.ly/2hzJ8gc][Twelve monads of Christmas]]. ~ Ben Clifford #Haskell

* Lecturas anteriores al 2016

En esta sección se recogen anteriores recopilaciones de lecturas publicadas en
[[http://www.glc.us.es/~jalonso/vestigium][Vestigium]] y en la [[http://www.glc.us.es/wiki/Lecturas][Wiki de GLC]]. También están ordenadas en orden cronológico
inverso.

** Lecturas del año 2015
+ [[http://www.glc.us.es/~jalonso/vestigium/lecturas-del-grupo-de-logica-computacional-desde-el-29-de-junio-de-2014/][Lecturas de enero a julio del 2015]].
** Lecturas del año 2014
+ [[http://www.glc.us.es/~jalonso/vestigium/lecturas-del-grupo-de-logica-computacional-desde-el-29-de-junio-de-2014/][Lecturas del 29-junio-2014 al 15-julio-2015]].
+ [[http://www.glc.us.es/~jalonso/vestigium/lecturas-del-grupo-de-logica-computacional-del-15-al-29-de-junio/][Lecturas del 15-junio-2014 al 29-junio-2014]].
+ [[http://www.glc.us.es/~jalonso/vestigium/lecturas-del-grupo-de-logica-computacional-del-8-al-15-de-junio/][Lecturas del 08-junio-2014 al 15-junio-2014]].
+ [[http://www.glc.us.es/~jalonso/vestigium/lecturas-del-grupo-de-logica-computacional-del-24-de-mayo-al-8-de-junio/][Lecturas del 24-mayo-2014 al 8-junio-2014]].
+ [[http://www.glc.us.es/~jalonso/vestigium/lecturas-compartidas-del-18-al-24-de-mayo/][Lecturas del 18-mayo-2014 al 24-mayo-2014]].
+ [[http://www.glc.us.es/wiki/Lecturas_del_año_2014][Lecturas de enero a marzo de 2014]].
** [[http://www.glc.us.es/wiki/Lecturas_del_año_2013][Lecturas del año 2013]].
** [[http://www.glc.us.es/wiki/Lecturas_del_año_2012][Lecturas del año 2012]].
** [[http://www.glc.us.es/wiki/Lecturas_del_año_2011][Lecturas del año 2011]].
** [[http://www.glc.us.es/wiki/Lecturas_del_año_2010][Lecturas del año 2010]].

